[{"type":"sourcecred/github/relationalView","version":"0.1.0"},{"repos":{"N\u0000sourcecred\u0000github\u0000REPO\u0000sourcecred\u0000sourcecred\u0000":{"address":{"type":"REPO","owner":"sourcecred","name":"sourcecred"},"url":"https://github.com/sourcecred/sourcecred","issues":[{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"41","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"42","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"74","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"82","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"132","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"148","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"223","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"237","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"268","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"280","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"336","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"389","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"481","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"483","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"502","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"509","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"517","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"554","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"576","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"580","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"584","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"586","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"587","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"588","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"589","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"590","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"595","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"596","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"pulls":[{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"4","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"5","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"6","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"7","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"12","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"15","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"16","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"19","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"21","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"30","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"31","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"32","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"33","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"36","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"45","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"49","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"51","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"52","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"53","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"55","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"56","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"57","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"59","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"60","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"63","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"64","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"68","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"78","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"85","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"87","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"88","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"89","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"95","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"96","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"97","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"99","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"104","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"107","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"108","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"109","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"110","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"111","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"113","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"115","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"116","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"118","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"120","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"126","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"134","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"135","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"136","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"137","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"141","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"142","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"143","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"146","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"149","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"151","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"152","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"153","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"154","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"155","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"158","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"159","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"161","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"163","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"165","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"167","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"168","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"172","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"175","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"176","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"177","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"180","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"181","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"191","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"193","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"197","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"198","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"200","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"202","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"204","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"205","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"207","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"209","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"212","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"213","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"214","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"215","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"216","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"220","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"221","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"222","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"225","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"226","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"233","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"234","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"235","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"238","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"239","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"240","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"241","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"242","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"243","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"244","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"247","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"248","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"249","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"250","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"251","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"254","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"255","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"257","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"258","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"259","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"262","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"263","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"267","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"273","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"275","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"284","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"285","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"287","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"288","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"290","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"291","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"298","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"301","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"302","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"303","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"306","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"307","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"308","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"309","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"311","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"313","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"314","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"315","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"321","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"326","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"327","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"337","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"338","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"344","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"346","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"347","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"351","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"353","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"362","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"364","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"365","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"366","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"367","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"370","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"371","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"373","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"376","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"377","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"379","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"382","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"384","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"386","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"392","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"393","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"397","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"398","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"399","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"400","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"401","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"402","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"404","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"408","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"410","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"414","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"422","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"426","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"429","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"435","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"436","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"437","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"440","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"441","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"446","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"449","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"450","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"452","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"453","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"454","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"455","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"456","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"457","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"458","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"460","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"461","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"462","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"463","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"464","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"467","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"469","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"471","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"472","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"474","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"475","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"478","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"479","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"484","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"485","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"488","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"490","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"491","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"492","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"496","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"500","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"503","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"504","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"505","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"507","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"512","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"514","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"515","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"522","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"523","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"524","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"525","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"528","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"537","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"538","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"539","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"540","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"541","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"542","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"543","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"544","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"545","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"547","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"548","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"550","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"551","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"556","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"560","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"562","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"563","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"564","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"565","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"566","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"567","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"568","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"569","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"570","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"573","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"575","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"578","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"582","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"585","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"592","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"598","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"600","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}]}},"issues":{"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000":{"address":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/2","comments":[{"type":"COMMENT","id":"362942411","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"362952582","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"362953396","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"362965136","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"363345459","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370991890","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It's important that Cred have a unicode symbol. This will save us from needing to write \"SourceCredCred\" and other such ungainly constructs.\r\n\r\nI've been provisionally using ¤ as the symbol; I like that it is reminiscent of a network, something that is both a circle and has flows in/out... the circle represents egalitarian community and the edges represent new contributions? :smiley: \r\n\r\nHere are some other options:\r\n¢￠ ₡ ¢ ₢ ₵\r\n\r\nHere are all the options in context:\r\n\r\nSourceCred¤\r\nSourceCred¢\r\nSourceCred￠\r\nSourceCred₡\r\nSourceCred¢\r\nSourceCred₢\r\nSourceCred₵\r\n\r\n![image](https://user-images.githubusercontent.com/1400023/35776257-cffa59d2-094d-11e8-8c7b-ccac52fe59a9.png)\r\n\r\nMy vote is for ¤. Please feel free to suggest characters I haven't thought of yet. There are *a lot* of them.\r\n\r\nAlso, yes this is the bikeshed.","title":"Decide on a unicode symbol for Cred"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000011\u0000":{"address":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/11","comments":[{"type":"COMMENT","id":"366123567","parent":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366506813","parent":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"000drax"}],"body":"I'm thinking we need a shifting list of tasks available to work on (to encourage contributions). \r\n\r\nExample: I've dropped off for a bit, and I have no idea what needs to be done anymore :)\r\n\r\nFor each available task, I think it should have\r\n- priority (P0 - P4)\r\n- description\r\n- reviewer\r\n- who's working on it (if anyone)\r\n- expected delivery date (if anyone is working on it)","title":"Need a list of available tasks"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000017\u0000":{"address":{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/17","comments":[{"type":"COMMENT","id":"366428155","parent":{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366452814","parent":{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Per discussion earlier: Flow and PropTypes are both great, but neither is perfect by itself. Using only Flow, we’d miss runtime errors that could arise when we read from JSON and the schema doesn’t match what we thought it was. (This has happened already, albeit benignly!) Using only PropTypes, we have less expressive types (e.g., there’s only one function type, `PropTypes.func`), and we have less integration with the rest of our Flow-typed logic.\r\n\r\nThere exists a plugin, `babel-plugin-flow-react-proptypes`, that enables you to only _write_ Flow types, and have the PropTypes generated from the Flow types at compilation time. We can’t use it directly before ejecting from `create-react-app`, but I tried it out anyway and it seems to do the job perfectly on our existing code. (See below to repro yourself.)\r\n\r\nI think that this plugin is a good candidate, and that we should strongly consider using it after ejecting (and maybe consider ejecting in order to use it). What do you think?\r\n\r\ncc: @dandelionmane\r\n\r\nTo try it out:\r\n\r\n 1. Check out c1b37fa729a8d3802fe2c3a4ee4923e958ac4f8d (master, at the time of writing).\r\n 2. Apply the patch listed below, then `yarn install`.\r\n 3. Manually edit the file `node_modules/babel-preset-react-app/index.js`, to add the line\r\n\r\n    ```js\r\n    require.resolve('babel-plugin-flow-react-proptypes'),  // XXX\r\n    ```\r\n\r\n    at the top of the `const plugins` array.\r\n 4. Manually edit the file `node_modules/react-scripts/config/webpack.config.dev.js`, changing the unique occurrence of `cacheDirectory: true` to `cacheDirectory: false` (may not be strictly necessary, depending on your state).\r\n 5. Run `yarn flow`, and note that everything checks out. Run `yarn start`, and note that the app functions without error.\r\n 6. Introduce a type error that would not cause a hard JS error in render: say, in `UserExplorer.js`, change `<UserEntry userId={author} ... />` to `<UserEntry userId={55} />`.\r\n 7. Run `yarn flow`, and note the helpful static errors. Run `yarn start`, and note the helpful runtime errors.\r\n 8. Note that `CI=true yarn test` is still green.\r\n\r\nThe above workflow isn’t production-ready because of the step in which you manually edit the contents of some node modules. After ejecting, these steps would be replaced by editing some config files within our repo, which is totally fine.\r\n\r\nThe patch mentioned in step 2 appears below:\r\n<details>\r\n<summary><strong>Contents of patch</strong> to automatically generate PropTypes from Flow types</summary>\r\n\r\nSave the following block to a file `/tmp/patch`, then `git apply </tmp/patch`.\r\n\r\n```diff\r\ndiff --git a/explorer/package.json b/explorer/package.json\r\nindex 4791b63..e698ff1 100644\r\n--- a/explorer/package.json\r\n+++ b/explorer/package.json\r\n@@ -3,6 +3,7 @@\r\n   \"version\": \"0.1.0\",\r\n   \"private\": true,\r\n   \"dependencies\": {\r\n+    \"babel-plugin-flow-react-proptypes\": \"^17.1.2\",\r\n     \"flow-bin\": \"^0.65.0\",\r\n     \"react\": \"^16.2.0\",\r\n     \"react-dom\": \"^16.2.0\",\r\ndiff --git a/explorer/src/App.js b/explorer/src/App.js\r\nindex 51d1081..19c182f 100644\r\n--- a/explorer/src/App.js\r\n+++ b/explorer/src/App.js\r\n@@ -1,10 +1,12 @@\r\n+// @flow\r\n import React, { Component } from 'react';\r\n import data from './data.json';\r\n import './App.css';\r\n import { FileExplorer } from './FileExplorer.js';\r\n import { UserExplorer } from './UserExplorer.js';\r\n \r\n-class App extends Component {\r\n+type AppState = {selectedPath: string, selectedUser: ?string};\r\n+class App extends Component<{}, AppState> {\r\n   constructor() {\r\n     super();\r\n     this.state = {\r\ndiff --git a/explorer/src/FileExplorer.js b/explorer/src/FileExplorer.js\r\nindex 41f11cc..24eaad6 100644\r\n--- a/explorer/src/FileExplorer.js\r\n+++ b/explorer/src/FileExplorer.js\r\n@@ -1,15 +1,13 @@\r\n+// @flow\r\n import React, { Component } from 'react';\r\n-import PropTypes from 'prop-types';\r\n import {buildTree} from './commitUtils';\r\n-import {propTypes as commitUtilsPropTypes} from './commitUtils';\r\n-\r\n-export class FileExplorer extends Component {\r\n-  static propTypes = {\r\n-    selectedPath: PropTypes.string,\r\n-    onSelectPath: PropTypes.func.isRequired,\r\n-    data: commitUtilsPropTypes.commitData.isRequired,\r\n-  }\r\n+import type {CommitData, FileTree} from './commitUtils';\r\n \r\n+export class FileExplorer extends Component<{\r\n+    selectedPath: string,\r\n+    onSelectPath: (newPath: string) => void,\r\n+    data: CommitData,\r\n+}> {\r\n   render() {\r\n     // within the FileExplorer, paths start with \"./\", outside they don't\r\n     // which is hacky and should be cleaned up\r\n@@ -38,19 +36,16 @@ export class FileExplorer extends Component {\r\n   }\r\n }\r\n \r\n-class FileEntry extends Component {\r\n-  static propTypes = {\r\n-    name: PropTypes.string.isRequired,\r\n-    path: PropTypes.string.isRequired,\r\n-    alwaysExpand: PropTypes.bool.isRequired,\r\n-\r\n-    // The type for the tree is recursive, and is annoying to specify as\r\n-    // a proptype. The Flow type definition is in commitUtils.js.\r\n-    tree: PropTypes.object.isRequired,\r\n-\r\n-    selectedPath: PropTypes.string.isRequired,\r\n-    onSelectPath: PropTypes.func.isRequired,\r\n-  }\r\n+class FileEntry extends Component<{\r\n+    name: string,\r\n+    path: string,\r\n+    alwaysExpand: bool,\r\n+    tree: FileTree,\r\n+    selectedPath: string,\r\n+    onSelectPath: (newPath: string) => void,\r\n+}, {\r\n+    expanded: bool,\r\n+}> {\r\n \r\n   constructor() {\r\n     super();\r\ndiff --git a/explorer/src/UserExplorer.js b/explorer/src/UserExplorer.js\r\nindex 8da252d..6b7274f 100644\r\n--- a/explorer/src/UserExplorer.js\r\n+++ b/explorer/src/UserExplorer.js\r\n@@ -1,19 +1,14 @@\r\n+// @flow\r\n import React, { Component } from 'react';\r\n-import PropTypes from 'prop-types';\r\n-import {\r\n-  commitWeight,\r\n-  propTypes as commitUtilsPropTypes,\r\n-  userWeightForPath,\r\n-} from './commitUtils';\r\n-\r\n-export class UserExplorer extends Component {\r\n-  static propTypes = {\r\n-    selectedPath: PropTypes.string.isRequired,\r\n-    selectedUser: PropTypes.string,\r\n-    onSelectUser: PropTypes.func.isRequired,\r\n-    data: commitUtilsPropTypes.commitData.isRequired,\r\n-  }\r\n+import {commitWeight, userWeightForPath} from './commitUtils';\r\n+import type {CommitData, FileTree} from './commitUtils';\r\n \r\n+export class UserExplorer extends Component<{\r\n+    selectedPath: string,\r\n+    selectedUser: ?string,\r\n+    onSelectUser: (newUser: string) => void,\r\n+    data: CommitData,\r\n+}> {\r\n   render() {\r\n     const weights = userWeightForPath(this.props.selectedPath, this.props.data, commitWeight);\r\n     const sortedUserWeightTuples =\r\n@@ -34,12 +29,10 @@ export class UserExplorer extends Component {\r\n /**\r\n  * Record the cred earned by the user in a given scope.\r\n  */\r\n-class UserEntry extends Component {\r\n-  static propTypes = {\r\n-    userId: PropTypes.string.isRequired,\r\n-    weight: PropTypes.number.isRequired,\r\n-  }\r\n-\r\n+class UserEntry extends Component<{\r\n+    userId: string,\r\n+    weight: number,\r\n+}> {\r\n   render() {\r\n     return <div className=\"user-entry\">\r\n       <span> {this.props.userId} </span>\r\ndiff --git a/explorer/src/commitUtils.js b/explorer/src/commitUtils.js\r\nindex 4cca4a0..870ec0d 100644\r\n--- a/explorer/src/commitUtils.js\r\n+++ b/explorer/src/commitUtils.js\r\n@@ -2,30 +2,12 @@\r\n \r\n import PropTypes from 'prop-types';\r\n \r\n-type CommitData = {\r\n+export type CommitData = {\r\n   // TODO improve variable names\r\n   fileToCommits: {[filename: string]: string[]};\r\n   commits: {[commithash: string]: Commit};\r\n-  authors: string[];\r\n }\r\n \r\n-export const propTypes = {\r\n-  commitData: PropTypes.shape({\r\n-    fileToCommits: PropTypes.objectOf(\r\n-      PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n-    ).isRequired,\r\n-    commits: PropTypes.objectOf(PropTypes.shape({\r\n-      author: PropTypes.string.isRequired,\r\n-      stats: PropTypes.objectOf(PropTypes.shape({\r\n-        lines: PropTypes.number.isRequired,\r\n-        insertions: PropTypes.number.isRequired,\r\n-        deletions: PropTypes.number.isRequired,\r\n-      }).isRequired).isRequired,\r\n-    }).isRequired).isRequired,\r\n-  }),\r\n-};\r\n-\r\n-\r\n type Commit = {\r\n   author: string;\r\n   stats: {[filename: string]: FileStats};\r\n@@ -86,7 +68,7 @@ export function userWeightForPath(path: string, data: CommitData, weightFn: Weig\r\n   return userWeightMap;\r\n }\r\n \r\n-type FileTree = {[string]: FileTree};\r\n+export type FileTree = {[string]: FileTree};\r\n \r\n export function buildTree(fileNames: string[]): FileTree {\r\n   const sortedFileNames = fileNames.slice().sort();\r\ndiff --git a/explorer/yarn.lock b/explorer/yarn.lock\r\nindex 413d06d..bacc259 100644\r\n--- a/explorer/yarn.lock\r\n+++ b/explorer/yarn.lock\r\n@@ -323,7 +323,7 @@ babel-code-frame@6.26.0, babel-code-frame@^6.11.0, babel-code-frame@^6.22.0, bab\r\n     esutils \"^2.0.2\"\r\n     js-tokens \"^3.0.2\"\r\n \r\n-babel-core@6.26.0, babel-core@^6.0.0, babel-core@^6.26.0:\r\n+babel-core@6.26.0, babel-core@^6.0.0, babel-core@^6.25.0, babel-core@^6.26.0:\r\n   version \"6.26.0\"\r\n   resolved \"https://registry.yarnpkg.com/babel-core/-/babel-core-6.26.0.tgz#af32f78b31a6fcef119c87b0fd8d9753f03a0bb8\"\r\n   dependencies:\r\n@@ -514,6 +514,15 @@ babel-plugin-dynamic-import-node@1.1.0:\r\n     babel-template \"^6.26.0\"\r\n     babel-types \"^6.26.0\"\r\n \r\n+babel-plugin-flow-react-proptypes@^17.1.2:\r\n+  version \"17.1.2\"\r\n+  resolved \"https://registry.yarnpkg.com/babel-plugin-flow-react-proptypes/-/babel-plugin-flow-react-proptypes-17.1.2.tgz#89f75928a47ea869dab312605f42542dd7b6755c\"\r\n+  dependencies:\r\n+    babel-core \"^6.25.0\"\r\n+    babel-template \"^6.25.0\"\r\n+    babel-traverse \"^6.25.0\"\r\n+    babel-types \"^6.25.0\"\r\n+\r\n babel-plugin-istanbul@^4.0.0:\r\n   version \"4.1.5\"\r\n   resolved \"https://registry.yarnpkg.com/babel-plugin-istanbul/-/babel-plugin-istanbul-4.1.5.tgz#6760cdd977f411d3e175bb064f2bc327d99b2b6e\"\r\n@@ -913,7 +922,7 @@ babel-runtime@6.26.0, babel-runtime@^6.18.0, babel-runtime@^6.22.0, babel-runtim\r\n     core-js \"^2.4.0\"\r\n     regenerator-runtime \"^0.11.0\"\r\n \r\n-babel-template@^6.16.0, babel-template@^6.24.1, babel-template@^6.26.0:\r\n+babel-template@^6.16.0, babel-template@^6.24.1, babel-template@^6.25.0, babel-template@^6.26.0:\r\n   version \"6.26.0\"\r\n   resolved \"https://registry.yarnpkg.com/babel-template/-/babel-template-6.26.0.tgz#de03e2d16396b069f46dd9fff8521fb1a0e35e02\"\r\n   dependencies:\r\n@@ -923,7 +932,7 @@ babel-template@^6.16.0, babel-template@^6.24.1, babel-template@^6.26.0:\r\n     babylon \"^6.18.0\"\r\n     lodash \"^4.17.4\"\r\n \r\n-babel-traverse@^6.18.0, babel-traverse@^6.23.1, babel-traverse@^6.24.1, babel-traverse@^6.26.0:\r\n+babel-traverse@^6.18.0, babel-traverse@^6.23.1, babel-traverse@^6.24.1, babel-traverse@^6.25.0, babel-traverse@^6.26.0:\r\n   version \"6.26.0\"\r\n   resolved \"https://registry.yarnpkg.com/babel-traverse/-/babel-traverse-6.26.0.tgz#46a9cbd7edcc62c8e5c064e2d2d8d0f4035766ee\"\r\n   dependencies:\r\n@@ -937,7 +946,7 @@ babel-traverse@^6.18.0, babel-traverse@^6.23.1, babel-traverse@^6.24.1, babel-tr\r\n     invariant \"^2.2.2\"\r\n     lodash \"^4.17.4\"\r\n \r\n-babel-types@^6.18.0, babel-types@^6.19.0, babel-types@^6.23.0, babel-types@^6.24.1, babel-types@^6.26.0:\r\n+babel-types@^6.18.0, babel-types@^6.19.0, babel-types@^6.23.0, babel-types@^6.24.1, babel-types@^6.25.0, babel-types@^6.26.0:\r\n   version \"6.26.0\"\r\n   resolved \"https://registry.yarnpkg.com/babel-types/-/babel-types-6.26.0.tgz#a3b073f94ab49eb6fa55cd65227a334380632497\"\r\n   dependencies:\r\n```\r\n</details>","title":"Consider using babel-plugin-flow-react-proptypes"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000":{"address":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/23","comments":[{"type":"COMMENT","id":"366506065","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366515504","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366553223","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We should set up CI integration. What I have in mind is pretty basic:\r\n- should be fast (build & test <1min would be ideal, slower than 3 mins is bad IMO)\r\n- should run `yarn flow`, `yarn test`, and a command to verify prettier is satisfied\r\n- should generalize nicely to testing our backend code too\r\n","title":"Setup CI integration"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000":{"address":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/24","comments":[{"type":"COMMENT","id":"366529043","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366531702","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366552082","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366793217","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369094312","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370992029","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"## essentials\r\n- should be able to read git data, probably via NodeGit \r\n  * (@wchargin I know you have some thoughts on this)\r\n- should use the same Flow type signatures as the frontend\r\n- should serve our frontend and supply the data\r\n\r\n## features\r\n- we keep a persisted copy of the backend's output in source control (a la src/data.json today), and use that to serve the development frontend\r\n  - in the future case, this will be a db\r\n  - we will update the persisted copy occasionally, maybe once a week\r\n- we should also have an end-to-end script that freshly loads the data from the backend, and serves it on the frontend\r\n  - we can use it for E2E CI testing, assuming it's fast enough\r\n- also, it would be good to turn on backend performance testing early","title":"Write prototype Node backend"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000":{"address":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/25","comments":[{"type":"COMMENT","id":"366550767","parent":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"375140486","parent":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It's tempting to charge ahead with the frontend and wait until after the UI is more established to begin testing it. However, based on past experience, it's easy to get to a state where the system is so complex that adding tests is a daunting undertaking. It will be much better to test as we go. \r\n\r\nI'd like to set up functional tests for the following behaviors:\r\n- expand/collapse FileExplorer UI \r\n- change selected filepath in FileExplorer\r\n  - .. and UserExplorer receives it\r\n     - ... and UserExplorer displays new sums\r\n\r\nI'm not sure what the best way to structure these tests. Should it be very tightly scoped unit tests of each individual primitive of the behavior, or should it be end-to-end, going straight from the user input on the FileExplorer to the updated sums in the UserExplorer? \r\n\r\nI think we can have both, in a fairly labor efficient way, if we mix unit testing and [snapshot testing](https://facebook.github.io/jest/docs/en/snapshot-testing.html). For each individual component-specific interaction, we can test the logic via unit tests. For end-to-end integration, we can describe a sequence of user inputs and then take a snapshot in the terminal state. We should be able to write these easily and quickly, and maintain them without too much effort.\r\n\r\ncc @wchargin ","title":"develop frontend testing practices"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000":{"address":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/26","comments":[{"type":"COMMENT","id":"366549259","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366550160","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"376250186","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"376265562","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"since SourceCred aims to generalize to many types of \"value\", we will need to make it wonderfully pluggable. based on past experience, retro-converting a complicated system designed without plugins in mind into a plugin architecture is a lot of work! \r\n\r\nthe best time to design a plugin architecture is now. starting the discussion here, more thoughts on what kinds of APIs we need to follow.\r\n\r\ncc: @wchargin \r\n:wave: @jart @chizeng","title":"design plugin architecture"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000":{"address":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/29","comments":[{"type":"COMMENT","id":"368345225","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368397367","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387147428","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let’s use this space to design the core data models for SourceCred. Following is a brain-dump of the current state of affairs as of 2018-02-22-ish, as developed in conversations between @dandelionmane and myself.\r\n\r\n## First attempt: the project DAG\r\n\r\nOriginally, we considered the following scheme.\r\n\r\nThe _project graph_ is a DAG whose nodes are primarily _contributions_: contributions include commits, pull requests, issues, comments on PRs and issues, design docs, etc. A weighted edge from *a* to *b* indicates that *b* provided value to *a* (in proportion to the edge weight). The leaf nodes of the graph correspond to users. There is only one instance of this graph, which serves as a reflection of the repository’s “official”/“objective” value function. Individuals can update the graph by standard pull requests (and maybe also via some lower-friction, continuous workflows; details to be fleshed out).\r\n\r\nThere is a root node in the graph representing the repository as a whole. The graph will likely also include “subprojects”, which may be functional areas of the application (“frontend”, “backend”, “plugins”), organizational divisions (“buildcop”, “triage”), or anything else that is perceived as important to the organization.\r\n\r\nAt allocation time, one unit of cred is minted to the root node. The cred “flows down” the graph, roughly according to the following algorithm. Let *n* be a node all of whose parents have been visited, and let *c* be the amount of cred that has flowed to *n*; then, to each child *n*′ of *n* with normalized edge-weight *p*, flow *p*&nbsp;*c* cred to *n*′. Repeat until all nodes have been visited. Each user receives cred proportional to the amount of cred at their respective leaf node.\r\n\r\nOne particularly desirable property of this mechanism is that it is _transparent_ in the following sense. Suppose that we want to understand the distribution of impact among users for some subcomponent of the project: e.g., we want to see who has contributed the most value to the backend APIs. We can rerun the algorithm on the same project graph, but mint 1¤ to the “backend APIs” node instead of the root project node. The results will be useful because the process is _additive_. For instance, if a project has a root node with two children—“backend”, with weight 0.6; and “frontend”, with weight 0.4—then a user’s cred will be _c_<sub>total</sub> = 0.6 · _c_<sub>backend</sub> + 0.4 · _c_<sub>frontend</sub>, where _c_<sub>_u_</sub> is the credit assigned to the user when the search starts from node _u_.\r\n\r\n## Second attempt: the project graph\r\n\r\nA major problem with this approach is the requirement that the graph be acyclic. We expect cyclic project graphs to be quite common in reality. (TODO: Provide examples.) In such cases, the process described above no longer directly applies. Instead, we would like to continue flowing cred along edges until we reach some kind of equilibrium.\r\n\r\nNote that if we interpret a project DAG as a Markov chain, then the process described above can also be formulated as, “find the distribution of the chain after a large number of steps when starting from a distribution that is at the root node with probability 1”. Markov chains generalize to graphs with cycles, so we will attempt to formulate an improved version of the system along these lines. An immediate problem is that the chain is not likely to be ergodic—users will be leaf nodes, so will not communicate with other states—so we will have to be careful when dealing with limiting and stationary distributions.\r\n\r\nA natural first idea is to simply take the limit distribution *π*₀ *A*<sup>*k*</sup> for large *k*, where *π*₀ is the distribution that has 1 for the root node and 0 elsewhere. Then, we could restrict the support of the resulting distribution to the nodes corresponding to users, and after normalization we would have a valid allocation. While this seems reasonable so far, it is not clear how to achieve the transparency discussed above. The strategy of “assign 1¤ to an arbitrary project node and re-run as normal” does not obviously do the right thing: if the chain is ergodic, then changing the initial conditions does not affect the limiting distribution, and a densely connected graph may be “nearly ergodic” enough for the cred to become “all mixed up”. (As you might guess from reading this paragraph, the precise dynamics of what goes right and wrong, and how, are not clear to me. It might be helpful to run a simple version of these algorithms on some toy repos and some real-world repos to explore the behavior.)\r\n\r\nMore info to be posted in this thread.","title":"Design core data models"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000039\u0000":{"address":{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/39","comments":[{"type":"COMMENT","id":"407174095","parent":{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Since SourceCred's main data structure is a graph, we're going to want to build a tool for visualizing it.\r\n\r\n## some properties of the problem\r\n\r\n### fractal graph, meaningful at different levels of scale\r\n\r\nthe graph will span levels of abstraction from the repository and project level (visualize GitHub projects as nodes, edges are dependencies between projects) down to the individual commit and comment level (a pull request is a node with edges to all its comments, and edges to its commits, and to the files it modifies).\r\n\r\nthe graph visualizer should be able to seamlessly transition between these levels of scale, and explore the boundaries in between (e.g. the specific artifacts that create connections across repository boundaries)\r\n\r\n### some nodes will have very high degree\r\n\r\nfor example, user nodes will have an edge to every contribution and comment they have ever authored. we'll need to abstract over cases like this, rather than overwhelm the display\r\n\r\n### some nodes are much more important than others\r\n\r\nso we will want to surface highest-importance nodes within the viewing context, and maybe aggregate less important nodes together. fortunately, we will have a metric (cred) for determining the relative importance of nodes (that's the whole point! 😄)\r\n\r\n### heterogenous node and edge types\r\n\r\nthe nodes and edges are provided by plugins (see: #26) and each plugin may have its own logic for how to display that node or edge. the UI will need a plugin area that provides this context.\r\n\r\n## my current vision\r\n\r\nWhat I'm imagining right now is a zoom-and-pannable \"map\" depicting nodes and edges. To get some inspiration, please take a look at the [TensorFlow graph explorer].\r\n\r\nAt any time, there is an active \"scope\" that determines which part of the graph is being visualized; the scope can be global (show most important K repos, and edges between them), repo specific (show most important K projects and contributions, with edges between them), user specific (show most important contributions that user has made, and edges...), etc.\r\n\r\nFor any given scope, most of the graph will be hidden, either by being abstracted into aggregate nodes, or just elided from view. Plugins should be able to define their own scoping logic; for example, the GitHub plugin may define comments get scoped with their containing issue or pull request. \r\n\r\nThe user should be able to interactively explore the graph, both by drilling down into scopes (e.g. click on an aggregated node to expand it an explore its contents), and by traversing the graph to different locations (e.g. follow a path of package dependencies to core deps). \r\n\r\nIn contrast to the TensorFlow graph explorer, I don't expect that there will be a canonical fixed layout that the whole graph fits into; instead, the layout is determined dynamically, possibly via [force directed layout](https://bl.ocks.org/mbostock/4062045) or similar.\r\n\r\nAlso in contrast to the TF graph explorer, I'd like exploring the graph to have a continuous and organic feel. Consider how in Google maps, you can gently zoom in across different levels of scale, vs. in the TF graph explorer, nodes expand/collapse as single discrete events.\r\n\r\n## next steps: unblock a MVP\r\n\r\nWe're going to want a MVP of the graph explorer as soon as our GitHub plugin starts collecting data - it will be invaluable in the process of designing and testing cred allocation algorithms, as well as exploring the data our plugins collect and seeing what kinds of insights they surface.\r\n\r\n### choose our tech\r\n\r\nTo that end, we should decide on a basic technology stack, one that will enable fast iteration and prototyping while still putting us on sound footing for long term maintenance. I think starting with d3+svg for the frontend will be best for fast prototyping, although we should consider keeping the rendering cleanly decoupled so that we can consider switching to more performant options down the line. \r\n\r\nLayout, node aggregation, and graph logic needs to be in well-tested, flow-typed javascript. That kind of logic can get quite hairy and we're gonna want to strive for great test coverage and modularity, lest we get caught in a complexity trap.\r\n\r\nI plan to reach out to @doug, @kanitw, @dsmilkov, @nsthorat, and @chihuahua, all of whom were very influential in creating and maintaining the TF graph explorer, for their technical judgment on what approaches are best. \r\n\r\ncc: @wchargin ","title":"design a graph visualizer"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000040\u0000":{"address":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/40","comments":[{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The GitHub plugin will be responsible for sourcing the following types of information:\r\n\r\nNodes:\r\n- Pull requests\r\n- Issues\r\n- Issue comments\r\n  n.b. the body of an issue (or PR) is treated as its first \"issue comment\"\r\n- Commit comments\r\n- Review comments\r\n- GitHub user identities\r\n\r\nEdges:\r\n- authorship \r\n  users author the other nodes, e.g. user authors commit\r\n- containership \r\n  issues and pull requests contain comments\r\n  *(might merge with reference below)*\r\n- reference \r\n  comments can reference other nodes, e.g. the line below where this issue comment references PR-35\r\n\r\nThis is based off the overall plugin architecture design (#26); implementation has started in 'Add types for GitHub plugin' (#35)","title":"Plugins: GitHub plugin"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000041\u0000":{"address":{"type":"ISSUE","number":"41","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/41","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The artifact plugin organizes the contribution graph according to the boundaries that are set by human interpretation. An `artifact` is a particular node that represents a group of contributions that all are organized towards some particular function, goal, or deliverable. I expect most projects will have a \"root artifact\" that describes the entire project as an artifact. That root artifact will then reference other artifacts which represent particular components or processes of that project.\r\n\r\nFor example, I expect SourceCred may define the following artifacts (this is intended to give a flavor of variety, and is not at all comprehensive`\r\n* `SourceCred` \r\n  root artifact\r\n* `Tooling` \r\n  maintaining good tools, including lint integrations, CI setup, efficient builds\r\n* `Tooling/Typing` \r\n  maintaining high quality type signatures across the project\r\n* `ContributionGraph` \r\n  design, APIs, and algorithms around the contribution graph\r\n* `Community Building` \r\n  work around communicating the existence of SourceCred to others, and welcoming them into the community\r\n\r\nEach `artifact` will be represented by a node, and its edges will be maintained by some human-controlled consensus mechanism. For the start, we will store the edges as data in the repository that controls the artifact, and the edges will be maintained via pull request. \r\n\r\nWe want to incentivize the maintenance and upkeep of the artifacts. For example, if people were incentivized to go and find every single pull request that contributed to `Tooling/Typing` and reference it in the artifact, that would be lovely. I propose that we do this by creating a meta-`Artifact` for each artifact that represents the work of upkeeping that artifact. Thus, `tooling/typing` would flow some credit to `tooling/typing/meta`. It should be very simple to algorithmically maintain `tooling/typing/meta` and so there will not be a need for a `meta/meta` artifact. :)","title":"The Artifact System"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000042\u0000":{"address":{"type":"ISSUE","number":"42","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/42","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's create a plugin with `package.json` files as nodes, and `npm dependencies` as edges.\r\n\r\nI believe this will give a very interesting view into meta-project dynamics, and developing it early will force us to keep the meta-scale in mind as we develop tooling and visualizations. Also, it should be fairly easy to discover this data. We can start by exploring all of SourceCred's transitive dependencies.","title":"Plugins: npm plugin"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000":{"address":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/50","comments":[{"type":"COMMENT","id":"370181708","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370183721","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370183736","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371004636","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"","title":"Are edges nodes?"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000":{"address":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/65","comments":[{"type":"COMMENT","id":"370187508","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370187800","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370288322","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370310688","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370322854","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370348872","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370598926","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370600980","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370601234","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370616306","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Graphs should have a serialized form so that we can use Jest’s snapshot testing. Two options seem reasonable to me, so I implemented them.\r\n\r\nOn branch `wchargin-graph-json-arrays`, we have\r\n```js\r\nexport type GraphJSON = {|\r\n  +nodes: Node<mixed>[],\r\n  +edges: Edge<mixed>[],\r\n|};\r\n```\r\nwhich is a completely non-redundant format, but for which it is possible to have multiple JSON representations of logically-equal graphs, because the arrays are really sets and so are invariant under permutation. If we choose this method, we’ll provide an additional `toCanonicalJSON` method that sorts the `nodes` and `edges` by their addresses.\r\n\r\nOn branch `wchargin-graph-json-objects`, we have\r\n```js\r\nexport type GraphJSON = {|\r\n  +nodes: {[nodeAddress: string]: Node<mixed>},\r\n  +edges: {[edgeAddress: string]: Edge<mixed>},\r\n|};\r\n```\r\nwhich satisfies that if `a.equals(b)` then `deepEqual(a.toJSON(), b.toJSON())` at the cost of a bit of redundancy and potential for mismatch: i.e., we should require that `addressToString(json.nodes[key].address) === key` and likewise for edges, and need to guard against bad inputs. On the other hand, this form is somewhat more useful to external clients that want to directly consume the JSON.\r\n\r\nOn our `advancedMealGraph`, the latter is about 15% bigger in terms of file size:\r\n```shell\r\n$ filename=src/backend/__snapshots__/graph.test.js.snap\r\n$ git show origin/wchargin-graph-json-arrays:\"${filename}\" | wc -c\r\n5602\r\n$ git show origin/wchargin-graph-json-objects:\"${filename}\" | wc -c\r\n6476\r\n```\r\nThis factor will increase as addresses get longer in proportion to the payloads, and indeed for our `advancedMealGraph` the addresses are reasonably short.\r\n\r\nIt’s worth reading the diffs at 574f916d0ecb1f167a6bd013de6f58d22625e2da (arrays) and 60771c56e257a398d23632ed64391f3df05439e0 (objects). In particular, note that using the objects form gets us free interop with Jest and `JSON.stringify`.\r\n\r\nI’m inclined to go with the objects solution due to its simplicity in not requiring an additional canonical form. This has already paid off in the Jest and stringify interops, and it seems totally plausible that similar dividends will continue to arise down the road.\r\n\r\nOnce we come to a consensus, I can PR one of the two branches.\r\n\r\ncc @dandelionmane ","title":"Choose a serialized form for graphs"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000":{"address":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/66","comments":[{"type":"COMMENT","id":"370186734","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370187344","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370187985","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370187999","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370321398","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370331901","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Consider removing address↔string conversion functions\r\n\r\n**understandabad** (*adj.*): A seemingly confusing decision that makes sense only once you realize the implementation details behind a leaky abstraction.\r\n\r\n*ex.* Our `Address` type requires that none of its components contain a literal dollar sign. Why? Because the `addressToString` and `stringToAddress` conversions use the dollar sign as a delimiter for the three components, and string forms are used as keys in the `Graph`’s maps.\r\n\r\nWe could relatively easily allow arbitrary addresses by using nested maps:\r\n\r\n```js\r\ntype AddressMap<T> = {[repositoryName: string]: {[pluginName: string]: {[id: string]: T}}};\r\nclass Graph {\r\n  nodes: AddressMap<Node<mixed>>;\r\n  edges: AddressMap<Edge<mixed>>;\r\n  /* ... */\r\n}\r\n/* private */ function addressMapGet<T>(map: AddressMap<T>, key: Address): ?T {\r\n  const repositoryBucket = map[key.repositoryName];\r\n  if (repositoryBucket === undefined)\r\n    return undefined;\r\n  const pluginNameBucket = repositoryBucket[key.pluginName];\r\n  if (pluginNameBucket === undefined)\r\n    return undefined;\r\n  return pluginNameBucket[key.id];\r\n}\r\n/* private */ function addressMapSet<T>(map: AddressMap<T>, key: Address, value: T) {\r\n  let repositoryBucket = map[key.repositoryName];\r\n  if (repositoryBucket === undefined)\r\n    repositoryBucket = map[key.repositoryName] = {};\r\n  let pluginNameBucket = repositoryBucket[key.pluginNameName];\r\n  if (pluginNameBucket === undefined)\r\n    pluginNameBucket = repositoryBucket[key.pluginNameName] = {};\r\n  pluginNameBucket[key.id] = value;\r\n}\r\n```\r\nThis would be a completely under-the-hood implementation change, and would remove the `$`-restriction. It may well be a faster implementation, too.","title":"Consider removing Address↔string conversion functions"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000":{"address":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/72","comments":[{"type":"COMMENT","id":"370661024","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370661081","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371005306","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371007266","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401571614","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, the Edge type is as follows:\r\n\r\n```ts\r\nexport type Edge<T> = {|\r\n  +address: Address,\r\n  +src: Address,\r\n  +dst: Address,\r\n  +payload: T,\r\n|};\r\n```\r\n\r\nWhat if we changed it so that `src` and `dst` directly point point to `Node`s, as follows:\r\n\r\n```ts\r\nexport type Edge<T> = {|\r\n  +address: Address,\r\n  +src: Node,\r\n  +dst: Node,\r\n  +payload: T,\r\n|};\r\n```\r\n\r\nIf callers actually want the src Address, they can just write `edge.src.address`, which is actually more explicit. And in the general case where you are running a graph algorithm, this approach is more efficient and useful.\r\n\r\nAlso, we could consider renaming `src` to `source` and `dst` to `target`, as this would be consistent with d3's [force layout api](https://github.com/d3/d3-force#link_links). However, I don't think this is a very important consideration, because the d3.forceSimulation API is already an imperfect fit for our Node and Edge data structures. (E.g. forceSimulation adds position properties, which we won't want in general.)\r\n\r\ncc: @wchargin \r\n","title":"Consider having edges refer to nodes rather than addresses"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000073\u0000":{"address":{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/73","comments":[{"type":"COMMENT","id":"407174606","parent":{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"(This description will be improved)\r\n\r\nWe should think very carefully about Address semantics. Right now we have implicitly `repositoryName/pluginName`, however I think we should instead think about \"Value Networks\", and plan for value networks to be forkable, upgradable, and shareded/distributed, where in general, for each value network, no one party has unrestricted write ACLs across that network.\r\n\r\nFor example, our \"GitHub plugin\" can instead be a \"GitHub value network\", which defines a shared contribution graph that incorporates all issues, comments, user identities, pull requests, etc, across GitHub. We will maintain an instance of the GitHub value network, but it should be very easy for others to maintain their own forks, and our addressing system should be accommodating to forks, and network partitioning.\r\n\r\nI think our addresses should include a precise description of how to locate the linked edge, even when it is not locally available, and should have reasonable failure semantics. I think \"git addresses\" (look up in repository at URL X), and ipfs content addresses should both be handled well by our addressing scheme.\r\n\r\nNote that this is an increase in flexibility from the \"repositoryName/pluginName\" system. It will still be the case that some ValueNets are owned by individual repositories (e.g. SourceCred owns the SourceCredArtifact net) but it is a more flexible abstraction.\r\n\r\nExplicit goal: Someone should be able to fork any individual value network, and still play nicely with all the other networks, including the forked network.","title":"Address semantics and \"Value Networks\""},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000074\u0000":{"address":{"type":"ISSUE","number":"74","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/74","comments":[{"type":"COMMENT","id":"374434248","parent":{"type":"ISSUE","number":"74","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We can’t use ES6 modules with our backend scripts, because we refuse to\r\nacquiesce to the the `.mjs` autocracy that Node is trying to impose.\r\nWe’ve been using the old `module.exports` system, but this doesn’t let\r\nus import and export Flow types. We’re certainly going to want to set up\r\nWebpack eventually, so... we should do that.\r\n\r\ncc @dandelionmane ","title":"Add webpack to Node backend"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000":{"address":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/76","comments":[{"type":"COMMENT","id":"373478089","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373501529","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373521200","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373613940","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"376247882","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We will need to be able to structurally manipulate GraphQL queries so\r\nthat we can implement general-purpose pagination against the GitHub API.\r\nAmazingly, I wasn’t able to find such a library after some searching. In\r\nparticular, the official `graphql` npm package has structured schemata\r\n(of course), but only stringly-typed queries, as far as I can tell.\r\n\r\nHappily, GraphQL has a proper spec:\r\nhttps://facebook.github.io/graphql/October2016/\r\n\r\nThis makes it easy to correctly define the relevant API. Our needs are\r\nvery simple: we just need an ADT for a GraphQL request (queries and\r\nfragment definitions). The Flow-level types should express all the\r\ncomplexity of the system, and there will be a projection function to\r\ntake a query to a GraphQL-formatted string. Some helper functions will\r\nassist creation of the types for a fluent API, but this should basically\r\nbe it.\r\n\r\ncc @dandelionmane\r\n","title":"Create a structured form for GraphQL queries"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000082\u0000":{"address":{"type":"ISSUE","number":"82","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/82","comments":[{"type":"COMMENT","id":"373907183","parent":{"type":"ISSUE","number":"82","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A typical `Foo` plugin will have the `FooNode` and `FooEdge` types, and\r\nconstruct a `Graph<FooNode, FooEdge>`—this is already true, but our type\r\nsystem can't express it. Because `Graph` currently accepts `Node<any>`\r\nand `Edge<any>` for additions, clients adding nodes and edges must\r\ntype-annotate them manually, or risk adding ill-typed data.\r\n\r\nMerging becomes:\r\n```js\r\nmerge: (g1: Graph<N1, E1>, g2: Graph<N2, E2>) => Graph<N1 | N2, E1 | E2>`\r\n```\r\n\r\nGeneral graph algorithms will be able to operate parametrically,\r\nyielding free theorems.\r\n\r\nThis sounds like a good idea. I hope that implementing it, and\r\nexpressing that these parameter types are covariant, is tractable within\r\nFlow.\r\n\r\ncc @dandelionmane; if you think that this is a good idea then I will be\r\nhappy to implement it.\r\n","title":"Consider parameterizing `Graph<N, E>`"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000086\u0000":{"address":{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/86","comments":[{"type":"COMMENT","id":"401571625","parent":{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Forking from a discussion over at https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374149224:\r\n\r\nRight now, our graph encodes explicit directionality, via the \"src\" and \"dst\" fields on the edges. However, in many cases this directionality feels arbitrary, (in the Issue<->Comment relationship, which is src and which is dst?), and it complicates usage of the API (to find the comment nodes from an issue, you need to remember the somewhat arbitrary distinction).\r\n\r\nWe think it would be better if the edges were treated as undirected at the core graph layer, but had edge-type-specific-metadata that reveals the relationship between different sides of the edge. In the Issue-Comment edge example, rather than having a \"src\" and a \"dst\", the edge could have a \"parent\" and \"comment\" attributes. At the level of graph flow, plugin-provided heuristics would help determine what the effective weight in each direction should be. This reasoning is pretty similar to why we decided to remove \"weight\" as an explicit field on the edges; see https://github.com/sourcecred/sourcecred/pull/47 for context.","title":"Switch to undirected edges"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000":{"address":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/103","comments":[{"type":"COMMENT","id":"375174303","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"375537094","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383135334","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383157901","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383167876","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383649277","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Right now, our Address only encodes\r\n\r\n```\r\ntype Address = {|\r\n  +id: string,\r\n  +pluginName: string,\r\n  + repositoryName: string,\r\n|}\r\n```\r\nHowever, in the GitHub plugin, we found it helpful to keep track of NodeTypes, so we overloaded the `id` field with the stringification of an object\r\n\r\n```\r\ntype IDType ={|\r\n  +id: string,\r\n  +type: string, // actually NodeType | Type\r\n|}\r\n```\r\n\r\nWe then realized that finding the type of an edge is generically useful across the project, so we made the `pluginAdapter` interface contain an `extractType` function which returns a string type for any node.\r\n\r\nGiven that we now expect to be able to retrieve types for any Node, I think we should take a more legible and explicit approach by moving the type into an explicit field on the Address. We can do this very simply by adding a fourth string field with name `type` onto the Address. However, there are two nontrivial considerations here:\r\n\r\n1. Can we make the type system aware of the type string? In the GitHub plugin, we had explicit types for every ID type (e.g. `IssueNodeID`, `CommentNodeID`) and it seems natural to move that to the address layer now - in which case we get\r\n\r\n```\r\ntype Address<T: string> {|\r\n  +type: T,\r\n...\r\n|]\r\n```\r\n\r\nIt would be great if we could express that that constructing a node with a <FooPayload> and a \"BAR\" address type is a type error, but it's been difficult to properly express that in the Github plugin. We might wind up creating dual type signatures for each Node/Edge, as in the Github plugin, which I expect would look like this:\r\n\r\n```\r\ntype Node<Type, PayloadType> {|\r\n  +address: Address<Type>,\r\n  +payload: PayloadType,\r\n|}\r\n```\r\n\r\nThen we could define a `TYPES` dict like \r\n```\r\nTYPES = {|\r\n  FOOTYPE: FooPayloadType,\r\n  BARTYPE: BarPayloadType,\r\n|}\r\n```\r\n\r\nThere's another question of whether type names should be implicitly scoped by plugin, or if there should be \"generic\" types that are shared across plugins. Having generic type names adds complexity because then we need to do namescoping / disambiguation of types across plugins; it would be simpler to just have each type name be specific to the plugin that generates it, because then we can depend on plugin namespacing to prevent conflicts. So I think we should take that approach, and possibly revisit if we have a compelling case where we need to share a type across multiple plugins.\r\n\r\n@wchargin - if you don't object to the general approach, I'll likely take a stab at refactoring this into the codebase soon - the sooner we switch to the right object type for Address, the less re-factoring we'll need to do down the line.","title":"Refactor \"NodeTypes\" and \"EdgeTypes\" to be part of the Address"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000":{"address":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/117","comments":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"379634273","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"379634294","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"When we request data from the GitHub API, we are limited to a maximum of\r\n100 items per connection at a time: 100 issues per repository, 100\r\ncomments per issue, etc. When we want to fetch _all_ data for a\r\nrepository, we’ll need to take advantage of GitHub’s pagination API to\r\nfetch subsequent pages. Currently, our code assumes (and asserts) that\r\nall data always fits on a single page, but clearly this is not a\r\nscalable long-term solution: SourceCred itself will soon have more than\r\n100 pull requests, for instance.\r\n\r\nEventually, we would like to implement an “auto-pagination” function\r\nthat takes an arbitrary query against the GitHub API, executes it, and\r\nkeeps fetching subsequent pages until all data has been exhausted. I’ve\r\nbeen working on this for a while (order of a week), and it is\r\nfascinatingly difficult. Without going into too much detail: for a fully\r\ngeneral solution, we need to map each field in the response to the field\r\nin the query and the associated GraphQL type, which gets complicated\r\nwhen dealing with fragments, and further complicated when fragments have\r\noverlapping support. Our existing GitHub query falls into this last\r\ncategory, so the functionality, at least, is required.\r\n\r\nThe GraphQL spec is of excellent quality, and is very clear about the\r\nsemantics of what happens in the query. This makes it easy enough to\r\nformulate a top-level API and contracts for the functions that we want.\r\nBut the implementation of these functions should clearly be decomposed,\r\nand exactly how to decompose them—what types to use, where to cut the\r\nrecursion, which base cases to pick—is surprisingly challenging. I’m\r\nconfident that I could implement it, given enough time, but it take a\r\nlot of careful thought. (I’d currently estimate one programmer-week’s\r\nworth of design and implementation work, non-parallelizable.)\r\n\r\nAs our tolerance for ~~hacky~~ ad hoc solutions increases, the problem\r\nbecomes easier. In the short term, we should consider implementing a\r\npagination function that works just for our particular GitHub query.\r\nThis removes the greatest difficulty, type tracking across fragments,\r\nbecause we can design the code around a particular query structure. This\r\nwill unblock us indefinitely, at the cost of increasing the friction\r\ninvolved in changing the GitHub query. (Estimated work: one or two days,\r\nnon-parallelizable, including good test coverage; maybe one extra day if\r\nwe want really rigorous tests.)\r\n\r\nIn the long term, it would be nice to implement a more general-purpose,\r\nbut still GitHub-specific, pagination API. A good metric for generality\r\nis that it should be releasable as a standalone npm package, with\r\ndependencies only on the structured query language. We can keep this in\r\nmind as it becomes more cumbersome to write queries with manual\r\npagination—and also as just a “nice-to-have” on the calendar.\r\n\r\nAbsent objections, I’ll start implementing this; I have the most context\r\non the existing query system and on the aforementioned pagination\r\nefforts.\r\n\r\ncc @decentralion","title":"Write a pagination API for GitHub GraphQL queries"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000127\u0000":{"address":{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/127","comments":[{"type":"COMMENT","id":"387147210","parent":{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, the GitHub plugin uses opaque GitHub id strings as the edge/node ids. I believe we should change to using canonical GitHub urls as ids.\r\n\r\nMy reasoning is that it will make it possible to reference a GitHub asset without needing to introspect on GitHub's opaque, internal-only id structure. A simple example is if repo A wants to reference an issue in repo B. The user can do that, canonically, via a url. However, at present it isn't possible to parse that url into a graph reference without executing an additional query against GitHub to retrieve the id of the referenced issue. \r\n\r\nRelevant: this issue in which I call for changing addresses to be real addresses in general, rather than opaque ids. https://github.com/sourcecred/sourcecred/issues/73. (Ie: the address type should be able to specify \"object A in repository B at hash C\" or \"url X\" or \"object in IPFS with hash X\"\r\n\r\ncc: @wchargin ","title":"GitHub plugin: Use urls as ids"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000":{"address":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/131","comments":[{"type":"COMMENT","id":"383157219","parent":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387148124","parent":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We should be able to parse references from GitHub post bodies; for some examples, see https://github.com/sourcecred/example-repo/issues/2\r\n\r\nSome relevant references:\r\nhttps://github.com/sourcecred/sourcecred/pull/130\r\nhttps://github.com/sourcecred/sourcecred/pull/125","title":"Implement GitHub reference parsing"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000132\u0000":{"address":{"type":"ISSUE","number":"132","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/132","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"E.g. when a user closes a GitHub issue, we should create an edge representing that information.\r\n\r\nIn effect, the \"AUTHORS\" edge type should become a particular type of ACTION edge, where ACTION edges generally have a user acting on a GitHub post","title":"Implement GitHub action parsing"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000148\u0000":{"address":{"type":"ISSUE","number":"148","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/148","comments":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"GitHub’s `PullRequestReviewComment`s track a sequence of parents:\r\n\r\nhttps://developer.github.com/v4/object/pullrequestreviewcomment/#replyto\r\n\r\nWe should create an appropriate edge in the graph.\r\n","title":"Make use of PR review comments’ parent property"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000171\u0000":{"address":{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/171","comments":[{"type":"COMMENT","id":"388284945","parent":{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"As proposed by @wchargin in https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839308","title":"Create a node in the GitHub graph for the whole repository"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000":{"address":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/190","comments":[{"type":"COMMENT","id":"386153839","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386362870","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386371435","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391216103","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391216116","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391447851","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401571601","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Currently, a node has both an address and a payload. The address ID\r\nneeds to uniquely identify the node, and the payload holds anything else\r\nthat we want to store.\r\n\r\nThis can be confusing: if you have a node and want to access a field,\r\nyou have to think about where the data lies. It’s a leaky abstraction.\r\n\r\nAlso, as the address ID must be a string, this often leads to “stringify\r\nthe whole shebang and put it in the payload”. If you want to get the\r\ndata back out of the node, you have to either additionally store it in\r\nthe payload (wasting space and causing extra confusion) or parse the ID\r\n(slow, breaks typing, and generally considered a Questionable Idea).\r\n\r\nWe should consider eliminating this distinction by doing something more\r\nreasonable.\r\n\r\n(This all applies to edges, too.)","title":"Consider refactoring away the address–payload distinction"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000":{"address":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/194","comments":[{"type":"COMMENT","id":"386163362","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386361392","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386371860","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387141605","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Currently, Travis CI uses my personal auth key to run cron jobs that hit\r\nthe GitHub GraphQL API. This is okay as a concession for the very short\r\nterm, but I’d like to move away from it as soon as possible.\r\n\r\nThere is [a StackOverflow question about this][1]. The accepted answer\r\nis from a GitHub employee, who suggests creating a machine account for\r\nthis purpose. Given that the API key would only be used from cron jobs,\r\nrunning at most once daily and using just a handful of API tokens, this\r\nseems easily in line with the terms of service. As further comfort, [the\r\nGitHub help page on managing deploy keys][2] says:\r\n\r\n> cannot automate the creation of accounts. But if you want to create a\r\n> single machine user for automating tasks such as deploy scripts in\r\n> your project or organization, that is totally cool.\r\n\r\n[1]: https://stackoverflow.com/questions/31159275/how-do-i-generate-the-github-oauth-token-for-organization-accounts\r\n[2]: https://developer.github.com/v3/guides/managing-deploy-keys/","title":"Create a `sourcecred-ci` or `sourcecred-bot` user"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000218\u0000":{"address":{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/218","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin and I have pair-programmed a lot of pull requests, e.g. #35. We should add logic to the GitHub plugin such that it creates dual authorship edges in that case.","title":"Implement \"Paired with @\" parsing"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000223\u0000":{"address":{"type":"ISSUE","number":"223","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/223","comments":[{"type":"COMMENT","id":"388284849","parent":{"type":"ISSUE","number":"223","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Consider the command \r\n`node bin/sourcecred.js sourcecred sourcecred github-token=BAD`\r\n\r\nExpected:\r\nIt will give a helpful error message stating that the github token was bad.\r\n\r\nActual: \r\n```\r\n    /home/dandelion/git/sourcecred/bin/commands/combine.js:116\r\n    process.on(\"unhandledRejection\",err=>{throw err;});class CombineCommand extends __WEBPACK_IMPORTED_MODULE_0__oclif_command__[\"Command\"]{// We disable strict-mode so that we can accept a variable number of\r\n                                          ^\r\n    \r\n    TypeError: Cannot read property 'repository' of undefined\r\n        at continuationsFromQuery (/home/dandelion/git/sourcecred/bin/commands/plugin-graph.js:437:86)\r\n        at postQueryExhaustive (/home/dandelion/git/sourcecred/bin/commands/plugin-graph.js:468:168)\r\n        at <anonymous>\r\n        at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```","title":"Bad failure message when retrieving graph with an invalid GitHub token"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000237\u0000":{"address":{"type":"ISSUE","number":"237","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/237","comments":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For instance:\r\n\r\n```graphql\r\n{\r\n  node(id: \"MDExOlB1bGxSZXF1ZXN0MTg2NzM1MjM2\") {\r\n    ... on PullRequest {\r\n      id\r\n      title\r\n      merged\r\n      mergeCommit {\r\n        id\r\n        oid\r\n      }\r\n      commits(first: 100) {\r\n        pageInfo {\r\n          hasNextPage\r\n          endCursor\r\n        }\r\n        nodes {\r\n          id\r\n          commit {\r\n            id\r\n            oid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","title":"Investigate \"[pull request] merged-as [commits]\" when using rebase and merge"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000256\u0000":{"address":{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/256","comments":[{"type":"COMMENT","id":"407174322","parent":{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our use of relative paths throughout the codebase is quite cumbersome. Let's fix this. \r\n\r\nOn the webpack side, it looks like the solution [is simple].\r\n\r\n[is simple]: https://spin.atomicobject.com/2017/10/07/absolute-paths-javascript/\r\n\r\nFor flow, it seems the solution [is possible] albeit not phenomenally well supported. Here's [a bit more info].\r\n\r\n[is possible]: https://github.com/facebook/flow/issues/4186#issuecomment-336084041\r\n[a bit more info]: https://github.com/facebook/flow/issues/1826#issuecomment-220792807","title":"Use absolute, not relative paths"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000268\u0000":{"address":{"type":"ISSUE","number":"268","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/268","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It would be nice to create a connection between the GitHub repository object, and the HEAD commit of the master branch. This would tie the repository level directly to the code in a reasonable way.\r\n\r\nA nice generalization here is to create nodes for each branch, and then give the master branch some extra weight in PageRank. ","title":"Git{Hub} plugin: Add branch pointers"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000269\u0000":{"address":{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/269","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In https://github.com/sourcecred/sourcecred/pull/265, we created a new UI for the Cred Explorer and merged it without tests. This was reasonable, as we were pushing to build out a lot of new features, and indeed succeeded in prototyping a much faster and more configurable PageRank implementation!\r\n\r\nHowever, we should not forget to add tests, e.g. for the following properties:\r\n\r\n- [x] Expand/collapse recursive tables\r\n- [x] Nested tables have a darker color\r\n- [x] Top-level filtering is possible via the selector\r\n- [x] Scores (and log scores) are displayed \r\n- [x] Top level table is sorted by score\r\n- [x] And recursive ones are too\r\n- [x] Dangling edges do not cause a crash\r\n- [ ] Changing the graph does not cause a crash\r\n- [x] nodes without plugin adapter don't cause a crash","title":"Add tests for Cred Explorer"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000":{"address":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/270","comments":[{"type":"COMMENT","id":"388475262","parent":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401163233","parent":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"E.g. when running `sourcecred graph foo bar` it would be great to see how long each step took. cc @wchargin ","title":"execDependencyGraph should print task times"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000280\u0000":{"address":{"type":"ISSUE","number":"280","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/280","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, SourceCred has no consistent way to approach versioning. This hasn't been a problem thus far as we have no users, and it's reasonable to regenerate all graphs from scratch every session. Once we start persisting graphs (/ have users), we will need versioning and approach for backcompat on old data structures.\r\n\r\nWe should implement a consistent versioning system. Ideally it will have at least the following two properties:\r\n- Allow fine-grained versioning of composite objects, e.g. at present a Graph serializes using Address Maps, and the address maps should be independently versionable (h/t @wchargin )\r\n- Allow plugins to have separate data versioning, e.g. the GitHub plugin can change its graph representation without this leaking over to other plugins","title":"Implement versioning for all serializables"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000336\u0000":{"address":{"type":"ISSUE","number":"336","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/336","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"cc @lrraymond13","title":"Add deletions, additions to v1 PullRequestPayload"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000":{"address":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/350","comments":[{"type":"COMMENT","id":"394939349","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395164325","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395186666","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395187798","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395217826","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395222471","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395225556","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395227637","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395640276","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408502491","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In #349, we saw what appeared to be a bug in continuation resolution\r\nwhen run on `ipfs/go-ipfs`:\r\n\r\n```\r\nTypeError: Cannot read property '_n0' of undefined\r\n    at embeddings.reduce (/home/wchargin/git/sourcecred/bin/commands/plugin-graph.js:442:153)\r\n    at Array.reduce (<anonymous>)\r\n    at resolveContinuations (/home/wchargin/git/sourcecred/bin/commands/plugin-graph.js:442:82)\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```\r\n\r\nI’ve investigated this. It is not a bug in our code, per se. What is\r\nhappening is the following. Sometimes, when we post a query to the\r\nGitHub GraphQL API, the response is (prettified):\r\n\r\n```\r\n{\r\n  \"documentation_url\": \"https://developer.github.com/v3/#abuse-rate-limits\",\r\n  \"message\": \"You have triggered an abuse detection mechanism. Please wait a few minutes before you try again.\"\r\n}\r\n```\r\n\r\nNote that this links to the v3 API, even though we’re using the v4 API.\r\nAlso note that we are not using the API to rapidly create content,\r\npolling (at all), or making multiple concurent requests, and it seems\r\nsurprising that the data that we are requesting should be\r\ncomputationally expensive (e.g., we are not forcing computation of Git\r\ndiffs; we’re just fetching standard fields off the standard objects).\r\n\r\nFirst of all, this is not a [valid GraphQL response][1], so it is not\r\nsurprising that we do not have logic to handle it.\r\n\r\n[1]: https://facebook.github.io/graphql/October2016/#sec-Response-Format\r\n\r\nSecond, whether this error is produced appears to be nondeterministic.\r\nRunning the same sequence of queries multiple times can lead to exactly\r\nthe same results (failures and all), or it can be the case that the\r\nfirst sequence fails and the second succeeds. One potential explanation\r\nfor this is that the abuse detection depends on actual compute resources\r\nused by GitHub’s servers, and so initial queries cause the caches to be\r\nhot for the particular resources in question. Or, it could just be a\r\nfluke.\r\n\r\nWe should probably, nevertheless, attempt to fix this. For instance, we\r\ncould detect this error and, as the message suggests, wait some time\r\nbefore re-issuing the query.\r\n","title":"Investigate nondeterministic GitHub query rejections"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000389\u0000":{"address":{"type":"ISSUE","number":"389","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/389","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We should make the SourceCred example github repository more realistic by ensuring that it has content authored by a deleted user.\r\n\r\nProcedure:\r\n1. Create a fresh GitHub account for this purpose\r\n2. Unarchive the example-github repository\r\n3. Have the to-be-ghost account post issues, comments, pull requests, etc.\r\n4. Archive the example-github repository\r\n5. Delete the ghost Github account","title":"Add an authorless post to the sourcecred example github"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000417\u0000":{"address":{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/417","comments":[{"type":"COMMENT","id":"400460048","parent":{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"**TL;DR:** Remove the notion of “submodule commits” from the Git plugin,\r\nobserving that this makes for a more consistent “universal monorepo”\r\npoint of view.\r\n\r\n---\r\n\r\nCurrently, the Git plugin has the following kinds of relationships\r\n(among others):\r\n\r\n  - A tree includes tree entries.\r\n  - A tree entry may have a blob as contents.\r\n  - A tree entry may have a tree as contents.\r\n  - A tree entry may represent a submodule commit, in which case it has\r\n    zero or more “submodule commit” nodes as contents.\r\n\r\nThis is all easy to understand until the last point. Submodule commits\r\nchange the has-contents relationship from “a tree entry has exactly one\r\nnode as contents” to “a tree entry has zero or more nodes as contents”.\r\n\r\nFurthermore, the contents of a tree entry representing a submodule\r\ncommit cannot be determined by looking at the tree in Git. For a fixed\r\ntree entry, the contents may even change over time as new commits are\r\nadded to the head of the repository—without force-pushes or anything.\r\n\r\nThis is all quite confusing, and of questionable value (which, of\r\ncourse, is my fault).\r\n\r\nThe reason that I originally implemented the system like this is the\r\nfollowing. In Git, the actual tree entry for a submodule commit as\r\nshown by `git cat-file -p HEAD^{tree}` or `git cat-file tree HEAD | xxd`\r\nincludes only the name of the submodule (as with all tree entries) and\r\nthe submodule commit hash. Armed with only the hash, one cannot find\r\nmore information about the remote commit, because one does not know how\r\nto locate the repository to which it belongs. Including the URL helped\r\nto remedy this; it gave one a place to look up the commit and find its\r\nauthor, its contents, etc.\r\n\r\nBut, in the context of a SourceCred graph, I don’t think that this makes\r\nmuch sense. Suppose that we have a cred graph for Repositories A and B,\r\nand that Repository A has submodule commits from Repositories B and C.\r\nGiven just the hash of a submodule commit from Repository B, the\r\nrelevant commit is already in the graph, so we can get all the\r\ninformation that we want. Given the hash of a submodule commit from\r\nRepository C, we can’t get any more information about this commit—but we\r\ndon’t need to, either. What were we going to do with the URL—hope that\r\nthe repository is still mirrored there, go clone it, and generate a cred\r\ngraph on the fly? Doubtful.\r\n\r\nInstead, we should consider moving to the following ontology, which is\r\nsimpler and a more faithful model of Git:\r\n\r\n  - A tree includes tree entries.\r\n  - A tree entry may have a blob as contents.\r\n  - A tree entry may have a tree as contents.\r\n  - A tree entry may have a commit as contents.\r\n\r\nHere are some consequences:\r\n\r\n  - We get invariants like “every tree entry has exactly one node as\r\n    contents”. Consequently, both APIs and implementations become\r\n    simpler.\r\n\r\n  - We don’t have to read the `.gitmodules` file at every commit. This\r\n    saves (a) for every commit: one `git` subprocess call that must read\r\n    and parse a tree object, and (b) for commits that have at least one\r\n    submodule, one additional `git` subprocess call that must read and\r\n    parse a blob. It is probably a marginal performance improvement, but\r\n    it makes the code significantly simpler.\r\n\r\n  - We must relax the invariant that every commit have exactly one tree:\r\n    in the case of a submodule commit, we might not know what the\r\n    appropriate tree is. I posit that this is okay. The invariant\r\n    changes from a uniqueness constraint to a subsingleton constraint.\r\n\r\n  - It is increasingly apparent that the Git graph is not a graph of one\r\n    Git repository, but of all Git repositories. Nodes are not scoped by\r\n    owner or repository name; they simply exist in the universe,\r\n    identified by their hashes.\r\n\r\ncc @decentralion; thoughts appreciated.\r\n","title":"Reconsider Git plugin graph structure"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000421\u0000":{"address":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/421","comments":[{"type":"COMMENT","id":"400450848","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400451185","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400458874","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Factors to consider:\r\n\r\n  - time/effort spent integrating TypeScript into the build system\r\n  - time/effort spent porting the existing Flow types to TypeScript (can\r\n    this be done incrementally?)\r\n  - time/effort saved by better type information due to TypeScript\r\n  - time/effort wasted by worse type information due to TypeScript\r\n  - time/effort saved or wasted by build- and run-time [performance\r\n    differences][bernhardt]\r\n  - relative cost of switching now versus later\r\n\r\n[bernhardt]: https://threadreaderapp.com/thread/1007690864909529088.html\r\n","title":"Investigate moving to TypeScript"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000430\u0000":{"address":{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/430","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Right now GitHub test code directly requires the demodata in several places. We should abstract this into a little utility module that ensures the data never gets state pollution, and is provided with the correct typing, as suggested by @wchargin here: https://github.com/sourcecred/sourcecred/pull/428#discussion_r198664313","title":"Refactor GitHub testing to export demo data methods"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000432\u0000":{"address":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/432","comments":[{"type":"COMMENT","id":"401145640","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Our current reference detection uses regular expressions to match\r\npatterns anywhere in a string. This is a reasonable approximation, but\r\nit yields false positives when the text in question is enclosed in a\r\ncode block, and may yield false negatives if the text is split across\r\nmultiple lines.\r\n\r\nWe should use a Markdown parser like [CommonMark][] to extract the\r\nMarkdown AST, eliminate softbreaks, and run reference detection only in\r\nthe text nodes of the AST.\r\n\r\n[CommonMark]: https://github.com/commonmark/commonmark.js\r\n","title":"Parse Markdown of GitHub text content"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000433\u0000":{"address":{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/433","comments":[{"type":"COMMENT","id":"401439238","parent":{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Create (e.g.) a comment with multiple references to (e.g.) the same issue.\r\nMake sure tests still pass with the new data.\r\nSuggested here: https://github.com/sourcecred/sourcecred/pull/431#discussion_r198952610","title":"Add a multireference to the example-github repo"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000465\u0000":{"address":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/465","comments":[{"type":"COMMENT","id":"401709755","parent":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401955224","parent":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"- Can two plugins have the same prefix?\r\n- Can two plugins have the same display name?\r\n- Can one plugin have two types with the same prefix?\r\n- Can one plugin have a prefix that is a prefix of another plugin's prefix?\r\n- Can two plugins have types with the same prefix?\r\n\r\nTune in next episode for answers (and invariant assertions) to all these questions, and more!","title":"Formalize PluginAdapter semantics"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000":{"address":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/476","comments":[{"type":"COMMENT","id":"402062153","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402553689","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402576435","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"# Weighted PageRank Graphs\r\n\r\n## Domain introduction\r\n\r\nWe have a heterogeneous graph `G` which represents contributions/contributors\r\nin SourceCred, and connections between them.\r\n\r\nIt's heterogeneous in the sense that there are many different \"types\" of nodes\r\nand edges. In the interest of concreteness, here is a sample of of node types\r\nand edge types we have or expect to add.\r\n\r\n### Node types:\r\n\r\n  - *GitHub users* are identities we want to assign cred to\r\n  - *GitHub issues* contain documentation, design, bug reports, etc\r\n  - *GitHub pull requests* merge new code into the repository\r\n  - *Git blobs* contain source code\r\n  - *Spotlights* represent cred for contributions that don't otherwise fit\r\n    into the data model, e.g. a spotlight for participtaing in an offline\r\n    design discussion, or for giving a talk on SourceCred\r\n\r\n### Edge types:\r\n\r\n - *Authorship edges* connect an issue or pull request with the users that\r\n   created it\r\n - *MergedAs edges* connect a pull request to the git commit it created\r\n - *Import edges* connect a Git blob containing source code to the git blobs\r\n   containing code that blob imports\r\n - *Spotlight edges* connect a Spotlight node to the entities it is flowing cred\r\n   to\r\n - *Spotlight authorships* flow some cred to the entity that created the spotlight\r\n\r\n\r\n### The need for weights\r\n\r\nAs currently implemented, SourceCred does not do a good job of distinguishing\r\nvaluable contributions. As an example, when run on the repository in its\r\ncurrent state, it believes that #292 is one of the most valuable pulls in the\r\nproject, outshining contributions like #252 and #468 which were actually much\r\nmore valuable. Even worse, it massively over-values Git objects; for example,\r\nthe blob containing our Prettier configuration is seen as >100x more valuable\r\nthan the most valuable pull request.\r\n\r\n@wchargin and @decentralion believe that this problem results from the fact\r\nthat the graph is currently unweighted. As such, we need to implement a system\r\nfor applying weights to different nodes and to the src/dst of edges. There are\r\nseveral different use cases for weights:\r\n\r\n### Kinds of weights:\r\n\r\n#### Prior over types\r\n\r\nWeights can provide prior information on the relative value of different types.\r\nFor example, we should have a weight that suggests that GitHub pull requests\r\nare, on average, much more important than Git blobs.\r\n\r\n#### Domain-specific evaluation\r\n\r\nWeights can use domain-specific signal to differentiate the value of different\r\nnodes of the same type. For example, # of lines of code is a useful signal for\r\nthe value of a pull request; a PR that modifies 1000 lines of code is probably\r\nmore valuable than one that modifies 3 lines.\r\n\r\n#### Distinguish parts of the project\r\n\r\nWeights can be used to differentiate different parts of the project for clearer\r\nanalysis. For example, suppose a project wants to separately measure cred for\r\n\"backend\" and \"frontend\" work, without artificially partioning the project into\r\nseparate graphs. It would be nice to do this via a \"weighting\" that assigns a\r\nhigh prior weight to the backend directory and key backend APIs. (This would\r\nincorporate the [project] or \"domain\" concept via weighting).\r\n\r\n[project]:\r\nhttps://github.com/sourcecred/sourcecred/issues/29#issuecomment-368359785\r\n\r\n\r\nThus, implementing a well-designed weighting abstraction would allow us to\r\nimplement many important features in a cohesive way. What follows is a \"Q&A\"\r\nstyle discussion of major open questions in how the weight abstraction should\r\nwork.\r\n\r\n## Open questions\r\n\r\n### What is the type signature of a weight function?\r\n\r\nIn some cases, it's natural to think of a weight function as providing a\r\nrelative weight over every node in the project. For example, the project may\r\nhave maintainer-configurable weight functions that give a prior over every type\r\nof node in te graph\r\n\r\nIn other cases, it's natural to think of a weight function as providing\r\nrelative weights for a subset of nodes in the graph. For example, the\r\nlines-of-code weighting can differentiate between different pull request nodes,\r\nbut has no information to offer on the relative importance of different issues.\r\n\r\nSome ideas on how we could express weight functions:\r\n\r\n`node \\in Graph -> number`, where for some subset of nodes in the graph, the\r\nweight function assigns a weight. That weight might be seen as an update on the\r\na priori importance of the node. (What would the formal specification be?)\r\n\r\n\r\n`Graph -> distribution over nodes`, where for every node in the graph, the\r\nweight function assigns an update on the prior importance of that node. (Would\r\nit assign 0 to every node that is out-of-scope? Would that compose nicely?)\r\n\r\n### How do we compose weight functions?\r\n\r\nIt's important that we can combine and compose weight functions. For example,\r\nsuppose we have one weight function on commits that gives the logarithm of the\r\nnumber of lines changed by the commit, and another weight function measures the\r\n[cyclomatic complexity]. At the very least, we should be able to use both\r\nweight functions in tandem.  It would be cool if we could express richer\r\nrelationships, such as that commits that add a lot of lines of code but do not\r\nadd any test code actually have negative signal.  (Unless they are refactors?)\r\n\r\ncyclomatic complexity: [https://en.wikipedia.org/wiki/Cyclomatic_complexity]\r\n\r\nWe should also be able to compose weight functions \"cross-product-style\".\r\nSuppose we have one pair of weight functions that distinguishes the frontend\r\nand backend components, and we have another pair of weight functions that\r\ndistinguishes code implementation from documentation.\r\n\r\nThen it should be possible to answer who has the most documentation cred in the\r\nbackend, who has the most implementation cred in the frontend, and so forth.\r\n\r\nOne insight from @krzhang was to think of the weight functions as priors in a\r\nsequence of bayesian updates; he suggested that if we store the weights as\r\nlog-priors, then combining them is as simple as adding the log-priors.\r\n\r\n\r\n### How do we apply the weight functions to the PageRank algorithm?\r\n\r\nClassical PageRank doesn't provide prior weighting on nodes. One way to add\r\nweighting, found in the weighting around [personalized PageRank], is to add\r\n[personalization vectors].  This modifies the \"random surfing\" or\r\n\"teleportation\" of the PageRank algorithm so that rather than uniformly\r\nteleporting to any node in the graph, the surfer teleports based on the\r\npersonalization vector.\r\n\r\n[personalized PageRank]: https://nlp.stanford.edu/projects/pagerank.shtml\r\n[personalization vectors]: http://ilpubs.stanford.edu:8090/596/1/2003-35.pdf\r\n\r\nIn offline discussion, @krzhang suggested a different approach. We can apply a\r\nnode weight by applying a weighting to the in-and-out edge weights for that\r\nnode; i.e., by modifying that node's row and column in the adjacency matrix.\r\n\r\nHe suggested that given an adjacency matrix `M`, this could be applied by `W *\r\nM * W'`, where `W` is a diagonal matrix with node weights on the diagonal.\r\n\r\nThis approach seems more powerful and principled to me - easier to reason about\r\nhow it affects the final distribution. We may want to empirically try both approaches.\r\n\r\n---\r\n\r\nLet's use this thread to further discuss this model; eventually we'll likely want to commit the final document as a markdown or latex document.\r\n\r\nThanks to @krzhang for helping to clarify the problem domain, and providing a number of suggestions that informed this post.","title":"Weighted PageRank"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000481\u0000":{"address":{"type":"ISSUE","number":"481","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/481","comments":[{"type":"COMMENT","id":"402268298","parent":{"type":"ISSUE","number":"481","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Our current GitHub reference detection uses regular expressions to\r\nextract known reference patterns from a block of text. It is possible\r\n(if not easy) to reason about the regular expressions used to match a\r\nparticular kind of reference. But is is much harder to reason about how\r\nthese interact. For instance, in the current system, the string\r\n\r\n```\r\nhttps://github.com/sourcecred/sourcecred/issues/1#@foo\r\n```\r\n\r\nparses to two references (!):\r\n\r\n```json\r\n[\r\n  {\r\n    \"refType\": \"BASIC\",\r\n    \"ref\": \"https://github.com/sourcecred/sourcecred/issues/1\"\r\n  },\r\n  {\r\n    \"ref\": \"@foo\",\r\n    \"refType\": \"BASIC\"\r\n  }\r\n]\r\n```\r\n\r\nThis is because a URL is allowed to end in a fragment specifier `#`,\r\nwhich is not a word character `[A-Za-z0-9_]`, and a username reference\r\nis required to be preceded by a non-word character.\r\n\r\nBecause the regular expressions used to match the different reference\r\ntypes all execute independently, it is hard to reason about scenarios\r\nlike this one. The reader must consider the cross product of “the end of\r\none regular expression” and “the start of another”, for instance. Of\r\ncourse, attempting to combine all the different reference types into one\r\ngiant regular expression would likely be a bad idea, especially\r\nconsidering that paired-with references work by computing a difference\r\nof regular expression matches.\r\n\r\nHowever, suppose that we reconsider the premise of using a regular\r\nexpression to find references _globally_ in a string. Instead, we may\r\nconvert the input to a stream of tokens, and then make a single pass\r\nover that token stream, identifying all kinds of references at once. We\r\ncan use similar, but simpler, regular expressions to check whether a\r\nparticular _token_ is particular kind of reference. Then, these\r\nexpressions wouldn’t need to worry about adding non-capturing groups\r\n`(?:\\W|^)` and lookaheads `(?=\\W|$)` for detecting word boundaries (and\r\nthe [resulting subtleties][#478] that this entails).\r\n\r\nWe would also gain the ability to reason more clearly about interactions\r\nby modifying state as we traverse the token stream: for instance, the\r\nrule “if you see the token `Paired` followed by the token `with`, then\r\nthe next token is considered to be a paired-with reference instead of a\r\nusername reference” is easy to express, and eliminates the need for the\r\nfunky multiset-difference in the current implementation. For parsing URL\r\nreferences, we would gain the ability to defer to an actual URL-parsing\r\nlibrary to handle all the special cases that we’re likely to forget.\r\n\r\n[#478]: https://github.com/sourcecred/sourcecred/pull/478\r\n\r\nIn summary, I suspect that the resulting system would be a simple state\r\nmachine that is easy to understand.\r\n\r\nNote that hand-writing a tokenizer is quite easy, and could plausibly\r\nrequire not much more than `(s) => s.split(\" \")`.\r\n\r\nThis change would be highly self-contained; only the `parseReferences`\r\nmodule would need to change. It also probably falls pretty low on the\r\npriority list: though I do believe that it would greatly improve the\r\nrobustness of that module, that module’s robustness simply isn’t\r\ncritical to us _right now_. In the long term, where we have the\r\nresources to expend on polishing all aspects of the system, this is\r\ndefinitely something that I would like to see. (Or, in other words:\r\ncontributions welcome!)\r\n\r\ncc @decentralion\r\n","title":"Consider using a hand-written tokenizer for GitHub references"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000483\u0000":{"address":{"type":"ISSUE","number":"483","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/483","comments":[{"type":"COMMENT","id":"402935463","parent":{"type":"ISSUE","number":"483","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"See the GitHub v4 API docs for the [`Label`] and [`Issue`] objects. Note\r\nthat labels on an issue (resp. pull request) are provided as a\r\nconnection, not a simple list. Note also that a repository has a\r\ntop-level `labels` connection. Therefore, we might want to fetch for\r\neach issue just the `id`s of its labels, and separately pull all labels\r\nat top level. This will also allow us to detect labels that do not\r\nappear on issues, but may still be (e.g.) referenced in text content.\r\n\r\n[`Label`]: https://developer.github.com/v4/object/label/\r\n[`Issue`]: https://developer.github.com/v4/object/issue/\r\n","title":"Add labels to the GitHub data model"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000":{"address":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/498","comments":[{"type":"COMMENT","id":"403172147","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403173148","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403173261","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408519328","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Right now, users of the cred explorer manually specify a repository name / owner via text inputs. In practice, there are only a few valid options, based on what data is available on the backend. We should modify the UI so that it offers only valid options. (If no options are present, it should probably offer help text on how to load data.)\r\n\r\nThis will make the UI more convenient to use, and will likely take less space.","title":"Switch Explorer repository input to a list rather than text entry"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000":{"address":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/499","comments":[{"type":"COMMENT","id":"403173464","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403175494","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403188735","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408507999","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Now that we have an interesting prototype to play with, I'd like us to have an online demo that statically serves graphs/data for a fixed set of chosen repositories. We can use GitHub pages for hosting, and then make it publicly available on sourcecred.io. We can then link to it in the README, etc. This will make SourceCred's progress a lot more tangible and easy to communicate. We should handle #498 first so that users don't need to guess which options are valid. \r\n\r\nImplementation wise, since the backend right now only serves static JSON, it shouldn't require much modification of our code. We should build good infrastructure for setting up and updating the demo instance, as it is likely that this pipeline will be a good fit for other projects that want to easily setup their own SourceCred instance using GitHub pages.\r\n\r\n","title":"Create a static SourceCred demo"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000502\u0000":{"address":{"type":"ISSUE","number":"502","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/502","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"When looking at a highly connected nodes in the cred explorer (>20-30 connections), it can be hard to orient on what's going on. We can make this more legible by aggregating over this information. For every aggregated group of contributions, we will display a description, and the log of the summed scores in the aggregation. I propose we aggregate first by edge type, then by node type, following the rule that we aggregate whenever there are more than K nodes that would fall into the same group.\r\n\r\nFor example, if a user has many contributions, it might aggregate as follows:\r\n- AUTHORED 100 nodes\r\n  - AUTHORED 30 pull requests\r\n    - ... pulls ...\r\n  - AUTHORED 20 issues\r\n    - ...issues...\r\n  - AUTHORED 50 reviews\r\n    - ...reviews...\r\n- REFERENCED_BY 3 nodes\r\n  - issue 123\r\n  - comment 456\r\n  - pull 678\r\n \r\nThe use of log scoring on the contributions will make this somewhat confusing; it will be counter-intuitive that the displayed scores in an aggregation don't sum to the value of the aggregation.\r\n\r\nA concrete use case: ever since our first SourceCred prototype, @wchargin has had more cred than me, and I've never understood why. I think this will shed some light on the issue!","title":"Cred explorer: Aggregate over contributions"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000509\u0000":{"address":{"type":"ISSUE","number":"509","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/509","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Not every contribution to a project is going to leave a clear record in the Git or GitHub metadata. For example, suppose that a designer creates UI mocks and emails them to the team, or a community member organizes a talk. SourceCred needs a way to detect and recognize these contributions.\r\n\r\nThat's where the \"Spotlight Plugin\" will come in. The spotlight plugin provides a way for anyone in the project to reify a contribution that doesn't exist in the data model. For example, if Syl creates UI mocks and Kaladin wants to thank her, Kaladin could create a new spotlight, pointing to Syl, with a description of the contribution, possibly links to the mocks, etc. You can think of spotlights as being kind of like [peer bonuses] for open-source projects.\r\n\r\n[peer bonuses]: https://www.quora.com/What-are-peer-bonuses-at-Google-How-do-they-work\r\n\r\nIn the SourceCred data model, every spotlight is a node, with the following edge types:\r\n- 1 or more \"SHINES_ON\" edges, pointing to nodes that the spotlight flows cred to. (Syl, in our example)\r\n- 0 or more \"AUTHORS\" edges, pointing from the nodes that authored the spotlight. (Kaladin, in our example)\r\n- 0 or more \"ENDORSES\" edges, pointing from nodes that endorse the spotlight. (Kaladin, and other members of the team, in our example)\r\n\r\nThe spotlight will be more valuable the more it is endorsed (with classic PageRank semantics in that getting an endorsement from a low-cred node, or one that already has lots of endorsements, is not as valuable). Projects might choose to flow some cred to  the spotlights' authors as well.\r\n\r\nWhile spotlights often shine on users, they could shine on other nodes as well; for example, a spotlight might be used to draw attention to an important release or pull request.\r\n\r\nWe haven't yet decided how spotlight data entry will work. We've considered approaches like adding spotlights via writing GitHub issues, or by communicating with a bot, or by sending in a pull request or commit.\r\n\r\nthanks to @claireandcode and @wchargin for the idea of the spotlight plugin.","title":"Spotlight Plugin"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000517\u0000":{"address":{"type":"ISSUE","number":"517","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/517","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"cc @wchargin ","title":"`yarn test` should run all travis tests"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000534\u0000":{"address":{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/534","comments":[{"type":"COMMENT","id":"408313404","parent":{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408313431","parent":{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Here are some field notes documenting my observations regarding PageRank\r\nconvergence.\r\n","title":"PageRank convergence and performance notes"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000553\u0000":{"address":{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/553","comments":[{"type":"COMMENT","id":"409300378","parent":{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Our Webpack configuration has always been in a kind of messy state. The\r\nsystem created by `create-react-app` has a bunch of stuff that we don’t\r\nwant (e.g., service workers), and has more complexity than we need.\r\n\r\nIncremental changes have made the prod config draw from different\r\nsources of truth than the dev config, which is quite bad. There have\r\nrecently been multiple occasions in which this has posed a potential\r\nproblem (e.g., linking in a favicon and adding new CSS dependencies\r\nmight both appear to work in development but fail in production).\r\n\r\nWe should modify the prod and build systems to be (a) the same and\r\n(b) more sane.\r\n","title":"Make the build not bad"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000554\u0000":{"address":{"type":"ISSUE","number":"554","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/554","comments":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Some things that we would like to test:\r\n\r\n  - [ ] For each page (or a selected subset of pages), verify that `yarn\r\n        build` produces the appropriate output file\r\n  - [ ] Verify that external redirect pages have meta-refresh elements\r\n  - [ ] Run the deploy script with a local `DEPLOY_REMOTE` and verify\r\n        that the static site satisfies certain properties (e.g., has a\r\n        registry with the right data).\r\n","title":"Add end-to-end testing for the build and/or deploy process"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000561\u0000":{"address":{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/561","comments":[{"type":"COMMENT","id":"408990863","parent":{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"409043102","parent":{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Based on @claireandcode's work in #549 and #552, we think we want to import a React UI component library as it can make it easier to create a pretty, accessible, and consistent UI. Those PRs use semantic-ui-react and semantic-ui-css.\r\n\r\nHowever, @wchargin did some digging into those dependencies and had [some reservations], as they would significantly inflate our build.  Given that there are [many React UI toolkit options], I think it would be good to investigate a few for project fit before deciding which one to commit to.\r\n\r\n[some reservations]: https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408638061\r\n[many React UI toolkit options]: https://hackernoon.com/23-best-react-ui-component-libraries-and-frameworks-250a81b2ac42\r\n\r\nWe can use this issue to collect notes on different options we explore.","title":"Investigate React UI component libraries"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000576\u0000":{"address":{"type":"ISSUE","number":"576","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/576","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our cred explorer used to write the node and edge count near the top of the page. #575 removes this feature from the cred explorer, but I think it's still cool to have some way to see how big the graph is. However, I don't think it should be at the top of the page, nor in the cred explorer app - rather, I think the PagerankTable component should display this information someplace discoverable but subtle. (E.g.: a sub header of the table, or maybe a summary row at the bottom?)","title":"Add node and edge counts to PagerankTable"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000580\u0000":{"address":{"type":"ISSUE","number":"580","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/580","comments":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Our CLI is currently built using [OClif]. OClif really wants to be a\r\nframework, and really wants to own your whole application. We’re trying\r\nto just use OClif as a library, but we’re hitting some friction.\r\n\r\nFor instance, one thing that we’d like to be able to do is build the CLI\r\ninto a directory that is not `./bin/`. This way, (a) we can have a more\r\nportable CLI, and (b) in tests, we can build and use the CLI without\r\noverwriting whatever the user has in that directory. However, OClif\r\ndepends on reading your `package.json` at runtime, and expects each\r\nsubcommand to be located in the directory specified by the\r\n`.oclif.commands` key therein.\r\n\r\nWe chose OClif because (a) we thought that OClif would have a good\r\ntesting situation, and (b) we were disappointed with the quality of\r\nalternative libraries, especially `yargs`. But we have never been able\r\nto write tests for our OClif CLI, so property (a) didn’t hold, and while\r\nOClif is certainly more palatable than `yargs`, its parsing remains\r\ninsufficiently flexible to satisfy all of our wishes. (For instance, it\r\nis not possible to accept a variable number of values for an argument\r\nwhile also rejecting unknown options.)\r\n\r\nIf we can’t find a suitable command-line library for JavaScript, it\r\nwould not be at all bad to write a simple CLI without a framework. Then,\r\nwe can bundle it with Webpack, and everything will be happy. (I estimate\r\nthat this should take me about a day.)\r\n\r\n[OClif]: https://oclif.io/\r\n","title":"Consider replacing our CLI with something simpler"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000584\u0000":{"address":{"type":"ISSUE","number":"584","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/584","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think we should change the website / app so that instead of referring to the \"explorer\", we call it the \"prototype\". I think this will communicate a little more clearly the state of the project, and that people shouldn't take it too seriously just yet.","title":"Rename \"explorer\" to \"prototype\""},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000586\u0000":{"address":{"type":"ISSUE","number":"586","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/586","comments":[{"type":"COMMENT","id":"410047670","parent":{"type":"ISSUE","number":"586","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Combine \"Load Graph\" and \"Run Pagerank\" into one button"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000587\u0000":{"address":{"type":"ISSUE","number":"587","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/587","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We can save a redirect by hardlinking to https://discordapp.com/invite/tsBTgc9 rather than to sourcecred.io/discord-invite\r\n\r\n(We might want to factor that URL as a constant and use it in both the discord-invite and that link, in case we ever regenerate the invite? Not super important.)","title":"Add Discord logo / link  to the nav bar"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000588\u0000":{"address":{"type":"ISSUE","number":"588","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/588","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The sliders are a bit ugly right now, IMO.\r\n\r\nAlso, I think the range on weights is too high - I think limiting to +/- 5 would be sufficient. (+5 = 32x more important than default)","title":"Make explorer weight sliders prettier/nicer"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000589\u0000":{"address":{"type":"ISSUE","number":"589","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/589","comments":[{"type":"COMMENT","id":"410049757","parent":{"type":"ISSUE","number":"589","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, it can be difficult to tell what the type of a node in the cred explorer is. For example, issues and PRs are hard to distinguish, as they both start with a numbered prefix like `#32`. (They are distinguishable only because PRs also include diff stats.)\r\n\r\nI think we should add \"node type badges\" to every row. The badge can have an abbreviated type name, e.g. \"ISSUE\" or \"PULL\", and can also have a color assigned. The color would not be necessary for identifying what type it is (since the name is present), but would make it easier to scan the results.\r\n\r\nFor now we can hardcode the colors with the [plugin adapters](https://github.com/sourcecred/sourcecred/blob/master/src/plugins/github/pluginAdapter.js). It would probably be best to split this into two PRs, one which adds the badges and one which adds the colors, as  color choices are always an ample source of bikeshedding :) ","title":"Add node type badges to cred explorer"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000590\u0000":{"address":{"type":"ISSUE","number":"590","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/590","comments":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It's frustrating that the cred explorer shows GitHub entities without offering a link to them. We should add hyperlinks. We have urls available for every entity via the [relationalView](https://github.com/sourcecred/sourcecred/blob/master/src/plugins/github/relationalView.js#L540) so it shouldn't be hard to add this.\r\n\r\nA simple approach would be to just make the whole nodeDescription row into a hyperlink (when available). We can also hyperlink directly to any Git commit, but that isn't as important.","title":"Cred Explorer should hyperlink to GitHub entities"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000594\u0000":{"address":{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/594","comments":[{"type":"COMMENT","id":"410068117","parent":{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"410068494","parent":{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"The ensure-flow-typing test fails, but still is marked as a success within a local run of `yarn test`.\r\nThe issue seems twofold: \r\n* Incorrect syntax for grep within ensure-flow.sh (for a Mac)\r\n* Error messages not being piped appropriately --> silent failure","title":"Test: ensure-flow-typing silently failing for Mac"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000595\u0000":{"address":{"type":"ISSUE","number":"595","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/595","comments":[],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"As the project evolves, it is likely that the number of plugins will increase.\r\nSimilarly, a user may wish to weight different plugins relative to each other, e.g. all \"git\" nodes are weighted less heavily than all \"github\" nodes. \r\nTo start building the infrastructure to facilitate those changes, we want to separate the weight sliders by plugin, and also take advantage of the namespacing in the plugin adapter to provide better labelling, and thus a friendlier UI.\r\n\r\nCredit to @decentralion and @wchargin for architectural planning discussions.","title":"Separate Weight Sliders by Plugin, better namespacing"},"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000596\u0000":{"address":{"type":"ISSUE","number":"596","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/issues/596","comments":[],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"Separating the edge directionality from the edge weights creates confusion. Removing directionality as a separate category and instead incorporating it into the edge weights provides a clearer UI.","title":"Remove \"Edge directionality\" from Weight Sliders"}},"pulls":{"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00001\u0000":{"address":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/1","comments":[{"type":"COMMENT","id":"362935059","parent":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"93852769","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"93852802","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Initial draft of the README","mergedAs":{"type":"COMMIT","hash":"7dd9155833fe0717c51a36154c5635d4a4aa1689"},"additions":21,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00003\u0000":{"address":{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/3","comments":[{"type":"COMMENT","id":"362999588","parent":{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@000drax suggested in #2 using Ͼ as our unicode symbol.\r\nThis PR is an experiment in spelling Cred as Ͼred, so that it's really clear from context what Ͼ means.\r\n\r\nBut maybe it is too clever / kinda ugly / a pain in the ass to follow as possible since keyboards don't ship with Ͼ keys. Also, depending on the font my brain wants to read it as \"Gred\" :( \r\n\r\nAlso, it's bikeshedding. Don't take this too seriously, but tell me what you think :) \r\n","title":"s/Cred/Ͼred/","mergedAs":null,"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00004\u0000":{"address":{"type":"PULL","number":"4","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/4","comments":[{"type":"COMMENT","id":"363009716","parent":{"type":"PULL","number":"4","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Originally, I planned to keep the README very succinct, and put an overview of SourceCred into a separate overview document.\r\n\r\nThis PR contains a first draft of the overview, but it seemed short enough to include in the README directly. I welcome feedback on whether this is a good fit for the README, or if keeping a separate overview is a good idea.","title":"Add overview of cred to the README","mergedAs":null,"additions":5,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00005\u0000":{"address":{"type":"PULL","number":"5","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/5","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Enumerate design goals for SourceCred","mergedAs":{"type":"COMMIT","hash":"0874d89b31f90e44645e004125ef1b72d472f007"},"additions":28,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00006\u0000":{"address":{"type":"PULL","number":"6","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/6","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Add overview.md","mergedAs":{"type":"COMMIT","hash":"6bcc275c2d6bccd5bdb8ef269e6e6cfdf1de8fcf"},"additions":9,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00007\u0000":{"address":{"type":"PULL","number":"7","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/7","comments":[],"reviews":[{"type":"REVIEW","id":"94904456","pull":{"type":"PULL","number":"7","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Split out useful & ethical.","mergedAs":{"type":"COMMIT","hash":"84ad9d57bf6e80528d38949a58c63d636993419e"},"additions":11,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000":{"address":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/8","comments":[{"type":"COMMENT","id":"364720789","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"364852141","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366018915","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366105260","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97051530","pull":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is a minimal script that will crawl the file-reachable commits in a\r\nrepository and dump statistics to a JSON file that can be further\r\nanalyzed interactively on a frontend.\r\n\r\nRequires PyPI `gitpython` (and `matplotlib`, but this can be excised).\r\nRequires `jupyter` to run.\r\n\r\n(Mostly paired with @dandelionmane on 2018-02-08.)\r\n\r\nwchargin-branch: experiment-commit-traversal","title":"Check in experimental commit graph traversal","mergedAs":{"type":"COMMIT","hash":"03198b0c8691f7d5e117f1648ac76bc10c2ea89f"},"additions":368,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00009\u0000":{"address":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/9","comments":[{"type":"COMMENT","id":"364823581","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"364848295","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"364848905","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This is a work in progress. Currently trying to persuade Typescript to compile.","title":"[wip] Develop the explorer with Typescript","mergedAs":null,"additions":65643,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000":{"address":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/10","comments":[{"type":"COMMENT","id":"364851776","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366142038","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366142325","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366153399","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366361454","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sets up an initial cred explorer that looks at Git commit data\r\n\r\n- uses git commit data as generated by `experiments/01_commit_graph_dump.ipynb`\r\n- displays a file explorer, which lets you navigate the file tree by expanding/collapsing dirs, and select a path via double clicking (changes background color)\r\n- displays a user explorer, which shows a sorted list of authors and cred amounts for the selected file path\r\n\r\nThe commit-wrangling logic is in commitUtils.js and has typechecking (via flow) and some basic testing.\r\nThe frontend is built with react; setup was bootstrapped via create-react-app.\r\n\r\nTest plan:\r\n\r\n```\r\ncd explorer;\r\nyarn install; # get dependencies\r\nyarn flow; # check that types check out, then ctrl+c\r\nyarn test; # check that tests pass, then ctrl+c\r\nyarn start; # go to localhost:3000 and click around\r\n```\r\n\r\nexpected behavior: there's a file explorer that shows TensorBoard file structure on the left. you can click the buttons to explore directory, and you can click files to select that path. on the right, it shows you the users that contributed to that directory and their cred for those commits.\r\n\r\nnote: the ui is very crude.","title":"Initial version of the Cred Explorer","mergedAs":null,"additions":10491,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000012\u0000":{"address":{"type":"PULL","number":"12","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/12","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"commit_graph_dump is modified to use camelCase variables\r\nin the output data.json. Saved the data for TensorBoard\r\nin explorer/src/data.json, where it's useful for debugging\r\n/ iterating on the frontend.","title":"Tweak commit_graph_dump & store sample data.","mergedAs":{"type":"COMMIT","hash":"5b3b345630f42cf09c1751348940cf9202f5cc47"},"additions":30,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000013\u0000":{"address":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/13","comments":[],"reviews":[{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97336189","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97336599","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Initial infrastructure for sourcecred-explorer. \r\nSetup npm, yarn, flow, jest using scaffolding from\r\ncreate-react-app.\r\n\r\n- used create-react-app to get the basic pieces\r\n- added support for flow via instructions in the\r\ncreate-react-app user guide\r\n- added flow-typed so that flow+jest will work well","title":"Frontend setup","mergedAs":{"type":"COMMIT","hash":"91bdce2e5e4eddeb4a210137d20cfe14da407581"},"additions":7623,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000014\u0000":{"address":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/14","comments":[{"type":"COMMENT","id":"366164710","parent":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366171189","parent":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97346717","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97347081","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sets up an initial cred explorer that looks at Git commit data\r\n\r\n- uses git commit data as generated by `experiments/01_commit_graph_dump.ipynb`\r\n- displays a file explorer, which lets you navigate the file tree by expanding/collapsing dirs, and select a path via double clicking (changes background color)\r\n- displays a user explorer, which shows a sorted list of authors and cred amounts for the selected file path\r\n\r\nThe commit-wrangling logic is in commitUtils.js and has typechecking (via flow) and some basic testing.\r\nThe frontend is built with react; setup was bootstrapped via create-react-app.\r\n\r\nTest plan:\r\n\r\n```\r\ncd explorer;\r\nyarn install; # get dependencies\r\nyarn flow; # check that types check out\r\nyarn test; # check that tests pass, then `q`\r\nyarn start; # go to localhost:3000 and click around\r\n```\r\n\r\nexpected behavior: there's a file explorer that shows TensorBoard file structure on the left. you can click the buttons to explore directory, and you can click files to select that path. on the right, it shows you the users that contributed to that directory and their cred for those commits.\r\n\r\nnote: the ui is very crude.","title":"Initial prototype of the cred explorer","mergedAs":{"type":"COMMIT","hash":"22ddd15d780282e9cea0e9c77272308ec477ddc1"},"additions":363,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000015\u0000":{"address":{"type":"PULL","number":"15","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/15","comments":[],"reviews":[{"type":"REVIEW","id":"97354203","pull":{"type":"PULL","number":"15","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIt produces a lot of noise, and we know about it.\r\n\r\nwchargin-branch: remove-spurious-log","title":"Remove console.log that alerts us of hacks","mergedAs":{"type":"COMMIT","hash":"011e9a755befa499a1e2e254379f5b261bc5305c"},"additions":0,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000016\u0000":{"address":{"type":"PULL","number":"16","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/16","comments":[],"reviews":[{"type":"REVIEW","id":"97354603","pull":{"type":"PULL","number":"16","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis should ensure that there aren’t any runtime PropTypes errors.\r\n\r\nThe change to reimplement `Object.entries` is due to the fact that my\r\nlocal Node environment (v6.11.1) does not yet support that ESnext\r\nfunction.\r\n\r\nTest Plan:\r\nRun `yarn start` and note that the app runs without any console\r\nwarnings, but that changing some of the PropTypes to introduce an error\r\nactually does cause a warning.\r\n\r\nApply the following diff (`git apply`):\r\n```diff\r\ndiff --git a/explorer/src/UserExplorer.js b/explorer/src/UserExplorer.js\r\nindex 8da252d..cdc1370 100644\r\n--- a/explorer/src/UserExplorer.js\r\n+++ b/explorer/src/UserExplorer.js\r\n@@ -10,7 +10,7 @@ export class UserExplorer extends Component {\r\n   static propTypes = {\r\n     selectedPath: PropTypes.string.isRequired,\r\n     selectedUser: PropTypes.string,\r\n-    onSelectUser: PropTypes.func.isRequired,\r\n+    onSelectUser: PropTypes.number.isRequired,\r\n     data: commitUtilsPropTypes.commitData.isRequired,\r\n   }\r\n```\r\nThen, `yarn test` should fail. Revert the diff, and `yarn test` should\r\npass.\r\n\r\nwchargin-branch: react-proptypes-test","title":" Add PropTypes to existing React components","mergedAs":{"type":"COMMIT","hash":"c1b37fa729a8d3802fe2c3a4ee4923e958ac4f8d"},"additions":74,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000":{"address":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/18","comments":[{"type":"COMMENT","id":"366454409","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366474934","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366478299","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366490768","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366504544","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97387466","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"97392287","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I followed the setup instructions in the [create-react-app user guide](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#formatting-code-automatically). The formatter runs as a git commit hook.\r\n\r\n I made one change, which is to prefer double rather than single quotes.\r\n\r\nI also ran the formatter for all our existing source files, except for src/data.json.\r\n","title":"Set up prettier as an autoformatter","mergedAs":{"type":"COMMIT","hash":"167289a75a7dfbba9a1bce1124e80c6ddee0716f"},"additions":338,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000019\u0000":{"address":{"type":"PULL","number":"19","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/19","comments":[],"reviews":[{"type":"REVIEW","id":"97383023","pull":{"type":"PULL","number":"19","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit was created by performing the following steps:\r\n  - `rm -r node_modules`\r\n  - `yarn install`\r\n  - `yarn eject`\r\n  - `rm -r node_modules\r\n  - `yarn install`\r\non an environment wit Node v6.11.1.\r\n\r\nThe final `rm -r node_modules && yarn install` ensures that the\r\n`yarn.lock` file is updated accordingly.\r\n\r\nTest Plan:\r\n`yarn test`, `yarn flow`, and `yarn start` all still do the right thing.\r\n\r\nwchargin-branch: eject","title":"Eject from create-react-app","mergedAs":{"type":"COMMIT","hash":"ee59eb9b3011e951cd67e23a67efe98d866098f0"},"additions":1263,"deletions":58},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000020\u0000":{"address":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/20","comments":[{"type":"COMMENT","id":"366551596","parent":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97383098","pull":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSee discussion on #17.\r\n\r\nThis commit uses the `babel-plugin-flow-react-proptypes` package to\r\nautomatically create PropType definitions from components that are typed\r\nwith Flow. It simultaneously updates all of our existing components to\r\nbe typed with Flow. As a result, we have both static and dynamic type\r\nchecking.\r\n\r\nTest Plan:\r\nNote that `yarn test` and `yarn flow` report no errors, and that there\r\nare no prop validation errors at runtime with `yarn start`.\r\n\r\nThen, apply the following patch:\r\n```diff\r\ndiff --git a/explorer/src/UserExplorer.js b/explorer/src/UserExplorer.js\r\nindex bb574cd..636a10d 100644\r\n--- a/explorer/src/UserExplorer.js\r\n+++ b/explorer/src/UserExplorer.js\r\n@@ -18,7 +18,7 @@ export class UserExplorer extends Component<{\r\n         .sort((a,b) => b[1] - a[1]);\r\n     const entries = sortedUserWeightTuples.map(authorWeight => {\r\n       const [author, weight] = authorWeight;\r\n-      return <UserEntry userId={author} weight={weight} key={author}/>\r\n+      return <UserEntry userId={55} weight={weight} key={author}/>\r\n     });\r\n     return <div className=\"user-explorer\">\r\n       <h3> User Explorer </h3>\r\n```\r\nNote that `yarn test` fails (the `App.test.js` E2E rendering test),\r\n`yarn flow` fails, and there is a runtime prop validation error.\r\n\r\nwchargin-branch: autogenerate-proptypes","title":"Autogenerate PropTypes from Flow types","mergedAs":{"type":"COMMIT","hash":"5744d3c8600f7ac546a6041f9328b90b92d11531"},"additions":57,"deletions":65},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000021\u0000":{"address":{"type":"PULL","number":"21","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/21","comments":[],"reviews":[{"type":"REVIEW","id":"97393894","pull":{"type":"PULL","number":"21","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Make a number of cleanups to the UI, such as:\r\n- Using font roboto\r\n- Changing the title to \"SourceCred Explorer\"\r\n- Adding a grid gap\r\n- Applying consistent styling to the two plugin panels\r\n- Making a blue header, grey background, and white plugin panes.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/1400023/36349157-44d4bf58-1435-11e8-8139-b588d2fb0bf5.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/1400023/36349152-295faa9e-1435-11e8-9c6c-d61f7061d857.png)\r\n\r\nI tried to move styling away from the CSS files and into inline styles, but we don't yet have a style reuse abstraction, so the reusable styles I put in CSS.","title":"Frontend visual cleanup","mergedAs":{"type":"COMMIT","hash":"de359dbaa4293be6475b78b2f05c29e542ced62c"},"additions":46,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000022\u0000":{"address":{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/22","comments":[],"reviews":[{"type":"REVIEW","id":"97407868","pull":{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I really like what it does to our React code :)\r\nPlease merge this if it looks good to you. ","title":"Run `yarn prettify` for the first time.`","mergedAs":{"type":"COMMIT","hash":"b367da8568f1a6f8485c7cc00b7372f8d4aeeac3"},"additions":418,"deletions":410},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000027\u0000":{"address":{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/27","comments":[{"type":"COMMENT","id":"366552712","parent":{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97418427","pull":{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nGenerated: `yarn add --dev babel-plugin-flow-react-proptypes@^18.0.0`.\r\n\r\nThis pulls in brigand/babel-plugin-flow-react-proptypes#182 and\r\nbrigand/babel-plugin-flow-react-proptypes#184, both of which affect this\r\nproject.\r\n\r\nwchargin-branch: upgrade-flow-proptypes-18.0.0","title":"Upgrade: babel-plugin-flow-react-proptypes@^18.0.0","mergedAs":{"type":"COMMIT","hash":"32220148c08d88f6a35e29f7e168b6f59b532e25"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000028\u0000":{"address":{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/28","comments":[{"type":"COMMENT","id":"387948937","parent":{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"97418519","pull":{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe resulting types less logically structured (as discussed), but while\r\nFlow considers them equivalent, the linter does not—and, more\r\nimportantly, the runtime `PropTypes` are not generated correctly when\r\nforward-uses are in play, due to the following issue:\r\n\r\nhttps://github.com/brigand/babel-plugin-flow-react-proptypes/issues/185\r\n\r\nI _think_ this is the lesser of two evils—but am happy to be convinced\r\notherwise.\r\n\r\nTest Plan:\r\nNote that `yarn flow` and `yarn test` are both fine, and `yarn start`\r\nhas no lint errors or runtime errors. Note further that when reverting\r\n`insertions → added` and `deletions → deleted`, there are prop-type\r\nerrors in both `yarn test` and `yarn start`. (Without the permutation of\r\nthe types, this does not occur.)\r\n\r\nwchargin-branch: avoid-forward-references","title":"Avoid forward references in `commitUtils` types","mergedAs":{"type":"COMMIT","hash":"0d38dde23a6de831315f3643a7d2bc15e8df7678"},"additions":8,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000030\u0000":{"address":{"type":"PULL","number":"30","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/30","comments":[],"reviews":[{"type":"REVIEW","id":"99432888","pull":{"type":"PULL","number":"30","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sets up package.json, .gitignore, and adds octokit/rest.js as a dependency.","title":"Initial commit of the backend project.","mergedAs":{"type":"COMMIT","hash":"4dbb5cd21a7c14196a3be59ef083c3a4aa22bf0c"},"additions":82,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000031\u0000":{"address":{"type":"PULL","number":"31","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/31","comments":[],"reviews":[{"type":"REVIEW","id":"99527023","pull":{"type":"PULL","number":"31","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This reflects our current vision that SourceCred is aimed at valuing open-source contributions via a credit graph, not on directly creating cryptotokens","title":"Update README.md","mergedAs":{"type":"COMMIT","hash":"d41872b7b7fb3c3af82df156ac1244bf3fa3e1ce"},"additions":3,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000032\u0000":{"address":{"type":"PULL","number":"32","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/32","comments":[],"reviews":[{"type":"REVIEW","id":"99522494","pull":{"type":"PULL","number":"32","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Paired with @wchargin ","title":"Setup flow for backend.","mergedAs":{"type":"COMMIT","hash":"5f55804677413181c63bac08d6f8d6afb639b5c1"},"additions":23,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000033\u0000":{"address":{"type":"PULL","number":"33","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/33","comments":[],"reviews":[{"type":"REVIEW","id":"99522999","pull":{"type":"PULL","number":"33","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFollows the lead of #18.\r\n\r\nTest Plan:\r\nVerify that non-pretty files abort the commit:\r\n```shell\r\n$ echo 'const x = 1  +  1;' >foo.js\r\n$ git add foo.js\r\n$ git commit -m yikes\r\nhusky > npm run -s precommit (node v8.9.4)\r\n\r\n ❯ Running tasks for **/*.js\r\n   ✖ prettier --list-different\r\n     → foo.js\r\n✖ prettier --list-different found some errors. Please fix them and try committing again.\r\nfoo.js\r\n\r\nhusky > pre-commit hook failed (add --no-verify to bypass)\r\n```\r\n\r\nwchargin-branch: backend-prettier","title":"Add prettier to backend","mergedAs":{"type":"COMMIT","hash":"d48e8e7f26364d18b1c8ab58ed53fb71c1ff4708"},"additions":2151,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000034\u0000":{"address":{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/34","comments":[],"reviews":[{"type":"REVIEW","id":"99524696","pull":{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Paired with @wchargin \r\n\r\nBased on discussion at https://github.com/sourcecred/sourcecred/issues/29","title":"Add initial graph data types","mergedAs":{"type":"COMMIT","hash":"2c083425fb778c65142d5fce765a2bdc9847f861"},"additions":26,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000035\u0000":{"address":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/35","comments":[],"reviews":[{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"99527140","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Paired with @wchargin \r\n\r\nBased on discussion at https://github.com/sourcecred/sourcecred/issues/29","title":"Add types for GitHub plugin.","mergedAs":{"type":"COMMIT","hash":"9878313ef3e39d5d758ec8e21899d48578426e6f"},"additions":43,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000036\u0000":{"address":{"type":"PULL","number":"36","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/36","comments":[],"reviews":[{"type":"REVIEW","id":"99528285","pull":{"type":"PULL","number":"36","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis tool grabs all the information that we think will be relevant for a\r\nfirst-pass implementation of the SourceCred project graph. It includes a\r\ntool to save the results to disk so that we avoid needlessly hitting the\r\nGitHub API over and over.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nThe API doesn’t have tests, because we didn’t think that they would\r\nprovide much marginal value. But here’s how you invoke it:\r\n\r\n    node bin/fetchAndPrintGitHubRepo.js sourcecred sourcecred \"${TOKEN}\" >/tmp/out\r\n\r\nto crawl the repository `sourcecred/sourcecred` with the given API\r\ntoken.\r\n\r\nwchargin-branch: grab-github-data","title":"Create script to scrape data from GitHub repos","mergedAs":{"type":"COMMIT","hash":"c5be6eceda9d695e3cb3fc47f76a9bc85ed1995b"},"additions":180,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000037\u0000":{"address":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/37","comments":[{"type":"COMMENT","id":"368762073","parent":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368762234","parent":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"99570687","pull":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Reorganize the code so that we have a single package.json file, which is at the root.\r\nAll source code now lives under `src`, separated into `src/backend` and `src/explorer`.\r\n\r\nTest plan:\r\n\r\n- run `yarn start` - it works\r\n- run `yarn test` - it finds the tests (all in src/explorer) and they pass\r\n- run `yarn flow` - it works. (tested with an error, that works too)\r\n- run `yarn prettify` - it finds all the js files and writes to them","title":"Move package json to root","mergedAs":{"type":"COMMIT","hash":"bc2377448fdeedfbc759b7888ec6d5bad8ff3d9d"},"additions":30,"deletions":2245},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000038\u0000":{"address":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/38","comments":[{"type":"COMMENT","id":"368766345","parent":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"99573196","pull":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"99574418","pull":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn test` and note that tests pass.\r\n\r\nwchargin-branch: id-conversion","title":"Add conversion functions for id","mergedAs":{"type":"COMMIT","hash":"791cad90599b417d167e51442c898c89d935f7b1"},"additions":105,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000043\u0000":{"address":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/43","comments":[],"reviews":[{"type":"REVIEW","id":"100294536","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"100295046","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Paired with @wchargin ","title":"Small graph improvements","mergedAs":{"type":"COMMIT","hash":"9dc9d5e4f39668c597a7abd2f9fcf6709934d8b2"},"additions":59,"deletions":58},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000044\u0000":{"address":{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/44","comments":[{"type":"COMMENT","id":"369471732","parent":{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"100315131","pull":{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe sourcecred/tiny-example-repository repository stores some example\r\ndata that we can use to generate test cases. As of now, the repository\r\nhas been archived so that its state is stable. This commit checks in the\r\nresult of our scraper on the repository.\r\n\r\nwchargin-branch: example-data","title":"Add tiny-example-repository example data","mergedAs":{"type":"COMMIT","hash":"01df727c3934cba79746f211b82ba6070063f072"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000045\u0000":{"address":{"type":"PULL","number":"45","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/45","comments":[],"reviews":[{"type":"REVIEW","id":"100315613","pull":{"type":"PULL","number":"45","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"design.md and overview.md both describe a vision of sourcecred\r\nin which it is a measure of credit, and an explicit cryptographic\r\ntoken. right now, SourceCred is more focused on just measuring credit,\r\nwith the expectation that cryptoincentives can be added on later.\r\n\r\nRemoving these outdated documents will reduce confusion; they may\r\nbe re-written and re-added later.","title":"Remove outdated design documents","mergedAs":{"type":"COMMIT","hash":"cde98cd67b83278046e6e3ffe7f8c7df782ded3e"},"additions":0,"deletions":40},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000046\u0000":{"address":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/46","comments":[{"type":"COMMENT","id":"369514504","parent":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"100347073","pull":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe “ID” parts were left-over from the Great Address Migration, and we\r\nthink that abbreviations are fine here, anyway.\r\n\r\nTest Plan:\r\n`yarn flow && yarn test`\r\n\r\n(Edit to add: Paired with @dandelionmane .)\r\n\r\nwchargin-branch: src-dst-rename","title":"Rename `sourceId`/`destId` to `src`/`dst`","mergedAs":{"type":"COMMIT","hash":"43450f18b1fc9061843015bbc74fbb8b3b3e255f"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000047\u0000":{"address":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/47","comments":[{"type":"COMMENT","id":"369541856","parent":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369716401","parent":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"100350816","pull":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is an experiment. There are a couple diffferent meanings of\r\n“weight” in play: most prominently, weights assigned by plugins versus\r\nthose suitable for comparison among other arbitrary weights. We’re not\r\nsure what the right thing is to put in the actual graph object, so we’re\r\ngoing to think about this a bit more before adding the field back in.\r\n\r\n(Edit to add: Paired with @dandelionmane .)\r\n\r\nwchargin-branch: remove-weights","title":"Remove weights from the weighted graph","mergedAs":{"type":"COMMIT","hash":"66243a16c1ad5c843e0e6e3a06e9140c7c552090"},"additions":0,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000048\u0000":{"address":{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/48","comments":[{"type":"COMMENT","id":"369518298","parent":{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"100351273","pull":{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe main problem with having these fields on the node is that this\r\npresents the illusion that the API surface area is larger than it\r\nactually is. Clients with reference to a node object could\r\nsomewhat-reasonably expect that mutating these fields would be\r\nsufficient to update the structure of the graph, but this isn’t the case\r\n(as the edge objects would need to be updated, too). It’s a nice\r\nsemantic bonus, too, as edges aren’t conceptually “part of” nodes.\r\n\r\n(Edit to add: Paired with @dandelionmane .)\r\n\r\nwchargin-branch: top-level-edges","title":"Pull in-edges and out-edges up to top-level graph","mergedAs":{"type":"COMMIT","hash":"f5d486087dfa6cd0ca89e09e41386b044e09d91d"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000049\u0000":{"address":{"type":"PULL","number":"49","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/49","comments":[],"reviews":[{"type":"REVIEW","id":"100352972","pull":{"type":"PULL","number":"49","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe had planned to expose our core types as simple Plain Old JavaScript\r\nObjects, with accompanying standalone functions to act directly on these\r\ndata structures. We chose this instead of creating `class`es for the\r\ntypes because it simplifies serialization interop: it obviates the need\r\nfor serialization and deserialization functions, because the code is\r\nseparated from the data entirely. Reconsidering, we now think that the\r\nconvenience benefits of using classes probably outweigh these\r\nserialization cons. Furthermore, this design enables us to separate\r\nancillary data structures and caches from the raw data, presenting a\r\ncleaner API for consumers of the data.\r\n\r\nThis commit introduces a `Graph` class and some related logic. With lots\r\nof tests! And 100% code coverage! :-)\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nRun `yarn flow && yarn test` to see the new tests.\r\n\r\nwchargin-branch: graph-class","title":"Promote `Graph` to a class with useful methods","mergedAs":{"type":"COMMIT","hash":"09156bf3f491e51f1e01af6f89d09284e6df1cb6"},"additions":418,"deletions":59},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000051\u0000":{"address":{"type":"PULL","number":"51","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/51","comments":[],"reviews":[{"type":"REVIEW","id":"100882160","pull":{"type":"PULL","number":"51","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’ve realized that `u: Edge<T>` implies `u: Node<T>`. That certainly\r\nwasn’t what we were expecting! We might want something like that\r\neventually, to capture the fact that valuations are themselves valuable,\r\nbut for now the type system should encode the assumptions that we’re\r\nactually making. See also #50.\r\n\r\nPaired with @dandelionmane.\r\n\r\nwchargin-branch: exact-types","title":"Make node and edge types exact","mergedAs":{"type":"COMMIT","hash":"01510ca63f511335b4125bb5d1f414bcc3a9687d"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000052\u0000":{"address":{"type":"PULL","number":"52","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/52","comments":[],"reviews":[{"type":"REVIEW","id":"100887019","pull":{"type":"PULL","number":"52","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Add \"license\" field to package.json","mergedAs":{"type":"COMMIT","hash":"d26b264e8d5b33f7ee1001638e49989c2b9c8c34"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000053\u0000":{"address":{"type":"PULL","number":"53","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/53","comments":[],"reviews":[{"type":"REVIEW","id":"100887852","pull":{"type":"PULL","number":"53","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWithout these functions, it is not possible to meaningfully operate on\r\nan arbitrary graph.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nNew unit tests included. Run `yarn flow && yarn test`.\r\n\r\nwchargin-branch: get-all","title":"Add `getAllNodes` and `getAllEdges` functions","mergedAs":{"type":"COMMIT","hash":"cae3a92dc970c17f46d4c9df40d4d9c212f65b6c"},"additions":49,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000054\u0000":{"address":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/54","comments":[],"reviews":[{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"100923650","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The advancedMealGraph will be a grab-all that holds all advanced and\r\nedge behaviors, e.g. the crab-self-referential loop, and the case\r\nwhere there are multiple directed edges between the same two nodes.\r\n\r\nAggregating them into one test case will make it easier to test more\r\ncomplex behaviors, like graph merging and serialization, on the\r\nedge case graphs. However, it's still nice to have the simple graph\r\nso that we can test simple things too. The specific tests for edge\r\ncase behavior are left mostly unchanged, in that they start from the\r\nsimple graph and add just the advanced feature that they want to test.","title":"Create an 'advancedMealGraph' test case","mergedAs":{"type":"COMMIT","hash":"ca3502009be957bbb0d7f4f4cd9d47d054bdedb2"},"additions":88,"deletions":46},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000055\u0000":{"address":{"type":"PULL","number":"55","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/55","comments":[],"reviews":[{"type":"REVIEW","id":"100924099","pull":{"type":"PULL","number":"55","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese will make nicer error functions in cases where static analysis\r\ndoesn’t detect the pollution: e.g., a user isn’t using Flow, or an\r\nexpression like `arr[0]` introduces an `undefined`.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nNew unit tests added. Run `yarn test`.\r\n\r\nwchargin-branch: null-undefined-check","title":"Check for `null`/`undefined` in graph functions","mergedAs":{"type":"COMMIT","hash":"f305a48391acbff29ca1cd2786e67c7fef6626e4"},"additions":57,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000056\u0000":{"address":{"type":"PULL","number":"56","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/56","comments":[],"reviews":[{"type":"REVIEW","id":"100924682","pull":{"type":"PULL","number":"56","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nAgain: we assume these invariants, so we may as well encode them.\r\nWe should just keep in mind that non-Flow users may wantonly violate\r\nthese, so we should still code defensively.\r\n\r\nwchargin-branch: readonly-exact","title":"Make `Address`, `Node`, `Edge` read-only and exact","mergedAs":{"type":"COMMIT","hash":"97446138ab6b8c926fcb29b3737e1d7295c59bcf"},"additions":13,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000057\u0000":{"address":{"type":"PULL","number":"57","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/57","comments":[],"reviews":[{"type":"REVIEW","id":"100931196","pull":{"type":"PULL","number":"57","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn merging #54, there was a semantic merge conflict that was not also a\r\ntextual merge conflict; this created a failure that only appeared once\r\nthat commit was merged.\r\n\r\nWe propose that to fix this in the future, we only merge commits that\r\nare directly ahead of master.\r\n\r\nTest Plan:\r\nThis fixes `yarn flow` and `yarn test`.\r\n\r\nwchargin-branch: fix-merge-conflict","title":"Replace lingering `mealGraph`s in test case","mergedAs":{"type":"COMMIT","hash":"58410c62fadd58d863782be54b02329554427715"},"additions":4,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000058\u0000":{"address":{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/58","comments":[],"reviews":[{"type":"REVIEW","id":"100935950","pull":{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Observe that it passed on this commit, but failed builds [#2: Break Tests][2], [#3: Break Flow][3], and [#4: Break Prettier][4]. \r\n\r\nClose #23 \r\n\r\n[2]: https://travis-ci.org/sourcecred/sourcecred/builds/348453195\r\n[3]: https://travis-ci.org/sourcecred/sourcecred/builds/348454983\r\n[4]: https://travis-ci.org/sourcecred/sourcecred/builds/348455387","title":"Setup travis CI testing","mergedAs":{"type":"COMMIT","hash":"6ecf282956a995aa979a7754876d7b22fd99a127"},"additions":7,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000059\u0000":{"address":{"type":"PULL","number":"59","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/59","comments":[],"reviews":[{"type":"REVIEW","id":"100941267","pull":{"type":"PULL","number":"59","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"","title":"Add Travis badge to README","mergedAs":{"type":"COMMIT","hash":"2e5bea2f5e5c77e30f963dd4a725dba29693f0e3"},"additions":2,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000060\u0000":{"address":{"type":"PULL","number":"60","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/60","comments":[],"reviews":[{"type":"REVIEW","id":"100964401","pull":{"type":"PULL","number":"60","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nNothing big; these were just organized wrong.\r\n\r\nwchargin-branch: test-reorg","title":"Move `addNode`/`addEdge` tests away from getters","mergedAs":{"type":"COMMIT","hash":"5a2380d486e78f5c0ff0e5b66ecc46f19c553bfd"},"additions":23,"deletions":21},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000061\u0000":{"address":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/61","comments":[],"reviews":[{"type":"REVIEW","id":"100964577","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"100964681","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"100964742","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe need this for testing graph equality: deep-equality is not sufficient\r\nbecause two graphs can be logically equal even if, say, two nodes are\r\nadded in different orders.\r\n\r\nThis commit adds a dependency on `lodash.isequal` for deep equality.\r\n\r\nTest Plan:\r\nNew unit tests added. Run `yarn flow && yarn test`.\r\n\r\nwchargin-branch: graph-equals","title":"Add an equality function for `Graph`","mergedAs":{"type":"COMMIT","hash":"82dbf64a2c156425a7801420e4c76e907e8cf7c4"},"additions":53,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000062\u0000":{"address":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/62","comments":[],"reviews":[{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"100965650","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nMerging graphs will be a common operation. At a per-plugin level, it\r\nwill often be useful to build up graphs by creating many very small\r\ngraphs and then merging them together. At a cross-project level, we will\r\nneed to merge graphs across repositories to gain an understanding of how\r\nvalue flows among these repositories. It’s important that the core graph\r\ntype provide useful functions for merging; this commit adds them.\r\n\r\nTest Plan:\r\nNew unit tests added; run `yarn flow && yarn test`.\r\n\r\nwchargin-branch: graph-merge","title":"Add graph merge functions","mergedAs":{"type":"COMMIT","hash":"9b203e8489093a73b432447ad41fe9b95212d3a8"},"additions":207,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000063\u0000":{"address":{"type":"PULL","number":"63","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/63","comments":[],"reviews":[{"type":"REVIEW","id":"100989447","pull":{"type":"PULL","number":"63","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\n`graph.js` coverage is now 100% :-)\r\n\r\nTest Plan:\r\n`yarn jest --env=jsdom --coverage` shows no uncovered lines for\r\n`graph.js`, and no failing tests.\r\n\r\nwchargin-branch: coverage-gremlin","title":"Explicitly test address↔string function error case","mergedAs":{"type":"COMMIT","hash":"50c575b2f9cb3eb67316d35b5b04bc514f3726c5"},"additions":18,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000064\u0000":{"address":{"type":"PULL","number":"64","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/64","comments":[],"reviews":[{"type":"REVIEW","id":"100989430","pull":{"type":"PULL","number":"64","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’re stripping down the payload types for the GitHub plugin, to only\r\ninclude what we expect to use immediately. In doing so, we take the\r\nopportunity to make the typing a little stronger, so that we can ensure\r\nthat the `type` field of a specific type of payload is set to a\r\nparticular constant.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nAdding these lines to `githubPlugin.js` and running `yarn flow`\r\nindicates that the typechecking is working as expected:\r\n```js\r\n(\"ISSUE\" : NodeType);       // works\r\n(\"WEIRD\" : NodeType);       // fails\r\n(\"AUTHORSHIP\" : EdgeType);  // works\r\n(\"UNEXPECTED\" : EdgeType);  // fails\r\n```\r\n\r\nwchargin-branch: github-plugin-payload-types","title":"Rewrite GitHub plugin payload type system","mergedAs":{"type":"COMMIT","hash":"a798f9bac23014cd3a9c78a19685dbef86f977d4"},"additions":39,"deletions":39},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000067\u0000":{"address":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/67","comments":[],"reviews":[{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"101374589","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"101376475","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"101378561","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit reifies the concept of an `Addressable`, which is any object\r\nthat has a covariant `address: Address` attribute, and implements a\r\nsimple data structure for storing addressable items keyed against their\r\naddresses. Instances of `AddressMap` can replace the four fields of\r\n`Graph`:\r\n```js\r\n_nodes: AddressMap<Node<mixed>>;\r\n_edges: AddressMap<Edge<mixed>>;\r\n_outEdges: AddressMap<{|+address: Address, +edges: Address[]|}>;\r\n_inEdges: AddressMap<{|+address: Address, +edges: Address[]|}>;\r\n```\r\n\r\nSee discussion at #65.\r\n\r\nTest Plan:\r\nNew unit tests included, with 100% coverage: `yarn flow && yarn test`.\r\n\r\nwchargin-branch: address-map","title":"Create an `AddressMap` abstraction","mergedAs":{"type":"COMMIT","hash":"a8da44c94b2e36fed3464b094d69b229bd3d4350"},"additions":280,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000068\u0000":{"address":{"type":"PULL","number":"68","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/68","comments":[],"reviews":[{"type":"REVIEW","id":"101374323","pull":{"type":"PULL","number":"68","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit simplifies the implementation of `Graph` without changing\r\nits interface. We now use the `AddressMap` for all four instance fields\r\nof `Graph`.\r\n\r\nTest Plan:\r\nAll existing tests pass, and coverage is maintained.\r\n\r\nwchargin-branch: use-address-map-in-graph","title":"Use `AddressMap` in `Graph`","mergedAs":{"type":"COMMIT","hash":"cee90fd10f13633ef970fdab7265785ee0c5225b"},"additions":35,"deletions":178},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000069\u0000":{"address":{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/69","comments":[],"reviews":[{"type":"REVIEW","id":"101374848","pull":{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit adds `toJSON()` and `static fromJSON()` on `Graph`. The main\r\nbenefit at this time is that this gets us free interoperability with\r\nJest’s snapshot testing.\r\n\r\nThe implementation of `fromJSON` is not performance-tuned, and could\r\nprobably be significantly optimized.\r\n\r\nSee #65 for discussion.\r\n\r\nTest Plan:\r\nNew unit tests added: `yarn flow && yarn test`.\r\n\r\nwchargin-branch: make-graph-serializable","title":"Make `Graph` serializable","mergedAs":{"type":"COMMIT","hash":"5960eab6c1967ee92ad0de771f76739f6e34dc76"},"additions":205,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000070\u0000":{"address":{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/70","comments":[],"reviews":[{"type":"REVIEW","id":"101405091","pull":{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We make a very basic skeleton for the Graph Explorer as a basis\r\nfor future development.\r\n\r\nThis commit also removes the UserExplorer and FileExplorer from\r\nApp.js. Since we have changed the underlying data model, we are\r\nunlikely to use the UserExplorer or FileExplorer in anything like\r\ntheir current state, so they are effectively deprecated. I am deferring\r\nremoving them entirely because it is nice to have some examples of working\r\nReact code to copy from, before the Graph Explorer is ready.\r\n\r\nTest plan: run `yarn start`, and observe that the App displays the\r\nwords \"Graph Explorer\" underneath the \"SourceCred Explorer\" title bar.","title":"Make App.js into skeleton for GraphExplorer","mergedAs":{"type":"COMMIT","hash":"7ea8bdd964dff9719ccd899af23e40cfdbcdb117"},"additions":24,"deletions":25},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000071\u0000":{"address":{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/71","comments":[],"reviews":[{"type":"REVIEW","id":"101404772","pull":{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It would be helpful to make our standard tiny graph available to other\r\ntest and demo instances, outside of just graph.test.js. This way we can\r\nuse it as a test case for the Graph Explorer.","title":"Factor eventide graph demo data to a new module","mergedAs":{"type":"COMMIT","hash":"fb00c358236c43a4dd1092d273f66a0827036fc0"},"additions":275,"deletions":230},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000075\u0000":{"address":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/75","comments":[],"reviews":[{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"104352639","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"104352712","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"104352770","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"104352799","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"104393600","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIt’s a whole new world of GraphQL! Our parser is now just a GraphQL\r\nquery that asks for exactly what we want and dumps it to a file. The\r\ndata exposed by the v4 API is also in a much nicer format than that of\r\nthe v3 API, so this is pretty much a universal improvement.\r\n\r\nCurrently, we do not handle pagination. We require that the repository\r\nin question have fewer than a fixed number of issues, and comments per\r\nissue, and reviews per PR, and review comments per PR, and so on. If\r\nthis limit is exceeded, the script will fail-fast with a nice error\r\nmessage. To fix this, we’ll need to write a general-purpose pagination\r\nAPI that allows traversing cursors at any level of the query.\r\n\r\nPaired with @wchargin.\r\n\r\nTest Plan:\r\nRun\r\n\r\n    $ GITHUB_TOKEN=\"your_token_here\" src/backend/fetchGitHubRepoTest.sh\r\n\r\nand verify that it exits with 0. Note that if you change this script’s\r\nrepository from `tiny-example-repository` to `sourcecred`, the script\r\ncorrectly fails and outputs a useful diff.\r\n\r\nwchargin-branch: github-v4-graphql","title":"Fetch GitHub repos using the GitHub v4 API","mergedAs":{"type":"COMMIT","hash":"0e57b420952d74c8a2d52fdf51c6e3518dbb05aa"},"additions":367,"deletions":141},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000":{"address":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/77","comments":[{"type":"COMMENT","id":"373536707","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373586318","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373587825","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373612675","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373897717","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373900433","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374072125","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374106664","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSee motivation in #76. Feel free to look at the new snapshot file to\r\ninspect the structured representation and also the stringified output.\r\n\r\nThis implementation is sufficient to encode our query against the\r\nGitHub v4 API; see the test plan below.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn flow && yarn test`.\r\n\r\nThis code has full coverage except for lines 247, 302, and 363 of\r\n`queries.js`; these lines check invariants that should never be\r\nviolated.\r\n\r\nYou can also use the following steps to verify that the sample query is\r\nvalid GraphQL that produces the same results as our hand-written query:\r\n\r\n 1. Apply the following hacky patch:\r\n\r\n    ```diff\r\n    diff --git a/src/backend/graphql/queries.test.js b/src/backend/graphql/queries.test.js\r\n    index 52bdec7..c04a636 100644\r\n    --- a/src/backend/graphql/queries.test.js\r\n    +++ b/src/backend/graphql/queries.test.js\r\n    @@ -3,6 +3,18 @@\r\n     import type {Body} from \"./queries\";\r\n     import {build, stringify, multilineLayout, inlineLayout} from \"./queries\";\r\n\r\n    +function emitGitHubQuery(layout, filename) {\r\n    +  const fs = require(\"fs\");\r\n    +  const path = require(\"path\");\r\n    +  const result = stringify.body(usefulQuery(), layout);\r\n    +  const outputFilepath = path.join(__dirname, \"..\", filename);\r\n    +  const outputText = `module.exports = ${JSON.stringify(result)};\\n`;\r\n    +  fs.writeFileSync(outputFilepath, outputText);\r\n    +  console.log(`Wrote output to ${outputFilepath}.`);\r\n    +}\r\n    +emitGitHubQuery(multilineLayout(\"  \"), \"githubQueryMultiline.js\");\r\n    +emitGitHubQuery(inlineLayout(), \"githubQueryInline.js\");\r\n    +\r\n     describe(\"queries\", () => {\r\n       describe(\"end-to-end-test cases\", () => {\r\n         const testCases = {\r\n    ```\r\n\r\n 2. Run `CI=true yarn test`, and verify that the following two files\r\n    written to `src/backend/` contain appropriate contents. You can just\r\n    eyeball them, or check that they match my results:\r\n    https://gist.github.com/wchargin/f37b99fd4ec345c9d2541c2dc53ceda9\r\n\r\n 3. In `fetchGitHubRepo.js`, change the definition of `const query` to\r\n\r\n    ```js\r\n    const query = require(\"./githubQueryMultiline.js\");\r\n    ```\r\n\r\n    Run\r\n\r\n    ```shell\r\n    GITHUB_TOKEN=\"<your_token_here>\" src/backend/fetchGitHubRepoTest.sh\r\n    ```\r\n\r\n    and verify that it exits successfully.\r\n\r\n 4. Repeat for `require(\"./githubQueryInline.js\")`.\r\n\r\nwchargin-branch: graphql-structured-queries","title":"Add a GraphQL structured query format","mergedAs":{"type":"COMMIT","hash":"291dcb17c383202231e86bcaef4912802206cb72"},"additions":1559,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000078\u0000":{"address":{"type":"PULL","number":"78","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/78","comments":[],"reviews":[{"type":"REVIEW","id":"104662093","pull":{"type":"PULL","number":"78","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I moved sourcecred/tiny-example-repository to sourcecred/example-repo\r\nas it's simpler to remember. I also unarchived it and added comments\r\nto an issue, so that we can create a simple test for issue parsing.\r\n\r\nThis commit merely updates SourceCred to point to example-repo with\r\nthe regenerated canoncial output.","title":"Regenerate example-repo testdata","mergedAs":{"type":"COMMIT","hash":"d2501947a6db544ce560cf22850b06110a6af9cb"},"additions":61,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000079\u0000":{"address":{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/79","comments":[{"type":"COMMENT","id":"373897853","parent":{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104758230","pull":{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Graph.addNode and Graph.addEdge now allow adding the same node or edge\r\nmultiple times, provided that the duplicate adds are trying to insert\r\nidentical content.\r\n\r\nThis came up while prototyping the GitHub plugin; rather than create\r\nmyriad subgraphs and merge them, I found it convenient to construct a\r\nsingle graph and iteratively add nodes. Since the same node may be\r\ndiscovered multiple times (most notably user identities), there was a\r\nneed for a \"conservative add\" abstraction that adds a node if it doesn't\r\nexist yet, but errors only if multiple adds conflict.\r\n\r\nSince this behavior is generic and highly conservative, it seemed\r\nappropriate to include in the graph class itself.\r\n\r\nTest Plan:\r\nThe unit tests have been updated to include the new behavior.","title":"Allow redundant adds to the Graph","mergedAs":{"type":"COMMIT","hash":"1e791782d5677f31063c42495487ccd8d6310bfb"},"additions":39,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000080\u0000":{"address":{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/80","comments":[{"type":"COMMENT","id":"373903846","parent":{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104758239","pull":{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFlow doesn’t allow us to specify variance annotations in generic\r\nfunction parameters, and doesn’t allow coercing `Node<T>` to\r\n`Node<mixed>`. This forces us to put `any`s in our code, which…works.\r\n\r\nPaired with @wchargin\r\n\r\nTest Plan:\r\nNew unit tests trivially pass dynamically, and now pass statically\r\n(failing before the changes to `graph.js`).","title":"Allow adding explicitly typed nodes/edges","mergedAs":{"type":"COMMIT","hash":"894d6a229169c2037e5a84952ef70f9d07a09dd6"},"additions":47,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000":{"address":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/81","comments":[{"type":"COMMENT","id":"373897944","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373897991","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373899511","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373942955","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"373978537","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374006916","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374007024","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374149224","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374258715","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374277323","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374320243","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374338527","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104758999","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"[WIP] GitHub Plugin: Parse issues, comments, users\r\n\r\nThis commit adds a GithubParser class to the GitHub plugin.\r\nThe GithubParser currently can parse issues, creating nodes for issues,\r\ncomments, and users, and authorship and containment edges between them.\r\n\r\nIt does not parse pull requests, and it does not create reference edges.\r\n\r\nTest plan:\r\nCarefully verify that the snapshots encode appropriate behavior\r\n(Not yet done)\r\n\r\nPartially paired with @wchargin ","title":"GitHub Plugin: Parse issues, comments, and users","mergedAs":{"type":"COMMIT","hash":"30600004e42319b8e922ad67772f53cd0fb06515"},"additions":849,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000083\u0000":{"address":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/83","comments":[{"type":"COMMENT","id":"373907283","parent":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104774323","pull":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nCloses #82. This affords clients type-safety without needing to\r\nverbosely annotate every node or edge passed into the graph functions.\r\nIt also enables graph algorithms to be more expressive in their types:\r\nfor instance, the merge function now clearly indicates from its type\r\nthat the first graph’s nodes are passed as the first argument to the\r\nnode reducer, and the second graph’s nodes to the second. Clients can\r\nupgrade immediately by using `Graph<*, *>`.\r\n\r\nThankfully, Flow supports variance well enough for this all to be\r\npossible without too much trouble.\r\n\r\nTest Plan:\r\nExisting unit tests pass statically and at runtime. I added a test case\r\nto demonstrate that merging works covariantly.\r\n\r\nTo see some failures, change `string` to an incompatible type, like\r\n`number`, in the definitions of `makeGraph` in test functions for\r\nconservatively rejecting graphs with conflicting nodes/edges\r\n(ll. 446, 462).\r\n\r\nwchargin-branch: parameterize-graph","title":"Parameterize `Graph` over node and edge payloads","mergedAs":{"type":"COMMIT","hash":"1083540d2109e782b52cf190a582a6a531f2f318"},"additions":84,"deletions":35},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000084\u0000":{"address":{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/84","comments":[{"type":"COMMENT","id":"374087556","parent":{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"104818759","pull":{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nRunning `yarn backend` will now bundle backend applications. They’ll be\r\nplaced into the new `bin/` directory. This enables us to use ES6 modules\r\nwith the standard syntax, Flow types, and all the other goodies that\r\nwe’ve come to expect. A backend build takes about 2.5s on my laptop.\r\n\r\nCreated by forking the prod configuration to a backend configuration and\r\ntrimming it down appropriately.\r\n\r\nTo test out the new changes, this commit changes `fetchGitHubRepo` and\r\nits driver to use the ES6 module system and Flow types, both of which\r\nare properly resolved.\r\n\r\nTest Plan:\r\nRun `yarn backend`. Then, you can directly run an entry point via\r\n```\r\n$ node bin/fetchAndPrintGitHubRepo.js sourcecred example-repo \"${TOKEN}\"\r\n```\r\nor invoke the standard test driver via\r\n```shell\r\n$ GITHUB_TOKEN=\"${TOKEN}\" src/backend/fetchGitHubRepoTest.sh\r\n```\r\nwhere `${TOKEN}` is your GitHub authentication token.\r\n\r\nwchargin-branch: webpack-backend","title":"Configure Webpack for backend applications","mergedAs":{"type":"COMMIT","hash":"274007c90d9fb785765e571c415bd0a158d40934"},"additions":245,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000085\u0000":{"address":{"type":"PULL","number":"85","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/85","comments":[{"type":"COMMENT","id":"374338364","parent":{"type":"PULL","number":"85","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Running said command generated a package-lock.json file, and instructed\r\nus to commit it. However, I believe this is redundant with yarn.lock, so\r\nfollowing\r\nhttps://stackoverflow.com/questions/44552348/should-i-commit-yarn-lock-and-package-lock-json-files\r\nI decided to gitignore it instead.","title":"Updated npm by running `npm i npm`.","mergedAs":null,"additions":4,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000087\u0000":{"address":{"type":"PULL","number":"87","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/87","comments":[],"reviews":[{"type":"REVIEW","id":"105148125","pull":{"type":"PULL","number":"87","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nNote that tests still pass, and all changes to snapshot files are\r\nverbatim moves.\r\n\r\nPaired with @dandelionmane.\r\n\r\nwchargin-branch: reorg","title":"Reorganize `src/` directory","mergedAs":{"type":"COMMIT","hash":"ca85fdf2349a0c83871d7343553d758a0aba2b05"},"additions":6,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000088\u0000":{"address":{"type":"PULL","number":"88","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/88","comments":[],"reviews":[{"type":"REVIEW","id":"105158497","pull":{"type":"PULL","number":"88","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’re not deleting it because it works with the build system and has the\r\nservice worker stuff from create-react-app, but we’ll soon repurpose it.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nThe following still work:\r\n  - `yarn test`\r\n  - `yarn start`\r\n  - `yarn build; (cd build; python -m SimpleHTTPServer)`\r\n\r\nwchargin-branch: dismantle-explorer","title":"Strip down explorer app to a barebones React app","mergedAs":{"type":"COMMIT","hash":"8f8d9c45649a1f448278a50f72f68ae09d93b75f"},"additions":5,"deletions":414},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000089\u0000":{"address":{"type":"PULL","number":"89","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/89","comments":[],"reviews":[{"type":"REVIEW","id":"105162526","pull":{"type":"PULL","number":"89","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’ll now start creating the artifact plugin. A large part of this will\r\nbe the user interface, including a GUI. For now, our build system just\r\nbuilds a single React app, so we’re cannibalizing the main explorer to\r\nserve this purpose.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nThe following still work:\r\n  - `yarn test`\r\n  - `yarn start`\r\n  - `yarn build; (cd build; python -m SimpleHTTPServer)`\r\n\r\nwchargin-branch: repurpose-react-app-as-artifact-editor","title":"Repurpose React app as artifact editor","mergedAs":{"type":"COMMIT","hash":"bbecf00615ac91911472314ee9e979f9dcea6105"},"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000090\u0000":{"address":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/90","comments":[],"reviews":[{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105206517","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105206543","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Mostly paired with @dandelionmane.","title":"Artifact editor work","mergedAs":{"type":"COMMIT","hash":"55225fd53e2bf745ddc0e7288261e01bfdc7ff7f"},"additions":344,"deletions":14},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000091\u0000":{"address":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/91","comments":[],"reviews":[{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also, since there are now two types of things that are being\r\n\"contained\" (comments and pull request reviews), I factored out an\r\naddContainment method to avoid repeating that code.\r\n\r\nTo make our handling of PullRequestReviewComments and regular Comments\r\nconsistent, I modified our query string so that we now request urls on\r\nPullRequestReviewComments. Also, since I didn't notice until closely\r\ninspecting the snapshot that we had been adding payloads with some\r\nundefined properties, I added a test to verify that every property on\r\nevery node and edge payload is defined.\r\n\r\nI regenerated the example-repo data to reflect the change to query\r\nstring.\r\n\r\nTest plan:\r\nVerify that the snapshot changes are appropriate\r\nRun standard tests\r\nRun `yarn backend`\r\nRun `GITHUB_TOKEN={your_token} ./src/plugins/github/fetchGithubRepoTest.sh`","title":"GitHub parser now recognizes pull request reviews","mergedAs":{"type":"COMMIT","hash":"02754d252301351588dfed93984a4d603fb1faa3"},"additions":331,"deletions":11},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000092\u0000":{"address":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/92","comments":[{"type":"COMMENT","id":"374463384","parent":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374679864","parent":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"105486328","pull":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In particular, running prettify on build takes a whole second!","title":"Don't run prettify on build or bin","mergedAs":{"type":"COMMIT","hash":"ab6e0d91a8a8beffebc14a2c642e9c24ca4f8577"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000093\u0000":{"address":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/93","comments":[{"type":"COMMENT","id":"374460141","parent":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374516296","parent":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"105542088","pull":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit begins to extend the artifact editor to display\r\ncontributions. To display contributions from arbitrary plugins, we need\r\nto communicate with those plugins somehow. We do so via an adapter\r\ninterface that plugins implement; included in this commit is an\r\nimplementation of this interface for the GitHub plugin (partially: we\r\npunt on rendering).\r\n\r\nThis includes a snapshot test. The snapshot format is designed to be\r\nhuman-readable and -auditable so that it can serve as documentation.\r\n\r\nTest Plan:\r\nRun the application with `yarn start`. Then, fetch a graph and watch as\r\nits contributions appear in the view.\r\n\r\nwchargin-branch: contributions-and-adapters","title":"Begin work on contributions and adapters","mergedAs":{"type":"COMMIT","hash":"ab619432e1a23dcd61f306fe49bf0bbdd8cc0d42"},"additions":607,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000094\u0000":{"address":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/94","comments":[],"reviews":[{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105540817","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105541051","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105559917","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn addition to being nicer on the eyes, this enables the query to be\r\nstatically analyzed (e.g., by an auto-pagination API) and used by other\r\nmodules.\r\n\r\nTest Plan:\r\nManually running\r\n```shell\r\n$ yarn backend\r\n$ GITHUB_TOKEN=\"<your_token>\" src/plugins/github/fetchGitHubRepoTest.sh\r\n```\r\nsucceeds.\r\n\r\nwchargin-branch: use-structured-graphql-queries","title":"Use structured GraphQL query API in GitHub fetcher","mergedAs":{"type":"COMMIT","hash":"f02e0610be8758ecf6281b31b9cc2d66dcef4e8b"},"additions":91,"deletions":99},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000095\u0000":{"address":{"type":"PULL","number":"95","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/95","comments":[],"reviews":[{"type":"REVIEW","id":"105498359","pull":{"type":"PULL","number":"95","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I added some new issues to sourcecred/example-repo to test unicode\r\nsupport and parsing of extremely long issues titles.\r\n\r\nThis commit merely updates our example-repo json and the corresponding\r\nsnapshots.\r\n\r\nTest plan:\r\nRun testFetchGithubRepo.sh\r\nRun unit tests","title":"Update example-repo json and snapshots","mergedAs":{"type":"COMMIT","hash":"559ed393a9a4b7d819a9bf0e7cfc6a3328de6a92"},"additions":77,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000096\u0000":{"address":{"type":"PULL","number":"96","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/96","comments":[],"reviews":[{"type":"REVIEW","id":"105522282","pull":{"type":"PULL","number":"96","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is useful for metaprogramming. For instance, suppose we have an\r\nobject like this:\r\n```js\r\nconst stringifiers = {\r\n  ISSUE: (stringifyIssue: (Node<IssueNodePayload>) => string),\r\n  COMMENT: (stringifyComment: (Node<CommentPayload>) => string),\r\n  ...\r\n}\r\n```\r\nHow do we type this? We might try\r\n```js\r\n{[type: NodeType]: (Node<NodePayload>) => string}\r\n```\r\nbut this is not correct, because `Node<IssueNodePayload>` is a subtype of\r\n`Node<NodePayload>`, and `(_) => K` is contravariant, not covariant. (In\r\nother words, a function from `Node<IssueNodePayload>` is not as general\r\nas a function from `Node<NodePayload>`.) We need to express a dependency\r\nbetween the object key and the value. We instead write:\r\n```js\r\ntype TypedNodeToStringifier = <T: $Values<NodeTypes>>(\r\n  T\r\n) => (node: Node<$ElementType<T, \"payload\">>) => string;\r\n(stringifiers: $Exact<$ObjMap<NodeTypes, TypedNodeToStringifier>>);\r\n```\r\nThis expresses exactly (heh) the right type.\r\n\r\nTest Plan:\r\nNote that removing any of the elements of `NodeTypes` yields a Flow\r\nerror, due to the static assertion following the type definition.\r\n\r\nwchargin-branch: node-types","title":"Expose `NodeTypes` from the GitHub plugin","mergedAs":{"type":"COMMIT","hash":"e9ca833448b4a1dfa73d3ed5d7df1db1f781efdb"},"additions":55,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000097\u0000":{"address":{"type":"PULL","number":"97","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/97","comments":[],"reviews":[{"type":"REVIEW","id":"105561088","pull":{"type":"PULL","number":"97","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Add EdgeTypes type in githubPlugin","mergedAs":{"type":"COMMIT","hash":"5b420c6294490043af5ec847c9f67b8ea6ba3541"},"additions":18,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000098\u0000":{"address":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/98","comments":[],"reviews":[{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586459","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586481","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586484","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586488","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586494","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105586880","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105587120","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105587260","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit only adds logic for finding references in GitHub posts,\r\neither by #-numeric reference, or explicit urls. Adding the reference\r\nedges to the graph will occur in a followon commit. Progress on #40 \r\n\r\nTest plan: New unit tests are included","title":"Implement GitHub reference detection","mergedAs":{"type":"COMMIT","hash":"41cdf2d855c75c48aa81f6cf08fb4e6c2ac1fff2"},"additions":235,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000099\u0000":{"address":{"type":"PULL","number":"99","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/99","comments":[],"reviews":[{"type":"REVIEW","id":"105575313","pull":{"type":"PULL","number":"99","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nAny tests that render Aphrodite-styled React elements will need to do\r\nthis, so it’s nice to have the code in one place.\r\n\r\nwchargin-branch: aphrodite-testutils","title":"Extract Aphrodite-management test code to testUtil","mergedAs":{"type":"COMMIT","hash":"61624a5dcfce48f3faf8e94405ba6603554b5ac2"},"additions":12,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000100\u0000":{"address":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/100","comments":[],"reviews":[{"type":"REVIEW","id":"105589418","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105589545","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We now never capitalize the H in GitHub within variable or function\r\nnames. We still capitalize it in comments or user facing strings.\r\n\r\nTest plan:\r\nUnit tests, the fetchGithubRepoTest.sh, and\r\n`git grep itHub` only shows comment lines and print statements.","title":"Make GitHub capitalization consistent within code","mergedAs":{"type":"COMMIT","hash":"39fd3fa35406765bae6053e13ae91717d2965b29"},"additions":21,"deletions":21},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000101\u0000":{"address":{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/101","comments":[{"type":"COMMENT","id":"374813757","parent":{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"105591364","pull":{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFilter options are “all contributions” or a specific plugin/type\r\ncombination. This includes a snapshot test for the static state. I’ll\r\nadd an interaction test in a subsequent commit.\r\n\r\nTest Plan:\r\n`yarn start`, fetch graph, play with the filtering options.\r\n\r\nwchargin-branch: filter-contributions","title":"Allow filtering by type in the contribution list","mergedAs":{"type":"COMMIT","hash":"5dd5de306c24f08f4db1d6ae8fd10a6915c88927"},"additions":373,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000":{"address":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/102","comments":[{"type":"COMMENT","id":"375074797","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"375110193","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"375112508","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"375140377","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"105867854","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105881348","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"105883980","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is our first dynamic test of a React component! Enzyme looks pretty\r\neasy to use to me, for both snapshot tests and interaction simulation.\r\n\r\nIn doing so, we catch a minor bug in the edge case where a contribution\r\nis not owned by any plugin (`colSpan`, not `colspan`). This edge case\r\ndoes not appear in the sample data, but it does appear in the test data,\r\neven prior to this commit. The previous renderer, `react-test-renderer`,\r\nappears not to surface this error. Furthermore, this bug did not cause\r\nany user-visible errors except a `console.error`.\r\n\r\nTest Plan:\r\nInspect the snapshot file to make sure that it is reasonable. (The\r\nexisting test case has its snapshot regenerated due to formatting\r\ndifferences between the two renderers.)\r\n\r\nTo test that the browser error is fixed, render a contribution list on a\r\nGitHub graph but with an empty adapter set. One way to do this is to comment out line 7 of\r\n`standardAdapterSet.js`; alternately, you can use the React Dev Tools to\r\nselect the `ContributionList` node, then run\r\n```js\r\n$r.props.adapters.adapters = {};\r\n$r.forceUpdate();\r\n```\r\nNote subsequently that there is no console error and that the `<td>`s in\r\nquestion span three columns.\r\n\r\nwchargin-branch: contributionlist-dynamic-test","title":"Use Enzyme to test ContributionList dynamics","mergedAs":{"type":"COMMIT","hash":"feac85ad2c1597ae98d0a067717035520ab44565"},"additions":662,"deletions":138},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000104\u0000":{"address":{"type":"PULL","number":"104","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/104","comments":[],"reviews":[{"type":"REVIEW","id":"105961064","pull":{"type":"PULL","number":"104","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit moves our existing frontend tests to use Enzyme’s shallow\r\nrendering API <http://airbnb.io/enzyme/docs/api/shallow.html>. The\r\nbenefit over also using `react-test-renderer` is simply consistency (the\r\ntwo are functionally equivalent); the benefits over `mount` are that\r\nsubcomponents cannot contaminate the test state (i.e., you’re only\r\ntesting one component at a time), that the resulting snapshots are more\r\nreadable because the root props are not shown, and that the\r\nimplementation is more efficient. This is a follow-up to #102.\r\n\r\nIn a case where we actually need a full DOM tree, we should still feel\r\nfree to use `mount`, but we haven’t needed that yet.\r\n\r\nTest Plan:\r\nVerify that the new `ContributionList.test.js.snap` represents the same\r\ndata as the old one.\r\n\r\nwchargin-branch: standardize-enzyme-shallow","title":"Standardize on Enzyme shallow rendering","mergedAs":{"type":"COMMIT","hash":"8fdf758cb9418bd75f926eb2c9b3f566efb82152"},"additions":246,"deletions":384},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000105\u0000":{"address":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/105","comments":[{"type":"COMMENT","id":"376248912","parent":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107000295","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107000720","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107002438","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This pull request adds a string type as a field of the address, thus canonicalizing that all Nodes and Edges have a Type. This allows for simpler PluginAdapters, and simpler implementation of the GitHub plugin (as it no longer needs to invent its own mechanism for storing types).\r\n\r\nI explored making the Address interface generic, with a Type parameter that is a subtype of string. Unfortunately, Flow type resolution seems to have an exponential performance degradation with many subtyped parameters, and adding the extra type parameters to Graph.merge resulted in my flow instance locking. Maybe we can explore adding the subtypes later.\r\n\r\nIn the GitHub plugin, we entirely do away with the NodeIDs, but we still have EdgeIDs. I plan to remove the need for EdgeIDs in a separate PR which will enforce uniqueness of (srcAddress, dstAddress, pluginName, type) tuples, so that explicitly generating IDs for edges will be unnecessary. In the mean time, I bifurcated the makeAddress function in the GitHub plugin to makeEdgeAddress and makeNodeAddress.\r\n\r\nTest plan:\r\nFlow and unit tests all pass. Inspect snapshots, and verify that all the changes are reasonable. Note that since we order by serialized address, adding the type field to address has changed the snapshot order in a few cases.\r\n\r\nClose #103","title":"[refactor] Move node/edge types to addresses","mergedAs":{"type":"COMMIT","hash":"b2c13ac89144fc8cdcd37c3809df3789bd1479ba"},"additions":507,"deletions":528},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000106\u0000":{"address":{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/106","comments":[],"reviews":[{"type":"REVIEW","id":"107021508","pull":{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The toString and fromString methods use json-stable-stringify,\r\nand we've modified other address code to use these methods.\r\nAs such, a number of the snapshots have changed (ordering).\r\n\r\nTest plan:\r\nVerify the new included unit tests are comprehensive. Inspect the\r\nsnapshots.","title":"Add a toString and fromString method on addresses","mergedAs":{"type":"COMMIT","hash":"043c37f9c6a0e202df890e25d5f3bb33af522856"},"additions":226,"deletions":154},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000107\u0000":{"address":{"type":"PULL","number":"107","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/107","comments":[],"reviews":[{"type":"REVIEW","id":"107033662","pull":{"type":"PULL","number":"107","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Adds edgeID in graph, which creates a string id from src and dest.\r\nProvided that the plugin only uses edgeID for generating edge ids of\r\nthat type, these ids will be unique.\r\n\r\nModify the GitHub plugin to use edgeID. This allows the code and\r\ntypesignature to be simpler, and will be more consistent with other\r\nplugins.\r\n\r\nTest plan:\r\nCarefully inspect the snapshots.","title":"Generate Edge ids automatically","mergedAs":{"type":"COMMIT","hash":"d310561b9473ecaa0e22da3dac089ab61df2f723"},"additions":155,"deletions":169},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000108\u0000":{"address":{"type":"PULL","number":"108","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/108","comments":[],"reviews":[{"type":"REVIEW","id":"107059806","pull":{"type":"PULL","number":"108","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe need to know the repo owner and name for purposes other than fetching\r\nthe GitHub graph: for instance, fetching the `artifacts.json` file that\r\ndescribes the artifact subgraph. It makes sense that these should be\r\nsettings global to the application. This commit separates a settings\r\ncomponent and the original GitHub graph fetcher.\r\n\r\nThis invalidates localStorage; you can manually migrate.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nNote that the data continues to be stored in localStorage and that it is\r\nupdated on each keypress. Note that the state is properly passed around:\r\nif you change the repository name from `example-repo` to `sourcecred`,\r\ne.g., and click “Fetch GitHub graph”, then the proper graph is fetched.\r\n\r\nwchargin-branch: separate-artifact-settings","title":"Separate artifact settings from GitHub graph fetch","mergedAs":{"type":"COMMIT","hash":"007cf88172d7ea9b0cdada78f124f7a41b811b30"},"additions":119,"deletions":64},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000109\u0000":{"address":{"type":"PULL","number":"109","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/109","comments":[],"reviews":[{"type":"REVIEW","id":"107069780","pull":{"type":"PULL","number":"109","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nClients of `Graph` that wish to treat the graph as immutable will\r\nbenefit from a `copy` method. We should provide it on `Graph` instead of\r\nasking clients to reimplement it because it affords us the opportunity\r\nto get the type signature right: in particular, copying should allow\r\nupcasting of the type parameters, even though `Graph` itself is\r\ninvariant.\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn flow` and `yarn test`. To check that\r\ndowncasting is not allowed, change the types in the new static test case\r\nin `graph.test.js` to be contravariant instead of covariant, and note\r\nthat `yarn flow` fails.\r\n\r\nwchargin-branch: graph-copy","title":"Add a covariant `copy` method on `Graph`","mergedAs":{"type":"COMMIT","hash":"26508051a49019f8ee524ca6477270ff0bf2ec6f"},"additions":31,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000110\u0000":{"address":{"type":"PULL","number":"110","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/110","comments":[],"reviews":[{"type":"REVIEW","id":"107096025","pull":{"type":"PULL","number":"110","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWherein we change the semantics to allow\\* dangling edges. This is\r\nnecessary for plugins that want to update nodes, such as changing a\r\ndescription or other noncritical field.\r\n\r\n\\* (It was technically possible before by abusing `merge`, but now you\r\ncan just do it.)\r\n\r\nPaired with @dandelionmane.\r\n\r\nTest Plan:\r\nExtensive tests added. Run `yarn flow` and `yarn test`.\r\n\r\nwchargin-branch: allow-removing-from-graph","title":"Allow removing nodes and edges from the graph","mergedAs":{"type":"COMMIT","hash":"e57a16efbd8fc48a1b8beece5356b6eb84499279"},"additions":295,"deletions":54},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000111\u0000":{"address":{"type":"PULL","number":"111","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/111","comments":[],"reviews":[{"type":"REVIEW","id":"107132098","pull":{"type":"PULL","number":"111","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit revises our implementations of node and edge types, and\r\nspecifies the semantics for artifact plugin IDs: we create IDs by\r\nslugifying an artifact name and then resolving collisions\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn flow` and `yarn test`.\r\n\r\nwchargin-branch: artifact-plugin-node-edge-semantics","title":"Redefine artifact plugin node and edge semantics","mergedAs":{"type":"COMMIT","hash":"458744e77f9e643ba8533e67afc171e6000b948a"},"additions":86,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000112\u0000":{"address":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/112","comments":[],"reviews":[{"type":"REVIEW","id":"107133407","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107136464","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107136933","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis component now maintains a graph of just artifacts and the edges\r\namong them. It owns the state, and notifies its parents of changes with\r\na callback. We treat the graph objects as properly immutable, copying\r\nthem on each change. So far, descriptions are always the empty string.\r\n\r\nTest Plan:\r\nInteraction tests added. Run `yarn test`.\r\n\r\nwchargin-branch: artifact-graph-editor","title":"Convert ArtifactList to ArtifactGraphEditor","mergedAs":{"type":"COMMIT","hash":"99f24c420a1d60a03fa9a1985fde4c90b081dbd8"},"additions":174,"deletions":74},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000113\u0000":{"address":{"type":"PULL","number":"113","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/113","comments":[],"reviews":[{"type":"REVIEW","id":"107132626","pull":{"type":"PULL","number":"113","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Update GitHub plugin to respect two new conventions:\r\n- Node/Edge types are exported as UPPER_CASE_CONSTANTS\r\n- Edge types are always verbs, which can be read as $src verb $dst\r\n\r\nTest plan:\r\nFlow passes. Inspect snapshot changes.","title":"Cleanup GitHub plugin Node/Edge types","mergedAs":{"type":"COMMIT","hash":"823e7da3740e9e9a3eb3291e71c0fc6363b09e7f"},"additions":203,"deletions":184},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000114\u0000":{"address":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/114","comments":[],"reviews":[{"type":"REVIEW","id":"107138003","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"107139169","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIt looks like this:\r\n![Screenshot](https://user-images.githubusercontent.com/4317806/37943962-a8352b94-312e-11e8-9523-855a34020709.png)\r\n\r\nTest Plan:\r\nInteraction tests included. Run `yarn test`.\r\n\r\nwchargin-branch: artifact-descriptions","title":"Allow editing artifact descriptions","mergedAs":{"type":"COMMIT","hash":"f93c9a8e4276217d28e5c7c8ae1b660f05c90360"},"additions":108,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000115\u0000":{"address":{"type":"PULL","number":"115","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/115","comments":[],"reviews":[{"type":"REVIEW","id":"107141373","pull":{"type":"PULL","number":"115","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nStandard `yarn flow` and `yarn test` suffice.\r\n\r\nwchargin-branch: get-no-all","title":"Rename getAll{Nodes,Edges} to get{Nodes,Edges}","mergedAs":{"type":"COMMIT","hash":"2f50aa7364f3fd889b32c4dcd324f98cc45f56d2"},"additions":18,"deletions":18},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000116\u0000":{"address":{"type":"PULL","number":"116","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/116","comments":[],"reviews":[{"type":"REVIEW","id":"107145559","pull":{"type":"PULL","number":"116","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFor pagination, we’ll want to query against multiple entities of the\r\nsame type. GraphQL uses aliases to facilitate this. This commit adds\r\nsupport for aliases to our GraphQL query DSL.\r\n\r\nTest Plan:\r\nInspect snapshot changes, and note that `yarn flow` and `yarn test`\r\npass.\r\n\r\nwchargin-branch: graphql-aliases","title":"Add field aliases to structured GraphQL queries","mergedAs":{"type":"COMMIT","hash":"e6f401df301b3da81dda923c0541b6ed40153565"},"additions":95,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000118\u0000":{"address":{"type":"PULL","number":"118","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/118","comments":[],"reviews":[{"type":"REVIEW","id":"109587382","pull":{"type":"PULL","number":"118","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis was created by re-crawling the GitHub repo via `fetchGithubRepo`,\r\nand then updating Jest snapshots.\r\n\r\nTest Plan:\r\nNote that `fetchGithubRepoTest.sh` passes, so the data is now up to\r\ndate.\r\n\r\nInspect the snapshot, and note that the only changes are to change login\r\nnames from `dandelionmane` to `decentralion`. To do so automatically:\r\n```bash\r\nset -eu\r\ndiff_contents() {\r\n    git difftool HEAD^ HEAD --extcmd=diff --no-prompt\r\n}\r\n! diff_contents | grep '^<' | grep -vF '\"dandelionmane\"'\r\n! diff_contents | grep '^>' | grep -vF '\"decentralion\"'\r\n```\r\n\r\nwchargin-branch: decentralion-data","title":"Update example data for @decentralion name change","mergedAs":{"type":"COMMIT","hash":"806c5e5687cc64cf1ae79f82d5f631e2f237a140"},"additions":20,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000119\u0000":{"address":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/119","comments":[],"reviews":[{"type":"REVIEW","id":"109589512","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109589883","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109590292","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109590319","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPer #117, we want to develop an ad hoc pagination API written\r\nspecifically against the query that we use to interact with GitHub.\r\nThe pagination logic should be separate from the logic to actually fetch\r\nthe repo, but should be colocated with the query itself, so this commit\r\nextricates the query from `fetchGithubRepo.js` into a new module.\r\n\r\nTest Plan:\r\nExisting tests pass, including `fetchGithubRepoTest.sh`.\r\n\r\nwchargin-branch: extract-github-graphql","title":"Extract GitHub GraphQL code to a module","mergedAs":{"type":"COMMIT","hash":"fbb6ec28dbf99d9b9e84cfa8792f1f3b14998d19"},"additions":96,"deletions":91},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000120\u0000":{"address":{"type":"PULL","number":"120","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/120","comments":[],"reviews":[{"type":"REVIEW","id":"109595904","pull":{"type":"PULL","number":"120","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nAny time that we pull fields off a connection object, we may need to\r\nrepeat the query for subsequent pages. Therefore, such fragments will be\r\nshared across multiple queries, and also shared within a query if we\r\nneed to fetch—say—more issue comments on two or more distinct issues.\r\nThis is a perfect use case for fragments.\r\n\r\nThis commit refactors the GitHub query to be organized in terms of\r\nfragments, without changing the format of the results.\r\n\r\n(We also take this opportunity to factor the page limits into\r\nconstants.)\r\n\r\nTest Plan:\r\nAfter running `yarn backend`, the `fetchGithubRepoTest.sh` test passes.\r\n\r\nwchargin-branch: extract-github-query-fragments","title":"Extract paginatable fragments of GitHub query","mergedAs":{"type":"COMMIT","hash":"7711f01b844529208ea88f7af8de7ae29a478aac"},"additions":92,"deletions":58},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000121\u0000":{"address":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/121","comments":[],"reviews":[{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPer #117, this is a first step toward at writing a pagination API that\r\nspecifically targets our current GitHub query. For design details, see\r\nnew module docs on `src/plugins/github/graphql.js`.\r\n\r\nThis commit modifies the core GitHub query and thus the\r\n`example-repo.json` snapshot: we now request `endCursor` fields for all\r\npagination info, and we request the `id` of the root `repository` field.\r\nThe former is obviously necessary. The latter is necessary for the\r\nrepository to be consistent with other nodes that offer connections as\r\nfields: we require an ID on the node containing the connection so that\r\nwe can have random access to it in a continuation selector.\r\n\r\nTest Plan:\r\nUnit tests added. You can also try out the generated continuation\r\nqueries for yourself: apply the patch below, run `yarn backend`, and\r\nthen run the `fetchGithubRepo.js` script on `sourcecred/sourcecred`.\r\nThis will output a nicely formatted query that you can paste directly\r\ninto GitHub’s API explorer and execute. (Note that, because this patch\r\nis not fully polished, the query must be run against a repository that\r\nhas a continuation for every node type: more pages of issues, PRs,\r\ncomments, reviews, and review comments. This is due to an\r\neasy-but-annoying-to-fix bug in the patch, not in the code included in\r\nthis commit.)\r\n\r\n<details>\r\n<summary>Patch for generating a continuations query</summary>\r\n\r\n```diff\r\ndiff --git a/src/plugins/github/fetchGithubRepo.js b/src/plugins/github/fetchGithubRepo.js\r\nindex 789a20e..418c736 100644\r\n--- a/src/plugins/github/fetchGithubRepo.js\r\n+++ b/src/plugins/github/fetchGithubRepo.js\r\n@@ -6,8 +6,13 @@\r\n\r\n import fetch from \"isomorphic-fetch\";\r\n\r\n-import {stringify, inlineLayout} from \"../../graphql/queries\";\r\n-import {createQuery, createVariables} from \"./graphql\";\r\n+import {stringify, inlineLayout, multilineLayout} from \"../../graphql/queries\";\r\n+import {\r\n+  continuationsFromQuery,\r\n+  continuationQuery,\r\n+  createQuery,\r\n+  createVariables,\r\n+} from \"./graphql\";\r\n\r\n /**\r\n  * Scrape data from a GitHub repo using the GitHub API.\r\n@@ -66,8 +71,13 @@ function postQuery(payload, token) {\r\n       if (x.errors) {\r\n         return Promise.reject(x);\r\n       }\r\n-      ensureNoMorePages(x);\r\n-      return Promise.resolve(x);\r\n+      console.log(\r\n+        stringify.body(\r\n+          continuationQuery(Array.from(continuationsFromQuery(x.data))),\r\n+          multilineLayout(\"  \")\r\n+        )\r\n+      );\r\n+      throw new Error(\"STOPSHIP\");\r\n     });\r\n }\r\n\r\ndiff --git a/src/plugins/github/graphql.js b/src/plugins/github/graphql.js\r\nindex 9ea2592..9ead42b 100644\r\n--- a/src/plugins/github/graphql.js\r\n+++ b/src/plugins/github/graphql.js\r\n@@ -39,11 +39,11 @@ import {build} from \"../../graphql/queries\";\r\n  *\r\n  * [1]: https://developer.github.com/v4/guides/resource-limitations/#node-limit\r\n  */\r\n-export const PAGE_LIMIT = 100;\r\n-const PAGE_SIZE_ISSUES = 100;\r\n-const PAGE_SIZE_PRS = 100;\r\n-const PAGE_SIZE_COMMENTS = 20;\r\n-const PAGE_SIZE_REVIEWS = 10;\r\n+export const PAGE_LIMIT = 10;\r\n+const PAGE_SIZE_ISSUES = 10;\r\n+const PAGE_SIZE_PRS = 10;\r\n+const PAGE_SIZE_COMMENTS = 3;\r\n+const PAGE_SIZE_REVIEWS = 1;\r\n const PAGE_SIZE_REVIEW_COMMENTS = 10;\r\n\r\n /**\r\n@@ -340,6 +340,36 @@ function* continuationsFromReview(\r\n   }\r\n }\r\n\r\n+/**\r\n+ * Combine continuations into a query.\r\n+ */\r\n+export function continuationQuery(\r\n+  continuations: $ReadOnlyArray<Continuation>\r\n+): Body {\r\n+  const nonces: string[] = continuations.map((_, i) => `_n${String(i)}`);\r\n+  const nonceToIndex = {};\r\n+  nonces.forEach((n, i) => {\r\n+    nonceToIndex[n] = i;\r\n+  });\r\n+  const b = build;\r\n+  const query = b.query(\r\n+    \"Continuations\",\r\n+    [],\r\n+    continuations.map((continuation, i) =>\r\n+      b.alias(\r\n+        nonces[i],\r\n+        b.field(\r\n+          \"node\",\r\n+          {id: b.literal(continuation.enclosingNodeId)},\r\n+          continuation.selections.slice()\r\n+        )\r\n+      )\r\n+    )\r\n+  );\r\n+  const body = [query, ...createFragments()];\r\n+  return body;\r\n+}\r\n+\r\n /**\r\n  * These fragments are used to construct the root query, and also to\r\n  * fetch more pages of specific entity types.\r\n```\r\n</details>\r\n\r\nwchargin-branch: ad-hoc-pagination-continuations","title":"Create pagination continuations for GitHub query","mergedAs":{"type":"COMMIT","hash":"751172ea77b35b3122f744b1d20ca20df3518b27"},"additions":697,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000":{"address":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/122","comments":[{"type":"COMMENT","id":"378859005","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"378864290","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"378875015","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109612592","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109613370","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109618316","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nOnce we execute the root query, find continuations, embed the\r\ncontinuations into queries, and execute the continuation query, we will\r\nneed to merge the continuations’ results back into the root results.\r\nThis commit adds a function `merge` that will be suitable for doing just\r\nthat.\r\n\r\nTest Plan:\r\nNew unit tests added, with 100% coverage. Run `yarn test`.\r\n\r\nwchargin-branch: merge-query-results","title":"Implement a function to merge query results","mergedAs":{"type":"COMMIT","hash":"e82b56e52c52f7900981b2175d9712fd208f68a5"},"additions":365,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000123\u0000":{"address":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/123","comments":[{"type":"COMMENT","id":"378879516","parent":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"379270546","parent":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109624099","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109947256","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"109986822","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit completes the ad hoc pagination solution described in #117:\r\nwe implement pagination specifically for our current query against the\r\nGitHub API. This is done in such a way that reasonable additions to the\r\nquery will not be hard to implement—for instance, if we want to fetch\r\na new kind of field, the marginal cost is at most a bit of extra\r\ncopy-and-paste and some modifications to tests. However, we should\r\ncertainly still plan to implement the fully automatic pagination system\r\ndescribed in #117.\r\n\r\nRunning on TensorBoard with the default page limits takes 30–33 seconds\r\nover 7 queries, uses 103 GitHub API points (out of 5000 for any given\r\nhour), and produces a JSON file that is 8.7MB (when pretty-printed).\r\nThis all seems quite reasonable to me.\r\n\r\nTest Plan:\r\nExtensive unit tests added. The snapshots are quite readable, by design.\r\n\r\nFor a real-world test, you can `yarn start` the artifact viewer and use\r\nthe GUI to fetch the data for tensorflow/tensorboard.\r\n\r\nTo demonstrate that the fetching process gives the same results\r\nregardless of the page size, follow these steps:\r\n\r\n 1. In `fetchGithubRepo.js`’s `postQuery` function, insert a new\r\n    statement `console.error(\"Posting query...\")` at the beginning. (It\r\n    is important to print to stderr instead of stdout.)\r\n 2. Run `yarn backend` and then invoke `fetchGithubRepo.js` on a repo\r\n    large enough to require pagination, like SourceCred or TensorBoard.\r\n    Pipe the result to `shasum -a 256` and note the SHA.\r\n 3. In `github/graphql.js`, change the page size constants near the top\r\n    of the file. Re-run step 2. The number of queries that are posted\r\n    will vary significantly as the page size constants vary, but the\r\n    checksum should remain the same.\r\n 4. Repeat until satisfied. (I tried three sets of values: the standard\r\n    values, the standard values but all divided by 10, and all 5s.)\r\n\r\nwchargin-branch: ad-hoc-pagination","title":"Implement exhaustive fetching for our GitHub query","mergedAs":{"type":"COMMIT","hash":"9d1200275e638c4bc61f0c2de14a46232681e974"},"additions":698,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000124\u0000":{"address":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/124","comments":[{"type":"COMMENT","id":"379430967","parent":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"379472343","parent":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110255888","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110255910","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110255924","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110256030","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110256062","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110256202","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110256348","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110329776","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110329784","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110329842","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110329904","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110332471","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110332478","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"110332490","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"- Give a more detailed and up-to-date description of the vision for\r\nSourceCred\r\n- Update the discuss link to point to Spectrum rather than Slack\r\n- Wrap text","title":"Update the README","mergedAs":{"type":"COMMIT","hash":"8992f2a9f58f648d8e638d189527449105fc5d72"},"additions":73,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000125\u0000":{"address":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/125","comments":[{"type":"COMMENT","id":"382747499","parent":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds support for parsing numeric references to the GitHub\r\nplugin. The implementation is mildly complicated, because the parser\r\nnow tracks two additional pieces of state:\r\n\r\n1. A map from issue/pr # to node, necessary to avoid an O(nodes) scan\r\nevery time we encounter a numeric reference\r\n2. A map containing every dangling numeric reference, necessary to avoid\r\nmissing references when we parse the reference before the referred node.\r\n\r\nI also added a `danglingReferences` method to the parser which\r\nenumerates every dangling reference, in a readable format. In a followon\r\ncommit, I intend to log the presence of dangling references in the\r\n`parseGraph` method of the Artifact editor.\r\n\r\nTest plan:\r\nObserve that the unit tests are fairly comprehensive. The whole-repo\r\nsnapshot changes are as expected.","title":"GitHub: parse simple numeric references","mergedAs":null,"additions":317,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000126\u0000":{"address":{"type":"PULL","number":"126","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/126","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"If there are any dangling edges leftover from a graph parse, the\r\nartifact plugin will now record that fact in the console.\r\n\r\nI think this will be mildly useful for debugging; note it only generates\r\nnoise in the exception case.\r\n\r\nTest plan:\r\nNo tests were added. We don't depend on this behavior at all, I just\r\nthink it will be nice to make it discoverable when this happens.","title":"Artifact plugin logs presence of dangling edges","mergedAs":null,"additions":9,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000":{"address":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/128","comments":[{"type":"COMMENT","id":"382520937","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"382537550","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"382966685","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383121064","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"113842786","pull":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit modifies our GitHub graphql query so that we request urls\r\nfor all objects (e.g. users, pull requests, pull request review\r\ncomments). Some change along these lines is necessary so that we can\r\ncorrectly represent URL reference edges to e.g. issue comments. (It\r\nmight be possible to do without by reverse-enginering from the ids, but\r\nwe are resolved to treat ids as opaque).\r\n\r\nStrictly speaking, we don't need to collect urls for users, issues, and\r\npull requests - they are generated via simple schema. However, for\r\nconsistency, I think it's better to just take URLs on everything.\r\n\r\nTest plan: The example-repo.json has been regenerated. The diffs are as\r\nexpected.","title":"Get urls for all GitHub objects","mergedAs":{"type":"COMMIT","hash":"d025e78b1d549fb915c32d40414365a8145ffdd9"},"additions":91,"deletions":28},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000129\u0000":{"address":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/129","comments":[{"type":"COMMENT","id":"382970474","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383124635","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"383131107","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114009400","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114011831","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114011860","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114011936","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114493414","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114493716","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Keeping the GitHub demo data up-to-date is important, and there isn't\r\ngood documentation for how to do that.\r\n\r\nThis commit adds a short README.md for the demo data, and adds an update\r\nflag to fetchGithubRepoTest.sh that can be used to easily update it.\r\n\r\nTest plan:\r\nModify example-repo.json (e.g. by deleting it entirely). Run\r\nfetchGithubRepoTest.sh -u and confirm that the data was regenerated\r\nwithout change. Run fetchGithubRepoTest.sh and confirm the test passes.\r\n\r\nNote: The end cursor is sensitive to the timezone, which seems to be\r\ncached with the GitHub token. An erroneous switch to Israel timezone\r\nmade it into master; this commit reverts back to US/Pacific.","title":"Add README and update flow for GitHub demo data","mergedAs":{"type":"COMMIT","hash":"1e311c59f461574ad644c4db43785b6e7b9183d8"},"additions":68,"deletions":15},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000130\u0000":{"address":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/130","comments":[],"reviews":[{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114565645","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114565670","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114566678","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114567703","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114568220","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, every type of reference has its own type signature: numeric\r\nreferences are returned as numbers, url references are a complicated\r\nobject containing url parts, and so forth.\r\n\r\nSince ultimately the references are just strings, it makes more sense to\r\ntreat references as plain strings. This allows a much simpler\r\nimplementation of reference edge creation in the GitHub plugin.\r\n\r\nThis commit also adds username reference detection.\r\n\r\nTest plan:\r\nVerify that the updated tests encode appropriate behavior.","title":"Simplify GH reference handling","mergedAs":{"type":"COMMIT","hash":"240f05899c81f01eaa46e1eb211059fb8520eeb9"},"additions":45,"deletions":134},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000133\u0000":{"address":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/133","comments":[],"reviews":[{"type":"REVIEW","id":"114425071","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114439642","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114468040","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114472173","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114472306","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis replaces the implementation of a static check from a somewhat\r\ncomplicated use of higher-order types to a more simple empty-union\r\nassertion, as suggested by jez in “Case Exhaustiveness in Flow”:\r\nhttps://blog.jez.io/flow-exhaustiveness/\r\n\r\n(I know; we’re not using Reason. One step at a time. :-) )\r\n\r\nI adapted the implementation a bit because I prefer explicitly disabling\r\nan ESLint warning over a no-op function call; it is not clear from the\r\nlatter that the purpose is to suppress a lint warning.\r\n\r\nTest Plan:\r\nIn `githubPlugin.js`, add `| \"ANOTHER\"` to the `NodeType` type, and note\r\na compile-time Flow error on the appropriate line, with a very readable\r\nerror message. Note that all unit tests pass, and running the UI on\r\n`sourcecred/sourcecred` yields correct titles for each node type present\r\n(namely, all node types except for `ORGANIZATION` and `BOT`).\r\n\r\nwchargin-branch: empty-union-assertion\r\n","title":"Switch typed dispatch table to `empty` assertion","mergedAs":{"type":"COMMIT","hash":"e0a5118f8d97523c60ef424723e0d34d9d6adb93"},"additions":20,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000134\u0000":{"address":{"type":"PULL","number":"134","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/134","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"[WIP] Simple reference parse","mergedAs":null,"additions":484,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000135\u0000":{"address":{"type":"PULL","number":"135","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/135","comments":[],"reviews":[{"type":"REVIEW","id":"114570210","pull":{"type":"PULL","number":"135","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This is consistent with the single export (findReferences.js now exports\r\n`findReferences`)","title":"Rename parseReferences.js to findReferences.js","mergedAs":{"type":"COMMIT","hash":"d9d83c115747369a70963241a0992e525d4941d5"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000136\u0000":{"address":{"type":"PULL","number":"136","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/136","comments":[],"reviews":[{"type":"REVIEW","id":"114574296","pull":{"type":"PULL","number":"136","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Add logic to findReferences for finding GitHub username references,\r\ne.g. `Hello, @wchargin!`. The API is unchanged.\r\n\r\nTest plan:\r\nThere are new unit tests that verify this behavior works as expected.","title":"Find GitHub username references","mergedAs":{"type":"COMMIT","hash":"e191614dd49b166843d96456a21215f41b7957e6"},"additions":25,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000137\u0000":{"address":{"type":"PULL","number":"137","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/137","comments":[],"reviews":[{"type":"REVIEW","id":"114577999","pull":{"type":"PULL","number":"137","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We fetch urls for every type of author (organization, user, bot). For consistency, this commit adds urls to the author node payloads, so that every GitHub node payload has a url.\r\n\r\nTest plan:\r\nCheck that snapshot changes consist entirely of adding urls, and that\r\nthe urls are appropraite.","title":"Add url to author payloads","mergedAs":{"type":"COMMIT","hash":"01634aabcca3756b38e13aaf2f451cfbda2ad5ea"},"additions":16,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000138\u0000":{"address":{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/138","comments":[],"reviews":[{"type":"REVIEW","id":"114600910","pull":{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"github/githubPlugin.js was growing ungainly - it contained two major\r\npieces: all of the node and edge types, and the GitHub parser. As I\r\ncontemplated adding a third major new section of logic (an easy-to-use\r\napi for traversing the GitHub graph, with first class support for\r\ncomments, authorship, etc), I found the prospect of adding even more\r\ninto that file quite unappealing. So, I have instead split it into three\r\nfiles:\r\n\r\n* github/pluginName.js: Exports the plugin name.\r\n* github/types.js: Exports types of nodes, edges, and their payloads\r\n* github/parser.js: Exports `GithubParser`\r\n\r\nNo logic has been changed whatsoever - this is purely a rename-refactor.\r\n\r\nTest plan:\r\nCI still passes. I manually verified that the Artifact Editor can still\r\nload and display GitHub data.","title":"Split github/githubPlugin.js into three files","mergedAs":{"type":"COMMIT","hash":"515c57782502a151409471fdb569060e497f54dc"},"additions":199,"deletions":186},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000139\u0000":{"address":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/139","comments":[{"type":"COMMENT","id":"384072091","parent":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"114867285","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114867796","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114868668","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114869127","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114954844","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn this newly added module, we load the structural state of a git\r\nrepository into memory. We do not load into memory the contents of any\r\nblobs, so this is not enough information to perform any analysis\r\nrequiring file diffing. However, it is sufficient to develop a notion of\r\n“this file was changed in this commit”, by simply diffing the trees.\r\n\r\nTest Plan:\r\nUnit tests added; `yarn test` suffices. Reading these snapshots is\r\npretty easy, even though they’re filled with hashes:\r\n  - First, read over the commit specifications on lines 69–83 of\r\n    `loadRepository.test.js`, so you know what to expect.\r\n  - In the snapshot file, keep handy the time-ordered list of commit\r\n    SHAs at the bottom of the file, so that you know which commit SHA is\r\n    which.\r\n  - To verify that the large snapshot is correct: for each commit, read\r\n    the corresponding tree object and make sure that the structure is\r\n    correct.\r\n  - To verify the small snapshot, just check that it’s the correct\r\n    subset of the large snapshot.\r\n  - If you want to verify that the SHA for a blob is correct, open a\r\n    terminal and run `git hash-object -t blob --stdin`; then, enter the\r\n    content of the blob and press `<C-d>`. The result is the blob SHA.\r\n\r\nTo run a sanity-check on a large repository: apply the following patch:\r\n\r\n<details>\r\n<summary>Patch to print out statistics about loaded repository</summary>\r\n\r\n```diff\r\ndiff --git a/config/paths.js b/config/paths.js\r\nindex d2f25fb..8fa2023 100644\r\n--- a/config/paths.js\r\n+++ b/config/paths.js\r\n@@ -62,5 +62,6 @@ module.exports = {\r\n     fetchAndPrintGithubRepo: resolveApp(\r\n       \"src/plugins/github/bin/fetchAndPrintGithubRepo.js\"\r\n     ),\r\n+    loadRepository: resolveApp(\"src/plugins/git/loadRepository.js\"),\r\n   },\r\n };\r\ndiff --git a/src/plugins/git/loadRepository.js b/src/plugins/git/loadRepository.js\r\nindex a76b66c..9380941 100644\r\n--- a/src/plugins/git/loadRepository.js\r\n+++ b/src/plugins/git/loadRepository.js\r\n@@ -106,3 +106,7 @@ function findTrees(git: GitDriver, rootTrees: Set<Hash>): Tree[] {\r\n   }\r\n   return result;\r\n }\r\n+\r\n+const result = loadRepository(...process.argv.slice(2));\r\n+console.log(\"commits\", result.commits.size);\r\n+console.log(\"trees\", result.trees.size);\r\n```\r\n</details>\r\n\r\nThen, run `yarn backend` and put the following script in `test.sh`:\r\n\r\n<details>\r\n<summary>Contents for `test.sh`</summary>\r\n\r\n```shell\r\n#!/bin/bash\r\nset -eu\r\n\r\nrepo=\"$1\"\r\nref=\"$2\"\r\n\r\nvia_node() {\r\n    node bin/loadRepository.js \"${repo}\" \"${ref}\"\r\n}\r\n\r\nvia_git() (\r\n    cd \"${repo}\"\r\n    printf 'commits '\r\n    git rev-list \"${ref}\" | wc -l\r\n    printf 'trees '\r\n    git rev-list \"${ref}\" |\r\n        while read -r commit; do\r\n            git rev-parse \"${commit}^{tree}\"\r\n            git ls-tree -rt \"${commit}\" \\\r\n                | grep ' tree ' \\\r\n                | cut -f 1 | cut -d ' ' -f 3\r\n        done | sort | uniq | wc -l\r\n)\r\n\r\necho\r\nprintf 'Running directly via git...\\n'\r\ntime a=\"$(via_git)\"\r\n\r\necho\r\nprintf 'Running Node script...\\n'\r\ntime b=\"$(via_node)\"\r\n\r\ndiff -u <(cat <<<\"${a}\") <(cat <<<\"${b}\")\r\n```\r\n</details>\r\n\r\nFinally, run `./test.sh /path/to/some/repo origin/master`, and verify\r\nthat it exits successfully (zero diff). Here are some timing results on\r\nSourceCred and TensorBoard:\r\n\r\n  - SourceCred: 0.973s via Node, 0.327s via git.\r\n  - TensorBoard: 30.836s via Node, 6.895s via git.\r\n\r\nFor TensorFlow, running via git takes 7m33.995s. Running via Node fails\r\nwith an out-of-memory error after 39 minutes, with 10GB RAM and 4GB\r\nswap. See details below.\r\n\r\n<details>\r\n<summary>\r\nFull timing details, commit SHAs, and OOM error message\r\n</summary>\r\n\r\n```\r\n+ ./test.sh /home/wchargin/git/sourcecred 01634aabcca3756b38e13aaf2f451cfbda2ad5ea\r\n\r\nRunning directly via git...\r\n\r\nreal\t0m0.327s\r\nuser\t0m0.016s\r\nsys\t0m0.052s\r\n\r\nRunning Node script...\r\n\r\nreal\t0m0.973s\r\nuser\t0m0.268s\r\nsys\t0m0.176s\r\n+ ./test.sh /home/wchargin/git/tensorboard 7aa1ab9d60671056b8811b7099eec08650f2e4fd\r\n\r\nRunning directly via git...\r\n\r\nreal\t0m6.895s\r\nuser\t0m0.600s\r\nsys\t0m0.832s\r\n\r\nRunning Node script...\r\n\r\nreal\t0m30.836s\r\nuser\t0m3.216s\r\nsys\t0m10.588s\r\n+ ./test.sh /home/wchargin/git/tensorflow 968addadfd4e4f5688eedc31f92a9066329ff6a7\r\n\r\nRunning directly via git...\r\n\r\nreal\t7m33.995s\r\nuser\t5m21.124s\r\nsys\t1m5.476s\r\n\r\nRunning Node script...\r\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\r\n 1: node::Abort() [node]\r\n 2: 0x121a2cc [node]\r\n 3: v8::Utils::ReportOOMFailure(char const*, bool) [node]\r\n 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [node]\r\n 5: v8::internal::Factory::NewFixedArray(int, v8::internal::PretenureFlag) [node]\r\n 6: v8::internal::DeoptimizationInputData::New(v8::internal::Isolate*, int, v8::internal::PretenureFlag) [node]\r\n 7: v8::internal::compiler::CodeGenerator::PopulateDeoptimizationData(v8::internal::Handle<v8::internal::Code>) [node]\r\n 8: v8::internal::compiler::CodeGenerator::FinalizeCode() [node]\r\n 9: v8::internal::compiler::PipelineImpl::FinalizeCode() [node]\r\n10: v8::internal::compiler::PipelineCompilationJob::FinalizeJobImpl() [node]\r\n11: v8::internal::Compiler::FinalizeCompilationJob(v8::internal::CompilationJob*) [node]\r\n12: v8::internal::OptimizingCompileDispatcher::InstallOptimizedFunctions() [node]\r\n13: v8::internal::Runtime_TryInstallOptimizedCode(int, v8::internal::Object**, v8::internal::Isolate*) [node]\r\n14: 0x12dc8b08463d\r\n```\r\n</details>\r\n\r\nwchargin-branch: load-git-repositories","title":"Load Git repositories into memory","mergedAs":{"type":"COMMIT","hash":"418b745d7ca5c0d9521792b7c0b1133bd6e90d57"},"additions":421,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000140\u0000":{"address":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/140","comments":[],"reviews":[{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"114963862","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds flow typing for the JSON result from hitting the GitHub\r\ngraphql api. We can't prove that the flow typing is correct, but since\r\nthe type definition is colocated with the corresponding fragment\r\ndefinitions, we can hope that maintainers will maintain both together.\r\n\r\nWe update the parser to consume the new flow types. There are no flow\r\nerrors.\r\n\r\nTest plan:\r\nInspect the flowtypes, verify that they correspond to the data in\r\nexample-repo.json, and that there are no flow errors.","title":"Add flow types for GitHub graphql query response","mergedAs":{"type":"COMMIT","hash":"6a3e4d754cac357a17ee0ad3a2cab9d61ca295a9"},"additions":196,"deletions":78},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000141\u0000":{"address":{"type":"PULL","number":"141","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/141","comments":[],"reviews":[{"type":"REVIEW","id":"114987725","pull":{"type":"PULL","number":"141","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe should be able to get the types without depending on the function to\r\nload a Git repo from disk, and in particular without depending on\r\n`child_process`.\r\n\r\nTest Plan:\r\nFlow and tests are sufficient.\r\n\r\nwchargin-branch: extract-repository-types","title":"Extract repository types to a separate module","mergedAs":{"type":"COMMIT","hash":"5e4b7b1fcc0bfbce33e4f30b3e02e22fe850f534"},"additions":22,"deletions":19},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000142\u0000":{"address":{"type":"PULL","number":"142","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/142","comments":[],"reviews":[{"type":"REVIEW","id":"114991225","pull":{"type":"PULL","number":"142","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The example-repo.json file is regenerated with large diffs due to the\r\nchange in indentation level throughout the file.\r\n\r\nTest plan:\r\nSanity check the snapshot (close inspection is unnecessary due to the\r\nsimplicity of the code change). Check that CI pases.","title":"fetchGithubRepo no longer wraps the result in a vestigial data field","mergedAs":{"type":"COMMIT","hash":"8fdfacd097bd2a0e78d64ed9bdda7893bed16557"},"additions":297,"deletions":302},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000143\u0000":{"address":{"type":"PULL","number":"143","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/143","comments":[],"reviews":[{"type":"REVIEW","id":"114994194","pull":{"type":"PULL","number":"143","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Once the type was added, flow correctly discovered a bug in\r\nGithubGraphFetcher.js, which resulted in broken graph fetching in the\r\nArtifactEditor. Oops! / Good work Flow!\r\n\r\nI made `ensureNoMorePages` expect the result it is testing to be an\r\n`any`, which is appropriate for how the function is written (i.e. it is\r\nwritten in a way that is agnostic to the actual result).","title":"Add return type info for fetchGithubRepo","mergedAs":{"type":"COMMIT","hash":"4f857a8bb10b400a482d7666719a1e04e73369fc"},"additions":5,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000144\u0000":{"address":{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/144","comments":[],"reviews":[{"type":"REVIEW","id":"115361099","pull":{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"There's some context at #127, in which I initially proposed this change.\r\n\r\nIn addition to the long-term benefits described in #127, there is a\r\nshort-term benefit which is that it makes snapshot tests easier to read,\r\nbecause the GitHub ids are opaque and unreadable, while the GitHub urls\r\nare relatively easy to parse.\r\n\r\nThis change results in significant snapshot churn. Note that in the case of parser.test.js, the new snapshots are easier to read.","title":"Use urls as ids for GitHub nodes","mergedAs":{"type":"COMMIT","hash":"ad56ba087cb6fad34362647cf70a1c51cbb35bc7"},"additions":415,"deletions":415},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000145\u0000":{"address":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/145","comments":[],"reviews":[{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115401360","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our GitHub parser is implemented via a `GithubParser` class which builds\r\nthe GitHub graph. This is a convenient implementation, but an awkward\r\nAPI. This commit refactors the module so that it exposes a clean `parse`\r\nfunction, which ingests the GitHub JSON data and returns as completed\r\ngraph.\r\n\r\nTest plan:\r\nThe unit tests have been re-written to use the new public API. All the\r\nsnapshots are unchanged, and flow passes. Additionally, I ran `yarn\r\nstart` and verified that the GithubGraphFetcher for the Artifact plugin\r\nis still working.","title":"Refactor GH parser to expose a functional api","mergedAs":{"type":"COMMIT","hash":"18ce9982d2fbc080deada21e96f774b7efd337fd"},"additions":71,"deletions":34},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000146\u0000":{"address":{"type":"PULL","number":"146","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/146","comments":[],"reviews":[{"type":"REVIEW","id":"115783754","pull":{"type":"PULL","number":"146","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In preparation for using type info in the Graph apis, it is helpful to\r\nhave richer type info in the graph demo data.\r\n\r\nTest plan: Check that the snapshot changes only consist of type changes,\r\nand that CI passes.","title":"Add richer types to graphDemoData","mergedAs":{"type":"COMMIT","hash":"c635034dabb3412582af7f4af754c8881ba94f9b"},"additions":107,"deletions":76},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000147\u0000":{"address":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/147","comments":[],"reviews":[{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115800925","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115802779","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds an optional `typeOptions` argument to Graph.getInEdges\r\nand Graph.getOutEdges. The `typeOptions` allow filtering the returned\r\nedges by the type of the edge, and the type of the node that the edge is\r\nconnected to. This makes it much easier to use these methods to find\r\nconnections that have a certain relationship, e.g. finding the author of\r\na commit or the comments on an issue.\r\n\r\nTest plan:\r\nA new test suite was written that comprehensively tests this behavior,\r\nboth for getInEdges and getOutEdges.","title":"Enable type filtering on Graph.get{In,Out}Edges","mergedAs":{"type":"COMMIT","hash":"087d8d561e94bb3fe8c1858647c5b8b0fe9407f0"},"additions":117,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000149\u0000":{"address":{"type":"PULL","number":"149","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/149","comments":[],"reviews":[{"type":"REVIEW","id":"115803635","pull":{"type":"PULL","number":"149","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nUtilities like `deterministicCommit` provide valuable functionality that\r\nwe will want to use in other scripts and perhaps other test cases. It\r\nmakes sense to factor these out into utility functions.\r\n\r\nTest Plan:\r\nExisting tests pass.\r\n\r\nwchargin-branch: git-utils","title":"Add utility functions for working with Git repos","mergedAs":{"type":"COMMIT","hash":"dad8777e6c75e821f7d9179c970cd1689a79fb69"},"additions":77,"deletions":61},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000150\u0000":{"address":{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/150","comments":[],"reviews":[{"type":"REVIEW","id":"115804047","pull":{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nA few reasons for this:\r\n 1. This _is_ a utility, so it makes sense semantically.\r\n 2. This unifies the utilities API; clients like `loadRepository.test`\r\n    don’t have to keep around both a `git` and a `gitUtils`.\r\n 3. Most importantly, further scripts and tests shouldn’t depend on\r\n    `loadRepository` just for `localGit`. Depending on `gitUtils` makes\r\n    much more sense.\r\n\r\n(Note that `makeUtils` is no longer dependency-injectable, but that’s\r\nokay; I considered this and favored YAGNI on this one.)\r\n\r\nTest Plan:\r\nExisting unit tests pass.\r\n\r\nwchargin-branch: move-localgit","title":"Move `localGit`/`GitDriver` into Git utils","mergedAs":{"type":"COMMIT","hash":"3679529bef2c23c6a61af06a56d9164327809e1c"},"additions":46,"deletions":44},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000151\u0000":{"address":{"type":"PULL","number":"151","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/151","comments":[],"reviews":[{"type":"REVIEW","id":"115805537","pull":{"type":"PULL","number":"151","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe `loadRepository` test tries to clean up temporary directories, but\r\nfailed to do so because the directories were not empty. The cleanup hook\r\nthrew an error, but this error was silenced by Jest due to [a known\r\nbug][1] that was fixed a few days ago. We can fix this by asking `tmp`\r\nto clean up directories even if they are not empty, using the\r\n`unsafeCleanup` option.\r\n\r\n[1]: https://github.com/facebook/jest/issues/3266\r\n\r\nTest Plan:\r\nWhile running `watch -n 0.1 'ls /tmp | grep \"tmp-.*\" | wc -l'`, run\r\ntests. Note that the number increases by five and then drops down again;\r\nbefore this patch, it would increase by 5 and then stay there.\r\n\r\nwchargin-branch: clean-up-tmpdirs","title":"Clean up temporary directories in tests","mergedAs":{"type":"COMMIT","hash":"6f9941b5266e371894909bc83630262649ec0d6c"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000152\u0000":{"address":{"type":"PULL","number":"152","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/152","comments":[],"reviews":[{"type":"REVIEW","id":"115806074","pull":{"type":"PULL","number":"152","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nNote that the snapshot change is simply a move: no SHAs were changed.\r\n\r\nwchargin-branch: extract-example-repository-code","title":"Extract code to create the example repository","mergedAs":{"type":"COMMIT","hash":"75fd068a359ca3778084e3eb87e70b454aad81f8"},"additions":84,"deletions":52},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000153\u0000":{"address":{"type":"PULL","number":"153","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/153","comments":[],"reviews":[{"type":"REVIEW","id":"115806344","pull":{"type":"PULL","number":"153","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe want our main repository to include submodules so that we can test\r\nsubmodule support. Here, we create a repository to be included as a\r\nsubmodule.\r\n\r\nwchargin-branch: example-submodule-repository","title":"Create an example submodule repository","mergedAs":{"type":"COMMIT","hash":"28a118c814b2b2f26b33becf305aab053605726e"},"additions":48,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000154\u0000":{"address":{"type":"PULL","number":"154","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/154","comments":[],"reviews":[{"type":"REVIEW","id":"115807015","pull":{"type":"PULL","number":"154","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn particular, we excluded `bin`, but this was catching non-root\r\ndirectories named `bin`, too, and so files like\r\n`src/plugins/github/bin/fetchAndPrintGithubRepo.js` were not subject to\r\nprettification. Happily, those files are all pretty enough, anyway.\r\n\r\nTest Plan:\r\nNote that mangling the format of `fetchAndPrintGithubRepo.js` prior to\r\nthis commit would not cause `yarn check-pretty` to fail, nor would the\r\nmanglings be fixed by `yarn prettify`—but that both of these behaviors\r\nare reversed after this commit.\r\n\r\nwchargin-branch: prettier-exclude-root-only","title":"Only exclude top-level directories from Prettier","mergedAs":{"type":"COMMIT","hash":"ef7610a440a93ffae5b10985e04950bd02290705"},"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000155\u0000":{"address":{"type":"PULL","number":"155","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/155","comments":[],"reviews":[{"type":"REVIEW","id":"115807611","pull":{"type":"PULL","number":"155","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’ll use this to create the repositories on disk and then push them to\r\nGitHub.\r\n\r\nTest Plan:\r\nGenerate both kinds of repository, and check out the SHAs:\r\n```shell\r\n$ yarn backend\r\n$ node bin/createExampleRepo.js /tmp/repo\r\n$ node bin/createExampleRepo.js --submodule /tmp/repo-submodule\r\n$ node bin/createExampleRepo.js --no-submodule /tmp/repo-no-submodule\r\n$ # (first and third lines do the same thing)\r\n$ git -C /tmp/repo rev-parse HEAD\r\n677b340674bde17fdaac3b5f5eef929139ef2a52\r\n$ git -C /tmp/repo-submodule rev-parse HEAD\r\n29ef158bc982733e2ba429fcf73e2f7562244188\r\n$ git -C /tmp/repo-no-submodule rev-parse HEAD\r\n677b340674bde17fdaac3b5f5eef929139ef2a52\r\n```\r\nThen, note that these SHAs are expected per the snapshot file in\r\n`exampleRepo.test.js.snap`.\r\n\r\nwchargin-branch: create-example-repo-command","title":"Add a command-line script to create example repos","mergedAs":{"type":"COMMIT","hash":"d6e9b0a72b85990f9a81d290fa26f858ffeb1425"},"additions":75,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000156\u0000":{"address":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/156","comments":[],"reviews":[{"type":"REVIEW","id":"115808416","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115808927","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115809335","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe main example repository now covers the currently desired features:\r\nit has blobs, subtrees, and submodules, and commits that change each of\r\nthese. (We don’t have merge commits yet—we can add those once we start\r\nto care about them.)\r\n\r\nOnce this is merged, I will push the two repositories to GitHub.\r\n\r\nTest Plan:\r\nVerifying and understanding is easier than ever before. You can run the\r\nfollowing commands to create the repositories in question on your disk:\r\n```shell\r\n$ yarn backend\r\n$ node bin/createExampleRepo.js /tmp/repo\r\n$ node bin/createExampleRepo.js --submodule /tmp/subrepo\r\n```\r\n\r\nYou can then explore these repositories at your leisure. For instance,\r\nto check that the `loadRepository` snapshot has the right set of\r\ncommits, inspect the output of the following command:\r\n```shell\r\n$ git -C /tmp/repo log --format='%H %T'\r\n```\r\nOr, to check that a particular tree has the right contents, just run:\r\n```shell\r\n$ git -C /tmp/repo ls-tree TREE_SHA\r\n```\r\nVerifying the `exampleRepo` snapshot is similarly easy: just check that\r\nthe lists of commit SHAs in `/tmp/repo` and `/tmp/subrepo` are correct.\r\n\r\nwchargin-branch: include-submodule","title":"Include a submodule in the main example repository","mergedAs":{"type":"COMMIT","hash":"aa071ceab38f3228cc280f31f6f416f85d89c1f3"},"additions":248,"deletions":75},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000157\u0000":{"address":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/157","comments":[],"reviews":[{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115810217","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"115810266","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Some consumers of the graph may prefer to treat it as an undirected\r\ngraph. For example, when finding the author of an issue, it is wholly\r\nsufficient to find an edge with the `AUTHORS` type; the caller may\r\nprefer not to be bothered with remembering which end of the `AUTHORS`\r\nend is considered the `src` and which is the `dst`.\r\n\r\nThe `getAdjacentEdges` call enables that, by combining the output of\r\n`getInEdges` and `getOutEdges`.\r\n\r\nTest plan:\r\nThe new tests are pretty comprehensive.","title":"Add `Graph.getAdjacentEdges` for in and out edges","mergedAs":{"type":"COMMIT","hash":"8e9ddbf9fc191a43e53c04d23956abccaa24226c"},"additions":101,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000158\u0000":{"address":{"type":"PULL","number":"158","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/158","comments":[],"reviews":[{"type":"REVIEW","id":"116045282","pull":{"type":"PULL","number":"158","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nUsing `array.join()` added commas at the start of some lines; I meant to\r\nuse `array.join(\"\")`.\r\n\r\n(I’ve now inspected the full generated contents of both repos, and they\r\nlook good.)\r\n\r\nTest Plan:\r\nIt is expected that these attributes of the snapshots should change.\r\nThere’s no need to carefully check the SHAs.\r\n\r\nwchargin-branch: readme-change","title":"Remove superfluous commas from example repo README","mergedAs":{"type":"COMMIT","hash":"c7235f6e490fe3c9b77edf808fa00fc5cbc4d4ee"},"additions":54,"deletions":54},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000159\u0000":{"address":{"type":"PULL","number":"159","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/159","comments":[],"reviews":[{"type":"REVIEW","id":"116045728","pull":{"type":"PULL","number":"159","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWhen we shell out to `git`, we don’t want the end user’s environment\r\nvariables and Git configuration to influence the results. This commit\r\nstandardizes those inputs. Standardizing the environment has the side\r\nbenefit that the `GIT_DIR` environment variable is not set, which means\r\nthat the test suite will work properly when run from the `exec` step of\r\na Git rebase.\r\n\r\nTest Plan:\r\nTests pass and snapshots are unchanged. Note that\r\n```shell\r\n$ git rebase HEAD --exec 'CI=1 yarn test'\r\n```\r\nworks after this commit but not before it.\r\n\r\nwchargin-branch: standardize-git-environment","title":"Standardize environment passed to Git","mergedAs":{"type":"COMMIT","hash":"f4de3e2067c4a487e014ff213fafd3004a259cd3"},"additions":26,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000160\u0000":{"address":{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/160","comments":[{"type":"COMMENT","id":"385093634","parent":{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116082772","pull":{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun the script with `--dry-run`, which currently prints\r\n```shell\r\n$ src/plugins/git/demoData/synchronizeToGithub.sh -n\r\nyarn run v1.5.1\r\n[build output truncated]\r\nBuild completed; results in 'bin'.\r\nDone in 3.30s.\r\n\r\nSynchronizing: example-git\r\nwarning: no common commits\r\nTo github.com:sourcecred/example-git.git\r\n + 3507b7c...3715ddf HEAD -> master (forced update)\r\n\r\nSynchronizing: example-git-submodule\r\nEverything up-to-date\r\n\r\nDone.\r\n```\r\nThis reflects the correct state of affairs, because #158 changed the\r\nexample repository. Note that the `3715ddf` SHA in the output of the\r\nabove script matches the SHA in the `exampleRepo.test.js.snap` snapshot.\r\n\r\nwchargin-branch: sync-git-example-repos","title":"Add one-way GitHub sync for Git example repos","mergedAs":{"type":"COMMIT","hash":"1550e6d05e1a0837b6312dd3786a676b05b080f9"},"additions":41,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000161\u0000":{"address":{"type":"PULL","number":"161","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/161","comments":[],"reviews":[{"type":"REVIEW","id":"116088409","pull":{"type":"PULL","number":"161","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Previously, the address module exported `sortedByAddress`, a utility\r\nfunction that sorts an array of `Addressable`s. This function was only\r\nused in test code.\r\n\r\nThis commit replaces it with generic usage of `lodash.sortBy`. This\r\nreduces the API surface area of the module, and removes test-only code\r\nfrom the exported api.\r\n\r\nNew dependency added: `lodash.sortby`\r\nhttps://www.npmjs.com/package/lodash.sortby","title":"Remove `address.sortedByAddress`","mergedAs":{"type":"COMMIT","hash":"28e686c3690fa25d9a79b8a8063fb51bede9d447"},"additions":21,"deletions":53},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000162\u0000":{"address":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/162","comments":[{"type":"COMMENT","id":"385106025","parent":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116092182","pull":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`Graph.getAdjacentEdges` had a serious defect: for the adjacent edges,\r\nit's hard to tell which of the {src,dst} is the neighboring node address\r\nand which is the node we called `getAdjacentEdges` on.\r\n\r\nThis commit fixes that limitation by replacing `getAdjacentEdges` with\r\n`getNeighborhood`, with a return signature of\r\n`{edge: Edge<EP>, neighborAddress: Address}[]`","title":"Replace `Graph.{getAdjacentEdges,getNeighborhood}`","mergedAs":{"type":"COMMIT","hash":"678924087abcd7fd9f15f45a24e75d21ef9c4408"},"additions":111,"deletions":47},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000163\u0000":{"address":{"type":"PULL","number":"163","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/163","comments":[],"reviews":[{"type":"REVIEW","id":"116096590","pull":{"type":"PULL","number":"163","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit renames the following graph functions:\r\n\r\n* `get{Node,Edge}{,s}` -> `{node,edge}{,s}`\r\n* `get{In,Out}Edges` -> `{in,out}Edges`\r\n* `getNeighborhood` -> `neighborhood`\r\n\r\nThe rename was effected across the repo by running:\r\n\r\n```\r\n$ find src -name \"*.js\" -exec sed -i 's/getNeighborhood/neighborhood/g' {} +\r\n```\r\n\r\nmodified appropriately for each subsitution.\r\n\r\nTest plan:\r\nInspect the code to make sure nothing was erronously renamed. Check that\r\nCI passes.","title":"Remove `get` prefix from getters in graph.js","mergedAs":{"type":"COMMIT","hash":"dd480848101058cd49eab2163fc25ab5d8e23b61"},"additions":117,"deletions":117},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000164\u0000":{"address":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/164","comments":[],"reviews":[{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, we store GitHub Users, Organizations, and Bots as separate\r\nnodetypes in the graph. This is inconvenient, as we don't care very much\r\nwhat type of entity authored a node.\r\n\r\nThis commit collapses those three categories into one nodetype. The\r\nextra information has migrated to the node payload, so it is still\r\npossible to discover this information if it's important.\r\n\r\nTest plan: There is some amount of snapshot churn because the author\r\nnode types and payloads have changed. Expected snapshot changes: \r\nevery edge pointing to a \"USER\" points to an \"AUTHOR instead.\r\nThe two author nodes in the graph now have type \"AUTHOR\" and \r\nauthorSubtype \"USER\".\r\n\r\nVerify that the snapshot changes are appropriate, and that CI passes.\r\n\r\n@wchargin: Red diffs :)","title":"Collapse the 3 author types into 1","mergedAs":{"type":"COMMIT","hash":"3d79f7680eab9ae918cb7779406bcfb21b9354c8"},"additions":87,"deletions":102},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000165\u0000":{"address":{"type":"PULL","number":"165","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/165","comments":[],"reviews":[{"type":"REVIEW","id":"116118477","pull":{"type":"PULL","number":"165","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nI’d like to use `Map`s whenever the keys are homogeneous (i.e.,\r\ndictionaries, not structs). But this has proven infeasible. The primary\r\nissue at this point is that `JSON.stringify(anyMap)` is `\"{}\"`—not\r\nentirely unreasonable given that maps can have non-string keys, but\r\nfrustrating enough to not use them.\r\n\r\nTest Plan:\r\nJest appears to order the snapshot keys differently for `Map`s and\r\nobjects (the former by insertion order and the latter alphabetical),\r\nwhich makes the snapshot change harder to read. I verified that the\r\ngeneral structure is okay, and hand-verified some of the individual\r\nchanges. Noting that the number of lines added and deleted in the\r\nsnapshot is a good sanity check.\r\n\r\nwchargin-branch: map-to-object","title":"Switch in-memory Git types from Maps to objects","mergedAs":{"type":"COMMIT","hash":"301e542ee11196d05349815ce582f26b60c44e60"},"additions":140,"deletions":138},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000166\u0000":{"address":{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/166","comments":[{"type":"COMMENT","id":"385131236","parent":{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116118579","pull":{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nTwo reasons for this. First, we want tests to be able to operate on this\r\ndata without having to generate repositories via `git(1)`. (Doing that\r\nis slow, and requires a Git installation, and makes it less clear that\r\nthe tests are correctly isolated/provides more surface area for\r\nsomething to go wrong.) Second, in general plugins will need a canonical\r\nsource of test data, so setting/continuing this precedent is a good\r\nthing.\r\n\r\nTest Plan:\r\nObserve that the old Jest snapshot must be equivalent to the new JSON\r\none, because the test criterion in `loadRepository.test.js` changed and\r\nthe test still passes. Then, run `loadRepositoryTest.sh` and note that\r\nit passes; change the `example-git.json` file and note that the test\r\nfails when re-run; then, run the test with `--updateSnapshot` and watch\r\nit magically revert your changes.\r\n\r\nwchargin-branch: check-in-git-repo","title":"Check in example repo’s in-memory representation","mergedAs":{"type":"COMMIT","hash":"1c28c75e39153d0c36fbde3dbc9b3ff4743a219b"},"additions":348,"deletions":253},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000167\u0000":{"address":{"type":"PULL","number":"167","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/167","comments":[{"type":"COMMENT","id":"385135316","parent":{"type":"PULL","number":"167","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit removes an unnecessary level of nesting in graph.test.js\r\n(the \"#graph\" describe block inside the \"graph\" describe block), and\r\nmoves all the typefiltering logic into its own section.\r\n\r\nTest plan: Absolutely no changes to code were made, except for moving\r\nblocks of code around. The fact that tests still pass should be\r\nsufficient.","title":"Reorganize graph.test.js","mergedAs":null,"additions":972,"deletions":977},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000168\u0000":{"address":{"type":"PULL","number":"168","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/168","comments":[],"reviews":[{"type":"REVIEW","id":"116119360","pull":{"type":"PULL","number":"168","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"When requesting nodes and edges from the graph, it is convenient to\r\nfilter them by their type.\r\n\r\nIn the future, we should add plugin filtering as well, as we\r\nexpect type names to collide across plugins.\r\n\r\nWe may also want to consider keeping a cache of nodes and edges by type\r\nto speed up these calls, if they become performance bottlenecks. (The\r\nimplementation in this commit naively iterates over every node/edge.)\r\n\r\nTest plan:\r\nVerify that the unit tests are appropriate.","title":"Graph: type filter for `nodes()` and `edges()`","mergedAs":{"type":"COMMIT","hash":"ec3d084ffcb6a22a6cc63aba6c8bc5511d774a59"},"additions":73,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000169\u0000":{"address":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/169","comments":[{"type":"COMMENT","id":"385139537","parent":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116386453","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116386627","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116456307","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nThis snapshot test is too unwieldy to actually read—it’s 1000 lines of\r\nopaque SHAs and thrice-stringified JSON objects—so it should be\r\ninterpreted as a regression test only. The programmatic tests should\r\nsuffice.\r\n\r\nwchargin-branch: wip-create-graph","title":"Convert in-memory Git repos to cred graphs","mergedAs":{"type":"COMMIT","hash":"5af5748ed72cf7c38827448b9b7bba610e895f31"},"additions":1668,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000170\u0000":{"address":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/170","comments":[{"type":"COMMENT","id":"385139839","parent":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116121106","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116121171","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116121174","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116121256","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116121404","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Interacting with raw contribution graphs is cumbersome. We'll need\r\nmore fluent and convenient ways to retrieve data from them; we can do\r\nthis by creating porcelain APIs that wrap the underlying graph.\r\n\r\nThis commit adds a simple porcelain API for the GitHub data. It creates\r\nthe following classes:\r\n\r\n* `api.Repository`\r\n* `api.Issue`\r\n* `api.PullRequest`\r\n* `api.Comment`\r\n* `api.Author`\r\n\r\nThe classes all wrap a graph and a nodeAddress. They provide read-only\r\nfunctions for retreiving data from the graph; that data might be a part\r\nof the node payload, or it might do some graph traversal under the hood.\r\n\r\nThe choice to have the wrapper hold onto the Address rather than the\r\nnode itself was deliberate; in the future, the graph may contain nodes\r\nthat are not synchronously reachable, so this approach allows us to\r\ncreate wrappers for nodes we can't synchronously reach. When this comes\r\nup in practice, we can then add async methods to the wrapper.\r\n\r\nNote that some data already included in our graph, such as\r\nPullRequestReviews and PullRequestReviewComments, were deliberately\r\nexcluded, so as to allow the core ideas to be reviewed without\r\nunnecessary clutter.\r\n\r\nTest plan:\r\nCheck that the unit tests appropriately test the behavior, and that the\r\nAPI seems pleasant to use.","title":"Add a porcelain api for Github data","mergedAs":{"type":"COMMIT","hash":"7158deaad371fa42aa5b06e22ff966c7391774a1"},"additions":302,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000172\u0000":{"address":{"type":"PULL","number":"172","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/172","comments":[],"reviews":[{"type":"REVIEW","id":"116197734","pull":{"type":"PULL","number":"172","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Commit generated by running `src/plugins/github/fetchGithubRepoTest -u` and updating snapshots.","title":"Update the GitHub example repo data","mergedAs":{"type":"COMMIT","hash":"d878be655075a4a1135d31227f746d04be287759"},"additions":102,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000173\u0000":{"address":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/173","comments":[],"reviews":[{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116200245","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116360983","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116361624","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In general, methods in the porcelain GitHub api may return multiple\r\ntypes; e.g. a reference could be to an Issue, PullRequest, Comment,\r\nAuthor (or more). To make working with the api more convenient while\r\nmaintaining safety, this commit adds a static `asType` method to each\r\nEntity class, which confirms that type coercion is safe, and errors if\r\nnot.\r\n\r\nThis commit also adds `issueOrPRByNumber`, a convenience method, to\r\napi.test.js.\r\n\r\nTest plan: Check the API usage and verify that it is reasonable.","title":"Add safe type coercion for GitHub api","mergedAs":{"type":"COMMIT","hash":"22ca77ed05468194681381d90b1bc35a12996a45"},"additions":63,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000174\u0000":{"address":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/174","comments":[],"reviews":[{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116453001","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116453018","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116458717","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This method removes `Graph.inEdges` and `Graph.outEdges`. As a\r\nreplacement to these two functions, `graph.neighborhood` now takes an\r\noptional `direction` flag, which can be set to `\"IN\" | \"OUT\" | \"ANY\"`.\r\n\r\nThis reduces the surface area of the Graph API, and means that the same\r\npattern can be used when requesting in or out neighbors as is used when\r\nrequesting all neighbors.\r\n\r\nThis change generates significant churn in the test files, and in some\r\ncases the tests are less elegant / show historicity, as they were\r\nwritten for the type signature of `{in,out}Edges`, which just returns an\r\narray of edges, and now receive an array of neighbors. I think this is\r\nacceptable, and it's not worth re-writing the test.\r\n\r\nIn many cases, replacing existing calls to `{in,out}Edges` in our actual\r\ncodebase resulted in cleaner code, as `neighborhood` successfully\r\nabstracts over the common patterns that users of `{in,out}Edges` were\r\nimplementing.\r\n\r\nAs a fly-by refactor, I also changed the `neighborAddress` part of the\r\n`neighborhood` return value to `neighbor`. It's a little less\r\ndescriptive, but it's more concise, and flow is there to help ensure\r\nit's used correctly.\r\n\r\nTest plan: Note that CI passes. Inspect the test changes, and verify\r\nthat they are appropriate transformations for consuming the new API.","title":"Remove Graph.{in,out}Edges","mergedAs":{"type":"COMMIT","hash":"0609201af4cd1559c5d5f1992d0f98696256867d"},"additions":216,"deletions":155},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000175\u0000":{"address":{"type":"PULL","number":"175","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/175","comments":[],"reviews":[{"type":"REVIEW","id":"116450121","pull":{"type":"PULL","number":"175","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn lint` and `yarn travis` and observe success. Add something\r\nthat triggers a lint warning, like `const zzz = 3;`; re-run and observe\r\nfailures.\r\n\r\nwchargin-branch: lint","title":"Fix all lint errors, adding a lint CI step","mergedAs":{"type":"COMMIT","hash":"f3a440244e24852a0d33e843eadd02b541002d8b"},"additions":43,"deletions":63},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000176\u0000":{"address":{"type":"PULL","number":"176","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/176","comments":[],"reviews":[{"type":"REVIEW","id":"116475903","pull":{"type":"PULL","number":"176","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFlow didn’t catch this because all the payloads are `{}` anyway.\r\n\r\nTest Plan:\r\nNote that every node and edge payload is now listed exactly once in the\r\ncorrect spot for each of `{Node,Edge}{Type,Payload}`.\r\n\r\nwchargin-branch: git-nodepayload","title":"Fix Git plugin `NodePayload` definition","mergedAs":{"type":"COMMIT","hash":"d5f468ca6835acafee53b82fc6f52afe755fbff6"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000177\u0000":{"address":{"type":"PULL","number":"177","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/177","comments":[],"reviews":[{"type":"REVIEW","id":"116480969","pull":{"type":"PULL","number":"177","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nSnapshot updated with `./src/plugins/git/loadRepositoryTest.sh -u`; unit\r\ntests suffice.\r\n\r\nwchargin-branch: load-commit-parents","title":"Load commit parent hashes into memory","mergedAs":{"type":"COMMIT","hash":"56ddb5cf9b15323e88da30f00e9ff20090d5f83b"},"additions":24,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000178\u0000":{"address":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/178","comments":[],"reviews":[{"type":"REVIEW","id":"116481723","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"116483280","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nTo verify the snapshot change, either believe the programmatic tests, or\r\nuse the following script to verify that the right edges were added:\r\n```bash\r\n#!/bin/bash\r\nset -eu\r\nexample_repo=\"$(mktemp -d)\"\r\nyarn backend >/dev/null 2>/dev/null\r\nnode bin/createExampleRepo.js \"${example_repo}\"\r\nexpected() {\r\n    git -C \"${example_repo}\" log --format='%H %P' \\\r\n        | awk '{ if (NF > 1) { print $2 \" \" $1 } }' \\\r\n        | sort\r\n}\r\nactual() {\r\n    git diff HEAD^..HEAD | grep -A 1 -F -e src -e dst \\\r\n        | sed -n 's/^+.*\"id\": \"\\(.\\+\\)\".*/\\1 /p' \\\r\n        | tr -d $'\\n' | cat - <(echo) \\\r\n        | fold -s -w 82 | sed 's/ *$//' \\\r\n        | sort\r\n}\r\ndiff -u <(expected) <(actual)\r\n```\r\n\r\nwchargin-branch: graph-commit-parents","title":"Add commit parent edges in the Git graph","mergedAs":{"type":"COMMIT","hash":"16e8e399e6c869ebdcb350b41cdba62680750d43"},"additions":159,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000179\u0000":{"address":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/179","comments":[],"reviews":[{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also, a slight re-organization of the GitHub api test code.","title":"Add PR reviews and comments to GitHub api","mergedAs":{"type":"COMMIT","hash":"a1d072846d036753f3d51f6a7f9a4ce06490f63d"},"additions":138,"deletions":62},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000180\u0000":{"address":{"type":"PULL","number":"180","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/180","comments":[],"reviews":[{"type":"REVIEW","id":"116490738","pull":{"type":"PULL","number":"180","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I added a lot of new comments that have url references to different\r\ntypes of GitHub entities, e.g. to pull request review comments.\r\n\r\nThe commit was generated by running the example repo fetcher, and\r\nrunning yarn test and updating snapshots.","title":"Update example repo data","mergedAs":{"type":"COMMIT","hash":"0c0bbf58e2522162c7e83422057ee3ae79d1c3a2"},"additions":381,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000181\u0000":{"address":{"type":"PULL","number":"181","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/181","comments":[],"reviews":[{"type":"REVIEW","id":"116491110","pull":{"type":"PULL","number":"181","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"For example, `https://github.com/decentralion` is now a valid url\r\nreference to a GitHub author.\r\n\r\nTest plan: Check the added test case.","title":"findReferences now finds url references to users","mergedAs":{"type":"COMMIT","hash":"f358c33e2a7a1273daf282858cf2c576cf238bff"},"additions":9,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000182\u0000":{"address":{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/182","comments":[],"reviews":[{"type":"REVIEW","id":"116495168","pull":{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds the `addReferenceEdges()` method to the GitHub parser,\r\nwhich examines all of the posts in the parsed graph and adds References\r\nedges when it detects references between posts. As an example, `Hey\r\n@wchargin, take a look at #1337` would generate two references.\r\n\r\nWe currently parse the following kinds of references:\r\n- Numeric references to issues/PRs.\r\n- Explicit in-repository url references (to any entity)\r\n- @-author references\r\n\r\nWe do not parse:\r\n- Cross-repository urls\r\n- Cross-repository shortform (e.g. `sourcecred/sourcecred#100`)\r\n\r\n`Parser.parse` calls `addReferenceEdges()`, so no change is required by\r\nconsumers to have reference edges added to their graphs.\r\n\r\nThe GitHub porcelain API layer now includes methods for retreiving the\r\nentities referenced by a post.\r\n\r\nTest plan:\r\nThis commit is tested both via snapshot tests, and explicit testing at\r\napi layer. (Actually, the creation of the porcelain API layer was\r\nprompted by wanting a cleaner way to test this commit.) I recommend\r\ninspecting the snapshot tests for sanity, but mostly relying on the\r\ntested behavior in api.test.js.","title":"Create GitHub reference edges","mergedAs":{"type":"COMMIT","hash":"acf50005473d89b9fb269a327b2d6f8074a8dd74"},"additions":1472,"deletions":74},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000183\u0000":{"address":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/183","comments":[{"type":"COMMENT","id":"385736305","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"385772936","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"385801696","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"116682511","pull":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nTo avoid confusion, we simultaneously remove unused capturing groups.\r\nThis is not strictly necessary, but it makes the code less brittle.\r\n\r\nTest Plan:\r\nThe newly added test fails before the change to `findReferences.js`.\r\n\r\nwchargin-branch: url-punctuation","title":"Exclude punctuation surrounding URL references","mergedAs":{"type":"COMMIT","hash":"ee03c58357389cd147743e140a911d43a87d9c3a"},"additions":17,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000184\u0000":{"address":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/184","comments":[{"type":"COMMENT","id":"386132418","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386158126","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386360796","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386374928","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117071195","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117081822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117088427","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117105822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPrior to this commit, given a `Tree` node with an edge to a `TreeEntry`\r\nnode, there was no way to tell what the entry name was other than\r\nparsing the ID (which should never be required). This adds appropriate\r\ndata to the payload of a `TreeEntry`, and also to the inclusion edge (so\r\nthat if you only have the edge, you don’t have to fetch the entry).\r\n\r\nTest Plan:\r\nSnapshot changes are readable.\r\n\r\nwchargin-branch: treeentry-metadata","title":"Store `TreeEntry` metadata in non-string form","mergedAs":{"type":"COMMIT","hash":"bbb05c95089e92c40e8d07a1809fd1a7f2d27ef9"},"additions":223,"deletions":80},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000185\u0000":{"address":{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/185","comments":[{"type":"COMMENT","id":"386134239","parent":{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117080610","pull":{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSee new explanatory comment in `src/plugins/git/types.js`.\r\n\r\nShout-out to `git` for having an excellent command-line API:\r\nthe `--blob` argument to `git-config` is perfect for this situation.\r\n\r\nTest Plan:\r\nSnapshot updates are readable and sufficient.\r\n\r\nwchargin-branch: load-submodule-urls","title":"Load submodule URLs at each commit","mergedAs":{"type":"COMMIT","hash":"7dbecfdac6b75934a74d621c3ce3e0b1e2cb1bce"},"additions":96,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000186\u0000":{"address":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/186","comments":[],"reviews":[{"type":"REVIEW","id":"117099205","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117099508","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117099731","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPreviously, a tree entry had exactly one `HAS_CONTENTS` edge, unless the\r\ntree entry corresponded to a submodule commit, in which case we had no\r\ninformation at all. Now, submodule commit tree entries point to zero or\r\nmore `SUBMODULE_COMMIT` nodes. In the vast majority of cases, there will\r\nbe exactly one such node—however, it is possible that a particular tree\r\nentry could correspond to multiple submodules (clone two identical\r\nsubmodules with different URLs) or none at all (some manually edited\r\n`.gitmodules` or other corruption).\r\n\r\nTest Plan:\r\nThe snapshot changes are easy enough to read and verify (two new nodes\r\nand five new edges). Additionally, the path-to-submodule `createGraph`\r\ntest has been updated.\r\n\r\nwchargin-branch: graph-submodule-urls","title":"Create nodes for submodule commits","mergedAs":{"type":"COMMIT","hash":"082515e16acc4f016775c58b6734cdbaa6221d0f"},"additions":205,"deletions":39},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000187\u0000":{"address":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/187","comments":[{"type":"COMMENT","id":"386378566","parent":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386431049","parent":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIf a commit causes a tree entry to change hash while keeping the same\r\nname, we now add a BECOMES edge between the corresponding entries.\r\n\r\nDetails with submodules introduce some interesting edge cases, but\r\notherwise this is reasonably straightforward.\r\n\r\nTest Plan:\r\nSnapshot changes are readable enough to manually verify. Programmatic\r\ntests also added.\r\n\r\nwchargin-branch: becomes-edges","title":"Add BECOMES edges in the Git graph","mergedAs":null,"additions":342,"deletions":42},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000188\u0000":{"address":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/188","comments":[{"type":"COMMENT","id":"386137117","parent":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386137251","parent":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117086270","pull":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis can be useful for speed, but it can also be important for\r\ncorrectness (at least theoretically): if we run both these scripts\r\nconcurrently, then we don’t want one of them to squash the `bin`\r\ndirectory while the other is about to invoke an executable therein.\r\n\r\nOne might note that the diffs to the two files in this commit are\r\nvirtually identical, and indeed the files themselves are quite similar.\r\nI’d prefer to keep the duplication for now; if we really need a Bash\r\nsnapshot testing framework, we can factor one out.\r\n\r\nTest Plan:\r\nRun each script with `--help`, with `--build` and `--no-build`, and with\r\nand without `-u`.\r\n\r\nwchargin-branch: optional-rebuild","title":"Add options to not rebuild on shell script tests","mergedAs":{"type":"COMMIT","hash":"79dff9a083515bc8b1746a9a53cd367e85be21d4"},"additions":45,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000189\u0000":{"address":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/189","comments":[{"type":"COMMENT","id":"386131713","parent":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386147856","parent":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117097169","pull":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis CI script accomplishes two tasks:\r\n 1. It speeds up our build by parallelizing where possible.\r\n 2. It opens the possibility for running Travis cron jobs.\r\n\r\nCurrently, this script by default does the same amount of work as our\r\ncurrent CI script. However, I’d like to move `yarn backend` into the\r\nlist of basic actions: a backend build failure should fail CI.\r\n\r\nNote: this script is written to be executable directly by Node, so we\r\ncan’t use Flow types with the standard syntax. Instead, we use the\r\ncomment syntax: https://flow.org/en/docs/types/comments/\r\n\r\nTest Plan:\r\nThe following should pass with useful output:\r\n  - `npm run travis`\r\n  - `GITHUB_TOKEN=\"your_github_token\" npm run travis -- --full`\r\n\r\nThe following should fail with useful output:\r\n  - `npm run travis -- --full` (fail)\r\n\r\nTo test different failure modes, it can be helpful to add\r\n```js\r\n    {id: \"doomed\", cmd: [\"false\"], deps: []},\r\n    {id: \"orphan\", cmd: [\"whoami\"], deps: [\"who\", \"are\", \"you\"]},\r\n```\r\nto the list of `basicTasks` in `travis.js`.\r\n\r\nTo test performance:\r\n```shell\r\n$ time node ./config/travis.js >/dev/null 2>/dev/null\r\n\r\nreal    0m8.306s\r\nuser    0m20.336s\r\nsys     0m1.364s\r\n\r\n$ time bash -c \\\r\n>     'npm run check-pretty && npm run lint && npm run flow && CI=1 npm run test' \\\r\n>     >/dev/null 2>/dev/null\r\n\r\nreal    0m12.427s\r\nuser    0m13.752s\r\nsys     0m0.804s\r\n```\r\nA 50% savings is not bad at all—and the raw time saved should only\r\nimprove from here on, as the individual steps start taking more time.\r\n\r\nwchargin-branch: custom-ci","title":"Implement a custom CI script","mergedAs":{"type":"COMMIT","hash":"38f4121ce9ab67228fab5f6e08feb8f69568ac10"},"additions":246,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000191\u0000":{"address":{"type":"PULL","number":"191","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/191","comments":[],"reviews":[{"type":"REVIEW","id":"117117080","pull":{"type":"PULL","number":"191","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis prevents the boilerplate output of the form\r\n```\r\n\r\n> sourcecred-explorer@0.1.0 check-pretty /home/wchargin/git/sourcecred\r\n> prettier --list-different '**/*.js'\r\n\r\n```\r\n(superfluous linebreaks included). In the case that a script fails, it\r\nalso omits the giant “this is most likely not a problem with npm” block.\r\n\r\nThe downside to this is that it suppresses any errors in npm-run-script\r\nitself. For instance, `npm run wat` produces “missing script: wat”,\r\nwhile `npm run --silent wat` just silently exits with 1. This does not\r\nsilence the actual scripts themselves, so things like lint errors or\r\ntest failures will still appear.\r\n\r\nTest Plan:\r\nRun `yarn travis` before and after this commit, and note that the\r\nresulting build log is prettier after.\r\n\r\nwchargin-branch: ci-silent","title":"Run npm scripts with `--silent` in CI","mergedAs":{"type":"COMMIT","hash":"25d0106a3389eb3231e0628165cb1fccff0b1af2"},"additions":5,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000192\u0000":{"address":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/192","comments":[{"type":"COMMENT","id":"386161592","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386376352","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386376665","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis means that Flow will check from scratch, instead of merging in\r\nincremental stages and talking to an existing server.\r\n\r\nThis improves test isolation. If your existing Flow server is in a\r\ndifferent state than a new Flow server would be, then without this patch\r\nyou might not get correct results. (This can happen if, for instance,\r\nyou add additional `flow-typed` declarations.)\r\n\r\nA side benefit is that it gets rid of the dozens of lines of log spam of\r\nthe form, “Please wait. Server is initializing (parsed files 12345)”.\r\n\r\nA minor benefit is that this fixes a memory leak on CI—previously, the\r\nTravis instance would have a useless Flow server running in the\r\nbackground after checks complete. But I’m sure that Travis doesn’t\r\nactually care, so this isn’t very important.\r\n\r\nA downside of this change is that it will often make `yarn travis`\r\nslower when run locally. Build times on a Travis instance should not be\r\naffected, because Travis has to start a server either way, and that’s\r\nthe slow part. For me, a `yarn flow check` takes about 11s, so the build\r\nmust take at least that long.\r\n\r\n[1]: https://stackoverflow.com/questions/38902752/\r\n\r\nTest Plan:\r\nRun `yarn travis` and note that it still passes. Then, introduce a Flow\r\nerror and note that the build properly fails.\r\n\r\nwchargin-branch: ci-flow-check","title":"Run `flow check` instead of `flow` in CI","mergedAs":null,"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000193\u0000":{"address":{"type":"PULL","number":"193","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/193","comments":[],"reviews":[{"type":"REVIEW","id":"117117185","pull":{"type":"PULL","number":"193","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis could catch failures in build configuration or with Webpack. It’s\r\nunlikely to catch any logic errors, because no production code is run.\r\nIn any case, it’s fast enough; it finishes at about the same time as\r\n`ci-test` and `check-pretty`.\r\n\r\nTest Plan:\r\nFrom the repository root, run `rm -r bin; yarn travis`, and note that\r\nthe `bin/` directory is regenerated.\r\n\r\nwchargin-branch: ci-backend","title":"Build backend applications in CI","mergedAs":{"type":"COMMIT","hash":"eba18724955999f9ae11424c5ca9d056c8f80b94"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000195\u0000":{"address":{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/195","comments":[{"type":"COMMENT","id":"386387243","parent":{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117373295","pull":{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"See [#190] for context.\r\n\r\nThe change is almost entirely straightforward; the only \"interesting\"\r\ndecision I made was to move the repo owner and repo name into the string\r\nid for the Artifact Plugin addresses, as the id would otherwise not be\r\nunique.\r\n\r\n[#190]: https://github.com/sourcecred/sourcecred/issues/190#issuecomment-386362870","title":"Remove the `repositoryName` field from Addresses","mergedAs":{"type":"COMMIT","hash":"b4474e6bd1ba0f05154f5ee82784e1d0694953d3"},"additions":379,"deletions":832},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000196\u0000":{"address":{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/196","comments":[],"reviews":[{"type":"REVIEW","id":"117384999","pull":{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117386533","pull":{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our repository containing example GitHub data has been renamed from\r\n\"sourcecred/example-repo\" to \"sourcecred/example-github\". This commit\r\nupdates all snapshots and tests to reflect this rename.","title":"Rename sourcecred/example-{repo,github}","mergedAs":{"type":"COMMIT","hash":"ce11a1c4e3c3efdafde256414c25e9e86bc1fe85"},"additions":568,"deletions":568},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000197\u0000":{"address":{"type":"PULL","number":"197","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/197","comments":[],"reviews":[{"type":"REVIEW","id":"117388752","pull":{"type":"PULL","number":"197","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Added a pull request that we never want to merge.\r\nPrecursor to finding merge commit shas for pull requests.","title":"Update example-github data","mergedAs":{"type":"COMMIT","hash":"136cfa839c533277828bec69622f1d6433d6a3ec"},"additions":80,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000198\u0000":{"address":{"type":"PULL","number":"198","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/198","comments":[],"reviews":[{"type":"REVIEW","id":"117394754","pull":{"type":"PULL","number":"198","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds a few fields to the PullRequest query fragment so that\r\nwe now retrieve merge commit shas. In cases where there is no merge\r\ncommit (ie the PR did not merge), the field is null. Observe that this\r\nis the case for our example unmerged pull request.\r\n\r\nTest plan: Inspect the changes to the demo data, and verify that they\r\nare appropriate.","title":"Pull merge commit SHAs from GitHub","mergedAs":{"type":"COMMIT","hash":"723efeb05f7b28a15823634da6d1fa734a829894"},"additions":10,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000199\u0000":{"address":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/199","comments":[],"reviews":[{"type":"REVIEW","id":"117401541","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117401796","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"For the GitHub plugin to create edges pointing to commits from the Git\r\nplugin, it needs a way to create the appropriate address given the\r\ncommit's hash. This commit exposes that functionality by moving\r\n`makeAddress` out of the \"createGraph\" module and into a new \"address\"\r\nmodule, and using it to implement `commitAddress`.\r\n\r\nTest plan: The code is so trivial that I don't think it merits testing.","title":"Expose `commitAddress` from the Git plugin","mergedAs":{"type":"COMMIT","hash":"9cbfa35a3a6f44e620aca59c1c1d35ad076bda8d"},"additions":29,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000200\u0000":{"address":{"type":"PULL","number":"200","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/200","comments":[],"reviews":[{"type":"REVIEW","id":"117418223","pull":{"type":"PULL","number":"200","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This adds MERGED_AS edges which link from a PullRequest to a Commit. It\r\nadds a corresponding `mergedCommitHash` method on the porcelain PR that\r\nreturns the hash of the merged commit (if available).\r\n\r\nI would have preferred to return a porcelain wrapper over the commit,\r\nbut since we don't have a porcelain Git api, it seemed preferrable to\r\nreturn the hash as a string. Returning a Node would both break\r\nconsistency in the porcelain api, and be problematic as the node does\r\nnot necessarily exist in the api. To ensure that the hash is available\r\nwithout parsing Addresses, I used the edge payload. :)\r\n\r\nTest plan:\r\nInspect the snapshot changes in the graph (they are fairly readable) and\r\nthe api testing in api.test.js.","title":"Connect PRs and commits via MERGED_AS edges","mergedAs":{"type":"COMMIT","hash":"a76d01ab75c6eb56d0c5296841e0cab24993dcd6"},"additions":138,"deletions":22},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000201\u0000":{"address":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/201","comments":[],"reviews":[{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117419435","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests included. I verified that the hashes in the snapshot are\r\ncorrect.\r\n\r\nwchargin-branch: high-level-becomes-commits","title":"Find BECOMES edges for high-level commits","mergedAs":{"type":"COMMIT","hash":"c572b7f880ad09502cb1756b2e4e5f77b0638a94"},"additions":306,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000202\u0000":{"address":{"type":"PULL","number":"202","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/202","comments":[],"reviews":[{"type":"REVIEW","id":"117419556","pull":{"type":"PULL","number":"202","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nFor the snapshot: verify that two of the BECOMES edges are the same as\r\nthose tested in `findBecomesEdgesForCommits` and that they have the\r\nright commit hashes; then, verify that the remaining edge is correct.\r\n\r\nwchargin-branch: high-level-becomes-repository","title":"Find BECOMES edges for a high-level repository","mergedAs":{"type":"COMMIT","hash":"e9ecb8c608125ca42ac27deec1a8b3da3db54804"},"additions":89,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000203\u0000":{"address":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/203","comments":[{"type":"COMMENT","id":"386424668","parent":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117432718","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIf a commit causes a tree entry to change hash while keeping the same\r\nname, we now add a BECOMES edge between the corresponding entries.\r\n\r\nTest Plan:\r\nSnapshot changes are readable enough to manually verify. Programmatic\r\ntests also added.\r\n\r\nwchargin-branch: graph-becomes-edges","title":"Add BECOMES edges in the Git graph","mergedAs":{"type":"COMMIT","hash":"315f66cc4ca49aa102e1345a276a775b850d581a"},"additions":172,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000204\u0000":{"address":{"type":"PULL","number":"204","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/204","comments":[],"reviews":[{"type":"REVIEW","id":"117688715","pull":{"type":"PULL","number":"204","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"fetchGithubGraph is a tiny module which is responsible for fetching\r\nGitHub contribution data, and parsing it into a graph.\r\n\r\nTest plan:\r\nThe function is trivial and does not merit explicit testing.","title":"Add fetchGithubGraph","mergedAs":{"type":"COMMIT","hash":"0bf4f73f8605591ec0054c1eb8bf8bd93a5aafb1"},"additions":31,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000205\u0000":{"address":{"type":"PULL","number":"205","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/205","comments":[],"reviews":[{"type":"REVIEW","id":"117702104","pull":{"type":"PULL","number":"205","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nBecause of `mergeConservative`’s naive implementation, using it as a\r\nreducer results in a roughly quadratic algorithm. Replacing this with a\r\nmutative accumulation has the same semantics but goes much faster.\r\n\r\nTest Plan:\r\nFor correctness: tests pass. For performance: apply the following patch\r\nto collect timing data. Then run:\r\n```shell\r\n$ NODE_ENV=production yarn backend\r\n$ node bin/loadAndPrintGitRepository.js . >/tmp/sourcecred-git\r\n$ node bin/createGitGraph.js /tmp/sourcecred-git\r\n```\r\nto run against the current state of SourceCred. Before this patch, the\r\nelapsed time is about 6m00s; after this patch, it is about 0m1.3s.\r\nSpecifically:\r\n```\r\n$ cat timing_before\r\n[0] Git graph creation: 239593.958ms\r\n[1] Git graph creation: 240380.557ms\r\n[2] Git graph creation: 241687.042ms\r\n\r\n$ cat timing_after\r\n[0] Git graph creation: 1585.903ms\r\n[1] Git graph creation: 1315.430ms\r\n[2] Git graph creation: 1373.833ms\r\n```\r\n\r\n<details>\r\n<summary>Patch to collect timing data</summary>\r\n\r\n```diff\r\ndiff --git a/config/paths.js b/config/paths.js\r\nindex f875eee..1bc1469 100644\r\n--- a/config/paths.js\r\n+++ b/config/paths.js\r\n@@ -64,5 +64,6 @@ module.exports = {\r\n     loadAndPrintGitRepository: resolveApp(\r\n       \"src/plugins/git/bin/loadAndPrintRepository.js\"\r\n     ),\r\n+    createGitGraph: resolveApp(\"src/plugins/git/bin/createGraph.js\"),\r\n   },\r\n };\r\ndiff --git a/src/plugins/git/bin/createGraph.js b/src/plugins/git/bin/createGraph.js\r\nnew file mode 100644\r\nindex 0000000..a35ca1b\r\n--- /dev/null\r\n+++ b/src/plugins/git/bin/createGraph.js\r\n@@ -0,0 +1,25 @@\r\n+// @flow\r\n+\r\n+import {readFileSync} from \"fs\";\r\n+\r\n+import {createGraph} from \"../createGraph\";\r\n+\r\n+function main() {\r\n+  const filename = process.argv[2];\r\n+  const raw = JSON.parse(readFileSync(filename).toString());\r\n+  const results = [];\r\n+  for (let i = 0; i < 3; i++) {\r\n+    const timer = `[${i}] Git graph creation`;\r\n+    console.time(timer);\r\n+    results.push(createGraph(raw));\r\n+    console.timeEnd(timer);\r\n+  }\r\n+  console.log(\r\n+    \"Checksum: \" +\r\n+      JSON.stringify(\r\n+        results.map((graph) => graph.nodes().length ^ graph.edges().length)\r\n+      )\r\n+  );\r\n+}\r\n+\r\n+main();\r\n```\r\n\r\n</details>\r\n\r\nwchargin-branch: collect-gold-rings","title":"Speed up Git graph creation","mergedAs":{"type":"COMMIT","hash":"d3dcf1ef5a8696021dafdb4a4d651526119c6d40"},"additions":10,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000206\u0000":{"address":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/206","comments":[],"reviews":[{"type":"REVIEW","id":"117713461","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117714188","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117715007","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`cloneAndPrintGitGraph` clones a git repository, and generates a Git\r\nobject graph for that repository.\r\n\r\nThis can be run as follows:\r\n```\r\nyarn backend;\r\nnode bin/cloneAndPrintGitGraph sourcecred example-git\r\n```\r\n\r\nThis commit also adds two utility modules:\r\n* `cloneAndLoadRepository` , which clones a Git repository to a tmpdir,\r\nparses the `Repository` data out, and then cleans up.\r\n* `cloneGitGraph`, which calls `cloneAndLoadRepository` and `createGraph`\r\n\r\nTest plan: These don't fit well into our CI, because they require\r\nnetwork access to clone repositories from GitHub. I verified that the\r\nfunctions work via the demo script above.","title":"Add CLI for printing a fresh Git graph","mergedAs":{"type":"COMMIT","hash":"e66ed45cba8c6a65494089ee731d1fea905d831f"},"additions":92,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000207\u0000":{"address":{"type":"PULL","number":"207","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/207","comments":[],"reviews":[{"type":"REVIEW","id":"117727382","pull":{"type":"PULL","number":"207","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`printCombinedGraph` loads and prints a cross-plugin combined\r\ncontribution graph for a given GitHub repository.\r\n\r\nIt is a simple executable wrapper around `src/tools/loadCombinedGraph`.\r\n\r\nExample usage:\r\n`node bin/printCombinedGraph.js sourcecred example-git $GITHUB_TOKEN`","title":"Add `src/tools/bin/printCombinedGraph.js`","mergedAs":{"type":"COMMIT","hash":"e3469f157da2986a97c9d9cf40c57c71aa396e22"},"additions":78,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000208\u0000":{"address":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/208","comments":[{"type":"COMMENT","id":"386727249","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386728217","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386750241","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117783828","pull":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’d like to use the same abstraction for creating multiple cred graphs\r\nand then combining them together. This will enable us to do that.\r\n\r\nTest Plan:\r\nRun `yarn travis` to test the success case, and `yarn travis --full`\r\n(without setting a `GITHUB_TOKEN`) to test the failure case.\r\n\r\nwchargin-branch: execdepgraph","title":"Extract `execDependencyGraph` core from CI script","mergedAs":{"type":"COMMIT","hash":"d3443a3d4c84863cc8f0546946b2c0b869f33b46"},"additions":198,"deletions":182},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000209\u0000":{"address":{"type":"PULL","number":"209","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/209","comments":[],"reviews":[{"type":"REVIEW","id":"117786433","pull":{"type":"PULL","number":"209","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis offers the performance benefits of #205 to all users.\r\n\r\nTest Plan:\r\nExisting tests suffice.\r\n\r\nwchargin-branch: merge-many-conservative","title":"Expose `Graph.mergeManyConservative`","mergedAs":{"type":"COMMIT","hash":"a642ed46b9c94301473f273feecee7b0538d2c14"},"additions":24,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000210\u0000":{"address":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/210","comments":[{"type":"COMMENT","id":"386773039","parent":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386773128","parent":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117786477","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117786486","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Adds a scaffold CLI for SourceCred, with the following commands:\r\n\r\n`sourcecred.js graph <repoOwner> <repoName> --github-token=1234`\r\n`sourcecred.js combine file1 file2....`\r\n`sourcecred.js plugin-graph <repoOwner> <repoName> --plugin=git`\r\n\r\nTest plan: Compiled the binary and then ran a variety of example\r\ncommands, like:\r\n\r\n```\r\n$ yarn backend;\r\n\r\n$ node bin/sourcecred.js graph sourcecred sourcecred\r\n# errors due to missing argument: github-token\r\n\r\n$ node bin/sourcecred.js graph sourcecred sourcecred github-token=123\r\n# works\r\n\r\n$ node bin/sourcecred.js graph sourcecred sourcecred github-token=123 \\\r\n --outputDir ~/.sourcecred\r\n\r\n# works\r\n\r\n$ node bin/sourcecred.js plugin-graph sourcecred sourcecred \\\r\n--plugin=github\r\n# works\r\n\r\n$ node bin/sourcecred.js plugin-graph sc sc\r\n# doesn't work, missing plugin\r\n\r\nand so forth\r\n```","title":"Add `sourcecred.js` CLI scaffolding using yargs","mergedAs":null,"additions":168,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000211\u0000":{"address":{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/211","comments":[],"reviews":[{"type":"REVIEW","id":"117792017","pull":{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117792782","pull":{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Setup following directions from [webpack-node-externals]\r\n\r\n[webpack-node-externals]: https://www.npmjs.com/package/webpack-node-externals\r\n\r\nThis fixes the build problem in https://github.com/sourcecred/sourcecred/pull/210\r\n\r\nTest plan: `yarn backend` still succeeds, and the binary scripts still\r\nwork. The resultant binaries are much smaller, as seen below (note build\r\ntime is the same).\r\n\r\nbefore:\r\n```\r\n❯ yarn backend \r\nyarn run v1.5.1\r\n$ node scripts/backend.js\r\nBuilding backend applications...\r\nCompiled successfully.\r\n\r\nFile sizes after gzip:\r\n\r\n  231.37 KB  bin/printCombinedGraph.js\r\n  199.5 KB   bin/fetchAndPrintGithubRepo.js\r\n  46.41 KB   bin/cloneAndPrintGitGraph.js\r\n  21.48 KB   bin/createExampleRepo.js\r\n  17.71 KB   bin/loadAndPrintGitRepository.js\r\n\r\nBuild completed; results in 'bin'.\r\nDone in 4.46s.\r\n```\r\nafter:\r\n```\r\n❯ yarn backend \r\nyarn run v1.5.1\r\n$ node scripts/backend.js\r\nBuilding backend applications...\r\nCompiled successfully.\r\n\r\nFile sizes after gzip:\r\n\r\n  27.78 KB  bin/printCombinedGraph.js\r\n  12.73 KB  bin/cloneAndPrintGitGraph.js\r\n  12.41 KB  bin/fetchAndPrintGithubRepo.js\r\n  6.03 KB   bin/loadAndPrintGitRepository.js\r\n  5.52 KB   bin/createExampleRepo.js\r\n\r\nBuild completed; results in 'bin'.\r\nDone in 4.28s.\r\n```","title":"Exclude node modules from backend build","mergedAs":{"type":"COMMIT","hash":"de5542de6a597c17fb06660e79e911885e9788d9"},"additions":8,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000212\u0000":{"address":{"type":"PULL","number":"212","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/212","comments":[],"reviews":[{"type":"REVIEW","id":"117801464","pull":{"type":"PULL","number":"212","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe want to change this configuration so that our compilation of backend\r\napplications can target latest Node. This commit forks the current\r\nconfiguration so that we can modify it easily.\r\n\r\nTest Plan:\r\nBoth `yarn start` and `yarn travis` work. The generated backend\r\napplications work, too.\r\n\r\nwchargin-branch: fork-babel-config","title":"Fork `babel-preset-react-app` into config/","mergedAs":{"type":"COMMIT","hash":"b5e894bbb4987460000afe3378af165261dd8cb3"},"additions":143,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000213\u0000":{"address":{"type":"PULL","number":"213","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/213","comments":[],"reviews":[{"type":"REVIEW","id":"117801496","pull":{"type":"PULL","number":"213","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nConsequently, Babel won’t transform classes to their roughly equivalent\r\nES5 counterparts, etc.\r\n\r\nTest Plan:\r\nCreate `src/classy.js` with `class X {}; console.log(X);`. Then, add a\r\nbuild target for `classy: resolveApp(\"src/classy.js\"),` in `paths.js`.\r\nUse `yarn backend` and inspect the contents of `bin/classy.js`; in\r\nparticular, look at the definition of `X` (whatever the argument to\r\n`console.log` is). Before this commit, the result will be a big\r\ncomplicated mess. After this commit, it will be `class X {}`.\r\n\r\nNote also that `yarn travis --full` passes, indicating that the two\r\nmanual tests, which call out to the utilities in `bin/`, still work.\r\n\r\nwchargin-branch: target-node","title":"Target latest Node for backend applications","mergedAs":{"type":"COMMIT","hash":"e9dbdeca96bd7fa673f9c61c2599cd14fee61c16"},"additions":30,"deletions":18},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000214\u0000":{"address":{"type":"PULL","number":"214","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/214","comments":[],"reviews":[{"type":"REVIEW","id":"117801584","pull":{"type":"PULL","number":"214","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds [oclif] as a command-line framework. It is successfully\r\nintegrated with webpack.\r\n\r\nUsage:\r\n`yarn backend` to build the cli.\r\n`node bin/sourcecred.js` to launch the CLI and see usage\r\n`node bin/sourcecred.js example` for one example command\r\n`node bin/sourcecred.js goodbye` for another example command","title":"Minimal toy oclif integration","mergedAs":{"type":"COMMIT","hash":"fa4082c95bf9b915e19e6ea8e540ff4533ebc275"},"additions":144,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000215\u0000":{"address":{"type":"PULL","number":"215","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/215","comments":[],"reviews":[{"type":"REVIEW","id":"117801692","pull":{"type":"PULL","number":"215","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Change package.json name to sourcecred","mergedAs":{"type":"COMMIT","hash":"72ca52f5793b45007182d3483b6d7e7e97b49c15"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000216\u0000":{"address":{"type":"PULL","number":"216","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/216","comments":[],"reviews":[{"type":"REVIEW","id":"117822716","pull":{"type":"PULL","number":"216","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nTo be honest, I have no idea what exactly this does or why it’s\r\nnecessary, but if we don’t do this then it is not possible to `import`\r\nthe exported member from a Webpack-bundled script. I’ve seen this\r\npattern before; one day I’ll actually figure out what it does. :-)\r\n\r\nTest Plan:\r\nNote that `yarn travis` (success) and `yarn travis --full` (failure; no\r\nGitHub token) both have the expected behaviors.\r\n\r\nwchargin-branch: execdependencygraph-export","title":"Change `execDependencyGraph` export format","mergedAs":{"type":"COMMIT","hash":"d7bfa02a5443fee5521dd0b447dbbf8248128b62"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000217\u0000":{"address":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/217","comments":[],"reviews":[{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"117823128","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118083137","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118083385","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118117902","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit implements the `sourcecred` command-line utility, which has\r\nthree subcommands:\r\n  - `plugin-graph` creates one plugin’s graph;\r\n  - `combine` combines multiple on-disk graphs; and\r\n  - `graph` creates all plugins’ graphs and combines them.\r\n\r\nAs an implementation detail, the `into.sh` script is very convenient,\r\navoiding needing to do any pipe management in Node (which is Not Fun).\r\nWhen we build for release, we may want to factor that differently.\r\n\r\nTest Plan:\r\nTo see it all in action, run `yarn backend`, and then try:\r\n```\r\n$ export SOURCECRED_GITHUB_TOKEN=\"your_token_here\"\r\n$ node ./bin/sourcecred.js graph sourcecred sourcecred\r\nUsing output directory: /tmp/sourcecred/sourcecred\r\n\r\nStarting tasks\r\n  GO   create-git\r\n  GO   create-github\r\n PASS  create-github\r\n PASS  create-git\r\n  GO   combine\r\n PASS  combine\r\n\r\nFull results\r\n PASS  create-git\r\n PASS  create-github\r\n PASS  combine\r\n\r\nOverview\r\nFinal result:  SUCCESS\r\n\r\n$ ls /tmp/sourcecred/sourcecred/\r\ngraph-github.json  graph-git.json  graph.json\r\n\r\n$ jq '.nodes | length' /tmp/sourcecred/sourcecred/*.json\r\n1000\r\n7302\r\n8302\r\n```\r\nThe `node sourcecred.js graph` command takes 9.8s for me.\r\n\r\n(The salient point of the last command is that the two small graphs have\r\nnode count adding up to the node count of the big graph. Incidentally,\r\nwe are [almost][1] at a nice round number of nodes in the GitHub graph.)\r\n\r\n[1]: https://xkcd.com/1000/\r\n\r\nwchargin-branch: cli","title":"Implement a command-line interface","mergedAs":{"type":"COMMIT","hash":"2aeeca9a1391f4d7426e066aa39e31b06f64a85e"},"additions":258,"deletions":30},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000219\u0000":{"address":{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/219","comments":[{"type":"COMMENT","id":"387217819","parent":{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"118117889","pull":{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, we generate a `RepositoryJSON` object via querying GitHub.\r\nThat `RepositoryJSON` object has a `repository` field... which is weird,\r\nand suggests we got the names slightly wrong.\r\n\r\nThis commit renames the top-level response to `GithubResponseJSON`, and\r\nfactors the `repository` field out as `RepositoryJSON`. Correspondingly,\r\nthe `addData` and `addRepository` methods on the parser are now\r\ndistinct.\r\n\r\nThis is a precursor for #171.\r\n\r\nTest plan: This is a simple refactor; the fact that yarn travis passes\r\nshould be sufficient.","title":"Split `GithubResponseJSON` and `RepositoryJSON`","mergedAs":{"type":"COMMIT","hash":"f3bfed3deb062cf0f10522ed1e2b1d9b5224d6b2"},"additions":22,"deletions":17},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000220\u0000":{"address":{"type":"PULL","number":"220","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/220","comments":[],"reviews":[{"type":"REVIEW","id":"118128305","pull":{"type":"PULL","number":"220","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe `\"PASS\"` label only makes sense for tests. This commit makes the\r\nlabels configurable, so that the verbiage can make more sense in other\r\ncontexts, too.\r\n\r\nTest Plan:\r\nApply a patch like\r\n```diff\r\ndiff --git a/config/travis.js b/config/travis.js\r\nindex af0996b..b0ab3b6 100644\r\n--- a/config/travis.js\r\n+++ b/config/travis.js\r\n@@ -10,7 +10,11 @@ function main() {\r\n     process.argv.includes(\"--full\")\r\n       ? \"FULL\"\r\n       : \"BASIC\";\r\n-  execDependencyGraph(makeTasks(mode)).then(({success}) => {\r\n+  execDependencyGraph(makeTasks(mode), {\r\n+    taskLaunchLabel: \" YO \",\r\n+    taskPassLabel: \"WHEE\",\r\n+    taskFailLabel: \"UHOH\",\r\n+  }).then(({success}) => {\r\n     process.exitCode = success ? 0 : 1;\r\n   });\r\n }\r\n```\r\nand note that `GITHUB_TOKEN=none yarn travis --full` exhibits all\r\ndesired messages.\r\n\r\nwchargin-branch: configurable-labels","title":"Make `execDependencyGraph` labels configurable","mergedAs":{"type":"COMMIT","hash":"4e8d5b574af08f50eb89adc155114e4935faba96"},"additions":36,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000221\u0000":{"address":{"type":"PULL","number":"221","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/221","comments":[],"reviews":[{"type":"REVIEW","id":"118128413","pull":{"type":"PULL","number":"221","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `node bin/sourcecred.js graph sourcecred example-github` and note\r\nthe new output:\r\n```\r\nStoring graphs into: /tmp/sourcecred/sourcecred/example-github\r\n\r\nStarting tasks\r\n  GO   create-git\r\n  GO   create-github\r\n DONE  create-git\r\n DONE  create-github\r\n  GO   combine\r\n DONE  combine\r\n\r\nFull results\r\n DONE  create-git\r\n DONE  create-github\r\n DONE  combine\r\n\r\nOverview\r\nFinal result:  SUCCESS\r\n```\r\n\r\nwchargin-branch: plugin-graph-label","title":"Change plugin graph label from \"PASS\" to \"DONE\"","mergedAs":{"type":"COMMIT","hash":"1e0d846675a99ba2305b23d1928e19831c9a17b9"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000222\u0000":{"address":{"type":"PULL","number":"222","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/222","comments":[],"reviews":[{"type":"REVIEW","id":"118175673","pull":{"type":"PULL","number":"222","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit pulls new information from GitHub about the url, name, and\r\nowner of a GitHub repository. Part of #171.\r\n\r\nTest plan: example-github-repo.json has been updated. `yarn travis\r\n--full` passes. This should be sufficient.","title":"Query GitHub for repository information","mergedAs":{"type":"COMMIT","hash":"82bf739f35cdf21ae41e4d504b0ac0acdb446a2e"},"additions":16,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000224\u0000":{"address":{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/224","comments":[{"type":"COMMENT","id":"387230652","parent":{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"118179954","pull":{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Previously, if a CLI command had an unhandled promise rejection, this\r\nwould result in a spurious success and zero exit value.\r\n\r\nThis commit causes all of our CLI commands to instead fail if they have\r\nan unhandled promise rejection.\r\n\r\nTest plan: Previously, `sourcecred graph src-d go-git` would claim to\r\nsucceed, although it actually fails due to an unrelated bug. After this\r\nchange is applied, it correctly fails to retrieve the GitHub graph (and\r\nhte combine step is never run).","title":"CLI commands error on unhandled promise rejection","mergedAs":{"type":"COMMIT","hash":"55856d7a46e956f71f219d563a7f2701b7be5c5d"},"additions":21,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000225\u0000":{"address":{"type":"PULL","number":"225","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/225","comments":[],"reviews":[{"type":"REVIEW","id":"118182797","pull":{"type":"PULL","number":"225","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our SourceCred CLI tool now implements printCombinedGraph and\r\ncloneAndPrintGitGraph, but with more principled implementations and\r\ninterfaces :)\r\n\r\nTest plan:\r\n`yarn travis --full` passes, so I didn't delete any needed test infra.","title":"Remove redundant scripts","mergedAs":{"type":"COMMIT","hash":"61635a14a748a8ed9ffe885e89b2caa0fc046e0d"},"additions":0,"deletions":82},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000226\u0000":{"address":{"type":"PULL","number":"226","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/226","comments":[],"reviews":[{"type":"REVIEW","id":"118183334","pull":{"type":"PULL","number":"226","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn backend && node bin/sourcecred.js help graph`.\r\n\r\nwchargin-branch: defaultstoragedirectory","title":"Factor out `defaultStorageDirectory` function","mergedAs":{"type":"COMMIT","hash":"498480db067f9e13aa0e56c24df9c0b503e06e5b"},"additions":9,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000227\u0000":{"address":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/227","comments":[{"type":"COMMENT","id":"387234595","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387236626","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387242429","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"118193011","pull":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis solves two problems:\r\n\r\n 1. The “output directory” argument to `sourcecred graph` is also the\r\n    input directory to other commands, like `sourcecred analyze`\r\n    (hypothetically). In such cases, it would be nice for the flag to\r\n    have the same name, but clearly `--output-directory` does not always\r\n    make sense.\r\n\r\n 2. In addition to storing graphs, we’ll need to store other kinds of\r\n    data: settings, intermediate data for plugins to cache results, etc.\r\n    We should store these under a single umbrella.\r\n\r\nWith both of these problems in mind, it makes sense to create a\r\n`SOURCECRED_DIRECTORY` flag under which we store all relevant data.\r\n\r\nTest Plan:\r\nRun:\r\n```shell\r\n$ yarn backend\r\n$ node bin/sourcecred.js help graph\r\n$ node bin/sourcecred.js graph sourcecred example-github\r\n$ node bin/sourcecred.js graph sourcecred example-github -d /tmp/sorcecrod\r\n$ SOURCECRED_DIRECTORY=/tmp/srccrd node bin/sourcecred.js graph sourcecred example-github\r\n$ for dir in /tmp/{sourcecred,sorcecrod,srccrd}; do find \"${dir}\"; done\r\n```\r\n\r\nwchargin-branch: graph-directory","title":"Extract a common SOURCECRED_DIRECTORY flag","mergedAs":{"type":"COMMIT","hash":"0cae9d742d9ad3e3818bbbfd59473ea425191e6d"},"additions":32,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000228\u0000":{"address":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/228","comments":[{"type":"COMMENT","id":"387242535","parent":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"118192855","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130194148","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"When a GitHub user delete their account, all of their comments remain,\r\nbut with a `null` author. Previously, our code did not account for this\r\npossibility. Now it does (by simply not adding an AUTHORSHIP edge).\r\nConveniently, our porcelain API already represents authors as a list, so\r\nthis doesn't require any change in porcelain API usage.\r\n\r\nTest plan:\r\nI did not add any unit tests, simply because\r\ncreating-and-deleting a GitHub user to make a repro seemed like a bit of\r\na pain. However, it is very unlikely that this bug will re-occur,\r\nbecause the nullability of AuthorJSON is now enforced at the type level\r\ninside graphql.js.\r\n\r\nAlso, running `node bin/sourcecred.js src-d go-git` now succeeds instead\r\nof failing.","title":"Deleted users no longer break GitHub parser","mergedAs":{"type":"COMMIT","hash":"9d4ae8b901c7b84a3b8513d1e66a59f06d84d7ad"},"additions":15,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000229\u0000":{"address":{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/229","comments":[],"reviews":[{"type":"REVIEW","id":"118194745","pull":{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit creates a new node type in the GitHub graph: the REPOSITORY\r\nnode. The REPOSITORY node has the following payload properties:\r\n- url (string)\r\n- name (string)\r\n- owner (string)\r\n\r\nThings this commit does:\r\n- Add new node type and payload type (RepositoryNodePayload)\r\n- Update parser to instantiate the new node type\r\n- Update api.js to have Repository wrap the new node type (thus\r\nRepository is a GitHub entity)\r\n- Update snapshots\r\n- Update users of GitHub node types to ensure they are exhaustive\r\n\r\nThings that will come in a followon commit:\r\n- Add CONTAINS edges from the repository to all its PRs and Issues\r\n- Update the Repository porcelain to use those edges, rather than\r\nscanning the graph for every possible Issue/PR (eventually those might\r\nbelong to other Repositories)\r\n- Create a GitHubGraph abstraction in the porcelain, which makes it easy\r\nto find all of the Repositories in a graph\r\n\r\nNote that retrieving the repository owner technically involved fetching\r\nthe whole owner representation (as a GitHub user). I could have chosen\r\nto add that user to the graph, with a \"OWNS\" edge pointing to the\r\nrepository. For simplicity's sake, I've declined to do that, and instead\r\njust parse the owner's name directly.\r\n\r\nTest plan:\r\nAdded tests to verify that the Repository porcelain entity has the right\r\nproperties. Combined with the snapshot tests, that should be sufficient.\r\n\r\nThis mostly completes #171","title":"Create \"REPOSITORY\" nodes in GitHub plugin graph","mergedAs":{"type":"COMMIT","hash":"f219636a56144ee1c38c7d7175f919aea6352e48"},"additions":143,"deletions":29},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000230\u0000":{"address":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/230","comments":[],"reviews":[{"type":"REVIEW","id":"118198389","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118198933","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Now that we have repository nodes (#171), it makes sense that the Github\r\nporcelain should provide a way to wrap the entire graph, and provide\r\neasy access for the various repositories. This adds a `Porcelain` class\r\nto fulfill that need.\r\n\r\nThe `Porcelain` is very straightforward: it takes in the whole graph,\r\nand gives a way to get all the Repositories, or to request a particular\r\nRepository by owner/name. In the odd case wherein a graph contains\r\nmultiple repository nodes with the same owner and name, an error is\r\nthrown. Per standard JS map semantics (bleh), it can return undefined if\r\nthere is no matching repository.\r\n\r\nTest plan:\r\nSee that the unit tests now use the standard behavior, and a test\r\nverifies behavior for non-existant repositories. I don't have a test\r\ncase where there are multiple repo nodes, but that itself would be an\r\nerror, so throwing an error in that case is just defensive programming.","title":"Create `github.Porcelain`: whole-graph porcelain","mergedAs":{"type":"COMMIT","hash":"9b3019434d1b41bb90ad1df02a10750a9935900d"},"additions":45,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000231\u0000":{"address":{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/231","comments":[],"reviews":[{"type":"REVIEW","id":"118210273","pull":{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I also added a module-level docstring for the porcelain.","title":"Rename `src/plugins/github/{api,porcelain}`","mergedAs":{"type":"COMMIT","hash":"ed1adc7b37427e73f5ba5d62fd3cff458f656824"},"additions":21,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000232\u0000":{"address":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/232","comments":[],"reviews":[{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118211071","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118211081","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118211142","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This script ensures that `@flow` or `@no-flow` is present in\r\nevery js file. Every existing js file that would fail this check has\r\nbeen given `@no-flow`, we should work to remove all of these in the\r\nfuture.\r\n\r\nTest plan:\r\nI verified that `yarn travis` fails before fixing the other js files,\r\nand passes afterwards.","title":"Ensure that flow is used in all js files","mergedAs":{"type":"COMMIT","hash":"93e2798f377dc7c5de002ca384ad0f92821225a9"},"additions":30,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000233\u0000":{"address":{"type":"PULL","number":"233","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/233","comments":[],"reviews":[{"type":"REVIEW","id":"118216022","pull":{"type":"PULL","number":"233","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"wchargin-branch: express","title":"Add dependency on express","mergedAs":{"type":"COMMIT","hash":"18ddbfff3e83672b24fd2127471e3d618f6bf5a2"},"additions":413,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000234\u0000":{"address":{"type":"PULL","number":"234","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/234","comments":[],"reviews":[{"type":"REVIEW","id":"118216553","pull":{"type":"PULL","number":"234","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe need a way for our web applications to interact with data on the\r\nfilesystem. In this commit, we introduce a webserver that serves\r\nstatically from two directory trees: first, the result of a live-updated\r\nWebpack build; second, the SourceCred data directory.\r\n\r\nTest Plan:\r\nRun `yarn backend` and `node ./bin/sourcecred.js start`. When ready,\r\nnavigate to the server’s root route in a web browser. Note that a nice\r\nReact app is displayed. Then, change something in that React app source.\r\nNote that the server console displays Webpack’s update messages, and\r\nthat refreshing the page in the browser renders the new version of the\r\napp. Finally, visit\r\n\r\n    /__data__/graphs/sourcecred/example-github/graph.json\r\n\r\nin the browser to see the graph for the example repository, assuming\r\nthat you had generated its graph previously.\r\n\r\nwchargin-branch: start","title":"Add `sourcecred start`","mergedAs":{"type":"COMMIT","hash":"57682065fd448e31805c4126abe3599079aec18d"},"additions":118,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000235\u0000":{"address":{"type":"PULL","number":"235","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/235","comments":[],"reviews":[{"type":"REVIEW","id":"118505491","pull":{"type":"PULL","number":"235","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis way, different plugins can have `LocalStore`s with different cache\r\nkeys.\r\n\r\nTest Plan:\r\nNote that the app (`yarn start`) preserves the local store values from\r\nbefore this change, and that updates continue to work.\r\n\r\nwchargin-branch: generic-localstore","title":"Extract a generic `LocalStore` module","mergedAs":{"type":"COMMIT","hash":"7d9a98128d6fe83188bf37b4af3f0afa6522a980"},"additions":89,"deletions":80},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000236\u0000":{"address":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/236","comments":[],"reviews":[{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Please review the commits individually; they all have their own test plans. I verified that `yarn travis` passes for each one.","title":"Refactor artifact app","mergedAs":{"type":"COMMIT","hash":"372f8f9bd60d0f557a7ca036f00a2559abaf4cfa"},"additions":275,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000238\u0000":{"address":{"type":"PULL","number":"238","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/238","comments":[],"reviews":[{"type":"REVIEW","id":"118538080","pull":{"type":"PULL","number":"238","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"- Fix accidental string-to-NaN coercion in ensureSlash\r\n- Don't dynamically require package.json; to determine public url, just\r\nuse the environment variable or \"/\"\r\n\r\nTest plan: `yarn start` and travis still work","title":"Fix flow errors in paths.js","mergedAs":{"type":"COMMIT","hash":"d221a933d8f8684c4d5fe46d7afa638e170528be"},"additions":10,"deletions":15},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000239\u0000":{"address":{"type":"PULL","number":"239","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/239","comments":[],"reviews":[{"type":"REVIEW","id":"118538236","pull":{"type":"PULL","number":"239","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"They were already correct from a typing perspective, so no other changes\r\nneeded.","title":"Enable flow: sourcecred.js and editor/App.test.js","mergedAs":{"type":"COMMIT","hash":"d34503799cee4c9fe08881eb269760e29edb1649"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000240\u0000":{"address":{"type":"PULL","number":"240","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/240","comments":[],"reviews":[{"type":"REVIEW","id":"118538927","pull":{"type":"PULL","number":"240","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixing the flow error corresponded to (correctly) documenting that the\r\nGitHub token is mandatory, not optional.\r\n\r\nTest plan: `yarn travis --full` still passes.","title":"Fix flow errors in fetchAndPrintGithubRepo.js","mergedAs":{"type":"COMMIT","hash":"1647c1abac58f42db216cbf03a68ea7ce770e387"},"additions":6,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000241\u0000":{"address":{"type":"PULL","number":"241","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/241","comments":[],"reviews":[{"type":"REVIEW","id":"118542389","pull":{"type":"PULL","number":"241","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"- scripts/backend.js: We incorrectly set an environment variable to\r\na boolean, when in fact it must be a string. Fixed it to set a string\r\nvalue \"true\", and updated usage in config/babel.js\r\n- scripts/test.js: No changes\r\n- scripts/build.js: Removed a call to printHostingInstructions, so that\r\nwe don't need to require the package.json.\r\n\r\nTest plan:\r\n`yarn travis --full` passes, and the SourceCred cli still works.","title":"Turn on flow for scripts/{backend,build,test}.js","mergedAs":{"type":"COMMIT","hash":"824df7e91641f6b8e2f1a6752bc85431007de111"},"additions":5,"deletions":18},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000242\u0000":{"address":{"type":"PULL","number":"242","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/242","comments":[],"reviews":[{"type":"REVIEW","id":"118546927","pull":{"type":"PULL","number":"242","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\n  - The value of `process.stdout.isTTY` is either `true` or `undefined`.\r\n    Flow (reasonably) dislikes this, so we add an explicit check.\r\n  - More `package.json` burnination.\r\n\r\nTest Plan:\r\nNote that `require(\"./package.json\").proxy === undefined` in the Node\r\nconsole, and that `yarn start` works.\r\n\r\nwchargin-branch: flow--scripts-start","title":"Turn on flow for scripts/start.js","mergedAs":{"type":"COMMIT","hash":"2e8653a3ee6dc5bdb9878b74dd6febda9243de91"},"additions":5,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000243\u0000":{"address":{"type":"PULL","number":"243","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/243","comments":[],"reviews":[{"type":"REVIEW","id":"118547513","pull":{"type":"PULL","number":"243","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It was doing some clever array construction that added possible booleans\r\nto the array, then filtered them out. To make the typing simpler for\r\nFlow's inspection, we now only put string elements in the array.\r\n\r\nTest plan: `yarn travis --full` passed, and the CLI still works.","title":"Turn on flow for config/env.js","mergedAs":{"type":"COMMIT","hash":"3166c2a56cb6288fe2b6b14bf55add696c350b4b"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000244\u0000":{"address":{"type":"PULL","number":"244","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/244","comments":[],"reviews":[{"type":"REVIEW","id":"118556909","pull":{"type":"PULL","number":"244","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Remove the old `experiments` directory","mergedAs":{"type":"COMMIT","hash":"62b9f70d00092510b05c5f32977a3c83b1ec31d1"},"additions":0,"deletions":374},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000245\u0000":{"address":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/245","comments":[],"reviews":[{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118561169","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118561209","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118564202","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118564203","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis way, our frontend can talk to a backend that can read from the\r\nfilesystem (among other things).\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\n```\r\n$ yarn backend\r\n$ SOURCECRED_DIRECTORY=/tmp/srccrd yarn start\r\n$ # verify that the browser looks good\r\n$ mkdir /tmp/srccrd\r\n$ echo hello >/tmp/srccrd/world\r\n$ curl localhost:3000/api/v1/data/world\r\nhello\r\n$ curl localhost:4000/api/v1/data/world\r\nhello\r\n```\r\n\r\nwchargin-branch: webpack-proxy","title":"Proxy Webpack dev server through to an API server","mergedAs":{"type":"COMMIT","hash":"9ea1f981aa1d8944480806118e5d9e4af38c9525"},"additions":82,"deletions":43},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000246\u0000":{"address":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/246","comments":[],"reviews":[{"type":"REVIEW","id":"118565108","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118566240","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118568384","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin suggested that the entity-wrapping logic in porcelain\r\nreference handling should be factored out as its own method. This was a\r\ngreat suggestion; it will be very useful for plugin consumers, and it\r\nalso results in better test coverage.\r\n\r\nTest plan: The new unit tests are nice. For your own safety, do not\r\nquestion or quibble with the magnificent foo plugin.","title":"Factor out `github.porcelain.asEntity`","mergedAs":{"type":"COMMIT","hash":"d9b4673dbdd59f31146f089012cecd79b46b177f"},"additions":80,"deletions":36},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000247\u0000":{"address":{"type":"PULL","number":"247","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/247","comments":[],"reviews":[{"type":"REVIEW","id":"118573555","pull":{"type":"PULL","number":"247","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit changes `yarn start` to run a production version of the API\r\nserver, which serves static files from a pre-built directory and also\r\nhandles API requests.\r\n\r\nTest Plan:\r\n```shell\r\n$ yarn build\r\n$ yarn backend\r\n$ node ./bin/sourcecred.js start -d /tmp/srccrd &\r\n$ mkdir -p /tmp/srccrd\r\n$ echo hello >/tmp/srccrd/world\r\n$ curl -s localhost:4000/ | file -\r\n/dev/stdin: HTML document, ASCII text, with very long lines, with no line terminators\r\n$ curl -s localhost:4000/api/v1/data/world\r\nhello\r\n```\r\n\r\nwchargin-branch: cli-start-prod-server","title":"Start a production server from `sourcecred start`","mergedAs":{"type":"COMMIT","hash":"cb1339a0a7142c268b7afcbd026eb6f52237b6f7"},"additions":16,"deletions":48},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000248\u0000":{"address":{"type":"PULL","number":"248","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/248","comments":[],"reviews":[{"type":"REVIEW","id":"118572781","pull":{"type":"PULL","number":"248","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"testUtil contains some useful configuration endpoints for our frontend\r\ntesting. This commit moves it out of the artifact editor and up to\r\n`src/app`.\r\n\r\nTest plan: `yarn travis` passes.","title":"Move testUtil.js into src/app","mergedAs":{"type":"COMMIT","hash":"0c59435a2bd738cf168e0eba35630d35feb43635"},"additions":6,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000249\u0000":{"address":{"type":"PULL","number":"249","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/249","comments":[],"reviews":[{"type":"REVIEW","id":"118573422","pull":{"type":"PULL","number":"249","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: Run `yarn start`, and observe that the Cred Explorer is now\r\nincluded in the nav bar, and can be selected, in which case a short\r\nmessage is displayed.","title":"Setup credExplorer app scaffold","mergedAs":{"type":"COMMIT","hash":"ac8d0ff66caf740f398c0e18e14d8106b5de773a"},"additions":45,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000250\u0000":{"address":{"type":"PULL","number":"250","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/250","comments":[],"reviews":[{"type":"REVIEW","id":"118607768","pull":{"type":"PULL","number":"250","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Add dependency on tfjs-core","mergedAs":{"type":"COMMIT","hash":"6ca4f77b6d078cc8436c1f9cac7e4753e1586a63"},"additions":11,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000251\u0000":{"address":{"type":"PULL","number":"251","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/251","comments":[],"reviews":[{"type":"REVIEW","id":"118841022","pull":{"type":"PULL","number":"251","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit enables the cred explorer to fetch pre-generated graphs. The\r\nform has poor UX, but gets the job done. (To do later: saving in\r\nlocalStorage, allowing fetching the list of possible graphs, linking the\r\nsubmit button so that it’s triggered by `Enter`, etc.).\r\n\r\nTest Plan:\r\nSet up with `node ./bin/sourcecred.js graph sourcecred sourcecred`, then\r\nrun `yarn start` and check the following cases:\r\n  - success case: `sourcecred`/`sourcecred`\r\n  - error case: `sarcecrod`/`sarcecrod` (nice console error)\r\n  - error case: the repository owner or name is an empty string or has\r\n    invalid characters, like `../../secret.txt` (nice console error)\r\n\r\nwchargin-branch: fetch-graphs","title":"Fetch generated graphs on the frontend","mergedAs":{"type":"COMMIT","hash":"8e4668cc918f7eeab84c860f25cb87a0e7e27c69"},"additions":72,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000":{"address":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/252","comments":[{"type":"COMMENT","id":"387897842","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387909420","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"387949760","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388220544","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118927214","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118941918","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118942135","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118942350","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe don’t expect the results to be of good quality right now. Rather,\r\nthis gives us a starting point from which to iterate the algorithm.\r\n\r\nThe convergence criterion also needs to be adjusted. (In particular, it\r\nshould almost certainly not be a constant.)\r\n\r\nTest Plan:\r\nRun `yarn start`. Select a graph, like `sourcecred/example-github`. Open\r\nthe JS console and click “Run basic PageRank”. Watch the console.\r\n\r\nwchargin-branch: basic-pagerank","title":"Implement basic PageRank analysis","mergedAs":{"type":"COMMIT","hash":"61d3cb3f5292af3e2ed55abcab81cb259e6c3ab1"},"additions":140,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000253\u0000":{"address":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/253","comments":[],"reviews":[{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also updates the GitHub porcelain.\r\nExisting observable behavior is unchanged, except that performance may\r\nbe improved for issueOrPrByNumber.\r\n\r\nA bug that would afflict a multi-repository graph (namely, that calling\r\n`repo.issues()` would get all issues for all repositories) is\r\npre-emptively removed. No test cases were added as we do not yet support\r\nmulti-repository graphs.\r\n\r\nTest plan: existing unit test coverage is sufficient.","title":"Add CONTAINS edges from Repositories to Issues/PRs","mergedAs":{"type":"COMMIT","hash":"04390e560909f9becf0fdf007ebb244558e019da"},"additions":263,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000254\u0000":{"address":{"type":"PULL","number":"254","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/254","comments":[],"reviews":[{"type":"REVIEW","id":"119191581","pull":{"type":"PULL","number":"254","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, the `authors` method is attached at the Repository level.\r\nThis is incorrect; it actually finds all the authors in the graph, not\r\nall the authors of that repository. This commit moves the method to the\r\ncorrect class.\r\n\r\nTest plan: This function is only used in test code. The tests still\r\npass.","title":"GH Porcelain: Move `authors` top-level Porcelain","mergedAs":{"type":"COMMIT","hash":"5c44dd0373e27a88f648d7aa571c70156a09fa5c"},"additions":7,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000255\u0000":{"address":{"type":"PULL","number":"255","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/255","comments":[],"reviews":[{"type":"REVIEW","id":"119193288","pull":{"type":"PULL","number":"255","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: Unit tests were added.\r\n(Note: I haven't tested the error case, when there are an invalid number\r\nof parents. I think this is OK for now, but I'm disclosing this so\r\nreviewers can easily take issue with it. I'm planning to re-organize the\r\ntest code to be by method rather than by wrapper type (so the wrappers\r\nsection doesn't keep being a kitchen sink) and will hopefully\r\nput that test in.)","title":"Add `parent()` relationships for GitHub porcelain","mergedAs":{"type":"COMMIT","hash":"0d6742be394f4f2fd5535f0564af6a7d9cdabe29"},"additions":45,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000257\u0000":{"address":{"type":"PULL","number":"257","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/257","comments":[],"reviews":[{"type":"REVIEW","id":"119193731","pull":{"type":"PULL","number":"257","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think the absence of this method when I added the `Repository` class\r\nwas a bug.\r\n\r\nTest plan: There are new unit tests.","title":"GH Porcelain: add `Repository.from`","mergedAs":{"type":"COMMIT","hash":"9d24190c03ffc566aa95739b14ae7ebed3538215"},"additions":9,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000258\u0000":{"address":{"type":"PULL","number":"258","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/258","comments":[],"reviews":[{"type":"REVIEW","id":"119215462","pull":{"type":"PULL","number":"258","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nEven though it’s not really a source file, and it lives at the\r\nrepository root, it might as well have typing to make sure that we don’t\r\ndo anything really dumb.\r\n\r\nTest Plan:\r\n`yarn flow` still passes.\r\n\r\nwchargin-branch: flow-eslintrc","title":"Add `@flow` to `.eslintrc.js`","mergedAs":{"type":"COMMIT","hash":"1901d471f3b5f68022a8356cc9571152ddcd33ad"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000259\u0000":{"address":{"type":"PULL","number":"259","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/259","comments":[],"reviews":[{"type":"REVIEW","id":"119216007","pull":{"type":"PULL","number":"259","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis fixes two problems in the previous version:\r\n  - A new JS file not checked into git, but with a `@flow` directive,\r\n    would cause `ensure-flow` to fail, because one list of files was\r\n    from `git grep` and the other was from `find`.\r\n  - Only the hard-coded directories `src config scripts` were searched.\r\n\r\nNow, we search all JS files checked into Git, except for some hard-coded\r\nexceptions, namely `flow-typed`.\r\n\r\nTest Plan:\r\n  1. Add `foo.js`, not checked into Git. Note that `ensure-flow` passes.\r\n  2. Add `@flow` to `foo.js`, and note that `ensure-flow` still passes.\r\n  3. Remove `@flow` from `.eslintrc.js`, and note that `ensure-flow`\r\n     fails and nicely prints the filename. (Note: this file is at the\r\n     repository root.)\r\n  4. Create a file `echo stuff >$'naughty\\nfilename.js'`, and note that\r\n     `ensure-flow` has the correct behavior in both positive and\r\n     negative cases.\r\n\r\nwchargin-branch: ensure-flow-improvements","title":"Make `ensure-flow.sh` more precise and accurate","mergedAs":{"type":"COMMIT","hash":"47bec6cc10f36a3bece3c05f2671fdac12092ec6"},"additions":6,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000260\u0000":{"address":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/260","comments":[],"reviews":[{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119221778","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This re-organizes the GitHub porcelain tests to be:\r\n- organized by each method signature, rather than having blocks that\r\ntest many different methods on each wrapper\r\n- make extensive use of snapshot tests for convenience\r\n\r\nTest plan: Inspect the new unit tests, and the corresponding snapshots.\r\nIt should be relatively easy to do this because you can copy+paste the\r\nurls to verify the properties.","title":"Reorganize GitHub porcelain tests","mergedAs":{"type":"COMMIT","hash":"2a88bbc091e2f11038b2ec96ad3aa9d45768d072"},"additions":327,"deletions":188},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000261\u0000":{"address":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/261","comments":[],"reviews":[{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`nodeDescription` gives a short, readable description of the content at\r\na given node.\r\n\r\nTest plan: View the included snapshot test.","title":"Add `nodeDescription` for GitHub nodes","mergedAs":{"type":"COMMIT","hash":"ed1f17f8ca7be1e0146440ebb2b3c5c14c5079b3"},"additions":90,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000262\u0000":{"address":{"type":"PULL","number":"262","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/262","comments":[],"reviews":[{"type":"REVIEW","id":"119246371","pull":{"type":"PULL","number":"262","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added, with full coverage of reachable cases.\r\n\r\nwchargin-branch: git-render","title":"Add `git/render.js` with `nodeDescription`","mergedAs":{"type":"COMMIT","hash":"d21ad1312b6c6ba1252d29c892b85347f37f88d3"},"additions":100,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000263\u0000":{"address":{"type":"PULL","number":"263","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/263","comments":[],"reviews":[{"type":"REVIEW","id":"119255909","pull":{"type":"PULL","number":"263","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nLoad the cred explorer for the first time to see two empty boxes.\r\nRefresh to see the same thing. Then, add some content to each box.\r\nRefresh and see the same content.\r\n\r\nwchargin-branch: cred-explorer-localstorage","title":"Save explorer’s repo settings in localStorage","mergedAs":{"type":"COMMIT","hash":"bb2ec756a43dc60188522708d0547bb4ef9e8dd2"},"additions":23,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000264\u0000":{"address":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/264","comments":[],"reviews":[{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119257063","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119259432","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119259443","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119259770","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`PagerankTable` is forked from `ContributionList`.\r\n\r\nTest plan: I took it for a spin and it seemed OK. I'm not inclined to\r\nwrite formal tests because we are in rapid prototyping mode still.","title":"Add `PagerankTable` for exploring PageRank results","mergedAs":{"type":"COMMIT","hash":"7fc31f6a262b4435bc5512fafe7bdaf1d4d0e76f"},"additions":161,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000265\u0000":{"address":{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/265","comments":[],"reviews":[{"type":"REVIEW","id":"119285696","pull":{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Please see individual commit messages for details.","title":"Cred Explorer: Recursively explore cred of neighbors","mergedAs":{"type":"COMMIT","hash":"2a52ff85f8ba77208863656e9702bef58a6fa2f6"},"additions":90,"deletions":22},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000266\u0000":{"address":{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/266","comments":[{"type":"COMMENT","id":"388473218","parent":{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"119561769","pull":{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nWe’re not convinced that using TFJS at this time is worth it, for two\r\nreasons. First, our matrix computations can be expressed using sparse\r\nmatrices, which will improve the performance by orders of magnitude.\r\nSparse matrices do not appear to be supported by TFJS (the layers API\r\nmakes some use of them, but it is not clear that they have much support\r\ntheir, either). Second, having to deal with GPU memory and WebGL has\r\nalready been problematic. When WebGL PageRank is running, the machine is\r\nmostly unusable, and other applications’ video output is negatively\r\naffected (!).\r\n\r\nThis commit rewrites the internals of `basicPagerank.js` while retaining\r\nits end-to-end public interface. We also add a test file with a trivial\r\ntest. The resulting code is not faster yet—in fact, it’s a fair amount\r\nslower. But this is because our use of `AddressMap`s puts JSON\r\nstringification on the critical path, which is obviously a bad idea. In\r\na subsequent commit, we will rewrite the internals again to use typed\r\narrays.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nThe new unit test is not sufficient. Instead, run `yarn start` and\r\nre-run PageRank on SourceCred; note that the results are roughly\r\nunchanged.\r\n\r\nwchargin-branch: pagerank-without-tfjs","title":"Rewrite basic PageRank without TFJS","mergedAs":{"type":"COMMIT","hash":"7e97ba6bf37b624a6ef372d3cd16e380787a9aa0"},"additions":116,"deletions":56},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000267\u0000":{"address":{"type":"PULL","number":"267","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/267","comments":[],"reviews":[{"type":"REVIEW","id":"119566062","pull":{"type":"PULL","number":"267","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis takes `AddressMap` access, and therefore JSON stringification, off\r\nthe critical path, resulting in a significant performance increase. The\r\nresulting code is much faster than the original TFJS implementation. On\r\nmy laptop, we can run about 300 iterations of PageRank per second on a\r\ngraph with 10 000 nodes and 18 000 edges (namely, the SourceCred graph).\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nRun `yarn start` and note that the cred attribution for SourceCred is\r\nroughly the same as before… but is created faster.\r\n\r\nwchargin-branch: pagerank-typed-arrays","title":"Use typed arrays for PageRank","mergedAs":{"type":"COMMIT","hash":"3e70edb3be6758f8041b71771fd2eadf2e6a87b5"},"additions":106,"deletions":38},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000271\u0000":{"address":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/271","comments":[{"type":"COMMENT","id":"388521437","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388521978","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388524600","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388528534","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"119612735","pull":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFor now, this module has just two types: `Distribution` and\r\n`SparseMarkovChain`. We’ll gradually pull code from `basicPagerank` into\r\nthis module, adding unit tests along the way.\r\n\r\nTest Plan:\r\nNone required.\r\n\r\nwchargin-branch: markov-chain-module","title":"Create a `markovChain.js` module","mergedAs":{"type":"COMMIT","hash":"3bd449d1c331b1d75fc2a6e5bd6e2a552e3e2d72"},"additions":28,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000272\u0000":{"address":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/272","comments":[],"reviews":[{"type":"REVIEW","id":"119612427","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119614718","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis function is mostly useful for easily describing Markov chains in\r\ntest cases.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn test`.\r\n\r\nwchargin-branch: sparseMarkovChainFromTransitionMatrix","title":"Allow converting transition matrix to sparse chain","mergedAs":{"type":"COMMIT","hash":"e5472752acc4e5e76bf5a34b594f546573431711"},"additions":118,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000273\u0000":{"address":{"type":"PULL","number":"273","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/273","comments":[],"reviews":[{"type":"REVIEW","id":"119612913","pull":{"type":"PULL","number":"273","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit slightly reorganizes the internals of `basicPagerank` to use\r\nthe `SparseMarkovChain` type from the `markovChain` module.\r\n\r\nTest Plan:\r\nBehavior of `yarn start` is unchanged.\r\n\r\nwchargin-branch: use-sparsemarkovchain","title":"Use `SparseMarkovChain` in `basicPagerank`","mergedAs":{"type":"COMMIT","hash":"017fbd774ad3e39906f7ba10aed21a70dc570f27"},"additions":45,"deletions":50},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000274\u0000":{"address":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/274","comments":[],"reviews":[{"type":"REVIEW","id":"119612998","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119614731","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn test`.\r\n\r\nwchargin-branch: extract-uniformDistribution","title":"Extract `uniformDistribution`","mergedAs":{"type":"COMMIT","hash":"69b9f6657dfebb56c0563d8bf4cc2969c6343dea"},"additions":28,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000275\u0000":{"address":{"type":"PULL","number":"275","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/275","comments":[],"reviews":[{"type":"REVIEW","id":"119613260","pull":{"type":"PULL","number":"275","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn test`.\r\n\r\nwchargin-branch: extract-sparseMarkovChainAction","title":"Extract `sparseMarkovChainAction`","mergedAs":{"type":"COMMIT","hash":"0a608acbfff607b8cb96627494a3d4c1fe81cbb4"},"additions":45,"deletions":18},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000276\u0000":{"address":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/276","comments":[],"reviews":[{"type":"REVIEW","id":"119613286","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119614737","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThere are substantive options for `convergenceThreshold` and\r\n`maxIterations`, as well as the output option `verbose`. This change is\r\nmade in preparation for extracting this function into `markovChain`,\r\nwhere we will add unit tests for it.\r\n\r\nTest Plan:\r\nBehavior of `yarn start` is unchanged.\r\n\r\nwchargin-branch: configurable-findstationarydistribution","title":"Make `findStationaryDistribution` configurable","mergedAs":{"type":"COMMIT","hash":"9d7f9f78cddc429cd18e8eb986289701cf165acc"},"additions":26,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000277\u0000":{"address":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/277","comments":[],"reviews":[{"type":"REVIEW","id":"119613522","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119614439","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn test`.\r\n\r\nwchargin-branch: extract-findStationaryDistribution","title":"Extract `findStationaryDistribution`","mergedAs":{"type":"COMMIT","hash":"115d7f3921c5145180b472f1678edaf804d0973f"},"additions":108,"deletions":51},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000278\u0000":{"address":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/278","comments":[{"type":"COMMENT","id":"388515391","parent":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388524665","parent":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"119612289","pull":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSee #66 for more context. This yields the following performance\r\nimprovements for me, on the SourceCred graph with 11 072 nodes and\r\n20 250 edges:\r\n\r\n  - Loading a graph from disk is improved overall from 1172 ms to 292 ms\r\n    (4.0× improvement).\r\n\r\n  - The full pipeline for basic PageRank, from button press to final\r\n    render, is improved from 8.44 s to 4.39 s (1.9× improvement).\r\n\r\n  - The PageRank preprocessing step, which involves turning the graph\r\n    into a typed array Markov chain, is improved from 2430 ms to 573 ms\r\n    (4.2× improvement).\r\n\r\n  - The PageRank postprocessing step, which involves turning the typed\r\n    array distribution into an `AddressMap` distribution, is improved\r\n    from 83.53 ms to 4.81 ms (17× improvement).\r\n\r\n  - The `PagerankTable` React component `render` method (constructing\r\n    the virtual tree only, not diffing or embedding into the DOM) is\r\n    improved from 1708 ms to 332 ms (5× improvement).\r\n\r\nThe core matrix computations of PageRank are unaffected, because they do\r\nnot use the `AddressMap` abstraction.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: fast-addressmap","title":"Switch AddressMap implementation to nested maps","mergedAs":{"type":"COMMIT","hash":"e9e001b894ac1b3ce3e4577d02037260a4d1ac30"},"additions":73,"deletions":16},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000279\u0000":{"address":{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/279","comments":[{"type":"COMMENT","id":"388563948","parent":{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"390025672","parent":{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nResolves #270.\r\n\r\nThese timings should be considered approximate. If one process finishes\r\nwhile another process’s termination callback is still being handled,\r\nthen the second process may report a time that is too high. This might\r\nhappen if, for instance, calling `stdout.toString()` takes a really long\r\ntime.\r\n\r\nAlso, these timings should not be considered indicative of the\r\nindividual performance of any particular task. As tasks compete for CPU\r\nand other resources, the elapsed time of one task depends greatly on the\r\nother tasks running at the same time. For instance, using the set of\r\ntasks given by\r\n```js\r\nconst n = 10;\r\nreturn Array(n)\r\n  .fill(null)\r\n  .map((_, i) => ({\r\n    id: \"check-pretty-\" + String(i),\r\n    cmd: [\"npm\", \"run\", \"--silent\", \"check-pretty\"],\r\n    deps: [],\r\n  }));\r\n```\r\nwe see that all tasks are reported to take about the same amount of\r\ntime, but that time varies dramatically with `n`: for `n=1` it is\r\napproximately 4s, while for `n=10` it is approximately 24s. This can be\r\npartially mitigated by inspecting the output of `time(1)`, but not\r\nentirely: even the “user” time varies by around a factor of 2 depending\r\non what other trasks are running.\r\n\r\nIn practice, this means that we have inaccurate reportings like the\r\nfollowing:\r\n\r\n  - `backend` reportedly takes around 10.5s, but when run individually\r\n    takes only around 4.6s;\r\n  - `ci-test` is reported at 9.4s but actually takes only 4.4s;\r\n  - `lint` is reported at 8.8s but actually only takes 3.5s.\r\n\r\nWe _could_ try to mitigate this by including with each task a “hint” of\r\nhow many cores we expect it to peg (`ci-test` gets “all”, `backend` gets\r\n“just one”) and trying not to spawn more processes than there are cores.\r\nBut this sounds pretty fragile, so I haven’t made any efforts to do so.\r\n\r\nTest Plan:\r\nReplace the Travis config with the following, then run `yarn travis`:\r\n```diff\r\ndiff --git a/config/travis.js b/config/travis.js\r\nindex be308d4..ba00a04 100644\r\n--- a/config/travis.js\r\n+++ b/config/travis.js\r\n@@ -16,6 +16,14 @@ function main() {\r\n }\r\n\r\n function makeTasks(mode /*: \"BASIC\" | \"FULL\" */) {\r\n+  return [\r\n+    {id: \"true\", cmd: [\"true\"], deps: []},\r\n+    {id: \"false\", cmd: [\"false\"], deps: []},\r\n+    {id: \"sleep-a\", cmd: [\"sleep\", \"2\"], deps: []},\r\n+    {id: \"sleep-b\", cmd: [\"sleep\", \"2\"], deps: []},\r\n+    {id: \"sleep-c\", cmd: [\"sleep\", \"2\"], deps: [\"sleep-b\"]},\r\n+    {id: \"never\", cmd: [\"echo\", \"wat\"], deps: [\"false\"]},\r\n+  ];\r\n   const basicTasks = [\r\n     {\r\n       id: \"ensure-flow-typing\",\r\n```\r\n\r\nYou can see that both passing and failing tests have times printed, but\r\ntasks that never ran do not. You can also see that time is measured from\r\ntask start, not from dependency graph start: the times for all three\r\noccurrences of `sleep` are approximately 2s, even though one depends on\r\nanother.\r\n\r\nwchargin-branch: execDependencyGraph-timing","title":"Print timing info in `execDependencyGraph`","mergedAs":null,"additions":18,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000281\u0000":{"address":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/281","comments":[],"reviews":[{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119976582","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"119981287","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds \"Node Porcelain\" for the Git plugin. Node porcelain is\r\na wrapper over a graph and node address, which makes it possible to\r\naccess payload data and adjacent nodes via a familiar object-oriented\r\nAPI.\r\n\r\nI believe this porcelain provides substantially better legibility and\r\nusability for the Git plugin. Consider that it is now easy to see what\r\nrelationships each Git node type can have by reading the method\r\nsignatures in the porcelain, rather than needing to inspect all of the\r\nEdge types in types.js.\r\n\r\nThis porcelain has slightly different conventions from the porcelain in\r\nthe GitHub plugin, although the APIs are very similar. I intend to\r\nfollow this commit with two more: one that switches clients of the Git\r\nplugin to use the porcelain, and another that refactors the GitHub and\r\nGit porcelains to use a base Porcelain implementation in src/core.\r\n\r\nTest plan:\r\nExamine the public API of the Git porcelain (this is unlikely to change\r\nmuch), and its corresponding test code.\r\n\r\n`yarn travis --full` passes.","title":"Add porcelain for the Git plugin","mergedAs":{"type":"COMMIT","hash":"fb8da7fcdbb1b29cc69c00ac6d9a14bc8ed994e2"},"additions":363,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000":{"address":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/282","comments":[{"type":"COMMENT","id":"388696940","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388899270","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Node imports are now allowed from absolute paths, starting with `src/`.\r\n\r\nFor example, imports from `\"../../core/graph\"` can now be replaced with\r\n`\"core/graph\"`.\r\n\r\nAlternatives considered: Consider that we want to import the file\r\n`src/core/graph`. I considered the following four approaches for\r\nthis import:\r\n\r\n1. `import {Stuff} from \"core/graph\"`\r\n2. `import {Stuff} from \"Core/graph\"`\r\n3. `import {Stuff} from \"@core/graph\"`\r\n4. `import {Stuff} from \"@/core/graph\"`\r\n\r\nI chose option 1, because it is both concise and easy to implement.\r\n\r\nBecause we don't use a separate namespace for our `src/ directories` and\r\n`node_modules`, there is a possibility of name collisions.  (If so,\r\n`node_modules` will win.) However, I believe this issue is unlikely to\r\nhappen in practice, as we have only a few directories in `src`, we would\r\nneed a conflict on the full (pathed) name.\r\n\r\nIn the event that such a conflict does arise, and is not easily resolved\r\nby disambiguating the directory name, it should not be disruptive to\r\nswitch to import aliasing at that time.\r\n\r\nThis pull request modifies many existing imports with convoluted relative\r\npaths to use absolute paths instead. The changes were generated via\r\nthe following two shell script commands.\r\n\r\n```\r\nfind src -name '*.js' | xargs sed -ri 's%(from \")(../)+(plugins/)?(git|github|artifact)/%\\1plugins/\\4/%g'\r\nfind src -name '*.js' | xargs sed -ri 's%(from \")(../)+(core|graphql|tools|app)?/%\\1\\3/%g'\r\n```\r\n\r\nNote that the changes are segregated by commit, so that all config\r\nchanges are in one commit, all path changes in another.\r\n\r\nTest plan: \r\n- `yarn travis --full` still passes\r\n- `yarn start` still provides a working development server\r\n- `yarn build && yarn backend && node bin/sourcecred.js start` \r\nstill provides a working production instance\r\n\r\nFixes #256","title":"Enable absolute imports for node modules","mergedAs":null,"additions":94,"deletions":82},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000283\u0000":{"address":{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/283","comments":[{"type":"COMMENT","id":"394108307","parent":{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit configures webpack, jest, and flow so that we can use the @\r\nsymbol in module imports as a reference to the project's `src/`\r\ndirectory.\r\n\r\nFor example, instead of:\r\n`import {Stuff} from \"../../../core/graph\"`\r\nYou can now write:\r\n`import {Stuff} from \"@/core/graph\"`\r\n\r\nThe files `.flowconfig`, `config/webpack.config/{backend,dev,prod}.js`\r\nand `package.json` were manually changed to enable module name aliasing.\r\nAll other changes in the commit were generated automatically by running\r\nthe following two commands:\r\n\r\n```\r\nfind src -name '*.js' | xargs sed -ri 's%(from \")(../)+(plugins/)?(git|github|artifact)/%\\1@/plugins/\\4/%g'\r\nfind src -name '*.js' | xargs sed -ri 's%(from \")(../)+(core|graphql|tools|app)?/%\\1@/\\3/%g'\r\n```\r\n\r\nThis fixes #256.\r\n\r\nTo see an alternative that is slightly more concise (no `\"@/\"` at the\r\nbeginning of imports) but has the disadvantage of creating potential\r\nname collisions with node modules, see #282.\r\n\r\nTest plan:\r\n* `yarn travis --full` passes.\r\n* `yarn start` produces a working dev server.\r\n* `yarn build && yarn backend && node bin/sourcecred.js start` produces\r\na working web application.","title":"Enable unambiguous absolute path imports for node","mergedAs":null,"additions":89,"deletions":80},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000284\u0000":{"address":{"type":"PULL","number":"284","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/284","comments":[],"reviews":[{"type":"REVIEW","id":"120060141","pull":{"type":"PULL","number":"284","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nInstead of having one function that returns a union, we present two\r\nfunctions, each of which returns a more specific type.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nExisting unit tests pass, with sufficient modifications.\r\n\r\nwchargin-branch: separate-issueByNumber-prByNumber","title":"Separate GitHub `issueByNumber`/`prByNumber`","mergedAs":{"type":"COMMIT","hash":"9591792f5921a75f66cc5e27f6b91131f6d36c40"},"additions":52,"deletions":29},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000285\u0000":{"address":{"type":"PULL","number":"285","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/285","comments":[],"reviews":[{"type":"REVIEW","id":"120457161","pull":{"type":"PULL","number":"285","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nA few changes were made to code that is correct (as far as I can tell),\r\nbut for which Flow can no longer infer a type parameter. The change is a\r\nbit more annoying than it otherwise would be, because this particular\r\nfile is run directly via node and so must use Flow’s comment syntax for\r\ntype annotations, but Prettier breaks such comments in the cases that we\r\nneed. We work around this by rewriting the original code to avoid the\r\nneed for comments.\r\n\r\nTest Plan:\r\nIn addition to standard CI, run `yarn build` and then run a server from\r\n`build/`, to see that the production build produces a working bundle.\r\n(That the app loads and renders is sufficient.)\r\n\r\nwchargin-branch: upgrade-flow-v0.72.0","title":"Upgrade Flow to v0.72.0","mergedAs":{"type":"COMMIT","hash":"f31d2c517d5a7ac2b4613e5aa595bbaefdc9696f"},"additions":21,"deletions":21},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000286\u0000":{"address":{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/286","comments":[],"reviews":[{"type":"REVIEW","id":"120459485","pull":{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"`NodeReference` and `NodePorcelain` act as abstractions over the two\r\nstates a Node can be in.\r\n\r\n- We might have the address of a node (because some edge pointed to it),\r\nbut don't actually have the Node in the graph. In that case, we can do\r\nsome queries on the node (e.g. find its neighbors), but can't access\r\nthe payload. This corresponds to having a `NodeReference`.\r\n\r\n- We might have the node in the graph. In that case, we can access a\r\n`NodePorcelain`.\r\n\r\nThe main benefit this abstraction brings is type-safety over accessing\r\ndata from a `NodePayload`. Previously, the coding conventions encouraged\r\nclients to ignore the distinction, and the type signatures incorrectly\r\nreported that many payload-level properties were non-nullable. Now, the\r\n`get` method that mapp a `Reference` to a `Payload` is explicilty\r\nnullable.\r\n\r\nGiven a `NodePorcelain`, it's always possible to retrieve the reference\r\nvia `ref()`. Given the `NodeReference`, you might be able to retrieve\r\nthe `NodePorcelain` via `get()`.\r\n\r\nClients that subtype `NodePorcelain` and `NodeReference` should, in\r\ngeneral, override the `ref()` and `get()` methods to return their\r\nsubtype. We also recommend having subclasses overwrite the constructors\r\nto take a base `NodePorcelain` and `NodeReference` respectively\r\n(although the base classes take a `Graph` and `address` as constructor\r\narguments).\r\n\r\nTest Plan: Inspect the unit tests, they are pretty thorough.\r\n\r\nPaired with @wchargin","title":"Add `NodeReference` and `NodePorcelain` to core","mergedAs":{"type":"COMMIT","hash":"7ccef98c87047303aa5c73c6f3d0483b208642bd"},"additions":155,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000287\u0000":{"address":{"type":"PULL","number":"287","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/287","comments":[],"reviews":[{"type":"REVIEW","id":"120461350","pull":{"type":"PULL","number":"287","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"See #286 for context. \r\nThere are a few miscellaneous changes in\r\nsrc/app/credExplorer to change clients to use the new API.\r\n\r\nTest plan:\r\nNew unit test were added, and existing behavior is preserved. Most of\r\nthe functionality of the GitHub porcelain was already well tested.\r\n\r\nPaired with @wchargin","title":"Update GitHub to use NodeReference & NodePorcelain","mergedAs":{"type":"COMMIT","hash":"bb77c36626e495719864c71f48b91052b7d7f25a"},"additions":550,"deletions":349},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000288\u0000":{"address":{"type":"PULL","number":"288","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/288","comments":[],"reviews":[{"type":"REVIEW","id":"120464689","pull":{"type":"PULL","number":"288","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"See #286 for context.\r\n\r\nI also upgraded client code in src/app.\r\n\r\nTest plan:\r\nUnit tests are extensive, including testing that `get`, `ref`, and\r\nconstructors are overriden on every `GitReference` and `GitPorcelain`\r\ntype that is exposed to clients.\r\n\r\nPaired with @wchargin","title":"Refactor Git plugin to use NodeReference","mergedAs":{"type":"COMMIT","hash":"1bd444a33b212015f068bc62f220a5d6ef5b68e8"},"additions":373,"deletions":193},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000289\u0000":{"address":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/289","comments":[{"type":"COMMENT","id":"389600770","parent":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391817892","parent":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"123129658","pull":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"As previously implemented, the Graph was polymorphic in its NodePayload\r\nand EdgePayload. This was a lot of bookkeeping for very\r\nlittle apparent benefit. In general, graphs may be constructed with\r\nforeign plugins, so it's hard to do anything with this information.\r\n\r\nIn my experience, having the Graph polymorphism has never caught a bug,\r\nand has led to lots of boilerplate code, especially typing `Graph<any,\r\nany>`.  I view the fact that in #286 we added a new core `NodeReference`\r\nconcept, which always types its Graph as `<any, any>`, as strongly\r\nsuggestive that this was not going to provide any lasting value.\r\n\r\nIn this commit, I've removed the Graph polymorphism. Note how in many\r\ncases where we were typing the graph, it provided no value, as evidenced\r\nby the fact that the imported Node and Edge types were used no-where\r\nelse in the file other than in the Graph declaration.\r\n\r\nTest plan:\r\nRemoving extra typing information is very unlikely to cause regressions.\r\n`yarn flow` and `yarn lint` both pass.","title":"Remove Node/Edge polymorphism on Graph","mergedAs":{"type":"COMMIT","hash":"418d046691e084a7906badcc4632b3733d8f12a3"},"additions":93,"deletions":139},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000290\u0000":{"address":{"type":"PULL","number":"290","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/290","comments":[],"reviews":[{"type":"REVIEW","id":"120877410","pull":{"type":"PULL","number":"290","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`markovChain.findStationaryDistribution` is currently written such that\r\nit blows the function call stack size if it is called with ~100k nodes.\r\n\r\nThis commit effects a small refactor so that the delta is computed in a\r\nloop over elements in the distribution, rather than creating a massive\r\nfunction arguments list. This results in the correct behavior.\r\n\r\nTest plan:\r\nWe discussed offline and decided not to test it. Reasons:\r\n\r\n- We could factor out `computeDelta` and test that function in\r\nisolation, but I think this provides very, very little value. The class\r\nof regression it protects against is almost precisely the case where\r\nsomeone reverts this commit.\r\n\r\n- We could test the entire `findStationaryDistribution` function, which\r\nis more valuable, but requires a large, slow test case (~1 sec)\r\n\r\n- This is a bug that is unlikely to re-occur or to slip by unnoticed if\r\nit does. It's also unlikely to surface in future refactoring.","title":"markovChain should scale to >200k nodes","mergedAs":{"type":"COMMIT","hash":"64a8514cf8a2b45b08a88e5b0a7927a1b858f46c"},"additions":6,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000291\u0000":{"address":{"type":"PULL","number":"291","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/291","comments":[],"reviews":[{"type":"REVIEW","id":"120881823","pull":{"type":"PULL","number":"291","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`sourcecred graph` tends to die due to lack of heap during the Git\r\nplugin. Node defaults to ~1.76GB of heap available, which is just not\r\nthat much. This commit uses the `--max_old_space_size` argument to\r\n`node` to increase the limit. We use a default value of `8192`, and it's\r\nconfigurable by the user via a flag.\r\n\r\nThis command is only available natively in `sourcecred graph`, because\r\nthat command turns on other node processes. For commands that run in\r\ntheir original process, you would need to set the value yourself.","title":"Run commands/graph with more heap available","mergedAs":{"type":"COMMIT","hash":"610a92a683ebd54ffaf5d656457527185928b654"},"additions":30,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000":{"address":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/292","comments":[{"type":"COMMENT","id":"390024639","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"390302931","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"390304127","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889191","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889367","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889403","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889547","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889724","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121889965","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121890061","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121890423","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121890444","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"121894277","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds the `src/util/compat` module, which is responsible for\r\ndata compatibility. It provides two methods: `toCompat` and\r\n`fromCompat`.\r\n\r\n`toCompat` allows an object to be versioned with a type and version\r\nstring. Doing so wraps the object in an array whose first element has\r\n`version` and `type` fields.\r\n\r\n`fromCompat` allows loading compatibilized data. It takes a `type` and\r\n`version` expectation, as well as optional processors for various data\r\nversions. It throws an error if the data was not compatibilized, or if\r\nit is the wrong type, or if it has an unsupported version.\r\n\r\nThe versioning is designed to be composable; see the final test block\r\nfor an example of loading a structure with nested versioning.\r\n\r\nTest plan: Carefully inspect the included unit tests, and feel free to\r\npropose more.\r\n\r\nFor context, see #280.","title":"Add data versioning utilities","mergedAs":{"type":"COMMIT","hash":"1fc860bd5633b4f93c40e5a23d23d81d1ccb70db"},"additions":213,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000293\u0000":{"address":{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/293","comments":[],"reviews":[{"type":"REVIEW","id":"121899057","pull":{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds explicit versioning to the `Graph` and `AddressMap`\r\nJSON representations, using the new `compat` module. This will make it\r\nsafer to change the serialization format for these classes.\r\n\r\n(Note: I don't expect we'll add backcompat handlers for these classes\r\nsoon, but having versioning means that we can change the serialization\r\nformat in a way that breaks old data cleanly and explicitly, rather than\r\nintroducing undefined behavior.)\r\n\r\nTest plan: The changes are slight, and well-captured by the snapshot\r\ntests. Note that after this commit, the SourceCred commands will fail on\r\nold data, so old data will need to be regenerated.","title":"Use versioning for `Graph` and `AddressMap`","mergedAs":{"type":"COMMIT","hash":"5a40bb0a306e4bb1ef4eb4741f2fee87b2234596"},"additions":4218,"deletions":4005},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000294\u0000":{"address":{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/294","comments":[],"reviews":[{"type":"REVIEW","id":"121887543","pull":{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Will allow us to use opaque types in #292 without breaking the build\r\nin #293.\r\n\r\nTest plan:\r\nIf travis passes, we're good.","title":"Upgrade babel-plugin-flow-react-proptypes to 23","mergedAs":{"type":"COMMIT","hash":"180c3454af63ab337a7e7a69bbc0c462e2e4bbb4"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000295\u0000":{"address":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/295","comments":[{"type":"COMMENT","id":"390821990","parent":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391123642","parent":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122318172","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis is an implementation-only, API-preserving change to the `Graph`\r\nclass. Edges’ `src` and `dst` attributes are now internally represented\r\nas integer indices into a fixed ordering of nodes, which may depend on\r\nnon-logical properties such as insertion order. The graph’s serialized\r\nform also now stores edges with integer `src`/`dst` keys, but the node\r\nordering is canonicalized so that two graphs are logically equal if and\r\nonly if their serialized forms are equal. This change substantially\r\nreduces the rest storage space for graphs: the `sourcecred/sourcecred`\r\ngraph drops from 39MB to 30MB.\r\n\r\nCurrently, the graph will have to translate between integer indices and\r\nfull addresses at each client operation. This is not actually a big\r\nperformance regression, because it is just one more integer-index\r\ndereference over the previous behavior, but it does indicate that the\r\noptimization is not living up to its full potential. In subsequent\r\nchanges, the `NodeReference` class will be outfitted with facilities to\r\ntake advantage of the internal indexing; a long-term goal is that\r\nroughly all operations should be able to be performed within the indexed\r\nlayer, and that translating between integers and addresses should only\r\nhappen at non-hot-path API boundaries.\r\n\r\nThis diff is considerably smaller and easier to read with `-w`.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nI inspected the snapshots for general form, and manually verified that\r\nthe indices for one edge were correct (the MERGED_AS edge for the head\r\ncommit of the example repo). Other than that, existing unit tests mostly\r\nsuffice; one new unit test added.\r\n\r\nwchargin-branch: graph-indexed-edges","title":"Use indexed edges in graph internals","mergedAs":{"type":"COMMIT","hash":"2b301f91597a4502612f53a62bdf0367b9249bd4"},"additions":2055,"deletions":3110},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000":{"address":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/296","comments":[{"type":"COMMENT","id":"391540668","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391558915","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391806114","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391816825","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122803449","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122804113","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122804495","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122806588","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"122817391","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"123120152","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We can use this pull request for discussion.","title":"Add design doc for address–payload unification","mergedAs":{"type":"COMMIT","hash":"e20b794edcd9d101897fa3181b3d78b0bc1709b1"},"additions":541,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000297\u0000":{"address":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/297","comments":[],"reviews":[{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"123510829","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nWe had three graph merging functions: `merge`, `mergeConservative`, and\r\n`mergeManyConservative`. Of these, `merge` was never used outside of\r\ncode directly testing its behavior, and `mergeConservative` is a\r\nstrictly inferior version of `mergeManyConservative`. This commit\r\nremoves `merge` and `mergeConservative`, and renames\r\n`mergeManyConservative` to `mergeConservative`.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nExisting unit tests suffice; some useless tests pruned.\r\n\r\nwchargin-branch: mmeerrggee","title":"Merge `merge`s","mergedAs":{"type":"COMMIT","hash":"719bf471563e0af3e28e8f1fb6866a4b6a133fd2"},"additions":39,"deletions":169},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000298\u0000":{"address":{"type":"PULL","number":"298","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/298","comments":[],"reviews":[{"type":"REVIEW","id":"123512459","pull":{"type":"PULL","number":"298","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nWe now use the “advanced” graph everywhere. Happily, all tests still\r\npass!\r\n\r\nStarting from `:%s/\\%(advanced\\|simple\\)MealGraph/mealGraph/gc`, only a\r\nfew tests had to be manually changed: in particular, the `#equals` tests\r\nfor “returns false when the ?HS has nodes missing in the ?HS” became\r\ntrivially incorrect by the above substitution, and were therefore\r\nchanged to use more appropriate inputs.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: remove-simple-graph","title":"Remove “simple graph” demo data","mergedAs":{"type":"COMMIT","hash":"853518fd60242624c31fb1530dbe682c54542ee1"},"additions":82,"deletions":92},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000299\u0000":{"address":{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/299","comments":[{"type":"COMMENT","id":"392207383","parent":{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"123543573","pull":{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese tests have apparently been borked since the beginning. They were\r\ntesting properties about nodes instead of edges, had the wrong test\r\nnames, and had the LHS/RHS backward… this should make them more useful.\r\n\r\nTest Plan:\r\nUnit tests suffice, I suppose.\r\n\r\nwchargin-branch: tests-for-missing-edges","title":"Fix tests for edge-induced graph disequality","mergedAs":{"type":"COMMIT","hash":"d8fef6bf47a1500a591cc7f55ee320ea437c0ae5"},"additions":16,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000300\u0000":{"address":{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/300","comments":[{"type":"COMMENT","id":"392218331","parent":{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"123544701","pull":{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis just slows down commits by a few seconds. We `check-pretty` in\r\nTravis, so this doesn’t actually catch anything—and, anecdotally, it has\r\nnever caught anything for me because I automatically run `prettier` on\r\nsave and also (almost) always run Travis before pushing.\r\n\r\nTest Plan:\r\nRun `git commit --amend --no-edit` and note that it is now fast!\r\n\r\nwchargin-branch: no-lint-on-commit","title":"Remove `lint-staged` pre-commit hook","mergedAs":{"type":"COMMIT","hash":"ab10e1746c2b8e2602213ed12d88c7560fbcdf60"},"additions":10,"deletions":323},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000301\u0000":{"address":{"type":"PULL","number":"301","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/301","comments":[],"reviews":[{"type":"REVIEW","id":"123544737","pull":{"type":"PULL","number":"301","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPlacing `STOPSHIP` or `stopship` (or any case variant) in any file\r\ntracked by Git will now cause a `yarn travis` failure. If you need to\r\nuse this string, you can concatenate it as `\"stop\" + \"ship\"` or\r\nequivalent.\r\n\r\nTest Plan:\r\nIn `travis.js`, change `\"check-stop\" + \"ships\"` to `\"check-stopships\"`,\r\nand note that this causes the build to fail with a nice message. Note\r\nthat this also causes `check-stopships.sh` to fail even when invoked\r\nfrom an unrelated directory, like `src`.\r\n\r\nwchargin-branch: check-stopships","title":"Check for STOPSHIPs in CI","mergedAs":{"type":"COMMIT","hash":"f0fcf0279149bcbdf5e463d183d2f0ade2f2d635"},"additions":9,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000302\u0000":{"address":{"type":"PULL","number":"302","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/302","comments":[],"reviews":[{"type":"REVIEW","id":"123544692","pull":{"type":"PULL","number":"302","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nImproves the result of the preceding commit to strip out cruft. Paired\r\nwith @decentralion.\r\n\r\nTest Plan:\r\n```shell\r\n$ ! git grep -Fi -e simple -e advanced src/core/graph*\r\n```\r\nAlso review `awk '/(describe|it)\\(/' src/core/graph.test.js`.\r\n\r\nwchargin-branch: simplify-simple-advanced","title":"Simplify legacy “simple”/“advanced” tests in Graph","mergedAs":{"type":"COMMIT","hash":"15f65fbff45e42088d2f3a4e8b7d1a02cdcfe597"},"additions":12,"deletions":41},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000303\u0000":{"address":{"type":"PULL","number":"303","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/303","comments":[],"reviews":[{"type":"REVIEW","id":"123544778","pull":{"type":"PULL","number":"303","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Given that we are undergoing a major world-changing refactor (#190), all\r\noutstanding code needs to be refactored to use the new conventions. We\r\ndon't actually use the Artifact Plugin yet, and reading the code, it\r\nneeds non-trivial rewrites to be in sync with the new world.\r\n\r\nRather than maintain it now, I am deleting it; we can regain the context\r\nwhen the time is ripe to setup and integrate the plugin.\r\n\r\nTest plan: Travis passes. `yarn start` produces no references to the\r\nartifact editor.","title":"Remove the artifact plugin","mergedAs":{"type":"COMMIT","hash":"c68b78f959e25c5bf10b2997b797ca095760d9f1"},"additions":0,"deletions":1745},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000304\u0000":{"address":{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/304","comments":[],"reviews":[{"type":"REVIEW","id":"123784802","pull":{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"In #190, @wchargin lays out an ambitious proposal for refactoring away\r\nthe graph's address-payload distinction. This has proven to be a\r\ncomplicated refactor to land, so we are going to achieve it by forking\r\nparts of the project into v2, updating incrementally in v2, and then\r\nreplacing original components with their v2 versions.\r\n\r\nTest plan:\r\nNo new code added. `yarn travis` passes.\r\n\r\nPaired with @wchargin","title":"Setup `src/core2` as graph refactor staging area","mergedAs":{"type":"COMMIT","hash":"f22cf04e7593d942e27f906ef442db073ad7fbd1"},"additions":426,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000305\u0000":{"address":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/305","comments":[{"type":"COMMENT","id":"392578620","parent":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"123788937","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"123789101","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"123797511","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Since this document was originally written, we've iterated on the design\r\na bit. @wchargin and I have re-reviewed the doc, and we think it's now\r\nup-to-date with our plans.\r\n\r\nTest plan: I ran the following command to bring the code into my\r\nclipboard:\r\n\r\n```\r\n❯ awk -v RS='```[a-z]*' '(NR+1)%2' src/core2/address_payload_unification_design.md | xsel -ib\r\n```\r\n\r\nTest plan:\r\nPasting this into https://flow.org/try produced no errors.\r\n\r\nPaired with @wchargin","title":"Update address_payload_unification_design","mergedAs":{"type":"COMMIT","hash":"c957e84da1f2449c363c4ad677c05f087f424b53"},"additions":31,"deletions":26},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000306\u0000":{"address":{"type":"PULL","number":"306","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/306","comments":[],"reviews":[{"type":"REVIEW","id":"123801200","pull":{"type":"PULL","number":"306","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"src/core2/graph.js has the types and Graph class scaffold as\r\ndescribed in address_payload_unification_design.md.\r\nAlso, we decided to modify the design doc to include a type parameter\r\nfor Edges (although we aer open to removing if it becomes cumbersome).\r\n\r\nTest plan:\r\n`yarn flow` passes, and the design doc still typechecks too.","title":"Create type signatures for new graph API","mergedAs":{"type":"COMMIT","hash":"7078125c569a13c5dc6dde494cc90adfef3613f3"},"additions":175,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000307\u0000":{"address":{"type":"PULL","number":"307","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/307","comments":[],"reviews":[{"type":"REVIEW","id":"123804196","pull":{"type":"PULL","number":"307","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also, rename `NodeDelegateReference` to `DelegateNodeReference` in the\r\ndesign doc.\r\n\r\nTest plan:\r\nDidn't add tests, as the implementation is trivial. Flow passes.","title":"Add `DelegateNodeReference` to `graph` module","mergedAs":{"type":"COMMIT","hash":"630a6d6532ab5a13d3431bd9160197b1ded18421"},"additions":24,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000308\u0000":{"address":{"type":"PULL","number":"308","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/308","comments":[],"reviews":[{"type":"REVIEW","id":"123814802","pull":{"type":"PULL","number":"308","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn fact, a constructor that only calls `super` is useful: it specifies\r\nthe API for constructing an object of a given class without needing to\r\ntraverse its prototype chain. (That constructors are inherited at all is\r\narguably a design flaw.)\r\n\r\nTest Plan:\r\nNone.\r\n\r\nwchargin-branch: yes-useful-constructor","title":"Disable the `no-useless-constructor` lint rule","mergedAs":{"type":"COMMIT","hash":"47c7e33ec2eb4ddd13a90abb1271f9f044ae0a35"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000309\u0000":{"address":{"type":"PULL","number":"309","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/309","comments":[],"reviews":[{"type":"REVIEW","id":"123815250","pull":{"type":"PULL","number":"309","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"- Add the `plugins` method to graph, and have the constructor take them\r\n- Add in demo `PluginHandlers` to the `graphDemoData`\r\n- Add unit tests for `plugins` methods\r\n\r\nTest plan: Travis\r\n\r\nPaired with: @wchargin","title":"Add plugin handler logic to Graph, with tests","mergedAs":{"type":"COMMIT","hash":"7562453f02428636e474f3f46b49d5483d8f37c6"},"additions":143,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000310\u0000":{"address":{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/310","comments":[],"reviews":[{"type":"REVIEW","id":"123816931","pull":{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, when filtering by type (e.g. in neighbors), we require only a\r\ntype string. This is a design flaw, as if two plugins both define an\r\n\"ISSUE\" type, either plugin may unexpectedly receive the other plugin's\r\nnodes or edges.\r\n\r\nWe fix the flaw by explicitly binding the plugin name and type field\r\ntogether as `PluginType`.\r\n\r\nTest plan: Flow passes, and so does the following invocation to check\r\nour design doc:\r\n```\r\ncat <(printf '// @flow\\n') \\\r\n  <(awk -v RS='```[a-z]*' '(NR+1)%2' \\\r\n      src/core2/address_payload_unification_design.md) \\\r\n  | yarn -s flow check-contents\r\n```","title":"Create an explicit `PluginType`","mergedAs":{"type":"COMMIT","hash":"41ab7aa7290e1c6dabee3e66b5632ffd1d6810ed"},"additions":76,"deletions":64},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000311\u0000":{"address":{"type":"PULL","number":"311","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/311","comments":[],"reviews":[{"type":"REVIEW","id":"123821940","pull":{"type":"PULL","number":"311","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn flow stop; yarn travis | cat` and note the absence of the\r\nreally long line that has ~2500 bytes of “Server is initializing”.\r\n\r\nwchargin-branch: quiet-flow-server","title":"Trim Flow’s server startup build output","mergedAs":{"type":"COMMIT","hash":"13acbe1efd6f3df9b191a2fc1d781fbd547a6298"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000312\u0000":{"address":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/312","comments":[],"reviews":[{"type":"REVIEW","id":"123822063","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds the following methods to the `Graph`:\r\n\r\n* `addNode`\r\n* `removeNode`\r\n* `ref`\r\n* `node`\r\n* `nodes`\r\n* `equals`\r\n\r\nThe graph now supports adding nodes, with thorough testing. Other\r\nmethods were implemented as necessary to test that `addNode` was\r\nimplemented properly.\r\n\r\nAlso, we've made a slight change to spec: `nodes` (and other filter\r\noptions) accept a `PluginFilter` object, which, if present, must\r\nspecify a plugin and may specify a type.\r\n\r\nI've taken the opportunity to re-write the graph test code. Instead of\r\nhaving a complicated `graphDemoData` file that creates a graph with many\r\ndifferent nodes, I've created an `examplePlugin` which makes it trivial\r\nto instantiate new simple Foo and Bar nodes on the fly. Then, test cases\r\ncan construct a small graph that is clearly appropriate for whatever\r\nfunctionality they are testing.\r\n\r\nTest plan: Unit tests were added, travis passes.","title":"Graphv2: enable adding and retrieving nodes","mergedAs":{"type":"COMMIT","hash":"8ab05989394500a801a2acda93315bcf9f2e4f50"},"additions":449,"deletions":135},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000313\u0000":{"address":{"type":"PULL","number":"313","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/313","comments":[],"reviews":[{"type":"REVIEW","id":"124134456","pull":{"type":"PULL","number":"313","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIt’s critical, even more so than usual, that the “base reference”\r\nproperty of a `DelegateNodeReference` be a private property, because\r\nthis class is designed for inheritance. In ECMAScript 6, we can achieve\r\nthis by giving the property a `Symbol` key instead of a string key.\r\nUnfortunately, Flow doesn’t know about `Symbol`s, so we need a few casts\r\nthrough `any`, but they are localized to as small a scope as possible.\r\n\r\nTest Plan:\r\nUnit tests added. Note that they pass both before and after this change.\r\n\r\nwchargin-branch: symbol-base-ref","title":"Use a `Symbol` for DelegateNodeReference base ref","mergedAs":{"type":"COMMIT","hash":"87b7df595745ea78b6f5cc8dfcf04d3053caaf74"},"additions":69,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000314\u0000":{"address":{"type":"PULL","number":"314","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/314","comments":[],"reviews":[{"type":"REVIEW","id":"124134686","pull":{"type":"PULL","number":"314","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe use of `tee /dev/stderr` failed when running as a child process\r\nunder Node for some reason. (I haven’t been able to figure out why—it\r\nworks fine when run as a standalone script or when run as a child\r\nprocess under Python.) This is also technically Linux-specific, so I’ve\r\nchanged it to use a process substitution. After looking around for a\r\nbit, there doesn’t seem to be a way to do this in a way that is\r\nportable, uses only POSIX shell features, and doesn’t create temporary\r\nfiles all at the same time, so the script is now run under `bash`.\r\n\r\nTest Plan:\r\nRun `yarn travis` and note that the `ensure-flow.sh` output no longer\r\ncontains the line `tee: /dev/stderr: No such device or address`.\r\n\r\nwchargin-branch: no-tee-devstderr","title":"Fix `ensure-flow.sh` running under Node","mergedAs":{"type":"COMMIT","hash":"6663c4f8ade2f3647b20552ae3bd84ea01d4a4e1"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000315\u0000":{"address":{"type":"PULL","number":"315","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/315","comments":[],"reviews":[{"type":"REVIEW","id":"124163071","pull":{"type":"PULL","number":"315","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"As of this commit, adding the comment `//$ExpectError` in flow-typed\r\ncode asserts that the next line must cause a flow error. If it does, no\r\nerror or warning is generated. If it does not, then this produces a flow\r\nwarning, which is visible to developers running `yarn flow` and\r\nadditionally causes travis to fail.\r\n\r\nTest plan:\r\n\r\n- As committed, `yarn travis` passes.\r\n- I added `//$ExpectError` above some line of flow-checked code which does\r\nnot currently throw an error. Afterwards, `yarn travis` failed (and a\r\nhelpful message was displayed in console on running `yarn flow`)\r\n- I added the following bad code into one of our files:\r\n```javascript\r\n//$ExpectError\r\nconst foo: string = 3;\r\n```\r\nAs expected, `yarn flow` and `yarn travis` both passed.","title":"Flow: enable `//$ExpectError`","mergedAs":{"type":"COMMIT","hash":"3b3564203ccf6087b49c1e8494d14e675fe111ac"},"additions":11,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000316\u0000":{"address":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/316","comments":[],"reviews":[{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Given that we have reified the type `PluginFilter` as a consistent way\r\nto filter nodes and edges by plugin and type, we should also have\r\nre-usable logic for that end.\r\n\r\nThis commit adds `addressFilterer`, which takes a `PluginFilter` and\r\nreturns a function that checks whether a given address matches the\r\nfilter. Right now, only the `nodes` function uses it.\r\n\r\nFor added safety, `addressFilterer` does runtime validation that the\r\nrequired `plugin` property was set.\r\n\r\nTest plan: See included unit tests.","title":"Refactor `addressFilterer` for using PluginFilter","mergedAs":{"type":"COMMIT","hash":"c0c79fd6080606423076c94d8e3dabb6956dc5e9"},"additions":21,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000317\u0000":{"address":{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/317","comments":[],"reviews":[{"type":"REVIEW","id":"124173971","pull":{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPreviously, our CI script would run `yarn backend`, which has the\r\nside-effect of erasing the `bin/` directory. By itself, this is not\r\ngreat, but not awful. However, this frequently triggers a race condition\r\nin Prettier, causing the `check-pretty` step of the build to fail. (More\r\ndetails: https://github.com/prettier/prettier/issues/4468.)\r\n\r\nThis patch changes the CI script to build the backend scripts into a\r\ntemporary directory.\r\n\r\nTest Plan:\r\nBefore applying this patch: `yarn backend` and then `yarn travis`. If\r\nthis consistently causes a Travis failure due to `check-pretty`, then\r\nyour machine can reproduce the race condition that we‛re trying to\r\neliminate. (Otherwise, you can try creating a bunch more Git history…\r\nI’m not really sure what to say. It is a race condition, after all.)\r\nThen, apply this patch, and repeat the above steps; note that the error\r\nno longer occurs, and that the build output is to a temporary directory.\r\n\r\nwchargin-branch: ci-preserve-bin","title":"Don’t erase the `bin/` folder in CI","mergedAs":{"type":"COMMIT","hash":"f8242c8caba1de3d802d95797d1db32ca5a5d53d"},"additions":14,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000318\u0000":{"address":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/318","comments":[],"reviews":[{"type":"REVIEW","id":"124214582","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124220054","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124220409","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Work-in-progress. Based on code originally paired with @decentralion.\r\n\r\nwchargin-branch: v2-edges","title":"Add edges to the graph","mergedAs":{"type":"COMMIT","hash":"8182bb340cdcadd3d46556cc03392117143a4a6f"},"additions":441,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000319\u0000":{"address":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/319","comments":[],"reviews":[{"type":"REVIEW","id":"124236667","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124236886","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124557117","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124557159","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124557191","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124562303","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124563477","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124566934","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"The implementation is adapted from our previous implementation, but has\r\nbeen refactored to be more appropriate for our generator-function\r\napproach.\r\n\r\nThe unit tests comprehensively explore a simple example graph, testing\r\nthe following cases:\r\n- Direction filtering (`IN`/`OUT`/`ANY`/unspecified)\r\n- Node types\r\n- Edge types\r\n- Self-loop edges\r\n- Dangling edges\r\n- Removed edges don't appear\r\n\r\nTest plan: Carefully inspect the added unit tests.\r\n\r\nPaired with @wchargin","title":"Add the `NodeReference.neighbors` implementation","mergedAs":{"type":"COMMIT","hash":"c7854c1154f6c951057480ab6e81018af0964ddd"},"additions":185,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000320\u0000":{"address":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/320","comments":[{"type":"COMMENT","id":"393372141","parent":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124626000","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124626332","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124637246","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124638262","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nI dropped the `edgeDecomposition` and `neighborhoodDecomposition` test\r\ncases, because (a) we don’t have a canonical “interesting graph” on\r\nwhich to run them, compounding that (b) it’s not clear how much value\r\nthey add.\r\n\r\nTest Plan:\r\nNew unit tests suffice.\r\n\r\nwchargin-branch: mergeConservative-v2","title":"Implement `mergeConservative` for GraphV2","mergedAs":{"type":"COMMIT","hash":"760fd0042707921c244b7fad117acddb6cd0850b"},"additions":113,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000321\u0000":{"address":{"type":"PULL","number":"321","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/321","comments":[],"reviews":[{"type":"REVIEW","id":"124621180","pull":{"type":"PULL","number":"321","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nBoth the implementation and the tests here are pretty straightforward.\r\nThe only change from GraphV1 is that we should explicitly check that the\r\nplugins are copied correctly, because graph equality does not check\r\nthis.\r\n\r\nTest Plan:\r\nNew unit tests suffice.\r\n\r\nwchargin-branch: copy-v2","title":"Implement `copy` for GraphV2","mergedAs":{"type":"COMMIT","hash":"5dcf32560d51c1436daff7e32b5df1bb56282eab"},"additions":28,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000322\u0000":{"address":{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/322","comments":[{"type":"COMMENT","id":"393667387","parent":{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"124959533","pull":{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nA `Node` includes a ref and a payload. We should say that two nodes at\r\nthe same address are equal iff their payloads are equal, and two\r\npayloads at the same address are equal iff their JSON contents are\r\nequal. Importantly, `Node` equality does not depend on the `ref`’s\r\ninternal structure: this structure includes a reference to the enclosing\r\ngraph, and so using this notion of node equality caused `equals` to\r\nincorrectly return `false` when the inputs were two logically equal\r\ngraphs with different internal structure. (It also caused `equals` to be\r\nvery slow, performing a deep equality check on the graphs for every\r\nnode.)\r\n\r\nTest Plan:\r\nA unit test has been strengthened. It fails before this patch, and\r\npasses afterward.\r\n\r\nwchargin-branch: v2-node-payload-json-equality","title":"Use payload-JSON equality for `Node`s","mergedAs":{"type":"COMMIT","hash":"6e442c2f0c62fffd6f82cb7758e4880c7cf0734c"},"additions":10,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000323\u0000":{"address":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/323","comments":[],"reviews":[{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe storage format is similar to the V1 storage format. Nodes are sorted\r\nby address and stored in an ordered list. Edges have `srcIndex` and\r\n`dstIndex`, keyed against the node order. Each node stores the name of\r\nits plugin and the result of invoking `toJSON` on its payload.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`. The single added snapshot is easy\r\nto read and verify.\r\n\r\nwchargin-branch: v2-json","title":"Implement `toJSON` and `fromJSON` for GraphV2","mergedAs":{"type":"COMMIT","hash":"fbf0d65f76281347a29fb326e495d781cca93b62"},"additions":319,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000324\u0000":{"address":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/324","comments":[{"type":"COMMENT","id":"394108270","parent":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125327015","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit changes `Edges` from being plain JS objects into\r\nplugin-constructed class instances, like with NodePayload and\r\nNodeReference. The interface is as follows:\r\n\r\n```js\r\nexport interface Edge {\r\n  /**\r\n   * Convert this object to its serialized form. This must be a plain\r\n   * old JSON value: i.e., a value `v` such that\r\n   * `JSON.parse(JSON.stringify(v))` is deep-equal to `v`.\r\n   * The `src` and `dst` should not be included in the JSON representation;\r\n   * rather, the PluginHandler.createEdge method will be offered the src\r\n   * and dst when regenerating the edge from JSON.\r\n   */\r\n  toJSON(): any;\r\n  address(): Address;\r\n  src(): NodeReference;\r\n  dst(): NodeReference;\r\n}\r\n```\r\n\r\nPlugin handlers must now provide a `createEdge` function:\r\n```js\r\n  /**\r\n   * Deserialize a JSON edge payload, which is guaranteed to be the\r\n   * seriaization of a previous `EP`.\r\n   */\r\n  createEdge(src: NodeReference, dst: NodeReference, json: any): E;\r\n```\r\n\r\nThis has some nice consequences:\r\n- We no longer need to serialize edge addresses, which are often very\r\nlong concatenations of two other addresses. Instead, we can serialize\r\nthe following `EdgeJSON`:\r\n\r\n```js\r\ntype EdgeJSON = {|\r\n  payload: any,\r\n  plugin: string,\r\n  srcIndex: Integer,\r\n  dstIndex: Integer,\r\n|};\r\ntype EdgesSortedByStringifiedAddress = EdgeJSON[];\r\nexport type GraphJSON = {|\r\n  +nodes: NodesSortedByStringifiedAddress,\r\n  +edges: EdgesSortedByStringifiedAddress,\r\n|};\r\n```\r\n\r\n- Plugins can now provide Edge classes with refined type signatures, as\r\nin the following example:\r\n```js\r\nexport class MergedAsEdge {\r\n  static TYPE: \"MERGED_AS\" = \"MERGED_AS\";\r\n  _src: PullRequestReference;\r\n  _dst: CommitReference;\r\n\r\n  constructor(src: PullRequestReference, dst: CommitReference) {\r\n    // ...\r\n  }\r\n\r\n  src(): PullRequestReference {\r\n    return this._src;\r\n  }\r\n  // and so forth\r\n}\r\n```\r\n\r\n- It makes the API overall feel more consistent. In the pre-refactor\r\nworld, all nodes and edges were stored as plain JS objects. Presently,\r\nnodes are plugin-provided classes with accessor methods, but edges are\r\nstill plain JS objects. This commit unifies them.\r\n\r\nHowever, it's a bit weird in this design that `Edges` (which are\r\nnominally graph-agnostic) give `NodeReferences`, which are tied to\r\nspecific graphs. As implemented, graphs are permissive in that they will\r\naccept edges from other graphs, but careful in what they return, in that\r\nthe edges they return always contain references to their own nodes.\r\n\r\nThus, it is not the case in general that adding an edge to a graph and\r\nrequesting it back gives a reference-identical edge; if the initial edge\r\ncontained references to a different graph, a new one is returned.\r\n\r\nAlso, the performance of this commit is not great, since internally the\r\nedges go through address translation a lot: in `neighbors`, `addEdge`,\r\n`removeEdge`, `toJSON`, `fromJSON`, etc. Most of these address\r\ntranslations are unnecessary; if we refactor to expose an module-private\r\nway to retrieve the index from an indexed `NodeReference`, we can solve\r\nall of these performance issues without breaking the API.\r\n\r\nTest plan: Many unit tests were added.","title":"Make Edges into Payload-esque objects","mergedAs":null,"additions":430,"deletions":267},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000325\u0000":{"address":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/325","comments":[{"type":"COMMENT","id":"393771196","parent":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125025177","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125025483","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis fixes a bug introduced in #317, which only occurred in the cron job\r\nvariant of the CI script (`yarn travis --full`): the two scripts run in\r\nthe cron job depend on `yarn backend` having previously written to the\r\n`bin/` directory, but this is precisely what we wanted to prevent. To\r\nfix this, we simply add an additional target for `yarn backend` during\r\nthe cron job. This is a little bit wasteful in that we compile the\r\nbackend applications twice, but it’s not a big deal because (a) it only\r\nruns in cron jobs, so it won’t slow down normal builds, and (b) it only\r\ntakes about 5 seconds, anyway.\r\n\r\nTest Plan:\r\nExport a `GITHUB_TOKEN` and run `yarn travis --full`, which fails before\r\nthis change and passes after it.\r\n\r\nwchargin-branch: cron-ci-overwrite-bin","title":"Generate `bin/` in-place for cron CI","mergedAs":{"type":"COMMIT","hash":"40409f3151a85bb697d98e00ccc3aacfbd60be1e"},"additions":10,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000326\u0000":{"address":{"type":"PULL","number":"326","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/326","comments":[],"reviews":[{"type":"REVIEW","id":"125345558","pull":{"type":"PULL","number":"326","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"It was not used anywhere.\r\n\r\nTest plan: Travis\r\n\r\nPaired with @wchargin","title":"Remove `src/tools/loadCombinedGraph`","mergedAs":{"type":"COMMIT","hash":"797a2fbf9f0ecb5e1fc9d0bc60d1d940c14b9242"},"additions":0,"deletions":35},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000327\u0000":{"address":{"type":"PULL","number":"327","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/327","comments":[],"reviews":[{"type":"REVIEW","id":"125346759","pull":{"type":"PULL","number":"327","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"We want to reset some of our basic assumptions, and make `Graph` into a\r\npure graph implementation, rather than a hybrid graph and key-value\r\nstore.\r\n\r\nThis is a substantial rewrite, so we want to start from scratch in a v3/\r\ndirectory and pull code into v3 as necessary. So that we can do this in\r\na relatively clean fashion, we're first moving the v1 and v2 code into\r\ntheir own directories.\r\n\r\nPaired with @wchargin\r\n\r\nTest plan:  Travis, and `yarn backend`, `node bin/sourcecred.js start`.\r\n\r\nNote that `yarn backend` and `node bin/sourcecred.js start` both use the\r\nv1 versions. We'll migrate those (by changing paths.js) to v3 when\r\nappropriate.","title":"Fork project to v1/ and v2/ in preparation for v3","mergedAs":{"type":"COMMIT","hash":"ba721a6fbb7ace7cf96e78c8d254f4e18ec30f82"},"additions":23,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000328\u0000":{"address":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/328","comments":[],"reviews":[{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125373543","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125373553","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125373612","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125379578","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125380497","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"The newly added `v3/src/core/graph.js` module is the heart of our `v3`\r\nrefactor, which aims at having our `Graph` class be just a graph[1] and\r\nnot a key-value store to boot.\r\n\r\nThis commit adds a skeleton of our intended `Graph` API. We've mostly\r\nported features from our existing `v1` `Graph` class, but with a few\r\nchanges:\r\n\r\n- `NodeAddress` and `EdgeAddress` are both strings under the hood, which\r\nallows for better performance and use of native JS Maps and Sets.\r\n\r\n- Addresses are now hierarchical paths, so the functionality previously expressed\r\nthrough `pluginName` and `type` can now be encoded into the path\r\ncomponents.\r\n\r\n- `NodeAddress` and `EdgeAddress` are distinct types, and have different\r\nserializations, so they can't get mixed up at runtime.\r\n\r\n- It is no longer possible to bind arbitrary payloads to nodes or edges.\r\nThe expectation is that external data stores will be responsible for\r\nthat.\r\n\r\nTest plan: No code was implemented; flow and lint are sufficient.\r\n\r\nPaired with @wchargin\r\n\r\n[1]: Technically, it's a [quiver]\r\n\r\n[quiver]: https://en.wikipedia.org/wiki/Quiver_(mathematics)","title":"Add a skeleton of the v3 Graph API","mergedAs":{"type":"COMMIT","hash":"aff4ddd4e3ba5666d71ca50f2d172c334336ddd1"},"additions":111,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000":{"address":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/329","comments":[{"type":"COMMENT","id":"394066892","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394099675","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394124379","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394127555","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125380679","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125380680","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125381028","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This commit implements Node/Edge addresses, and helper functions for\r\ngenerating and manipulating them.\r\n\r\nTest plan: Unit tests included.\r\n\r\nPaired with @wchargin","title":"Implement {to,from}{Node,Edge}Address","mergedAs":{"type":"COMMIT","hash":"d152f48ce4c2ed1d046bf6ed4f139e7e393ea660"},"additions":171,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000330\u0000":{"address":{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/330","comments":[],"reviews":[{"type":"REVIEW","id":"125370616","pull":{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125381784","pull":{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This very minor commit adds the basic data structures to the `Graph`\r\nthat will act as underlying storage for nodes and edges. This is similar\r\nto how nodes and edges are stored in `Graph` v1 and v2, except much\r\nsimpler, because we now have string keys, no data stored with nodes, and\r\nminimal data stored with edges.\r\n\r\nTest plan: The only observable change is that the graph can now be\r\nconstructed without error. I added a unit test to verify this behavior\r\n:) as well as that the Graph constructor properly returns an object of \r\ntype `Graph` and not an `any`.\r\n(Context: https://github.com/facebook/flow/issues/6400)\r\n\r\nPaired with @wchargin","title":"Add basic Graph data structures","mergedAs":{"type":"COMMIT","hash":"3e7776c245edd2a54136e98eda35be0a1b6b23db"},"additions":23,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000331\u0000":{"address":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/331","comments":[],"reviews":[{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125754748","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This commit implements and tests the following methods on the `Graph`:\r\n- `addNode`\r\n- `removeNode`\r\n- `hasNode`\r\n- `nodes`\r\n\r\nTest plan: Unit tests are included.\r\n\r\nPaired with @wchargin","title":"Add v3 `Graph` nodes methods","mergedAs":{"type":"COMMIT","hash":"0c8ede57a27343f5c51cbb6ed0ef78f3903c5415"},"additions":77,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000332\u0000":{"address":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/332","comments":[],"reviews":[{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125762006","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125762491","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Consider a case where a user wants to construct many addresses sharing a\r\ncommon prefix. For example, every GitHub entity may have an address\r\nstarting with the component sequence `[\"sourcecred\", \"github\"]`.\r\n\r\nCurrently, users can implement this with `toParts`:\r\n\r\n```js\r\nconst GITHUB_ADDRESS = Address.nodeAddress([\"sourcecred\", \"github\"]);\r\nfunction createGithubAddress(ids: $ReadOnlyArray<string>): NodeAddress {\r\n  return nodeAddress([...Address.toParts(GITHUB_ADDRESS), ...ids]);\r\n}\r\n```\r\n\r\nThis is unfortunate from a performance standpoint, as we needlessly\r\nperform string and array operations, when under the hood this is\r\nbasically a string concatenation.\r\n\r\nThis commit fixes this by adding functions `nodeAppend` and\r\n`edgeAppend`, which take a node (resp. edge) and some components to\r\nappend, returning a new address. Consider how straightforward our\r\nexample case becomes:\r\n\r\n```js\r\nconst GITHUB_NODE_PREFIX = Address.nodeAddress([\"sourcecred\", \"github\"]);\r\nconst ISSUE_NODE_PREFIX = Address.nodeAppend(GITHUB_NODE_PREFIX, \"issue\");\r\n\r\n// There is no longer any need for an explicit creation function\r\nconst anIssueAddress = Address.nodeAppend(ISSUE_NODE_PREFIX, someIssueID);\r\n```\r\n\r\nPaired with @wchargin.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n","title":"Add `addressAppend`","mergedAs":{"type":"COMMIT","hash":"e092b32bca5e5ddaf9200344511a5e3b6e2a9138"},"additions":90,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000333\u0000":{"address":{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/333","comments":[],"reviews":[{"type":"REVIEW","id":"125381356","pull":{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This commit implements Node/Edge addresses, and helper functions for\r\ngenerating and manipulating them.\r\n\r\nTest plan: Unit tests included.\r\n\r\nPaired with @wchargin \r\n\r\nNote: See https://github.com/sourcecred/sourcecred/pull/329 for the discussion surrounding this commit. That PR mistakenly merged into a non-master branch.","title":"Implement {to,from}{Node,Edge}Address (#329)","mergedAs":{"type":"COMMIT","hash":"3acfefb9040683a5edd26dec52efd1c2f2717aa3"},"additions":171,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000334\u0000":{"address":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/334","comments":[{"type":"COMMENT","id":"394251787","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394251862","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394463159","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125434549","pull":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125703590","pull":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Reorganize Graph address-related code\r\n\r\nOur Graph uses specialized strings as addresses. These addresses are\r\nexported as an opaque type; they can't be manipulated via standard\r\nstring methods, but instead require special address-aware methods.\r\nAddresses have path-like semantics (they are hierarchically orgnaized by\r\nstring components), and we expect to have methods for appending\r\ncomponents, finding prefixes, concatenting addresses, mapping them to\r\nand from string arrays, etc.\r\n\r\nIt would be nice to attach these methods to the addresses, so it\r\nwould be possible to call `address.append(component)`,\r\n`address.prefix()`, and so forth. However, as addresses are strings,\r\nthis would require modifying the string prototype. We could make\r\naddresses classes instead, that are backed by or convertible to strings,\r\nbut this would break the ability to test address equality using `===`.\r\n\r\nAfter some offline discussion with @wchargin, we decided the best\r\ncompromise is to create a \"psuedo-module\" which contains all address\r\nrelated methods, and can be imported from the `core/graph` module. This\r\ncommit creates that module, called `Address`, which contains the\r\nfollowing methods:\r\n\r\n- `nodeAddress`: The factory function for node addresses. Returns a base\r\n`NodeAddress` if called without arguments, or constructs a componentized\r\naddress if called with an array of parts.\r\n\r\n- `edgeAddress`: The factory function for edge addresses. Returns a base\r\n`EdgeAddress` if called without arguments, or constructs a componentized\r\naddress if called with an array of parts.\r\n\r\n- `toParts`: Takes a node or edge address and returns a string array of\r\nparts.\r\n\r\nThe module is implemented in `address.js`. Clients are not intended to\r\nimport `address.js` directly; rather, `graph.js` re-exports the public\r\npieces. (This is just for clients' convenience; being able to import all\r\nGraph-required functionality from one file is pleasant.)\r\n\r\nA note about `NodeAddress` and `EdgeAddress`: There are actually two\r\ntypes of Addresses (Node and Edge), which have different\r\nrepresentations. It is a type and runtime error to pass a `NodeAddress` to\r\na function expecting an `EdgeAddress` and vice versa. Offline, @wchargin\r\nand I discussed exporting two psuedomodules, one for node and one for\r\nedge addresses. On further consideration, I believe this introduces\r\nneedless API complexity. It will be easy to write the single `Address`\r\nmodule with functions that are apprporiately generic over Node/Edge\r\naddresses, so we will still get type (and runtime) errors when passing\r\n(for example) an `EdgeAddress` into `Graph.hasNode`.\r\n\r\n`address.js` also exports `assertNodeAddress` and `assertEdgeAddress`.\r\nThese functions aren't yet used, but will be needed for appropriate\r\nruntime assertions in `Graph` methods.\r\n\r\nTest plan: Observe unit tests, Travis.","title":"Reorganize Graph address-related code","mergedAs":{"type":"COMMIT","hash":"754de1652404af1023cf1a5c05504b3cca3ff940"},"additions":248,"deletions":175},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000335\u0000":{"address":{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/335","comments":[],"reviews":[{"type":"REVIEW","id":"125721219","pull":{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Release notes: https://prettier.io/blog/2018/05/27/1.13.0.html","title":"Upgrade prettier to 1.13","mergedAs":{"type":"COMMIT","hash":"3ac051b16ce84e4f4dbc37fe95a182fdbd96e13f"},"additions":26,"deletions":20},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000337\u0000":{"address":{"type":"PULL","number":"337","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/337","comments":[],"reviews":[{"type":"REVIEW","id":"125745841","pull":{"type":"PULL","number":"337","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFixes breakage due to https://github.com/sourcecred/sourcecred/pull/327.\r\n\r\nTest Plan:\r\n`yarn travis --full` now passes.\r\n\r\nwchargin-branch: src-v1-cron","title":"Update `src/v1/` paths for CI cron","mergedAs":{"type":"COMMIT","hash":"3e835764223c5c0c19d42112084f5bd53be25edf"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000338\u0000":{"address":{"type":"PULL","number":"338","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/338","comments":[],"reviews":[{"type":"REVIEW","id":"125747399","pull":{"type":"PULL","number":"338","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It still passes :)\r\n\r\nTest plan: Travis","title":"Upgrade flow to 0.73","mergedAs":{"type":"COMMIT","hash":"6585700c0cc424f4ea3620dffb671a2ecad957de"},"additions":4,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000339\u0000":{"address":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/339","comments":[{"type":"COMMENT","id":"401516618","parent":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125749456","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125756000","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"When the cron build fails, we want to make sure that we know about it.\r\nThis commit ensures that Travis emails @wchargin and @decentralion on\r\nany build failure; our email filters will ensure that cron job failures\r\nget noticed.\r\n\r\nBased on documentation at: https://docs.travis-ci.com/user/notifications","title":"Ensure build failure emails","mergedAs":{"type":"COMMIT","hash":"bd28030caadd433ba667345882ceb04d252083ee"},"additions":6,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000340\u0000":{"address":{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/340","comments":[],"reviews":[{"type":"REVIEW","id":"125749506","pull":{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nCloses #336.\r\n\r\nTest Plan:\r\nSnapshots updated; changes are easily readable. Existing tests pass.\r\nRunning the cred explorer on the `sourcecred/sourcecred` graph shows\r\npull requests like `#124 (+73/−3): Update the README`, which is good.\r\n\r\nwchargin-branch: pr-addition-deletion","title":"Fetch PR additions and deletions from GitHub","mergedAs":{"type":"COMMIT","hash":"5b3b28c7054c822f6bfc945827717bd2c70e84be"},"additions":35,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000341\u0000":{"address":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/341","comments":[],"reviews":[{"type":"REVIEW","id":"125806397","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"125815304","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126069347","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our GitHub renderer tries to display the author name for a comments or\r\npull request reviews. However, as we've already discovered (#228), not\r\nevery GitHub post has an author available. This breaks attempts to demo\r\nthe v1 cred explorer on some interesting repos, e.g. ipfs/js-ipfs.\r\n\r\nSince the v1 code is all deprecated, it's effectively a demo branch\r\npending a rewrite of the cred explorer to use the v3 graph. As such, I\r\ndidn't include unit tests.\r\n\r\nTest plan:\r\nAttempt to run the cred explorer on `ipfs/js-ipfs` prior to this PR.\r\nObserve that it loudly fails. Attempt to run it after this PR, and\r\nthat it succeeds.","title":"Fix GitHub rendering for posts without authors","mergedAs":{"type":"COMMIT","hash":"222c334027223706ab251467a8b24fd6e2ad5054"},"additions":9,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000":{"address":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/342","comments":[{"type":"COMMENT","id":"394579095","parent":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394792123","parent":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"125806063","pull":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126074952","pull":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Right now, the cred explorer attempts to display every node in the\r\ngraph. As graphs easily grow to O(100k) nodes, this is not kind to the\r\nbrowser.\r\n\r\nThis commit limits display to the first 100 entries. Since they are\r\nsorted by percieved importance, and it's easy to filter by type (e.g. to\r\nfind all users), this limitation is fine in practice.\r\n\r\nTest plan:\r\nRun the cred explorer on a larger repo and observe that the performance\r\nis enormously improved. No unit tests added, as the cred explorer is a\r\nprototype which is basically untested (#269)","title":"Limit Cred Explorer to display 100 entries","mergedAs":{"type":"COMMIT","hash":"540bd860c6c285ee597ba08f8010b96e1827a166"},"additions":3,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000343\u0000":{"address":{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/343","comments":[],"reviews":[{"type":"REVIEW","id":"126073783","pull":{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nA `RecursiveTable` shows the tree-view from a single node; a\r\n`RecursiveTables` shows multiple `RecursiveTable`s, and is used both in\r\nthe recursion and at the top level. This is useful because we’ll want to\r\nmake changes to both entry points, for things like pagination. In\r\nparticular, this makes #342 nicer.\r\n\r\nTest Plan:\r\nNote that the behavior is unchanged. Then, apply\r\n\r\n```diff\r\ndiff --git a/src/v1/app/credExplorer/pagerankTable.js b/src/v1/app/credExplorer/pagerankTable.js\r\nindex 624bd71..e343e95 100644\r\n--- a/src/v1/app/credExplorer/pagerankTable.js\r\n+++ b/src/v1/app/credExplorer/pagerankTable.js\r\n@@ -220,6 +220,7 @@ class RecursiveTables extends React.Component<RecursiveTablesProps> {\r\n         const y = pagerankResult.get(b).probability;\r\n         return y - x;\r\n       })\r\n+      .slice(0, 10)\r\n       .map((address) => (\r\n         <RecursiveTable\r\n           depth={depth}\r\n```\r\n\r\nand note that (a) the root view has only ten entries, and (b) any\r\nexpanded subview also has only ten entries.\r\n\r\nwchargin-branch: recursive-tables","title":"Unify `RecursiveTables` abstraction","mergedAs":{"type":"COMMIT","hash":"910e4fc831623462df6d0d8a4b9cafc9da32488b"},"additions":39,"deletions":26},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000344\u0000":{"address":{"type":"PULL","number":"344","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/344","comments":[],"reviews":[{"type":"REVIEW","id":"126089261","pull":{"type":"PULL","number":"344","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFor now, this contains the logic to register an `unhandledRejection`\r\nerror. I’ve removed all instances of those handlers, and `require`d this\r\nmodule at every top-level entry point. (The individual CLI commands had\r\nthe handler before, but didn’t need it; conversely, the top-level CLI\r\nentry point did not have the handler, but should have.)\r\n\r\nTest Plan:\r\nTo test that the CLI commands still error on unhandled rejections, apply\r\nthe following patch:\r\n\r\n```diff\r\ndiff --git a/src/v1/cli/commands/combine.js b/src/v1/cli/commands/combine.js\r\nindex b60f91e..d55b965 100644\r\n--- a/src/v1/cli/commands/combine.js\r\n+++ b/src/v1/cli/commands/combine.js\r\n@@ -24,6 +24,7 @@ export default class CombineCommand extends Command {\r\n     \"  where each GRAPH is a JSON file generated by plugin-graph\";\r\n\r\n   async run() {\r\n+    Promise.reject(\"wat\");\r\n     const {argv} = this.parse(CombineCommand);\r\n     combine(argv);\r\n   }\r\n```\r\n\r\nThen run `yarn backend` and `node bin/sourcecred.js combine`, and note\r\nthat the rejection handler is triggered.\r\n\r\nwchargin-branch: unify-entry","title":"Unify a command-line entry point module","mergedAs":{"type":"COMMIT","hash":"2be413b77c2d166dbc8a45098dc1733e62ba2d7b"},"additions":16,"deletions":52},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000345\u0000":{"address":{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/345","comments":[{"type":"COMMENT","id":"394808212","parent":{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126089759","pull":{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nUsing `throw err;` was not useful when the error’s message was an\r\nobject: `[object Object]` would be printed to the console, in lieu of\r\nany useful information. We now additionally use `console.error` to print\r\nthe full object contents.\r\n\r\nTest Plan:\r\nApply the following patch:\r\n\r\n```diff\r\ndiff --git a/src/v1/cli/commands/combine.js b/src/v1/cli/commands/combine.js\r\nindex b60f91e..2fc4061 100644\r\n--- a/src/v1/cli/commands/combine.js\r\n+++ b/src/v1/cli/commands/combine.js\r\n@@ -24,6 +24,7 @@ export default class CombineCommand extends Command {\r\n     \"  where each GRAPH is a JSON file generated by plugin-graph\";\r\n\r\n   async run() {\r\n+    Promise.reject({a: {b: {c: {d: {e: {f: \"gee\"}}}}}});\r\n     const {argv} = this.parse(CombineCommand);\r\n     combine(argv);\r\n   }\r\n```\r\n\r\nThen, run `yarn backend && node bin/sourcecred.js combine`, and note\r\nthat the full contents of the object are printed. (If the `util.inspect`\r\nis replaced with a simple `console.error`, then the object’s\r\nrepresentation will be truncated, so the `util.inspect` is important.)\r\n\r\nwchargin-branch: rejection-error-full-contents","title":"Log error contents on promise rejection","mergedAs":{"type":"COMMIT","hash":"24c3b2ec4163118d2b6721720a31783f5a6584ac"},"additions":4,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000346\u0000":{"address":{"type":"PULL","number":"346","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/346","comments":[],"reviews":[{"type":"REVIEW","id":"126105274","pull":{"type":"PULL","number":"346","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nNow, a client calling `assertNodeAddress` can indicate the context to\r\nclients, like `assertNodeAddress(foo.bar.node, \"foo.bar.node\")`.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests updated. Existing graph code does not need to be updated,\r\nbecause the default values work fine.\r\n\r\nwchargin-branch: assertion-context-parameters","title":"Include context parameters for address assertions","mergedAs":{"type":"COMMIT","hash":"4705bec20d54f9f71fa4a44fe5917bc8624f3c63"},"additions":30,"deletions":17},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000347\u0000":{"address":{"type":"PULL","number":"347","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/347","comments":[],"reviews":[{"type":"REVIEW","id":"126130542","pull":{"type":"PULL","number":"347","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nIf you just print out an address, depending on output context the NUL\r\nseparators may just disappear, which is really bad. Using `stringify` is\r\nbetter, but causes these characters to appear as `\\u0000`, which is not\r\nvery pretty.\r\n\r\nThis commit adds pretty-printing functions that clearly display the\r\naddresses. A node address is printed as:\r\n\r\n    nodeAddress([\"array\",\"of\",\"parts\"])\r\n\r\nAn edge address is printed as:\r\n\r\n    edgeAddress([\"array\",\"of\",\"parts\"])\r\n\r\nAn edge in the graph is printed as:\r\n\r\n    {address: edgeAddress([\"one\"]), src: nodeAddress([\"two\"]), dst: nodeAddress([\"three\"])}\r\n\r\nNote that each of these is a valid JavaScript expression that evaluates\r\nto the argument that was originally converted to string.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: node-edge-tostring","title":"Add `toString` functions for addresses and edges","mergedAs":{"type":"COMMIT","hash":"051ca7034d3691c982640d6320fac142b2e49804"},"additions":75,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000348\u0000":{"address":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/348","comments":[],"reviews":[{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126191608","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126191635","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126191651","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126191694","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126191966","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This commit implements the following edge related methods on graph:\r\n\r\n- `Graph.addEdge(edge)`\r\n- `Graph.hasEdge(address)`\r\n- `Graph.edge(address)`\r\n- `Graph.edges()`\r\n\r\nWe've decided to enforce an invariant that for every edge, its `src` and\r\n`dst` nodes must be present in the graph. As such, `Graph.addEdge` may\r\nerror if this condition is not true for the proposed edge, and\r\n`Graph.removeNode` may error if any edges depend on the node being\r\nremoved. This invariant is documented via comments, and checked by the\r\ntest code.\r\n\r\nTest plan:\r\nExtensive unit tests have been added. Run `yarn travis`.\r\n\r\nPaired with @wchargin","title":"Graph: implement edge methods","mergedAs":{"type":"COMMIT","hash":"0deb3511c2f4683c688fb2144f4ad85b9b49b035"},"additions":287,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000":{"address":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/349","comments":[{"type":"COMMENT","id":"394896223","parent":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"394917160","parent":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126193228","pull":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"On larger repos (e.g. `ipfs/js-ipfs` and `ipfs/go-ipfs`) our GitHub\r\nquery tends to fail with an opaque (possibly timeout) error message.\r\n\r\nBased on a discussion with @mikeal, it sounds like this is probably\r\nGitHub killing queries that \"take too long\". This commit reduces our\r\ndefault page sizes so that we make more smaller queries. Empirically, it\r\nseems to help, and it's very unlikely to  break anything.\r\n\r\nTest plan:\r\n\r\nRun\r\n\r\n```\r\nyarn backend\r\nnode bin/sourcecred.js plugin-graph --plugin=github ipfs js-ipfs \\\r\n  > graph.json\r\n```\r\n\r\nbefore and after this change. Before, it fails; after, it succeeds.","title":"Tune GitHub graphql page limit","mergedAs":{"type":"COMMIT","hash":"1a8de82715ca1e5367a422e949fd2fe316dd026a"},"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000351\u0000":{"address":{"type":"PULL","number":"351","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/351","comments":[],"reviews":[{"type":"REVIEW","id":"126490702","pull":{"type":"PULL","number":"351","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis fixes an organizational error on my part: the assertions were not\r\nin `it`-blocks, so (a) no test cases were listed, and (b) assertion\r\nfailure would have been considered an error in the test suite itself.\r\n(This wouldn’t have led to tests spuriously passing, though.)\r\n\r\nTest Plan:\r\nNote the new test case structure:\r\n\r\n```\r\n    nodeToString\r\n      errors on\r\n        ✓ null base input\r\n        ✓ undefined base input\r\n        ✓ wrong kind\r\n      works on\r\n        ✓ the empty address\r\n        ✓ the address with one empty component\r\n        ✓ a normal address\r\n    edgeToString\r\n      errors on\r\n        ✓ null base input\r\n        ✓ undefined base input\r\n        ✓ wrong kind\r\n      works on\r\n        ✓ the empty address\r\n        ✓ the address with one empty component\r\n        ✓ a normal address\r\n```\r\n\r\nwchargin-branch: tostring-test-case-structure","title":"Fix address `toString` test case structure","mergedAs":{"type":"COMMIT","hash":"bc98383053f2a142b9060bd212fe58846b9cc33a"},"additions":11,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000352\u0000":{"address":{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/352","comments":[{"type":"COMMENT","id":"395174404","parent":{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126491513","pull":{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese functions can be used for address filtering: finding all nodes\r\nowned by a plugin, or all edges of a certain plugin-type, or similar.\r\nClients can implement this in terms of `toParts`, but when the\r\nunderlying type of the opaque type is known there exists a simpler and\r\nmore efficient implementation.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-prefix","title":"Add address prefix testing functions","mergedAs":{"type":"COMMIT","hash":"4a06485a99493201e5ac16474d5473ebad822d86"},"additions":138,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000353\u0000":{"address":{"type":"PULL","number":"353","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/353","comments":[],"reviews":[{"type":"REVIEW","id":"126491772","pull":{"type":"PULL","number":"353","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis saves clients from having to pollute their global namespace with\r\n`IN` and `OUT` (and, soon, `ANY`). Calls now look like:\r\n```js\r\nmyNode.neighbors({direction: Direction.OUT});\r\n```\r\nCallers who prefer to pollute their namespaces are of course still\r\nwelcome to do so, at the cost of one `const {IN, OUT} = Direction`.\r\n\r\nTest Plan:\r\nNew unit tests for frozenness included.\r\n\r\nwchargin-branch: direction-enum","title":"Pull `Direction` values into an enum","mergedAs":{"type":"COMMIT","hash":"dfaa7d9764215999406673ab59db9ceabc4c239e"},"additions":18,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000354\u0000":{"address":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/354","comments":[{"type":"COMMENT","id":"395200045","parent":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395236105","parent":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126538478","pull":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nIn actual code, we almost always call `neighbors` with a specified\r\ndirection. Usually, you want to inspect some relation like “parents of\r\nthis commit” or “GitHub nodes referenced by this comment”, and so the\r\nedge direction matters. In each of the above cases, forgetting to\r\ninclude the direction would introduce a bug: you’d get parents _and\r\nchildren_ of a commit, or GitHub nodes referenced by _or that refer to_\r\na comment. It’s easy to forget this when writing the code, so we prefer\r\nto make an explicit direction required, and allow people to specify\r\n`Direction.ANY` in the case that that is what they want.\r\n\r\n(In other words: we want to make the common thing easy, the uncommon\r\nthing possible, and the wrong thing impossible.)\r\n\r\nA similar situation holds for filters. By forcing clients to think about\r\nwhat kinds of edges they want to follow to what kinds of nodes, we\r\nencourage them to write more robust code. As before, if clients do want\r\nto consider all nodes or all edges, they can pass the appropriate empty\r\naddress (`nodeAddress([])` or `edgeAddress([]`), which is a prefix of\r\nevery address.\r\n\r\nTherefore, we require that clients pass an `options` object to\r\n`neighbors`, and we furthermore require that each of the three options\r\nbe present.\r\n\r\nPaired with @decentralion, in spirit.\r\n\r\nTest Plan:\r\nNone; this changes the API for a function that has no implementation or\r\nclients.\r\n\r\nwchargin-branch: neighbors-options-required","title":"Make all `neighbors` options required","mergedAs":{"type":"COMMIT","hash":"08cb60e7622f025e12ca9793bafc8dd892dcd0a1"},"additions":10,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000355\u0000":{"address":{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/355","comments":[{"type":"COMMENT","id":"395465552","parent":{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126689020","pull":{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe have `NodeAddress` and `EdgeAddress`, which are opaque aliases of\r\n`string` each with separate associated functions. We really want to keep\r\nthis setup: having the address types be structurally distinct is very\r\nnice. But currently the implementation is extremely repetitive. Core\r\nfunctionality is implemented twice, once for nodes and once for edges.\r\nThe test code is even worse, as it is forced to include ugly, hacky,\r\nparametric generalizations to test both implementations—which are really\r\nthe same code, anyway!\r\n\r\nIn this commit, we introduce a system to unify the _implementations_\r\nwhile keeping the _APIs_ separate. That is, users still see separate\r\nopaque types `NodeAddressT` and `EdgeAddressT`. Users now also see\r\nseparate modules `NodeAddress` and `EdgeAddress`, each of which\r\nimplements the same interface for its appropriate type. These modules\r\nare each implemented by the same address module factory.\r\n\r\nTo get this to work, we clearly need to parameterize the module type\r\nover the address type. The problem is getting this to work in a way that\r\ninteracts nicely with the opaque types. The trick is to let the factory\r\nalways return a transparent module at type `string`, but to then\r\nspecialize the type of the resulting module in the module in which the\r\nunderlying type of the opaque type is known.\r\n\r\nThis commit includes specifications for all functions that are in the\r\ncurrent version of the API, but includes only as much implementation\r\ncode as is needed to convince me that tests and Flow are actually\r\nrunning (i.e., very little). I’ll send implementations in separate PRs\r\nfor easier review.\r\n\r\nThe preliminary modules created in this commit _are_ exported from the\r\ngraph module, even though they are incomplete. This is so that we can be\r\nsure that nothing will catch fire in Flow-land when we try to export\r\nthem (which is plausible, given that we have nontrivial interactions\r\nbetween opaque types and parametric polymorphism).\r\n\r\nTest Plan:\r\nUnit tests included. Run `yarn travis`.\r\n\r\nwchargin-branch: address-unified-foundations","title":"Add foundations to unify address implementations","mergedAs":{"type":"COMMIT","hash":"fc7e8886b101b844bcb1f35fd7020e9dfc2fa819"},"additions":215,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000356\u0000":{"address":{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/356","comments":[{"type":"COMMENT","id":"395466297","parent":{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126676528","pull":{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit implements all the code needed for the top-level\r\n`makeAddressModule` function, without implementing any of the address\r\nfunctions. This mostly comprises handling of errors in the module\r\noptions.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-error-handling","title":"Add top-level address module error handling","mergedAs":{"type":"COMMIT","hash":"c1a5e01a2ccfc6d8a7dcd54c9c4f72f83c058245"},"additions":50,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000357\u0000":{"address":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/357","comments":[{"type":"COMMENT","id":"395346081","parent":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126689198","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis implements the following functions for the unified addresses:\r\n\r\n  - assertions: `assertValid`, `assertValidParts`\r\n  - injection: `fromParts`\r\n  - projection: `toParts`\r\n\r\n(These functions depend on each other for testing, so we implement them\r\ntogether.)\r\n\r\nTest Plan:\r\nUnit tests included. Run `yarn travis`.\r\n\r\nwchargin-branch: address-assertion-injection-projection","title":"Add unified address assertions, fromParts, toParts","mergedAs":{"type":"COMMIT","hash":"32aba15b01f8db9e3bce0918871f92ef161b03fc"},"additions":221,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000358\u0000":{"address":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/358","comments":[{"type":"COMMENT","id":"395345973","parent":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126686019","pull":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-tostring","title":"Add unified address `toString`","mergedAs":{"type":"COMMIT","hash":"0bf1ef8af24b96d8e8da0628ed7568dd8a60ac7e"},"additions":47,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000359\u0000":{"address":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/359","comments":[{"type":"COMMENT","id":"395346178","parent":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126686377","pull":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-append","title":"Add unified address `append`","mergedAs":{"type":"COMMIT","hash":"083bd59514815b2edff0963d8c7d334eaa34e55e"},"additions":46,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000360\u0000":{"address":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/360","comments":[{"type":"COMMENT","id":"395345802","parent":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"126687434","pull":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-hasprefix","title":"Add unified address `hasPrefix`","mergedAs":{"type":"COMMIT","hash":"fe1dd326ed34810ef5d1e63b6609e6961ecf9b17"},"additions":109,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000361\u0000":{"address":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/361","comments":[],"reviews":[{"type":"REVIEW","id":"126688082","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"126846851","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is basically a textual substitution.\r\n\r\nTest Plan:\r\nExisting unit tests suffice. Note that `_address.js` (with underscore)\r\nis no longer imported except from its own tests.\r\n\r\nwchargin-branch: unified-addresses-in-graph","title":"Use new unified addresses in Graph V3","mergedAs":{"type":"COMMIT","hash":"70c1f64854ba9ebcac5825f1186de619e21f7d4b"},"additions":66,"deletions":102},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000362\u0000":{"address":{"type":"PULL","number":"362","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/362","comments":[],"reviews":[{"type":"REVIEW","id":"126688254","pull":{"type":"PULL","number":"362","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese are superseded by the unified implementation in `address.js`.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: remove-legacy-address","title":"Remove legacy V3 `NodeAddress`/`EdgeAddress`","mergedAs":{"type":"COMMIT","hash":"abb44883cdc332998c08220de021691d9f162c3a"},"additions":0,"deletions":512},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000363\u0000":{"address":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/363","comments":[{"type":"COMMENT","id":"395836900","parent":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395863508","parent":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"127287585","pull":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"","title":"Update README to reference our Discord","mergedAs":{"type":"COMMIT","hash":"d90cd3cf1b5d7832398e25bd0c6fa84bdf4b674f"},"additions":5,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000364\u0000":{"address":{"type":"PULL","number":"364","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/364","comments":[],"reviews":[{"type":"REVIEW","id":"127255719","pull":{"type":"PULL","number":"364","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn test --env=jsdom --coverage`, and note that files are\r\ngenerated into `coverage/`. Then, run `yarn travis`, which fails before\r\nthis patch (on `check-pretty`) and passes after it.\r\n\r\nwchargin-branch: prettier-ignore-coverage","title":"Ignore coverage output in Prettier","mergedAs":{"type":"COMMIT","hash":"4a70db0db12518a7a252f1d65d105a5682a96826"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000365\u0000":{"address":{"type":"PULL","number":"365","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/365","comments":[],"reviews":[{"type":"REVIEW","id":"127255868","pull":{"type":"PULL","number":"365","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’re not mandating anything about coverage right now, but by making it\r\neasier to track coverage perhaps people will organically become more\r\nmotivated to write good tests.\r\n\r\nTest Plan:\r\nRun `yarn coverage`, and then open `coverage/lcov-report/index.html`.\r\n\r\nwchargin-branch: coverage","title":"Add a `coverage` package script","mergedAs":{"type":"COMMIT","hash":"55d5c58e056018cc7388ab85f0d967f5a84548a0"},"additions":1,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000366\u0000":{"address":{"type":"PULL","number":"366","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/366","comments":[],"reviews":[{"type":"REVIEW","id":"127287889","pull":{"type":"PULL","number":"366","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Adding a conflicting edge (i.e. one with the same address, but different\r\n`src` or `dst`) is an error. However, our coverage has determined that\r\nthe behavior isn't tested. This commit adds that test.\r\n\r\nTest plan:\r\nOnly change is adding a new test. Verify `yarn travis` passes.","title":"Add tests for adding a conflicting edge","mergedAs":{"type":"COMMIT","hash":"b8298123ef9fa1fab611fd4e8c8c57bc313e8d36"},"additions":15,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000367\u0000":{"address":{"type":"PULL","number":"367","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/367","comments":[],"reviews":[{"type":"REVIEW","id":"127291670","pull":{"type":"PULL","number":"367","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nA client of `Graph` is able to (e.g.) invoke `nodes()` to get a node\r\niterator, iterate over some of the nodes, then change the nodes by\r\nadding or removing the nodes on the original graph. The semantics of\r\nwhat to do here are not clear: ES6 specifies semantics for `Map` and\r\n`Set`, but they have counterintuitive consequences: for instance, you\r\ncan get a `Set` iterator to yield the same value twice. Most collection\r\nimplementations in the Java standard library prohibit this entirely. In\r\nthis commit, we adopt the latter approach.\r\n\r\nA caveat of this implementation is that a graph object may not be\r\nmutated more than 2^53 − 1 (`Number.MAX_SAFE_INTEGER`) times. Clients\r\nwho need to mutate a graph more than nine quadrillion times are\r\nencouraged to reconsider their data model.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: comod-check","title":"Check concurrent modification in graph iterators","mergedAs":{"type":"COMMIT","hash":"25df874db7b61e9ef641a18c43576d3c8fe2337d"},"additions":181,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000368\u0000":{"address":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/368","comments":[],"reviews":[{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This is the change that puts the Graph into `Graph` :) We add `_inEdges`\r\nand `_outEdges`, and use them to identify the neighbors of a given\r\n`node`.\r\n\r\nThe API is implemented pretty uncontroversially. (We've done this a few\r\ntimes before: see #319, #162). As with other iterators, we check for\r\ncomodification and error if this has occurred.\r\n\r\nThe tests cover some interesting cases like absent nodes, loops, and\r\nmultiple edges with the same src and dst.\r\n\r\nTest plan:\r\nUnit tests have been added. Run `yarn travis`.\r\n\r\nPaired with: @wchargin","title":"Implement `Graph.neighbors`","mergedAs":{"type":"COMMIT","hash":"4a441eb287e5925926999994c209d0bf74fe9282"},"additions":351,"deletions":13},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000369\u0000":{"address":{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/369","comments":[],"reviews":[{"type":"REVIEW","id":"127313401","pull":{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"It turns out we forgot to add this to the API, so I added it. I also\r\nimplemented it. The tests are pretty thorough; as an added innovation\r\nover our previous tests (e.g. in #312 and #61), we now consistently test\r\nthat equality is commutative.\r\n\r\nPaired with @wchargin\r\n\r\nTest plan:\r\nUnit tests were added. Run `yarn travis`","title":"Add and implement `Graph.equals`","mergedAs":{"type":"COMMIT","hash":"feef1192502ee0160b60c7e916718c71171bd512"},"additions":105,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000370\u0000":{"address":{"type":"PULL","number":"370","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/370","comments":[],"reviews":[{"type":"REVIEW","id":"127329560","pull":{"type":"PULL","number":"370","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The implementation is quite simple. The tests are somewhat more\r\ncomprehensive than in v2 or v1. We now test that copies are equal to the\r\noriginal in a variety of situations.\r\n\r\nTest plan:\r\nUnit tests added.","title":"Implement `Graph.copy`","mergedAs":{"type":"COMMIT","hash":"d9e2850eb3c8d90aee6d3a0150b3f1be76f68fd4"},"additions":56,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000371\u0000":{"address":{"type":"PULL","number":"371","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/371","comments":[],"reviews":[{"type":"REVIEW","id":"127329986","pull":{"type":"PULL","number":"371","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe previously listed invariants were weak on two counts. First, it was\r\nunstated that the keys of `_inEdges`, `_outEdges`, and `_nodes` should\r\ncoincide. Second, the “exactly once” condition on edge inclusion had the\r\nunintentional effect that edge absent in `_edges` but present twice or\r\nmore in each of `_inEdges` and `_outEdges` would not violate the\r\ninvariant.\r\n\r\nTest Plan:\r\nStay tuned.\r\n\r\nwchargin-branch: strengthen-invariants","title":"Make invariants more precise","mergedAs":{"type":"COMMIT","hash":"831f5f571c695447a676a77bd37e323b82fcddad"},"additions":12,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000372\u0000":{"address":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/372","comments":[{"type":"COMMENT","id":"396324939","parent":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"396334029","parent":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"127707921","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nEach of the invariants listed at the top of the `Graph` class is now\r\nexplicitly checked by `checkInvariants`, which is called at the end of\r\neach `Graph` method during tests only. This is powerful: it means that\r\nnot only do our tests for `Graph` test the graph, but also any tests\r\nthat depend on `Graph`—e.g., plugin code—will give us extra invariant\r\ntesting on `Graph`. As noted in a comment, if this becomes bad for\r\nperformance, we can blacklist expensive tests or whitelist tests that we\r\ncare about.\r\n\r\nA graph method may assume that the graph invariants hold before the\r\nmethod is invoked. Within the body of a graph method, invariants may be\r\nviolated, but the method must ensure that the invariants hold\r\nimmediately before it returns or yields. A consequence of this is that\r\nif a graph function internally calls a public function (e.g., `addEdge`\r\nmight call `hasNode` to check that the source and destination exist),\r\nthen it must ensure that the invariants hold before the internal call.\r\nThis is not an “implementation detail” or “caveat”; it is simply part of\r\nthe interface of public functions. It is legal and reasonable for\r\nprivate helper functions to explicitly not expect or not guarantee that\r\nparticular invariants hold, and in this case the exception should be\r\ndocumented. (This is not yet the case in any of our code.)\r\n\r\nFinally, note that the `checkInvariants` method should not call any\r\npublic methods, because those methods in turn call `checkInvariants`. If\r\nthis becomes a huge pain, we can look into implementing some kind of\r\n“only check invariants if the invariants are not actively being\r\nchecked”, but I’d much rather not do so if we don’t have to.\r\n\r\nTest Plan:\r\nRunning `yarn coverage` indicates that each of the failure cases is\r\nverified. In principle, I’d be willing to add a test that parses the\r\nsource code for `graph.js` and verifies that each `return`, `yield`, or\r\nimplicit return is preceded by an invariant check. But I don’t really\r\nwant to implement that right now.\r\n\r\nwchargin-branch: automatic-invariants","title":"Check graph invariants during tests","mergedAs":{"type":"COMMIT","hash":"5d3cfd82e46ee7ccb50f73b23ca4b2d7a6e7d3fa"},"additions":329,"deletions":31},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000373\u0000":{"address":{"type":"PULL","number":"373","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/373","comments":[],"reviews":[{"type":"REVIEW","id":"127669352","pull":{"type":"PULL","number":"373","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"No changes made to the code - it's a straight copy.\r\n\r\nTest plan:\r\nUnit tests are included.","title":"Copy `v1/util` to `v3/util`","mergedAs":{"type":"COMMIT","hash":"5fde1c10a5981fb194e309dca70fb2d7ca7955be"},"additions":213,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000374\u0000":{"address":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/374","comments":[{"type":"COMMENT","id":"396303003","parent":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"396323057","parent":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"127672710","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"127696102","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The serialization scheme uses `IndexedEdge`s:\r\n\r\n```js\r\ntype Integer = number;\r\ntype IndexedEdge = {|\r\n  Address: EdgeAddressT,\r\n  srcIndex: Integer,\r\n  dstIndex: Integer,\r\n|}\r\n```\r\n\r\nThe nodes are first sorted. Then, we generate indexed edges from the\r\nregular edges by replacing each node address with its index in the\r\nsorted order. This encoding reduces the number of addresses serialized\r\nfrom `n + 3e` to `n + e` (where `n` is the number of nodes and `e` is\r\nthe number of edges).\r\n\r\nThis is based on work in #295, but in contrast to that PR, we do not\r\nindex the in-memory representations of graphs. Only the JSON\r\nrepresentation is indexed.\r\n\r\nTest plan:\r\nUnit tests added. A snapshot test is also included, both to make it easy\r\nto inspect an example of a JSON-serialized graph, and to ensure\r\nbackwards-compatibility. (The snapshot likely should not change\r\nindependent of the VERSION string.)","title":"Implement `Graph.toJSON` and `Graph.fromJSON`","mergedAs":{"type":"COMMIT","hash":"5fc0d42c1fc4a7f8686bc7da3c286a35c19c87bc"},"additions":172,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000375\u0000":{"address":{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/375","comments":[],"reviews":[{"type":"REVIEW","id":"127673602","pull":{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Tests are mostly copied over from the v2, as implemented in #320.\r\nSome new tests were added, e.g. checking that Merge correctly handles\r\n10 small graphs combined.\r\n\r\nTest plan:\r\nSee unit tests.","title":"Implement `Graph.merge`","mergedAs":{"type":"COMMIT","hash":"46751d27075f480442ff979bc06b77aca72536ea"},"additions":110,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000376\u0000":{"address":{"type":"PULL","number":"376","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/376","comments":[],"reviews":[{"type":"REVIEW","id":"127667101","pull":{"type":"PULL","number":"376","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan:\r\nExisting unit tests suffice\r\n\r\nSuggested by @wchargin","title":"Reimplement `Graph.copy` using `Graph.merge`","mergedAs":{"type":"COMMIT","hash":"6177f6c740e0717d9f092762e525e3e4ba50cf99"},"additions":111,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000377\u0000":{"address":{"type":"PULL","number":"377","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/377","comments":[],"reviews":[{"type":"REVIEW","id":"127700203","pull":{"type":"PULL","number":"377","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The `advancedGraph` is an example graph defined in `graph.test.js`.\r\nIt shows off many tricksy features, like having loop edges, multiple\r\nedges from the same src to same dst, etc. We also provide two ways of\r\nconstructing it: `graph1` is straightforward, `graph2` adds tons of\r\nspurious adds, removes, and odd ordering. This way we can ensure that\r\nour functions treat `graph1` and `graph2` equivalently.\r\n\r\nTest plan:\r\nNew unit tests are added verifying that `equals`, `merge`, and\r\n`to/fromJSON` handle the advanced graph appropriately.","title":"Add an `advancedGraph` test case","mergedAs":{"type":"COMMIT","hash":"c352b5b8d6be0bda4b78bafc0119fdea6dc91de4"},"additions":181,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000378\u0000":{"address":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/378","comments":[{"type":"COMMENT","id":"396440604","parent":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"127797557","pull":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"127798032","pull":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This commit copies the following logic necessary for downloading GitHub\r\ndata into v3. Minimal changes have been made to accomodate the new path\r\nstructure.\r\n\r\nTest plan:\r\n- Manually ran plugins/github/fetchGithubRepoTest.sh and verified that\r\nit can correctly pass and fail\r\n- Added the v3 github repo test to `yarn travis --full`\r\n- Ran `yarn travis --full` and it passed\r\n\r\nPaired with @wchargin","title":"Port GitHub data ingestion into v3","mergedAs":{"type":"COMMIT","hash":"0339d9f41b5473d9a64ca71311e671fe2c0110ff"},"additions":4327,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000379\u0000":{"address":{"type":"PULL","number":"379","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/379","comments":[],"reviews":[{"type":"REVIEW","id":"127797402","pull":{"type":"PULL","number":"379","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nWe’ve added a comment directly on a pull request.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\n`yarn travis --full` passes.\r\n\r\nwchargin-branch: update-example-github","title":"Update GitHub example repository data","mergedAs":{"type":"COMMIT","hash":"ed70947c634380db64beacfdc6df3081908d10e3"},"additions":82,"deletions":27},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000380\u0000":{"address":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/380","comments":[],"reviews":[{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis module exposes a structured type `StructuredAddress`, an embedding\r\n`GithubAddressT` of this type into the `NodeAddress` layer, and\r\nfunctions to convert between the two.\r\n\r\nPaired with @wchargin.\r\n\r\nTest Plan:\r\nUnit tests added, with full coverage. Snapshots are easily readable.","title":"Add an address module for the GitHub plugin","mergedAs":{"type":"COMMIT","hash":"773596755a0b1f65d0ed023814d09a85d99a88e4"},"additions":599,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000381\u0000":{"address":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/381","comments":[{"type":"COMMENT","id":"396734232","parent":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"128146911","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128151591","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128151619","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"One of the slight modifications we've made in v3 is to effect the\r\nfollowing renames (as implemented in #380):\r\n\r\nPullRequest -> Pull\r\nPullRequestReview -> Review\r\nPullRequestReviewComment -> ReviewComment\r\n\r\nThis commit just changes the rest of the github code in v3 to follow the\r\nnew convention.\r\n\r\nTest plan:\r\n`yarn travis --full` passes.","title":"gh plugin: use consistent concise naming for pulls","mergedAs":{"type":"COMMIT","hash":"e4d9ce1565f1b8e9038136905e94b2f00e3a337c"},"additions":102,"deletions":97},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000382\u0000":{"address":{"type":"PULL","number":"382","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/382","comments":[],"reviews":[{"type":"REVIEW","id":"128150089","pull":{"type":"PULL","number":"382","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis has two primary benefits:\r\n  - Humans can look at this snapshot file to see what’s being queried,\r\n    or to manually issue a query.\r\n  - When we change the programmatically generated query, we can easily\r\n    see what the results are in the GraphQL output. This makes it easy\r\n    to verify that a change is correct.\r\n\r\nTest Plan:\r\nNone.\r\n\r\nwchargin-branch: snapshot-query","title":"Add snapshot test for GitHub GraphQL query","mergedAs":{"type":"COMMIT","hash":"a3f2b820739d9c3c5a523cc52cfcf445936811b4"},"additions":132,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000383\u0000":{"address":{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/383","comments":[{"type":"COMMENT","id":"396781841","parent":{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"128199239","pull":{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFirst, we rename the module itself from `address` to `nodes`: we’d like\r\nto put the edge functions in a parallel `edges` module instead of\r\ncramping it into this one, so it stands to reason that this one should\r\nbe called `nodes`.\r\n\r\nWe also rename the `GithubAddressT` type to `RawAddress`, so that the\r\nmodule exports `RawAddress` and `StructuredAddress`. The functions then\r\nhave much better natural names of `toRaw` and `fromRaw`.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: rename-nodes","title":"Rename various aspects of GitHub `nodes` module","mergedAs":{"type":"COMMIT","hash":"748f9210a65f3d827c42190c77a423ef228c0764"},"additions":30,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000384\u0000":{"address":{"type":"PULL","number":"384","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/384","comments":[],"reviews":[{"type":"REVIEW","id":"128501620","pull":{"type":"PULL","number":"384","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’ll want to use this in the upcoming `edges` module.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: expose-githubaddress","title":"Export `_githubAddress` from GitHub `nodes`","mergedAs":{"type":"COMMIT","hash":"25f74b89e91f73868bf5cf773c65ea575a4814e2"},"additions":9,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000385\u0000":{"address":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/385","comments":[{"type":"COMMENT","id":"397097807","parent":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"397118161","parent":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128568401","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128586231","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis module includes a raw edge type, a structured edge type, and edge\r\ncreation functions that take source and destination and create an edge.\r\n\r\nPaired with @decentralion (for the important bits, anyway).\r\n\r\nTest Plan:\r\nUnit tests added. These cover all of the successful cases, and none of\r\nthe unsuccessful cases. We plan to refactor this code Soon™, and it is\r\nhard to see how to nicely factor the tests without just testing the same\r\ncode paths over and over.\r\n\r\nwchargin-branch: github-edges","title":"Add GitHub `edges` module","mergedAs":{"type":"COMMIT","hash":"2491fcd3cb3f10d971603458a8cac9c58c305390"},"additions":477,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000386\u0000":{"address":{"type":"PULL","number":"386","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/386","comments":[],"reviews":[{"type":"REVIEW","id":"128554004","pull":{"type":"PULL","number":"386","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan:\r\n`yarn travis`","title":"Github Addresses: Rename `fragment` to `id`","mergedAs":{"type":"COMMIT","hash":"ad9ac55bef4aaa6fbe56c5c80f4964bf2f319665"},"additions":30,"deletions":30},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000387\u0000":{"address":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/387","comments":[{"type":"COMMENT","id":"397089757","parent":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"397097148","parent":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128570447","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128572602","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Will be useful in graph creation logic, and in #385\r\n\r\nTest plan: Only change is to add types. No testing needed.\r\n\r\nSee design discussion [on discord].\r\n\r\nPaired with @wchargin\r\n\r\n[on discord]: https://discordapp.com/channels/453243919774253079/454007907663740939?jump=456564101183832064\r\n","title":"Add trait-specific GitHub address types","mergedAs":{"type":"COMMIT","hash":"17b390afe94e9f0bdf0635c2b8bdf04287e04d7f"},"additions":43,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000388\u0000":{"address":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/388","comments":[{"type":"COMMENT","id":"397095904","parent":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128574440","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128574545","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128580233","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128581297","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128585942","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128598234","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128599028","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan:\r\nUnit tests added. Run `yarn travis`.","title":"Add methods for parsing Ids from GitHub urls","mergedAs":{"type":"COMMIT","hash":"95c5af36d934ccea2015f52fcc79098324ecc157"},"additions":121,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000390\u0000":{"address":{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/390","comments":[],"reviews":[{"type":"REVIEW","id":"128910487","pull":{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Simple API addition to match v1/v2 semantics.\r\nIn the future, we can perf optimize this if we switch graph to\r\nstore nodes organized by shared prefixes.\r\n\r\nTest plan:\r\nUnit tests were added. `yarn travis` passes.\r\n\r\nPaired with @wchargin","title":"Implement prefix filtering for `Graph.nodes`","mergedAs":{"type":"COMMIT","hash":"1a08a48c0333ec0ecffdc378bc6d24a2661d3556"},"additions":46,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000391\u0000":{"address":{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/391","comments":[],"reviews":[{"type":"REVIEW","id":"128926593","pull":{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Similar to #390, we now allow filtering the results from `Graph.edges`\r\nby address prefixes. It's a little more complicated than #390, as we\r\nallow filtering by src, dst, or address.\r\n\r\nTest plan:\r\nUnit tests added. `yarn travis` passes.\r\n\r\nPaired with @wchargin","title":"Add `Graph.edges` filtering by prefixing","mergedAs":{"type":"COMMIT","hash":"7199586262850d0d9e506439bddec4e70c48a68a"},"additions":166,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000392\u0000":{"address":{"type":"PULL","number":"392","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/392","comments":[],"reviews":[{"type":"REVIEW","id":"128948385","pull":{"type":"PULL","number":"392","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis can make invocations of `FooAddress.fromParts([])` a bit more\r\nsuccinct.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests added. Run `yarn travis`.\r\n\r\nwchargin-branch: address-empty","title":"Add `empty` (monoid identity) to address modules","mergedAs":{"type":"COMMIT","hash":"6ba6d885ad65ed4264cb365c8afa367f9706fc00"},"additions":19,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000393\u0000":{"address":{"type":"PULL","number":"393","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/393","comments":[],"reviews":[{"type":"REVIEW","id":"128948531","pull":{"type":"PULL","number":"393","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis fixes up all instances of `fromParts([])` that are not in\r\n`address.js` or `address.test.js`.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nRunning `git grep --name-only -F 'fromParts([])'` yields only the two\r\nmodules listed above. Existing unit tests suffice for correctness.\r\n\r\nwchargin-branch: use-address-empty","title":"Use `NodeAddress.empty` and `EdgeAddress.empty`","mergedAs":{"type":"COMMIT","hash":"7ce4a0c32de1c2bee51af74840364a63b4730138"},"additions":25,"deletions":29},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000394\u0000":{"address":{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/394","comments":[],"reviews":[{"type":"REVIEW","id":"128961985","pull":{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\n@decentralion wants this! :-)\r\n\r\nTest Plan:\r\nVerify that the case-insensitive diff is empty:\r\n```\r\n$ git config --global difftool.idiff.cmd 'diff -ui \"$LOCAL\" \"$REMOTE\"'\r\n$ git difftool -y --tool idiff HEAD~1..HEAD\r\n```\r\n\r\nwchargin-branch: uppercase-enum","title":"Use uppercase enum constants in GitHub addresses","mergedAs":{"type":"COMMIT","hash":"b6eebddeb0990002ed6c1585b14c10cc1265d8b4"},"additions":54,"deletions":54},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000395\u0000":{"address":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/395","comments":[],"reviews":[{"type":"REVIEW","id":"128982869","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128984758","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"- Switch string constant node and edge types (e.g. \"REPO\") to exported\r\nconsts (eg `export const REPO_TYPE`).\r\n- Add (and internally use) a `_Prefix` psuedomodule which contains\r\nper-type address prefixes\r\n- Test that constructing a StructuredAddress with the wrong type is an\r\nerror.\r\n\r\nTest plan:\r\nUnit tests pass, snapshots unchanged.\r\n\r\nPaired with @wchargin","title":"Add Github prefixes and const types","mergedAs":{"type":"COMMIT","hash":"ed3397f6549565420c7137e45006fe2b64eb9fa6"},"additions":192,"deletions":115},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000396\u0000":{"address":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/396","comments":[],"reviews":[{"type":"REVIEW","id":"128981301","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"128981980","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Test plan: Not needed.\r\n\r\nPaired with @wchargin","title":"Add `CommentableAddress`","mergedAs":{"type":"COMMIT","hash":"a8bf6a36bf2c995dc91d778fc8be6664e371f3e8"},"additions":7,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000397\u0000":{"address":{"type":"PULL","number":"397","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/397","comments":[],"reviews":[{"type":"REVIEW","id":"130163593","pull":{"type":"PULL","number":"397","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn #394, we uppercased the constants for GitHub node types. However, we\r\nwere using string literals instead of constants in the test cases. These\r\ntest cases were supposed to cover every error path, but instead ended up\r\njust covering the “bad type” error path many times.\r\n\r\nAny one of the following would have prevented this regression:\r\n\r\n 1. using string constants instead of literals in the test case;\r\n 2. throwing and checking more precise error messages; or\r\n 3. being alerted that coverage decreased as a result of the change.\r\n\r\nIn this commit, we enact the first of these options. I’m open to adding\r\na coverage bot, but don’t feel strongly about it at this time.\r\n\r\nTest Plan:\r\nRunning `yarn coverage` now shows 100% coverage for the `nodes.js`\r\nmodule, whereas previously almost all `throw fail();` lines were\r\nuncovered (and the branch coverage was just 76%).\r\n\r\nwchargin-branch: fix-github-node-error-tests","title":"Fix GitHub node `fromRaw` error-path test cases","mergedAs":{"type":"COMMIT","hash":"ea74955a66a91301d6b26d0748c3a63f02565733"},"additions":10,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000398\u0000":{"address":{"type":"PULL","number":"398","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/398","comments":[],"reviews":[{"type":"REVIEW","id":"130187340","pull":{"type":"PULL","number":"398","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe have `edgeToString`, which formats edges as nicely human-readable\r\nstrings. However, these strings have some quotes in them, and so when\r\nthey are themselves stringified (e.g., as part of a Jest snapshot), they\r\nbecome much harder to read. We thus introduce `edgeToParts` to make our\r\nsnapshots more readable.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n\r\nwchargin-branch: add-edgeToParts","title":"Add `edgeToParts` convenience export from `Graph`","mergedAs":{"type":"COMMIT","hash":"aac2fc6792f4530929e58f812a1d262b85f6f7d9"},"additions":26,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000399\u0000":{"address":{"type":"PULL","number":"399","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/399","comments":[],"reviews":[{"type":"REVIEW","id":"130187433","pull":{"type":"PULL","number":"399","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nObserve that the new snapshots are easier to read. Might as well make\r\nsure that they encode the same data as the old snapshots, too. Note that\r\nthe backslash character no longer appears in this snapshot file. :-)\r\n\r\nwchargin-branch: use-edgeToParts","title":"Use `edgeToParts` in the GitHub edge tests","mergedAs":{"type":"COMMIT","hash":"b9c01d13c9235d3c73cfef714df784dd918dc2ca"},"additions":135,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000400\u0000":{"address":{"type":"PULL","number":"400","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/400","comments":[],"reviews":[{"type":"REVIEW","id":"130190532","pull":{"type":"PULL","number":"400","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe had `edgeExamples`, wherein we constructed examples of edge addresses\r\n(not actual edges) by manual instantiation. We checked that these\r\nmatched snapshots, and then we also called `createEdge` a bunch to\r\ncreate actual edges, and checked that those matched snapshots, too.\r\nConsequently, we had twice as many snapshots as we needed, and also\r\ndefined twice as many edge addresses as we needed.\r\n\r\nTest Plan:\r\nNote that snapshot contents are either deleted or unchanged.\r\n\r\nwchargin-branch: simplify-github-edge-tests","title":"Greatly simplify GitHub edge tests","mergedAs":{"type":"COMMIT","hash":"281cb574d5bc7f2a7abb7d61fe58651815f4ac3c"},"additions":25,"deletions":205},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000401\u0000":{"address":{"type":"PULL","number":"401","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/401","comments":[],"reviews":[{"type":"REVIEW","id":"130202914","pull":{"type":"PULL","number":"401","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nMany files are unchanged. Some files have had paths updated, or new\r\nbuild/test targets added.\r\n\r\nThe `types.js` file includes payload type definitions. These are\r\ntechnically independent of the graph abstraction (i.e., nothing from V1\r\nis imported and the code all still works), but it of course implicitly\r\ndepends on the V1 model. For now, we include the entirety of this file,\r\njust so that we have a clean copy operation. Subsequent commits will\r\nstrip out this extraneous code.\r\n\r\nSuggest reviewing with the `--find-copies-harder` argument to Git’s\r\ndiffing functions.\r\n\r\nTest Plan:\r\nRunning `yarn travis --full` passes. Running\r\n\r\n    ./src/v3/plugins/git/demoData/synchronizeToGithub.sh --dry-run\r\n\r\nyields “Everything up-to-date”.\r\n\r\nwchargin-branch: git-v3-copy","title":"Copy graph-independent V1 Git plugin code to V3","mergedAs":{"type":"COMMIT","hash":"9347348dd7b7c8e62a397490b88a11bb3e58a6db"},"additions":1212,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000402\u0000":{"address":{"type":"PULL","number":"402","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/402","comments":[],"reviews":[{"type":"REVIEW","id":"130203101","pull":{"type":"PULL","number":"402","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nExisting Flow and unit tests suffice.\r\n\r\nwchargin-branch: git-v3-remove-payloads","title":"Remove payload definitions from V3 `git/types.js`","mergedAs":{"type":"COMMIT","hash":"83151d9fac552abd0e6b94ba38ff3ced2c0c3c12"},"additions":0,"deletions":129},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000403\u0000":{"address":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/403","comments":[],"reviews":[{"type":"REVIEW","id":"130203720","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130204897","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is modeled after the GitHub node module format, with the obvious\r\nalterations plus a bit more type safety in the implementation of `toRaw`\r\n(namely, we check `type` exhaustively).\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n\r\nwchargin-branch: git-v3-nodes","title":"Add node type definitions for V3 Git plugin","mergedAs":{"type":"COMMIT","hash":"7c1b3ca835e96110be6627fe1f9f4b2fc025b5a2"},"additions":364,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000404\u0000":{"address":{"type":"PULL","number":"404","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/404","comments":[],"reviews":[{"type":"REVIEW","id":"130603951","pull":{"type":"PULL","number":"404","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is modeled after the GitHub edge module format. In particular, the\r\nwhole length encoding garbage is directly copied. As in that module, we\r\ndecline to test the error paths.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`. Snapshots are readable.\r\n\r\nwchargin-branch: git-v3-edges","title":"Add edge type definitions for V3 Git plugin","mergedAs":{"type":"COMMIT","hash":"448fb3e1a8662e4ce84dbb9b929ea981c6368802"},"additions":476,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000405\u0000":{"address":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/405","comments":[{"type":"COMMENT","id":"399342223","parent":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"399567943","parent":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130654958","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130654968","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130654975","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130654981","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655012","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655056","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655064","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655074","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655091","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655134","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130655149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131076017","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131078088","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131078112","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131078149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131079392","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131080070","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131080226","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131328588","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit:\r\n- adds `github/createGraph.js`\r\n  - which ingests GitHub GraphQL response\r\n  - and creates a GitHub graph\r\n- adds `github/graphView.js`,\r\n  - which takes a Graph\r\n  - and validates that all GitHub specific node and edge invariants hold\r\n    - every github node may be parsed by `github/node/fromRaw`\r\n      - with the right node type\r\n    - every github edge may be parsed by `github/edge/fromRaw`\r\n      - with the right edge type\r\n      - with the right src address prefix\r\n      - with the right dst address prefix\r\n    - every child node has exactly one parent\r\n      - of the right type\r\n  - and provides convenient porcelain methods for\r\n    - finding repos in the graph\r\n    - finding issues of a repo\r\n    - finding pulls of a repo\r\n    - finding reviews of a pull\r\n    - finding comments of a Commentable\r\n    - finding authors of Authorables\r\n    - finding parent of a ChildAddress\r\n- tests `createGraph`\r\n  - via snapshot testing\r\n  - by checking the GraphView invariants hold\r\n- tests `graphView`\r\n  - by checking individual entities in the example-git repository have\r\n  the proper relationships\r\n\r\nTest plan:\r\n- Extensive unit and snapshot tests added. `yarn travis` passes.","title":"create the GitHub graph","mergedAs":{"type":"COMMIT","hash":"a209caeec21e513d7f2cdd9b893cac2f25241c61"},"additions":2119,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000406\u0000":{"address":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/406","comments":[{"type":"COMMENT","id":"399264282","parent":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400453389","parent":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"131081168","pull":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit adds logic to create the Git graph, modeled after the GitHub\r\ngraph creator in #405. In this commit, we do not include the\r\ncorresponding porcelain; a Git `GraphView` will be added subsequently.\r\n\r\nKudos to @decentralion for suggesting in #187 that I write the logic to\r\ndetect BECOMES edges against the high-level data structures. Due to that\r\ndecision, the logic and tests are copied directly from the V1 code\r\nwithout change, because the high-level data structures are the same. The\r\nnew code is exactly the body of the `GraphCreator` class.\r\n\r\nTest Plan:\r\nVerify that the new snapshot is likely equivalent to the V1 snapshot,\r\nusing the heuristic that the two graphs have the same numbers of nodes\r\n(59) and edges (84). (I have performed this check.)\r\n\r\nwchargin-branch: git-v3-create-graph","title":"Create Git graph","mergedAs":{"type":"COMMIT","hash":"0522894a8d5abc45eaac5397ee0cb893e2b6ad3b"},"additions":2067,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000407\u0000":{"address":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/407","comments":[],"reviews":[{"type":"REVIEW","id":"131288168","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131288297","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan:\r\n`yarn travis` passes","title":"Use Git Commit type in GitHub mergedAs edge","mergedAs":{"type":"COMMIT","hash":"24a7547e16a1af023320bff66a5ff58ad7b04391"},"additions":9,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000408\u0000":{"address":{"type":"PULL","number":"408","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/408","comments":[],"reviews":[{"type":"REVIEW","id":"131363376","pull":{"type":"PULL","number":"408","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe public method `checkInvariants` on graph is now cached. The cache is\r\ninvalidated when the graph is modified via the public API. As a result\r\nof this change, the time of `yarn ci-test --testPathPattern src/v3/`\r\ndecreases from 5.631s to 3.866s (best-of-three timing, but low variance\r\nanyway). This effect becomes much more pronounced as higher-level APIs\r\ncheck their own invariants by themselves indirectly invoking the graph’s\r\n`checkInvariants` method many times.\r\n\r\nTest Plan:\r\nExisting unit tests have been adapted and extended. Tests for the\r\ninvariant checking have been updated to call the internal, uncached\r\nmethod, and new tests have been added to check that the caching behavior\r\nis correct.\r\n\r\nwchargin-branch: cache-graph-invariants","title":"Cache core graph `checkInvariants` result","mergedAs":{"type":"COMMIT","hash":"127200f67c2a1ba5699c407e20b8c3f18e0227f2"},"additions":64,"deletions":19},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000409\u0000":{"address":{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/409","comments":[{"type":"COMMENT","id":"399593257","parent":{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"399599000","parent":{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nGiven that invariants are only invalidated when the modification count\r\nis changed, it suffices to only call `_maybeCheckInvariants` from within\r\n`_markModification` (and the constructor). This eliminates a function\r\ncall and cache key check for many public accessor functions, but does\r\nnot present a substantial improvement: the best-of-three timing only\r\nimproved from 3.866s to 3.799s, which is not statistically significant.\r\nThe patch makes it less obvious that the invariants are always in fact\r\nvalid, so I recommend that it not be merged.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: graph-check-invariants-only-indirectly","title":"Only check graph invariants after modification","mergedAs":null,"additions":13,"deletions":42},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000410\u0000":{"address":{"type":"PULL","number":"410","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/410","comments":[],"reviews":[{"type":"REVIEW","id":"131370571","pull":{"type":"PULL","number":"410","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The code will be refactored so that references are expressed in terms of\r\nthe GitHub node address code; the implementation is copied first so that\r\nthe review will be cleaner.\r\n\r\nTest plan:\r\n`yarn travis` passes.","title":"Copy `github/findReferences` from v1 to v3","mergedAs":{"type":"COMMIT","hash":"2dec8868db069976fb3c270b8f18b7afaaaeb7d4"},"additions":189,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000411\u0000":{"address":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/411","comments":[{"type":"COMMENT","id":"399625927","parent":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"399626941","parent":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131382994","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131382998","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The `RelationalView` maps the GitHub GraphQL response data into a View\r\nclass, which makes it easy to access pieces of GitHub data by their\r\ncorresponding `StructuredAddress`.\r\n\r\nThis will be a valuable companion to the graph, making it possible to\r\naccess GitHub node data like the title or body of an issue via the\r\nissue's address. This basically is the supplement to the GitHub graph\r\nthat includes the \"payloads\" from our v1 Graph.\r\n\r\nIt will also make creating the GitHub graph a lot more convenient,\r\nalthough I've left that for another commit.\r\n\r\nDesigned with feedback from @wchargin.\r\n\r\nTest plan:\r\nInspect the included snapshots for reasonability, and run unit tests.","title":"Add GitHub `RelationalView`","mergedAs":{"type":"COMMIT","hash":"a470f282043c2940b29b91c97ee120de052b09df"},"additions":670,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000":{"address":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/412","comments":[{"type":"COMMENT","id":"400059242","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400158180","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"131740853","pull":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This pull merges several improvements to `RelationalView`:\r\n- Modify the `Entry` types so that they generally point directly to entries, rather than holding addresses as pointers\r\n- Add retrieval methods for every entry type\r\n- Add `type` fields to entries to enable type refinement\r\n\r\nSee individual commits for details.\r\n\r\nThis PR should be merged via rebase and merge, not squash.","title":"[r] Refactor `RelationalView`","mergedAs":null,"additions":439,"deletions":234},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000413\u0000":{"address":{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/413","comments":[],"reviews":[{"type":"REVIEW","id":"131745973","pull":{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit modifies `github/createGraph` to use the `RelationalView`\r\nclass created in #411 and #412. The code is now simpler and cleaner.\r\n\r\nI also fixed some `any`s that were leaking in our test code (due to use\r\nof runtime require for GitHub example data). These anys were discovered\r\nby bumping into uncaught type errors. :)\r\n\r\nTest plan:\r\nObserve that the graph snapshot was not changed.","title":"[change-base] Refactor GH `createGraph` to use `RelationalView`","mergedAs":null,"additions":65,"deletions":131},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000414\u0000":{"address":{"type":"PULL","number":"414","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/414","comments":[],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, the GitHub `RelationalView` enables iterating over every\r\n`RepoEntry`, but has no corresponding methods for the other GitHub\r\ntypes. This commit adds and tests those methods.\r\n\r\nTest plan:\r\n`yarn travis`","title":"[cb] Add type retrieval methods to `RelationalView`","mergedAs":null,"additions":42,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000415\u0000":{"address":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/415","comments":[],"reviews":[{"type":"REVIEW","id":"131848450","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132187525","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSimilar in structure to the GitHub graph view.\r\n\r\nTest Plan:\r\nUnit tests added, with full coverage.\r\n\r\nwchargin-branch: git-graph-view","title":"Implement a Git graph view","mergedAs":{"type":"COMMIT","hash":"dd83d7b4abdbaab1e44aa0474eecafc180d279ce"},"additions":760,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000416\u0000":{"address":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/416","comments":[],"reviews":[{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131848072","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"131848106","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This pull request renames `findReferences` to `parseReferences`, and then implements `findReferences` as a module that finds every reference in a `RelationalView`. This will make it very easy to add reference edges to the GitHub graph.\r\n\r\nSee individual commits for details.","title":"[cr] Find all references in the `RelationalView`","mergedAs":null,"additions":644,"deletions":176},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000":{"address":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/418","comments":[{"type":"COMMENT","id":"400414198","parent":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400847214","parent":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In #411 and #412, I implemented `RelationalView`, which maps the GraphQL\r\nGitHub data into a format that has `addresses`. The `RelationalView`\r\nallows clients that have the `addresses` of various GitHub nodes to then\r\nretrieve additional information, such as the body of the text.\r\n`RelationalView` admits a convenient re-implementation of `createGraph`,\r\nand an implementation of Github reference detection.\r\n\r\nHowever, I don't like that when paired with the `graph`, the\r\n`RelationalView` has a redundant representation of the `CONTAINS` type\r\nedges; the `RelationalView`'s repos point to its contained issues, and\r\nthe graph does too. I think it would be better to have a single source\r\nof truth for relations between data. As such, after offline discussion\r\nwith @wchargin, I decided to implement `EntityStore`.\r\n\r\n`EntityStore` is much like the relational view, except with all relation\r\ndata (e.g. pointers from an issue to its author or its comments)\r\nstripped out. It provides methods for retrieving an entity by address,\r\nand for iterating over all entities of a given type.\r\n\r\nOf course, to create the Graph, we *do* need that relational data. So\r\nthis commit creates an additional method, `addressify`.\r\n`addressify` takes the GitHub GraphQL data, and annotates it\r\nwith GitHub addresses. Then, the addressed data is used both to\r\nconstruct the `EntityStore` and to create the GitHub graph. These two\r\npieces replcae the `RelationalView`.\r\n\r\nTest plan:\r\nObserve snapshots, and run `yarn travis`.","title":"Replace GitHub `relationalView`","mergedAs":null,"additions":1126,"deletions":670},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000419\u0000":{"address":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/419","comments":[{"type":"COMMENT","id":"400511127","parent":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`addressify` takes the GitHub data and annotates it with `address`es.\r\nThis commit refactors the GitHub `createGraph` method to use this\r\naddressed data, thus removing the need for `createGraph` to construct\r\naddresses manually.\r\n\r\nThis replaces #413.\r\n\r\nTest plan:\r\n`yarn travis`, and graph snapshot unchanged.","title":"[c] Modify `createGraph` to use `DataAddressed`.","mergedAs":null,"additions":61,"deletions":131},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000420\u0000":{"address":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/420","comments":[{"type":"COMMENT","id":"401122352","parent":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132186846","pull":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This pull request renames findReferences to parseReferences, and then implements findReferences as a module that finds every reference in an `EntityStore`. This will make it very easy to add reference edges to the GitHub graph.\r\n\r\nThis replaces #416.\r\n\r\nSee individual commits for details.","title":"[cr] Find all references in `EntityStore`","mergedAs":null,"additions":656,"deletions":176},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000422\u0000":{"address":{"type":"PULL","number":"422","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/422","comments":[],"reviews":[{"type":"REVIEW","id":"132251756","pull":{"type":"PULL","number":"422","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSubmodule commits need not have associated tree objects, in case the\r\nrepository to which they belong does not exist in our graph. We’d like\r\nto represent submodule commits as actual commits, which necessitates\r\nthis change. See #417 for context.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: git-affine-trees","title":"Allow Git commits to have zero or one tree","mergedAs":{"type":"COMMIT","hash":"38c364c9164cac6a547767a87de8396e25c95de1"},"additions":20,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000423\u0000":{"address":{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/423","comments":[{"type":"COMMENT","id":"400507156","parent":{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132252035","pull":{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nCloses #417. Submodule commits are dead; long live commits. The ontology\r\nis now:\r\n\r\n  - A tree includes tree entries.\r\n  - A tree entry may have a blob as contents.\r\n  - A tree entry may have a tree as contents.\r\n  - A tree entry may have a commit as contents.\r\n\r\nTest Plan:\r\nExisting unit tests suffice, especially `#commits yields all commits`.\r\n\r\nwchargin-branch: git-remove-submodule-commits","title":"Represent submodule commits as normal commits","mergedAs":{"type":"COMMIT","hash":"518d5b819c2628b20f5f12e406ce312f7e35cd73"},"additions":59,"deletions":260},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000424\u0000":{"address":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/424","comments":[],"reviews":[{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132272637","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132617174","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132617216","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132617509","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132617720","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132617864","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132619756","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132626801","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132629008","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Based on offline design discussion with @wchargin, we've decided to\r\nupgrade the `RelationalView` to be *the* comprehensive source for GitHub\r\ndata inside SourceCred. The `RelationalView` will contain the full\r\ndataset, including parsed relational information (such as\r\ncross-references between GitHub entities). Then, we will project our\r\nGitHub graph out of the `RelationalView`.\r\n\r\nTo that end, the `RelationalView` no longer exports raw data blobs.\r\nInstead, it exports nice classes: `Repo`, `Issue`, `Pull`, `Review`,\r\nand `Userlike`. These classes have convenient methods for accessing both\r\ntheir own data and related entities, e.g. `repo.issues()` yields all\r\nthe issues in that repo.\r\n\r\nThis is effectively a port of #170 into the v3 API. The main difference\r\nis that in v1, the Graph contained this data store, whereas in v3, we\r\nwill use this data store to generate the graph.\r\n\r\nThis supersedes #418.\r\n\r\nTest plan:\r\nThe snapshot tests are quite readable.","title":"Add porcelain-style classes to `RelationalView`","mergedAs":{"type":"COMMIT","hash":"6235febdac242a8b450b7ea41e1f833575e55253"},"additions":667,"deletions":465},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000425\u0000":{"address":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/425","comments":[{"type":"COMMENT","id":"400507239","parent":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400836819","parent":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132619835","pull":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis code is independent of the graph abstraction, and so is mostly\r\ncopied. The only change is to the structure of the test code (we now\r\nprefer to wrap everything in a big `describe` block with an absolute\r\npath to the module under test).\r\n\r\nTest Plan:\r\nUnit tests included.\r\n\r\nwchargin-branch: v3-markov-chain","title":"Copy Markov chain code from V1 to V3","mergedAs":{"type":"COMMIT","hash":"faa2f8c9d00b8742f85ed0fc61bd07b07cb8314e"},"additions":329,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000426\u0000":{"address":{"type":"PULL","number":"426","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/426","comments":[],"reviews":[{"type":"REVIEW","id":"132252159","pull":{"type":"PULL","number":"426","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’d like to use this test case to generate a Markov chain, which\r\nrequires that it not be local to the `graph.js` tests.\r\n\r\nTest Plan:\r\nExisting unit tests suffice.\r\n\r\nwchargin-branch: expose-advanced-graph","title":"Expose `advancedGraph` test case","mergedAs":{"type":"COMMIT","hash":"b9c67f447fda612ebf7220c8e82c34cdc4b4c1f9"},"additions":103,"deletions":99},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000427\u0000":{"address":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/427","comments":[{"type":"COMMENT","id":"400838084","parent":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132622637","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is based on the V1 file `basicPagerank.js`. Here, we include only\r\nthe code to convert a graph to a Markov chain. We necessarily rewrite\r\nthe implementation, as the graph format has changed, and also make the\r\nkey function `graphToAddressMapMarkovChain` easier to understand.\r\n\r\nTest Plan:\r\nUnit tests included.\r\n\r\nwchargin-branch: v3-graph-markov-chain","title":"Convert V3 graphs to Markov chains","mergedAs":{"type":"COMMIT","hash":"e7b28b81dbecf5bab732c1c61aff10d24be590e3"},"additions":424,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000428\u0000":{"address":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/428","comments":[{"type":"COMMENT","id":"400866003","parent":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132647448","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132647500","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133012676","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133013249","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit modifies `github/createGraph` to use the `RelationalView`\r\nclass created in #424. The code is now much cleaner.\r\n\r\nI also fixed some `any`s that were leaking in our test code (due to use\r\nof runtime require for GitHub example data). These anys were discovered\r\nby bumping into uncaught type errors. :)\r\n\r\nThis commit supercedes #413 and #419.\r\n\r\nTest plan:\r\nObserve that the graph snapshot was not changed.","title":"Refactor GH `createGraph` to use `RelationalView`","mergedAs":{"type":"COMMIT","hash":"1421148a6d8466a94e8ab305c1a3cdb52e9ab073"},"additions":79,"deletions":136},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000429\u0000":{"address":{"type":"PULL","number":"429","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/429","comments":[],"reviews":[{"type":"REVIEW","id":"132556521","pull":{"type":"PULL","number":"429","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This code is about parsing references out of text, so `parseReferences`\r\nis a better name.\r\n\r\nThe code that consumes this logic to find all the references in the\r\nGitHub data shall be rightly called `findReferences`\r\n\r\nTest plan:\r\n`yarn travis`","title":"Rename `findReferences` to `parseReferences`","mergedAs":{"type":"COMMIT","hash":"659fc51d9b623a19fef2fabdda9963155a7376b8"},"additions":23,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000431\u0000":{"address":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/431","comments":[],"reviews":[{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133004063","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133004605","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133004907","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133005054","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133006098","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133006876","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133007332","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"For every `TextContentEntity` (`Issue`, `Pull`, `Review`, `Comment`),\r\nthis commit adds a `references` method that iterates over the entities\r\nthat the text content entity references.\r\n\r\nFor every `ReferentEntity` (actually, every entity), this commit adds a\r\n`referencedBy` method which iterates over the text content entities that\r\nreference that referent entity.\r\n\r\nThis method also adds `referentEntities` and `textContentEntities`\r\nmethods to the `RelationalView`, as they are used in both implementation\r\nand test code.\r\n\r\nTest plan:\r\nThe snapshot tests include every reference, in a format that is very\r\nconvenient for inspecting the ground truth on GitHub. For every\r\nreference, it's easy to check that the reference actually exists by\r\ncopying the `from` url and pasting it into the browser. I've done this\r\nand they check out. (It's not easy to prove that there are no missing\r\nreferences, but I'm pretty confident that this code is working.)\r\n\r\nUnit tests ensure that the `references` and `referencedBy`\r\nmethods are consistent.","title":"`RelationalView` tracks GitHub references","mergedAs":{"type":"COMMIT","hash":"c022b3f4d04ad8ff27399053a8c97076675bb3f8"},"additions":297,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000434\u0000":{"address":{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/434","comments":[],"reviews":[{"type":"REVIEW","id":"133016578","pull":{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This is a very simple extension of #431 to use the new reference\r\ndetection logic added in #429.\r\n\r\nTest plan:\r\nInspect snapshot change for plausibility. Note that the snapshot adds\r\nexactly 16 reference edges, which is the same as the number of\r\nreferences in the reference snapshot test.","title":"Add references to the GitHub graph","mergedAs":{"type":"COMMIT","hash":"38942d1f7b9b0f95d4cc0ac95622c04cac5a4c93"},"additions":342,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000435\u0000":{"address":{"type":"PULL","number":"435","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/435","comments":[],"reviews":[{"type":"REVIEW","id":"133022702","pull":{"type":"PULL","number":"435","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The Git and GitHub plugins have folders that contain small example data,\r\nas used for tests and snapshots. These folders were called `demoData`\r\nwhich is misleading since the data isn't used for demos. The folders\r\nthemselves contained files called \"example\", like \"example-github.json\"\r\nor \"exampleRepo.js\". Renaming the folders to `example` is cleaner.\r\n\r\nTest plan:\r\n`yarn travis --full` passes.","title":"Rename `demoData` folders to `example`","mergedAs":{"type":"COMMIT","hash":"529f7db374e2edd7f3f6836c902cece4dedc7f74"},"additions":11,"deletions":11},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000436\u0000":{"address":{"type":"PULL","number":"436","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/436","comments":[],"reviews":[{"type":"REVIEW","id":"133035216","pull":{"type":"PULL","number":"436","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, GitHub tests load example data with ad-hoc methods. It makes\r\nit easy for the author of a new test file to forget to clone the test\r\ndata (and risk cross-test-file state pollution), or to forget to apply\r\nthe correct typing.\r\n\r\nThis commit factors a shared `example` module which provides a safe way\r\nto access the example data, along with some convenient helpers for\r\nconstructing a graph or relational view.\r\n\r\nTest plan:\r\n`yarn travis`\r\n\r\nFixes #430.","title":"Add a GitHub `example` module","mergedAs":{"type":"COMMIT","hash":"a8f54530bc0862d261f3cb562a48df49cf283c87"},"additions":25,"deletions":26},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000437\u0000":{"address":{"type":"PULL","number":"437","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/437","comments":[],"reviews":[{"type":"REVIEW","id":"133035290","pull":{"type":"PULL","number":"437","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Callers will want to write functions that are generic over `Entity`.\r\nThis makes those call signatures cleaner.\r\n\r\nTest plan: travis","title":"Export a clean `Entity` type from relationalView","mergedAs":{"type":"COMMIT","hash":"e239fdfeebe77f21305fbaeb6908d93920d066e1"},"additions":11,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000438\u0000":{"address":{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/438","comments":[],"reviews":[{"type":"REVIEW","id":"133036464","pull":{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`match` implements pattern matching over `Entity`\r\n\r\nTest plan:\r\nUnit tests included.","title":"Add `RelationalView.match`","mergedAs":{"type":"COMMIT","hash":"40db3cdfa311e5316f1d13112548b09fcbdf1ebf"},"additions":49,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000439\u0000":{"address":{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/439","comments":[],"reviews":[{"type":"REVIEW","id":"133059227","pull":{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds a `description` method that takes a GitHub entity, and\r\nreturns a description of that entity. Based on the work in #261.\r\n\r\nIn contrast to the implementation in #261:\r\n- It won't crash on entities without an author (although we don't have a\r\ntest case for this; see #389).\r\n- It handles multi-authors reasonably (although we can't test that, as\r\nwe haven't implemented multi-authorship yet; see #218).\r\n\r\nTest plan:\r\nInspect snapshot to see some examples.","title":"GH: Add a `description` method for entities","mergedAs":{"type":"COMMIT","hash":"607adeca296990e58f0b30b75fece09583fb54df"},"additions":69,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000440\u0000":{"address":{"type":"PULL","number":"440","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/440","comments":[],"reviews":[{"type":"REVIEW","id":"133058613","pull":{"type":"PULL","number":"440","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe plan to use this to more intelligently extract references from GitHub\r\ntext content. See #432.\r\n\r\nTest Plan:\r\nIn a Node shell, running\r\n\r\n```js\r\nconst cm = require(\"commonmark\");\r\nvar parser = new cm.Parser();\r\nvar ast = parser.parse(\"Hello\\nworld\");\r\nvar html = new cm.HtmlRenderer({softbreak: \" \"}).render(ast);\r\nconsole.log(html);\r\n```\r\n\r\nprints `<p>Hello world</p>`.\r\n\r\nwchargin-branch: commonmark","title":"Add dependency on `commonmark`","mergedAs":{"type":"COMMIT","hash":"0cc2907e9e3786d1eec7711ee354a3ce74025112"},"additions":20,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000441\u0000":{"address":{"type":"PULL","number":"441","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/441","comments":[],"reviews":[{"type":"REVIEW","id":"133060566","pull":{"type":"PULL","number":"441","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis makes progress on #432. We’d like to look for GitHub references\r\nonly within each text node of the Markdown AST. But there are two\r\ncomplications:\r\n\r\n  - Text nodes split across formatting, and it’s valid for someone to\r\n    write `*Paired* with @decentralion, but *tested* independently`, or\r\n    `**Closes** #12345`, or something.\r\n\r\n  - Sometimes contiguous blocks of text expand to multiple text nodes,\r\n    because of how CommonMark approaches smart punctuation. For\r\n    instance: the document `It's got \"punctuation\" and stuff!` has eight\r\n    text nodes ([demo][1]).\r\n\r\nIn this commit, we introduce functions `deformat` and `coalesceText` to\r\nsolve these problems. (They go together because `coalesceText` is useful\r\nfor testing `deformat`.)\r\n\r\n[1]: https://spec.commonmark.org/dingus/?text=It%27s%20got%20%22punctuation%22%20and%20stuff!\r\n\r\nwchargin-branch: markdown-deformat","title":"Transform Markdown AST to strip formatting","mergedAs":{"type":"COMMIT","hash":"4ee1ed54c8c23657f90b465a2c5355a76639ba8c"},"additions":237,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000442\u0000":{"address":{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/442","comments":[],"reviews":[{"type":"REVIEW","id":"133073798","pull":{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Now that we want to implement RelationalView de/serialization, we need a\r\nway to construct one without adding data to it.\r\n\r\nNow that we're allowing `addData` to be called explicitly, we also want\r\nto make sure it's idempotent, which necessitated a small change to\r\nreference handling. A new test verifies idempotency.\r\n\r\nTest plan: travis\r\n\r\nPaired with @wchargin","title":"Add `RelationalView.addData`","mergedAs":{"type":"COMMIT","hash":"64df5b09c3e0f95772d52e2bc728c4a805f5b606"},"additions":25,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000443\u0000":{"address":{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/443","comments":[],"reviews":[{"type":"REVIEW","id":"133074860","pull":{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This adds methods for serializing the GitHub RelationalView.\r\n\r\nWe have not put in the work to ensure that these methods generate\r\ncanonical data. Getting the issues in a different order, or finding\r\nreferences in a different order, can change the JSON output even if the\r\nresulting repositories are equivalent.\r\n\r\n@decentralion think it's not worth putting in the effort, since we may\r\nswitch to a SQL database soon anyway.\r\n\r\nTest plan: travis\r\n\r\nPaired with @wchargin","title":"Add RelationalView.{to,from}JSON","mergedAs":{"type":"COMMIT","hash":"6356c5477f3716e5a241cda0108505874f729dac"},"additions":76,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000444\u0000":{"address":{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/444","comments":[],"reviews":[{"type":"REVIEW","id":"133331131","pull":{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This adds additions and deletions to the v3 Pull data model, and also\r\nuses them in the pull descriptions.\r\n\r\nIt's basically a port of #340 to v3.\r\n\r\nTest plan: Snapshots","title":"Include Pull additions/deletions","mergedAs":{"type":"COMMIT","hash":"baec3c15dd7a2d8217c5445f69274c9f7e1a7558"},"additions":23,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000445\u0000":{"address":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/445","comments":[{"type":"COMMENT","id":"401438107","parent":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401516542","parent":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"133334927","pull":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Generated via\r\n```\r\n$ src/v3/plugins/github/fetchGithubRepoTest.sh -u\r\n```\r\n\r\nTest plan: travis","title":"Update example-github data","mergedAs":{"type":"COMMIT","hash":"3bf496b06fd55b3e231bfbc9e90f1229b246c6c7"},"additions":219,"deletions":90},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000446\u0000":{"address":{"type":"PULL","number":"446","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/446","comments":[],"reviews":[{"type":"REVIEW","id":"133334904","pull":{"type":"PULL","number":"446","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nDue to oclif’s structure, this entry point shares its `commands`\r\ndirectory with that of the V1 entry point. We’ll therefore add commands\r\nlike `start-v3` as we go.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\n`yarn backend` works, and `node bin/sourcecredV3.js start` launches the\r\nV1 server.\r\n\r\nwchargin-branch: v3-cli","title":"Create a V3 command-line entry point","mergedAs":{"type":"COMMIT","hash":"3835862f82c32c8d4beb550709e1352666942973"},"additions":6,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000447\u0000":{"address":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/447","comments":[],"reviews":[{"type":"REVIEW","id":"133335326","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133347074","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis provides a command-line entry point `load-plugin-v3` (which will\r\nbecome `load-plugin` eventually), which fetches the GitHub data via\r\nGraphQL and saves the resulting `RelationalStore` to disk.\r\n\r\nA change to the Babel config is needed to prevent runtime errors of the\r\nform `_callee7` is not defined, where `_callee7` is a gensym that is\r\nappears exactly once in the source (in use position, not definition\r\nposition). I’m not sure exactly what is causing the error or why this\r\nconfig change fixes it. But while this patch may be fragile, I don’t\r\nthink that it’s likely to subtly break anything, so I’m okay with\r\npushing it for now and dealing with any resulting breakage as it arises.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nRun `yarn backend`, then run something like:\r\n\r\n```\r\nnode bin/sourcecredV3.js load-plugin-v3 \\\r\n    sourcecred example-github --plugin github\r\n```\r\n\r\nInspect results in `SOURCECRED_DIR/data/OWNER/NAME/github/view.json`,\r\nwhere `SOURCECRED_DIR` is `/tmp/sourcecred` by default, and `OWNER` and\r\n`NAME` are the repository owner and name.\r\n\r\nThis example repository takes about 1.1 seconds to run. The SourceCred\r\nrepository takes about 45 seconds.\r\n\r\nwchargin-branch: cli-load-plugin","title":"Save the GitHub relational store from the CLI","mergedAs":{"type":"COMMIT","hash":"4184e8594a80e5c1c55a66db100e3281775ac727"},"additions":160,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000448\u0000":{"address":{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/448","comments":[],"reviews":[{"type":"REVIEW","id":"133353174","pull":{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nOur build system doesn’t make it easy to have two separate React\r\napplications, which we would like to have for the V1 and V3 branches.\r\nInstead, we’ll implement a bridge to maintain compatibility.\r\n\r\nThe plan looks like this:\r\n\r\n 1. Change the app from pointing to V1 to pointing to a bridge\r\n 2. Move the router into the bridge and move the V1 app from the `/`\r\n    route to the `/v1` route (e.g., `/v1/explorer`)\r\n 3. Add a V3 app under the `/v3` route\r\n 4. ???\r\n 5. Delete the V1 app and remove it from the bridge\r\n 6. Delete the bridge and move the V3 app from the `/v3` route to `/`\r\n\r\nThis commit implements Step 1.\r\n\r\nTest Plan:\r\nTo verify that the bridge is in fact showing, apply\r\n\r\n```diff\r\ndiff --git a/src/bridge/app/index.js b/src/bridge/app/index.js\r\nindex 379e289..72e784c 100644\r\n--- a/src/bridge/app/index.js\r\n+++ b/src/bridge/app/index.js\r\n@@ -9,5 +9,11 @@ const root = document.getElementById(\"root\");\r\n if (root == null) {\r\n   throw new Error(\"Unable to find root element!\");\r\n }\r\n-ReactDOM.render(<V1App />, root);\r\n+ReactDOM.render(\r\n+  <React.Fragment>\r\n+    <h1>Hello</h1>\r\n+    <V1App />\r\n+  </React.Fragment>,\r\n+  root\r\n+);\r\n registerServiceWorker();\r\n```\r\n\r\nand say “hello” back to the app.\r\n\r\nwchargin-branch: bridge","title":"Create a bridge for the V1 and V3 apps","mergedAs":{"type":"COMMIT","hash":"ca5346b524ba494169e5a495bee86e503a0e652f"},"additions":5,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000449\u0000":{"address":{"type":"PULL","number":"449","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/449","comments":[],"reviews":[{"type":"REVIEW","id":"133353294","pull":{"type":"PULL","number":"449","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe bridge now lets you select any version of the app that you want, as\r\nlong as that’s V1, because that’s the only version that exists. We’ll\r\nadd a V3 version shortly.\r\n\r\nThis implements Step 2 of the plan described in #448.\r\n\r\nTest Plan:\r\nIn `yarn start` and `node bin/sourcecred.js start`, note that navigating\r\nto `/` redirects to `/v1`, and that the cred explorer works.\r\n\r\nwchargin-branch: bridge-select","title":"Add a “version select” to the bridged app","mergedAs":{"type":"COMMIT","hash":"1d49ec87dc82c58b52801847c8d7ac98c55ab90d"},"additions":41,"deletions":21},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000450\u0000":{"address":{"type":"PULL","number":"450","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/450","comments":[],"reviews":[{"type":"REVIEW","id":"133353339","pull":{"type":"PULL","number":"450","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis implements Step 3 of the plan described in #448.\r\n\r\nTest Plan:\r\nRun `yarn start` and navigate to `/v3` (by clicking the nav link).\r\n\r\nwchargin-branch: branch-v3","title":"Add an entry point for the V3 app","mergedAs":{"type":"COMMIT","hash":"d74d760f43f6e309be330ca5f41f0d18b68ba5bd"},"additions":35,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000451\u0000":{"address":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/451","comments":[],"reviews":[{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133357688","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133357813","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133357822","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133357840","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133357858","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit enables paired authorship on GitHub authored entities.\r\nIf the entity has the string \"Paired with\" in the body, followed by a\r\nusername reference, that entity will be recorded as having dual\r\nauthorship, with the nominal author and the paired-with author being\r\ntreated identically in the relational view and the graph.\r\n\r\nIf there's a need to pair with more than one author, the \"Paired with\"\r\nsignifier may be repeated. The regex matcher is forgiving of\r\ncapitalizing the P or W, and an optional colon may be added immediately\r\nafter the word \"with\".\r\n\r\nNote that the code assumes that every `TextContentEntity` is also an\r\n`AuthoredEntity`. If that changes, it will cause a type error and we'll\r\nneed to refine the code somewhat.\r\n\r\nAs implemented, it is impossible for the same user to author a post\r\nmultiple time; if this is textually suggested (e.g. by a paired-with\r\nreference to the post's nominal author), the extra paired-with\r\nreferences are silently ignored. Also, having a paired-with reference\r\nsuppresses the basic reference (although it is possible to have a post\r\nthat is paired with someone, and additionally references them).\r\n\r\nTest plan:\r\nTests have been updated, and the behavior of the parser is extensively\r\ntested. For an end-to-end demonstration, I've also added a unit test in\r\nthe relational view that verifies that sourcecred/example-github#10 has\r\ntwo authors. You can also see that the graph snapshot has updated to\r\ninclude additional authorship edges (and that corresponding reference\r\nedges have disappeared).\r\n\r\nCloses #218","title":"Implement detection of paired authorship","mergedAs":{"type":"COMMIT","hash":"4afa5424226d9df03a68872fab2e9148db71aa4b"},"additions":252,"deletions":98},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000452\u0000":{"address":{"type":"PULL","number":"452","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/452","comments":[],"reviews":[{"type":"REVIEW","id":"133375847","pull":{"type":"PULL","number":"452","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"If `findStationaryDistribution` is passed `0` as `maxIterations`, then\r\nit should return the initial distribution.\r\n\r\nTest plan: see new unit test\r\n\r\nPaired with @wchargin","title":"Fix off-by-1 error in PageRank iteration limit","mergedAs":{"type":"COMMIT","hash":"a5608dd7c80c3feaf74081c163a2101438989e6d"},"additions":13,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000453\u0000":{"address":{"type":"PULL","number":"453","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/453","comments":[],"reviews":[{"type":"REVIEW","id":"133377248","pull":{"type":"PULL","number":"453","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"I'm planning to make a `pagerank.js` module that is a clean entry point\r\nfor all the graph-pagerank-related code, so it will be cleaner to expose all\r\nthe default options there.\r\n\r\nTest plan: travis\r\n\r\nPaired with @wchargin","title":"Require all `findStationaryDistribution` options","mergedAs":{"type":"COMMIT","hash":"5c93085430f5b6ebaead7630d7c967f913a1b2d3"},"additions":29,"deletions":19},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000454\u0000":{"address":{"type":"PULL","number":"454","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/454","comments":[{"type":"COMMENT","id":"401477378","parent":{"type":"PULL","number":"454","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"hamidzr"}],"body":"","title":"fixed minor typos","mergedAs":null,"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000455\u0000":{"address":{"type":"PULL","number":"455","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/455","comments":[],"reviews":[{"type":"REVIEW","id":"133382187","pull":{"type":"PULL","number":"455","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This module exposes a method, `pagerank`, which is a convenient entry\r\npoint for taking a `Graph` and returning a `PagerankResult`. This\r\nobviates the need for `src/v1/app/credExplorer/basicPagerank.js`.\r\n\r\nTest plan: Unit tests included.","title":"Add the `attribution/pagerank` module","mergedAs":{"type":"COMMIT","hash":"fe64377194304046e3b82d8992b0b8b3f730223f"},"additions":140,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000456\u0000":{"address":{"type":"PULL","number":"456","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/456","comments":[],"reviews":[{"type":"REVIEW","id":"133389968","pull":{"type":"PULL","number":"456","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This method takes an arbitrary structured address and returns an entity\r\nfor it (if a matching entity exists).\r\n\r\nTest plan: travis","title":"Add `view.entity`","mergedAs":{"type":"COMMIT","hash":"ffdfdca22aa9aee10dcf719b97b7adf7675a849c"},"additions":49,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000457\u0000":{"address":{"type":"PULL","number":"457","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/457","comments":[],"reviews":[{"type":"REVIEW","id":"133406296","pull":{"type":"PULL","number":"457","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPending the resolution of brigand/babel-plugin-flow-react-proptypes#201,\r\nwe’re removing this plugin from our build, because it results in\r\nincorrect code generation. We’ll be happy to add it back if the bug is\r\nfixed.\r\n\r\nTest Plan:\r\nFingers crossed.\r\n\r\nwchargin-branch: remove-bpfrpt","title":"Remove `babel-plugin-flow-react-proptypes`","mergedAs":{"type":"COMMIT","hash":"a5d19c80aad9abfadd1840a89a7f0e8bb2db4cd3"},"additions":4,"deletions":17},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000458\u0000":{"address":{"type":"PULL","number":"458","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/458","comments":[],"reviews":[{"type":"REVIEW","id":"133407097","pull":{"type":"PULL","number":"458","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Add `loadGitData` and wire it into CLI\r\n\r\nThis commit adds `loadGitData`, which clones the git repository for a\r\ngiven repo and saves the corresponding git graph. It also adds that\r\nmethod to the `loadPlugin` command, so that the following command now\r\nworks:\r\n\r\n```\r\n$ node bin/sourcecredV3.js load-plugin-v3  sourcecred example-git --plugin=git\r\n```\r\n\r\nAfter running that command, the correct file is present:\r\n\r\n```\r\n$ du -sh tmp/sourcecred/data/sourcecred/example-git/git/graph.json\r\n28K     /home/dandelion/tmp/sourcecred/data/sourcecred/example-git/git/graph.json\r\n```\r\n\r\nThe command takes:\r\n\r\n| repository               | time (s)  |\r\n:------------------------- | ----------:\r\n| `sourcecred/example-git` | 1         |\r\n| `sourcecred/sourcecred`  | 5         |\r\n| `ipfs/js-ipfs`           | 18        |\r\n| `ipfs/go-ipfs`           | ∞ (OOM)   |\r\n","title":"Add `loadGitData` and wire it into CLI","mergedAs":{"type":"COMMIT","hash":"ba4fa8e8204ef3c032f4efbfd9ee7287bdae49d6"},"additions":30,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000459\u0000":{"address":{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/459","comments":[],"reviews":[{"type":"REVIEW","id":"133409231","pull":{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In GitHub, you can make cross repo references. For example,\r\nsourcecred/sourcecred#459 is one such reference. This commit adds\r\nsupport for detecting those references and adding them to the GitHub\r\ngraph.\r\n\r\nTest plan:\r\nSee attached unit tests.","title":"Add support for detecting cross-repo references","mergedAs":{"type":"COMMIT","hash":"0b3c91a7bd0cff9f9f905b76cf5f63cd7840a24e"},"additions":27,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000460\u0000":{"address":{"type":"PULL","number":"460","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/460","comments":[],"reviews":[{"type":"REVIEW","id":"133409774","pull":{"type":"PULL","number":"460","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nText input boxes for repository owner and name now appear. “Loading the\r\ndata” consists of logging the attempt to the console.\r\n\r\nTest Plan:\r\nRun `yarn start`, and note that the inputs are keyed against the same\r\nlocal store key as their V1 equivalents. Note that clicking “Load data”\r\nprints a message to the console.\r\n\r\nPaired with @decentralion.\r\n\r\nwchargin-branch: v3-load-data-ui","title":"Allow selecting data to load in V3 cred explorer","mergedAs":{"type":"COMMIT","hash":"95c206b346718cfadf809cf84250162042a57898"},"additions":191,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000461\u0000":{"address":{"type":"PULL","number":"461","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/461","comments":[],"reviews":[{"type":"REVIEW","id":"133409870","pull":{"type":"PULL","number":"461","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis enables grabbing the GitHub relational view from disk and\r\nconverting it to a graph on the client.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nFor testing, information about the GitHub graph is printed when you\r\nclick the “Load data” button in the UI. Do so.\r\n\r\nwchargin-branch: github-plugin-adapter","title":"Implement the GitHub plugin adapter","mergedAs":{"type":"COMMIT","hash":"4767dce74940a986e40e68180916e8ead6e51022"},"additions":80,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000462\u0000":{"address":{"type":"PULL","number":"462","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/462","comments":[],"reviews":[{"type":"REVIEW","id":"133411094","pull":{"type":"PULL","number":"462","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Test plan:\r\nRun the following commands:\r\n\r\n```\r\nnode bin/sourcecredV3.js load-plugin-v3 sourcecred example-github --plugin=git\r\nnode bin/sourcecredV3.js load-plugin-v3 sourcecred example-github --plugin=github\r\nyarn start\r\n```\r\n\r\nThen, navigate in-browser to the v3 cred explorer and load data for\r\n`sourcecred/example-github`. The following messages are printed to\r\nconsole:\r\n\r\n```\r\nGitHub: Loaded graph: 31 nodes, 73 edges.\r\nGit: Loaded graph: 15 nodes, 19 edges.\r\nCombined: Loaded graph: 44 nodes, 92 edges.\r\n```\r\n\r\nPaired with @wchargin","title":"Add GitPluginAdapter and Git render module","mergedAs":{"type":"COMMIT","hash":"dd063f5203acaad7fce13ea3cfedac92507626bb"},"additions":146,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000463\u0000":{"address":{"type":"PULL","number":"463","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/463","comments":[],"reviews":[{"type":"REVIEW","id":"133412909","pull":{"type":"PULL","number":"463","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis presents a human-readable name for a plugin. It’s not yet used\r\nanywhere.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nFlow passes.\r\n\r\nwchargin-branch: plugin-name","title":"Add `name` function to plugin adapter","mergedAs":{"type":"COMMIT","hash":"728a3cdf3753b7719c2f11b124497dcbe44d5372"},"additions":7,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000464\u0000":{"address":{"type":"PULL","number":"464","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/464","comments":[],"reviews":[{"type":"REVIEW","id":"133412915","pull":{"type":"PULL","number":"464","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis enables plugins to specify different semantic types of nodes, along\r\nwith human-readable names. This will be used, for instance, in the cred\r\nexplorer, where users may filter to one of these node types.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nFlow passes.\r\n\r\nwchargin-branch: plugin-node-types","title":"Add “node types” listing to plugin adapter","mergedAs":{"type":"COMMIT","hash":"72be58a5c0920462429ba72da6798d0c9549bd9c"},"additions":22,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000466\u0000":{"address":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/466","comments":[],"reviews":[{"type":"REVIEW","id":"133436059","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133436122","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Ports #265 to the v3 branch, along with some tweaks:\r\n- Only display log score, and normalize them by adding 10 (so that most\r\nare non-negative)\r\n- Change colors to a soothing green\r\n- Improve display, e.g. make overflowing node description text wrap\r\nwithin the row\r\n\r\nImplements most of the tests requested in #269\r\n\r\nTest plan: Many unit tests added\r\n\r\nPaired with @wchargin","title":"Recreate Pagerank Table","mergedAs":{"type":"COMMIT","hash":"65b5babac4055aeb1c9c0f1cd562700af496bf80"},"additions":695,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000467\u0000":{"address":{"type":"PULL","number":"467","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/467","comments":[],"reviews":[{"type":"REVIEW","id":"133436357","pull":{"type":"PULL","number":"467","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nFixes #445. Created with:\r\n\r\n```\r\n$ src/v1/plugins/github/fetchGithubRepoTest.sh -u\r\n$ CI=1 yarn test -u\r\n```\r\n\r\nTest Plan:\r\n`yarn travis --full` passes.\r\n\r\nwchargin-branch: fix-build","title":"Update V1 example-github data","mergedAs":{"type":"COMMIT","hash":"c10ce0060b328f2cc0e7bdcd322a50993a3ffa4a"},"additions":164,"deletions":101},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000468\u0000":{"address":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/468","comments":[{"type":"COMMENT","id":"402269233","parent":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"133437160","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133437213","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133437221","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This integrates the PageRank table from #466 into the v3 cred explorer\r\napp, bringing the v3 frontend to better-than-parity with v1!\r\n\r\nTest plan:\r\nSome unit tests were included, and running `yarn start` and inspecting\r\nthe App reveals that it is working correctly. Loading a PageRank result\r\nand then changing the repository no longer triggers a crash :).\r\n\r\nPaired with @wchargin","title":"Integrate PageRank to the v3 cred explorer!","mergedAs":{"type":"COMMIT","hash":"d627475119ed8fea005dc4cb47ab9f2465dc2af1"},"additions":174,"deletions":28},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000469\u0000":{"address":{"type":"PULL","number":"469","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/469","comments":[],"reviews":[{"type":"REVIEW","id":"133437505","pull":{"type":"PULL","number":"469","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\n`yarn start` and `node bin/sourcecred.js start` both still work.\r\n\r\nwchargin-branch: bridge-api","title":"Move Express server API from V1 to bridge","mergedAs":{"type":"COMMIT","hash":"bb75cc54cd75ee00b9bd730501aebdd886798218"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000470\u0000":{"address":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/470","comments":[],"reviews":[{"type":"REVIEW","id":"133437541","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133437597","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"133437602","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The `load` command replaces `plugin-load`. By default, it loads data for\r\nall plugins, and does so in parallel using execDependencyGraph. If\r\npassed the optional `--plugin` flag, then it will load data just for\r\nthat plugin.\r\n\r\nAs an implementation detail, when loading all plugins, load calls itself\r\nwith the plugin flag set.\r\n\r\nUsage:\r\n`node bin/sourcecred.js load repoOwner repoName`\r\n\r\nTest plan:\r\nTested by hand; I blew away my SourceCred directory and then loaded the\r\nexample-github repository.","title":"Add load CLI command","mergedAs":{"type":"COMMIT","hash":"addaf4e2a85607669e979d16d0f48ed0d3dcda02"},"additions":58,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000471\u0000":{"address":{"type":"PULL","number":"471","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/471","comments":[],"reviews":[{"type":"REVIEW","id":"133437875","pull":{"type":"PULL","number":"471","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis could also be moved into the bridge directory, but this way is\r\nmarginally easier, and it doesn’t really matter in the end.\r\n\r\nTest Plan:\r\n`yarn backend` followed by `node bin/sourcecredV3.js start-v3` works.\r\n\r\nwchargin-branch: start-v3","title":"Copy `start` to `start-v3`","mergedAs":{"type":"COMMIT","hash":"0300a805fa867257f653a3801a2162cda17c37bb"},"additions":73,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000472\u0000":{"address":{"type":"PULL","number":"472","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/472","comments":[],"reviews":[{"type":"REVIEW","id":"133438085","pull":{"type":"PULL","number":"472","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Test plan:\r\n`node bin/sourcecred.js load sourcecred example-github` works\r\n`yarn start` works\r\n`node bin/sourcecred.js start-v3` works\r\n`yarn travis --full` passes\r\n\r\nPaired with @wchargin","title":"Delete the `v1` and `v2` directories from #327","mergedAs":{"type":"COMMIT","hash":"efefc73e6bfcfb4faf42ee25c81e34e7a86da06e"},"additions":2,"deletions":19076},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000473\u0000":{"address":{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/473","comments":[{"type":"COMMENT","id":"401571355","parent":{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"133438234","pull":{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThe bridge introduced in #448 has now served its purpose, and may be\r\ndeconstructed. This implements the first part of the last step of the\r\nplan described in that pull request.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nAfter `yarn backend && yarn build`:\r\n  - `node bin/sourcecred.js start` works, and\r\n  - `yarn start` works, and\r\n  - `yarn travis --full` works.\r\n\r\nwchargin-branch: demolish-bridge","title":"Demolish the bridge","mergedAs":{"type":"COMMIT","hash":"23704da7a586bdd715ac1abb720c832c70a56250"},"additions":38,"deletions":58},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000474\u0000":{"address":{"type":"PULL","number":"474","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/474","comments":[],"reviews":[{"type":"REVIEW","id":"133438387","pull":{"type":"PULL","number":"474","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Test plan:\r\n`git grep -i v3` only shows incidental hits in longer strings\r\n`yarn travis --full` passes\r\n`yarn backend` works\r\n`yarn build` works\r\n`yarn start` works\r\n`node bin/sourcecred.js start` works\r\n`node bin/sourcecred.js load sourcecred example-github` works\r\n\r\nPaired with @wchargin","title":"Change `src/v3/` to `src/` and remove v3 naming","mergedAs":{"type":"COMMIT","hash":"24cf35da22acd2f504e55dd7ed81bbd7c49bf999"},"additions":25,"deletions":28},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000475\u0000":{"address":{"type":"PULL","number":"475","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/475","comments":[],"reviews":[{"type":"REVIEW","id":"133443451","pull":{"type":"PULL","number":"475","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It references a non-existent file.\r\n\r\nTest plan: `yarn travis --full` passed.","title":"Remove testsSetup from config/paths","mergedAs":{"type":"COMMIT","hash":"664b8ac8d06d085f9edbbd0119c2dcfe7935b346"},"additions":0,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000477\u0000":{"address":{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/477","comments":[{"type":"COMMENT","id":"402222117","parent":{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"134083821","pull":{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe `^` metacharacter only matches the start of a non-initial line when\r\nthe `m` (“multiline”) flag is set on the RegExp. This flag was set only\r\nfor the GitHub URL RegExp.\r\n\r\nTest Plan:\r\nRegression tests added. They fail before this patch and pass with it.\r\n\r\nwchargin-branch: fix-sol-github-references","title":"Properly detect GitHub references at start of line","mergedAs":{"type":"COMMIT","hash":"6ab78b85da449df024ccc1dc5557da46cb038e9e"},"additions":78,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000478\u0000":{"address":{"type":"PULL","number":"478","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/478","comments":[],"reviews":[{"type":"REVIEW","id":"134084796","pull":{"type":"PULL","number":"478","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe regular expressions used to detect GitHub references were of the\r\nform `/(?:\\W|^)(things)(?:\\W|$)/gm`, where the outer non-capturing\r\ngroups were intended to enforce a word boundary constraint. However,\r\nthis caused reference detection in strings like `\"#1 #2\"` to fail,\r\nbecause the putative matches would be `\"#1 \"` and `\" #2\"`, but these\r\nmatches overlap, and the JavaScript RegExp API (like most such APIs)\r\nfinds only non-overlapping matches. Therefore, in a string of\r\nspace-separated references of the same kind, only every other reference\r\nwould be detected.\r\n\r\nA solution is to use a positive lookahead instead of the second\r\nnon-capturing group: i.e., `/(?:\\W|$)/` becomes `/(?=\\W|$)/`. (Ideally,\r\nthe first non-capturing group would just be a lookbehind, but JavaScript\r\ndoesn’t support those.)\r\n\r\nIn some cases, using `\\b` is a simpler solution. But this does not work\r\nin all cases: for instance, it works for repo-numeric references, but\r\ndoes not work for numeric references, because the presence of the hash\r\nmeans that there cannot be an immediately preceding word boundary. For\r\nconsistency, I opted to use the lookahead solution in all cases, but any\r\nsolution that passes tests is okay with me.\r\n\r\nTest Plan:\r\nRegression tests added. They fail before this patch and pass with it.\r\n\r\nwchargin-branch: fix-space-separated-github-references\r\n","title":"Properly detect space-separated GitHub references","mergedAs":{"type":"COMMIT","hash":"bc9e94b2a14bd00219ad9c2684ffc1e8770acb78"},"additions":63,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000479\u0000":{"address":{"type":"PULL","number":"479","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/479","comments":[],"reviews":[{"type":"REVIEW","id":"134085996","pull":{"type":"PULL","number":"479","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit exposes a function of type `(string): string[]` to\r\nencapsulate the whole Markdown pipeline, from parsing to AST\r\ntransformation to text node extraction. Clients of this module do not\r\nneed to know about `commonmark`.\r\n\r\nTest Plan:\r\nA single comprehensive test case has been added.\r\n\r\nwchargin-branch: text-blocks","title":"Extract contiguous blocks of text from Markdown","mergedAs":{"type":"COMMIT","hash":"a9600d0379ebf55ca4b48150a5c8087da586da1c"},"additions":79,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000480\u0000":{"address":{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/480","comments":[],"reviews":[{"type":"REVIEW","id":"134087406","pull":{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nSee #432. This commit switches the GitHub Markdown parser from matching\r\nregular expressions against the raw post body to matching the same\r\nregular expressions against the semantic text of a Markdown document.\r\nSee test cases for `parseReferences` and `parseMarkdown` for more\r\ndetails.\r\n\r\nThere are no changes to snapshots or cached GitHub data because the\r\nMarkdown in the example repository is simple enough to be properly\r\nparsed by a simple approach that treats everything as literal text.\r\n\r\nThe change to the “finds numeric references in a multiline string” test\r\ncase is to strip leading indentation from the string in question. As\r\npreviously written, the test had four spaces of leading indentation on\r\neach line, causing the Markdown parser to interpret it as a code block,\r\nin turn causing our logic to (correctly) omit it entirely. The revised\r\nversion of the test has no leading indentation.\r\n\r\nTest Plan:\r\nLight unit tests included; these tests are intended to verify that the\r\nactual Markdown logic from `parseMarkdown` is being used, and that file\r\nhas more extensive tests. Additionally, `yarn travis --full` passes.\r\n\r\nwchargin-branch: github-parse-markdown","title":"Parse GitHub references from Markdown text nodes","mergedAs":{"type":"COMMIT","hash":"56d48e254c8349e1180304e7046656d0219e6008"},"additions":62,"deletions":17},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000482\u0000":{"address":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/482","comments":[{"type":"COMMENT","id":"402845120","parent":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134202514","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134202686","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134202749","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134202854","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134204349","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134204366","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Rewrites the README to be a lot more concrete about what SourceCred is\r\ndoing, and to give more up-to-date information overall.\r\n\r\nTest plan: The README includes a small code block with instructions for\r\nturning on a local copy of the Cred Explorer. I ran this on my machine\r\n(inside /tmp) and it worked locally.","title":"Update README","mergedAs":{"type":"COMMIT","hash":"1cda37e91aed1ace0dd690eebe567afdd330e0b7"},"additions":93,"deletions":60},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000484\u0000":{"address":{"type":"PULL","number":"484","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/484","comments":[],"reviews":[{"type":"REVIEW","id":"134481473","pull":{"type":"PULL","number":"484","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nTo verify that the correct graph is loaded, we display the graph’s node\r\nand edge count in the UI. As previously implemented, this would be\r\nrecomputed on every change, requiring iteration over all nodes and edges\r\nof the graph. On my machine (T440s) and the SourceCred graph, this\r\ninduced an ~80ms performance floor for any operations that caused the\r\napp to re-render, which is noticeable.\r\n\r\nThis commit retains the useful information, but computes it only at\r\ngraph load time.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nNote that the behavior is unchanged.\r\n\r\nwchargin-branch: cache-graph-size","title":"Cache graph size in cred explorer app","mergedAs":{"type":"COMMIT","hash":"663367b0c8abc784b11bb0225c720a99216b715e"},"additions":47,"deletions":29},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000485\u0000":{"address":{"type":"PULL","number":"485","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/485","comments":[],"reviews":[{"type":"REVIEW","id":"134482219","pull":{"type":"PULL","number":"485","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nAs we add sliders for adjusting the PageRank parameters, we trigger a\r\nbunch of unneeded renders on `PagerankTable`. As `PagerankTable` is a\r\npure component, we can [mark it and its children as such][1] to see notable\r\nperformance improvements: the `Array.from` and `sort` in its `render`\r\nmethod are showing up on the flamegraph.\r\n\r\n[1]: https://reactjs.org/docs/react-api.html#reactpurecomponent\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests pass, whereas if we instead implement `shouldComponentUpdate`\r\nby `return false` then the interaction tests fail. Also, `yarn start`\r\nseems to behave as expected as we switch among different graphs.\r\n\r\nwchargin-branch: pure-pageranktable","title":"Mark `PagerankTable` components as pure","mergedAs":{"type":"COMMIT","hash":"88cd736dec8a4b67b81d058983d2b406213ccd15"},"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000486\u0000":{"address":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/486","comments":[],"reviews":[{"type":"REVIEW","id":"134483582","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134484633","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134486894","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nPageRank wants an _edge evaluator_: a function mapping an edge to its\r\nto-weight and fro-weight. This commit provides functions for creating\r\nedge evaluators based on the high-level, coarse notions of node and edge\r\ntypes. We use [the formulation described in a comment on #476][1].\r\n\r\nPaired with @decentralion.\r\n\r\n[1]: https://github.com/sourcecred/sourcecred/issues/476#issuecomment-402576435\r\n\r\nTest Plan:\r\nNone. We will add tests later. We promise!\r\n\r\nwchargin-branch: edge-weight-generators\r\n","title":"Evaluate edge weight based on node and edge type","mergedAs":{"type":"COMMIT","hash":"17496764596082335b255952bcf9d7a7ec018ba2"},"additions":60,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000487\u0000":{"address":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/487","comments":[],"reviews":[{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis commit adds sliders for each node and edge type (hard-coded for\r\nnow), and hooks them up to the cred explorer so that re-running PageRank\r\nuses the newly induced edge evaluator.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nWe will add tests later. We promise! In the meantime, the results that\r\nappear when you drag a slider and re-run PageRank seem appropriate. For\r\ninstance, changing the “Git blob” node type from `0.0` to `-10.0`\r\nresults in the Git blobs not dominating the whole view.\r\n\r\nwchargin-branch: configurable-weights-ui","title":"Display a node/edge type weight configuration UI","mergedAs":{"type":"COMMIT","hash":"b5ddead3c2bc477d85bc71b6ed0ac6256b42ef2a"},"additions":194,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000488\u0000":{"address":{"type":"PULL","number":"488","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/488","comments":[],"reviews":[{"type":"REVIEW","id":"134490137","pull":{"type":"PULL","number":"488","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIt looks like this now:\r\n![Screenshot](https://user-images.githubusercontent.com/4317806/42298632-d48094a0-7fbb-11e8-96dd-3d829b50adab.png)\r\n\r\nIf there is not enough space for the edge and node weights to appear\r\nside-by-side, then they will wrap.\r\n\r\nwchargin-branch: make-cred-explorer-nicer","title":"Make the cred explorer look a bit nicer","mergedAs":{"type":"COMMIT","hash":"9b13f3d5bd4727278c0985bde052ab7fa272f213"},"additions":17,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000489\u0000":{"address":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/489","comments":[{"type":"COMMENT","id":"402839812","parent":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134813923","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"134815509","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Previously, when expanding a node in the cred explorer, it would display\r\nthe neighboring nodes, but not any information about the edges linking\r\nto that node. If the same node was reached by multiple edges, this\r\ninformation was not communicated to the user.\r\n\r\nAs of this commit, it now concisely communicates what kind of edge was\r\nconnecting the chosen node to its adjacencies. There's a new `edgeVerb`\r\nmethod that plugin adapters must implement, which gives a\r\ndirection-based verb descriptiong of the edge, e.g. \"authors\" or \"is\r\nauthored by\".\r\n\r\nTest plan:\r\nUnit tests added to the PagerankTable tests, and hand inspection.\r\n\r\nPaired with @wchargin","title":"Display edges in Cred Explorer","mergedAs":{"type":"COMMIT","hash":"8921b5b942f6b9d51604e4578a15f046d3783f0b"},"additions":330,"deletions":102},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000490\u0000":{"address":{"type":"PULL","number":"490","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/490","comments":[],"reviews":[{"type":"REVIEW","id":"134845221","pull":{"type":"PULL","number":"490","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWhen we convert a graph to a Markov chain, each cell in the transition\r\nmatrix is a sum of edge weights from the given `src` to the given `dst`,\r\nplus the synthetic self-loop needed for stability. Performing this sum\r\nloses information: given the transition matrix, a client cannot\r\ndetermine how much a particular edge contributed to the score of a node\r\nwithout redoing the relevant computations. In this commit, we expose the\r\nstructure of these contributions (i.e., edges and synthetic loops).\r\n\r\nThis changes the API of `graphToMarkovChain.js`, but it does not change\r\nthe resulting Markov chains. It also does not change the API of\r\n`pagerank.js`. In particular, clients of `pagerank.js` will not have\r\naccess to the contributions structure that we have just created.\r\n\r\nTest Plan:\r\nExisting unit tests have been updated to use the new API, and pass\r\nwithout change. An additional test is added for a newly exposed\r\nfunction, even though this function is also tested extensively as part\r\nof later downstream tests.\r\n\r\nIn one snapshot, one value changes from `0.25` to `0.25 + 1.7e-16`. The\r\nother values in the enclosing distribution do not change, so I think\r\nthat it is more likely that this is due to floating-point instability\r\nthan an actual bug. (I’m not sure where exactly I commuted or associated\r\nan operation, but it’s quite possible that I may have done so). To\r\ncompensate, I added an additional check that the values in the\r\nstationary distribution sum to `1.0` within `1e-9` tolerance; this check\r\npasses.\r\n\r\nwchargin-branch: expose-contributions","title":"Expose contributions structure of Markov chains","mergedAs":{"type":"COMMIT","hash":"761a44c561c0c2178c52bd439ed94665c90f0a33"},"additions":213,"deletions":44},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000491\u0000":{"address":{"type":"PULL","number":"491","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/491","comments":[],"reviews":[{"type":"REVIEW","id":"134845451","pull":{"type":"PULL","number":"491","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis change is motivated by the behavior of loops, but applies more\r\ngenerally to edges. Previously, a loop would induce two contributions\r\nwith the same contributor, but possibly different weights: one with the\r\nto-weight of the edge and one with the fro-weight. For one, this is\r\nannoying to downstream clients, who would like to use the contributor as\r\na superkey. But it is also somewhat strange that a single contributor\r\ncould have two different weights.\r\n\r\nThe same applies to edges in general: every edge induces two\r\ncontributions with the same contributor, of type `NEIGHBOR`.\r\n\r\nAs of this commit, we replace `NEIGHBOR` with `IN_EDGE` and `OUT_EDGE`,\r\none of each induced by each edge. This has the effect that a contributor\r\nmaps to at most one contribution.\r\n\r\nTest Plan:\r\nExisting unit tests updated.\r\n\r\nwchargin-branch: separate-in-out-edge-contributions","title":"Separate in-edge and out-edge contribution types","mergedAs":{"type":"COMMIT","hash":"47eecef7b2e8021d26e6d195d8cca258dc4c32d9"},"additions":19,"deletions":24},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000492\u0000":{"address":{"type":"PULL","number":"492","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/492","comments":[],"reviews":[{"type":"REVIEW","id":"134878414","pull":{"type":"PULL","number":"492","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nPrettier inserted these in a previous version of the code, but the lines\r\ngot shorter and so Prettier no longer minds if we remove the breaks.\r\n\r\nTest Plan:\r\nshipitquick\r\n\r\nwchargin-branch: remove-line-breaks","title":"Remove some annoying line breaks","mergedAs":{"type":"COMMIT","hash":"50792a7088ec1c39cc3770bbefaa1654ac680c4e"},"additions":8,"deletions":32},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000493\u0000":{"address":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/493","comments":[{"type":"COMMENT","id":"403145427","parent":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"135153703","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"The implementation is similar to the LocalStore usage in\r\n`credExplorer/app.js`. Had to make a spurious refactor from Map to\r\nObject because ES6 maps don't stringify by default, and I didn't feel\r\nlike writing a custom JSON serializer.\r\n\r\nTest plan:\r\nDidn't add unit tests, although at some point we should come up with a\r\nnice LocalStore mock and test LocalStore code. I did, however, manually\r\ntry it out and verify that it works :)\r\n\r\nPaired with @wchargin","title":"Persist Cred Explorer weights in LocalStore","mergedAs":{"type":"COMMIT","hash":"95fca7db17bd56414e11b39d809ae12509289252"},"additions":75,"deletions":59},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000494\u0000":{"address":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/494","comments":[],"reviews":[{"type":"REVIEW","id":"135184051","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"135192414","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit adds another bank of sliders to the cred explorer, for\r\nchanging the directionality of edges. The sliders have the range [0,1]\r\nwith step size of 0.01.\r\n\r\nThe layout is pretty ugly and clearly should be refactored. But playing\r\nwith these sliders is interesting :)\r\n\r\nTest plan: We don't have any unit tests on the WeightConfig, but I did\r\ndrive it by hand. An interesting experiment is to set the AUTHORS edge\r\ndirectionality to 1, so that users get no credit for authoring posts. As\r\nexpected, this utterly tanks the users' scores; many users then have a\r\nscore of -Infinity.\r\n\r\n![image](https://user-images.githubusercontent.com/1400023/42401083-e712d1fa-8128-11e8-83f6-4b0b26b15065.png)\r\n","title":"Add edge direction configuration to Cred Explorer","mergedAs":{"type":"COMMIT","hash":"daf2f9a376a9eff265db9078d45c95505e3f3a4d"},"additions":39,"deletions":10},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000495\u0000":{"address":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/495","comments":[{"type":"COMMENT","id":"403171236","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403186685","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403186716","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"135192800","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’d like to like ES6 `Map`s, because they provide better type safety\r\nthan objects (primarily, `Map.prototype.get` has nullable result type).\r\nHowever, the vanilla APIs are weak. Prominent problems are that `Map`s\r\nalways become `\"{}\"` under `JSON.stringify`, that there is no easy way\r\nto convert between `Map`s and objects, and that there are no functions\r\nto map over the keys and values of `Map`s.\r\n\r\nIn this commit, we add versions of those functions to a utility module.\r\nThe value-level implementations are straightforward, but these functions\r\nnevertheless deserve a utility module because the types are somewhat\r\ntricky to get right. The implementation requires casts through `any`,\r\nand these should be written, analyzed, and proven correct just once. (In\r\nparticular, it would be easy to write an unsound type for `fromObject`.)\r\n\r\nIn a followup commit, we will amend existing portions of the codebase to\r\nuse these functions.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n\r\nwchargin-branch: map-util","title":"Add utilities for working with ES6 Maps","mergedAs":{"type":"COMMIT","hash":"812b2d322e1ca8059af092a3494f1c4b37205e00"},"additions":372,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000496\u0000":{"address":{"type":"PULL","number":"496","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/496","comments":[],"reviews":[{"type":"REVIEW","id":"135192841","pull":{"type":"PULL","number":"496","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese call sites were selected from `git grep Map`. In this commit, we\r\nonly add usage of the utility functions; we do not change any existing\r\nobject types to maps.\r\n\r\nTest Plan:\r\nRunning `yarn travis --full` passes.\r\n\r\nwchargin-branch: use-map-util","title":"Use `MapUtil` functions where appropriate","mergedAs":{"type":"COMMIT","hash":"9a1fee285cc7b1b9ab3c5f15b15cb2424a7020ad"},"additions":40,"deletions":61},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000497\u0000":{"address":{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/497","comments":[{"type":"COMMENT","id":"403188492","parent":{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"135193093","pull":{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nNow that `MapUtil` provides `toObject`/`fromObject`, we can keep storing\r\nweights in localStorage while representing them as ES6 `Map`s in memory.\r\n\r\nHere are some advantages:\r\n  - The code is genuinely more typesafe. While writing this,\r\n    I accidentally wrote `edgeWeights.get(key)`, where `edgeWeights`\r\n    should have been `nodeWeights`. This was caught at compile time, and\r\n    would not have been in the previous version.\r\n  - Relatedly, the code now has zero `any`-casts as opposed to five.\r\n  - The initialization of the default values is not abysmally ugly.\r\n  - Whenever we iterate over these maps, (a) we can use `.entries()`,\r\n    and (b) we don’t have to cast between string keys and semantic keys.\r\n    This simplifies some of the control flow.\r\n  - The extra null-checking on `get` forces us to either think about\r\n    ways in which the check might fail, or reuse a previously fetched\r\n    value that is known to be non-null (perhaps because it came from\r\n    `entries`).\r\n  - A particularly annoying Prettier line-break is avoided. :-)\r\n\r\nHere are some disadvantages:\r\n  - The null-pipelining around the `rehydrate` function is a bit\r\n    annoying. As @decentralion pointed out, what we want here is not a\r\n    default value, but a default value and a function to transform a\r\n    present value. This is Haskell’s `maybe : β → (α → β) → Maybe α → β`\r\n    or Java’s `optional.map(fromObject).orElse(defaultValue)`. This\r\n    commit implements one approach; another is to note that `fromObject`\r\n    is invertible, writing `fromObject(LocalStore.get(k, toObject(d)))`.\r\n  - That’s it, I think?\r\n\r\nTest Plan:\r\nI’ve tested that the sliders for both edge and node weights correctly\r\ninfluence the PageRank behavior, that the component is properly\r\ninitialized with an empty localStorage, and that the component properly\r\nrehydrates from localStorage.\r\n\r\nwchargin-branch: weightconfig-maps\r\n","title":"Use `Map`s in `WeightConfig`","mergedAs":{"type":"COMMIT","hash":"09958e1ee2848400b842ba90b854f3de2fd84b60"},"additions":111,"deletions":100},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000500\u0000":{"address":{"type":"PULL","number":"500","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/500","comments":[],"reviews":[{"type":"REVIEW","id":"135184022","pull":{"type":"PULL","number":"500","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIf we want to snapshot an edge, then none of the available options is\r\nideal:\r\n\r\n  - Snapshotting the edge directly includes literal NUL bytes in the\r\n    snapshot file, so it is treated as binary. This is bad.\r\n\r\n  - Using `edgeToString` works, but all fields of the edge are combined\r\n    into a single string, which is somewhat hard to read.\r\n\r\n  - Using `edgeToParts` works, but each address in the edge takes up a\r\n    lot of visual space: one line per part in the address. This is also\r\n    somewhat hard to read.\r\n\r\nThis commit adds `edgeToStrings`, which simply applies the appropriate\r\n`toString` operation to each field of an edge.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n\r\nwchargin-branch: edge-to-strings","title":"Add `edgeToStrings` for easy snapshotting","mergedAs":{"type":"COMMIT","hash":"099cf69631f607be6126a90ef71a224203c91e63"},"additions":36,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000":{"address":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/501","comments":[{"type":"COMMENT","id":"403171920","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403172215","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403190019","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"135193680","pull":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWhen updating `PagerankTable` to work with contributions, we found it\r\ndifficult to keep track of everything when we tried to do two things\r\nsimultaneously: compute the values to be displayed, and render them\r\nhierarchically. @decentralion suggested computing the relevant data\r\nahead of time, and then having a straightforward React component to\r\nrender this structure. This would incidentally make `PagerankTable`\r\neasier to test.\r\n\r\nThis commit implements that data structure and the function to create\r\nit from a `PagerankResult`. A subsequent commit will update\r\n`PagerankTable` accordingly.\r\n\r\nAs evidence that this structure is well-designed, note that the main\r\ncontents of a contribution row can be rendered entirely from a\r\n`ScoredContribution` datum (though the component will still of course\r\nrequire the full `PagerankNodeDecomposition` to pass down to its\r\nchildren). (At least, I think that it can be!)\r\n\r\nDesigned with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests added. I have checked that the snapshot is structurally\r\ncorrect: each node has contributions with the correct contributors.\r\nI did not manually compute the stationary distribution and check the\r\nsnapshot for correctness. The snapshot is complemented by automated\r\ntests.\r\n\r\nwchargin-branch: pagerank-node-decomposition\r\n","title":"Add `pagerankNodeDecomposition` to ease rendering","mergedAs":{"type":"COMMIT","hash":"b2a70f605cdbc1412b938e4ec4478cb33d136684"},"additions":398,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000503\u0000":{"address":{"type":"PULL","number":"503","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/503","comments":[],"reviews":[{"type":"REVIEW","id":"135195104","pull":{"type":"PULL","number":"503","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"There's no sense having a landing page with no content and\r\na nav bar with only one meaningful option. We can re-add\r\nthem later if we actually need navigation\r\n\r\nTest plan: Local testing","title":"Remove useless nav bar, always load cred explorer","mergedAs":{"type":"COMMIT","hash":"1689c46f20a8b4021e07fbbc66b1999b7ca940b4"},"additions":1,"deletions":28},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000504\u0000":{"address":{"type":"PULL","number":"504","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/504","comments":[],"reviews":[{"type":"REVIEW","id":"135589958","pull":{"type":"PULL","number":"504","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: travis","title":"Rename PagerankResult to NodeDistribution","mergedAs":{"type":"COMMIT","hash":"fed58aee7b14e9d0d0e183da7cca8bf0e358cba4"},"additions":23,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000505\u0000":{"address":{"type":"PULL","number":"505","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/505","comments":[],"reviews":[{"type":"REVIEW","id":"135599866","pull":{"type":"PULL","number":"505","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit adds a module with four functions: `get`, `orThrow`, `map`,\r\nand `orElse`.\r\n\r\nHere is a common pattern wherein `get` is useful:\r\n\r\n```js\r\nsortBy(Array.from(map.keys()), (x) => {\r\n  const result = map.get(x);\r\n  if (result == null) {\r\n    throw new Error(\"Cannot happen\");\r\n  }\r\n  return result.score;\r\n});\r\n\r\n// versus\r\n\r\nsortBy(Array.from(map.keys()), (x) => NullUtil.get(map.get(x)).score)\r\n```\r\n\r\n(The variant `orThrow` allows specifying a custom message that is only\r\ncomputed in the case where the error will be thrown.)\r\n\r\nHere is a common pattern where `map` is useful:\r\n\r\n```js\r\narr.map((x) => {\r\n  const result = complicatedComputation(x);\r\n  return result == null ? result : processResult(result);\r\n});\r\n\r\n// versus\r\n\r\narr.map((x) => NullUtil.map(complicatedComputation(x), processResult))\r\n```\r\n\r\nIn each of these cases, by using these functions we gain a dose of\r\nsafety in addition to our concision: it is tempting to “shorten” the\r\nexpression `x == null ? y : z` to simply `x ? y : z`, while forgetting\r\nthat the latter behaves incorrectly for `0`, `false`, `\"\"`, and `NaN`.\r\nSimilar patterns like `x || defaultValue` also suffer from this problem,\r\nand can now be replaced with `orElse`.\r\n\r\nDesigned with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests included; run `yarn travis`.\r\n\r\nwchargin-branch: null-util","title":"Add utilities for working with nullable types","mergedAs":{"type":"COMMIT","hash":"4af8ff2471d715ef7136fc9b7756e2ee548cd6c5"},"additions":210,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000506\u0000":{"address":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/506","comments":[{"type":"COMMENT","id":"403627338","parent":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"403627372","parent":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"135601724","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"135641686","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe aesthetically nicest win is in `WeightConfig`. Other changes are\r\nnice to have.\r\n\r\nIn many cases, we reduce the specificity of error messages thrown. For\r\ninstance, if an invariant was violated on an edge `e`, then we might\r\nhave thrown an error with message `EdgeAddress.toString(e.address)`. But\r\nwe did so not because we thought that this was genuinely worth it, but\r\nonly because we were forced to explicitly throw an error at all. These\r\nerrors should never be hit, anyway, so we don’t feel bad about replacing\r\nthese with errors that are simply the string `\"null\"` or `\"undefined\"`,\r\nas appropriate.\r\n\r\nTest Plan:\r\nRunning `yarn travis --full` passes, and the cred explorer still seems\r\nto work with both populated and empty `localStorage`.\r\n\r\nwchargin-branch: use-null-util","title":"Use `NullUtil` functions where appropriate","mergedAs":{"type":"COMMIT","hash":"bb7b538f44b7cd0042e8b846fb64050570bdfada"},"additions":37,"deletions":88},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000507\u0000":{"address":{"type":"PULL","number":"507","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/507","comments":[],"reviews":[{"type":"REVIEW","id":"135651404","pull":{"type":"PULL","number":"507","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nThis commit hooks up the PageRank table to the PageRank node\r\ndecomposition developed previously. The new cred explorer displays one\r\nentry per contribution to a node’s cred (i.e., one entry per in-edge,\r\nper out-edge, and per synthetic loop), listing the proportion of the\r\nnode’s cred that is provided by this contribution. This makes it easy to\r\nobserve facts like, “90% of this issue’s cred is due to being written by\r\na particular author”.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nUnit tests added; run `yarn travis`.\r\n\r\nwchargin-branch: pagerank-table-node-decomposition","title":"Show PageRank node decomposition in the explorer","mergedAs":{"type":"COMMIT","hash":"ab0fa81a4034a2750c76a692177a1e4749415eaa"},"additions":731,"deletions":580},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000508\u0000":{"address":{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/508","comments":[{"type":"COMMENT","id":"408281371","parent":{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"These APIs are for applying weights to nodes and edges in the graph, so\r\nas to implement weighted PageRank as described in #476. As yet, we\r\nare reasonably confident what the type signatures should be, but do not\r\nknow what functions will get the theoretical properties we want.\r\n\r\nFor now, I've implemented placeholder implementations. These are clearly\r\ndeficient in some ways, but at least allow us to start experimenting.\r\n\r\nPaired with @wchargin.\r\n\r\nTest plan:\r\nNo tests were added, as the code modifies prototype parts of our\r\ncodebase that are, themselves, not yet tested, and because we already\r\nknow these functions have bad semantics.\r\n\r\nTo ensure that this commit is reasonably correct, I experimented with\r\nchanging node/edge weights in the UI and verified that PageRank results\r\nchanged as expected.\r\n\r\n(for emphasis): #476 has all the context on this PR.","title":"Create `EdgeEvaluator` and `NodeEvaluator` APIs","mergedAs":null,"additions":82,"deletions":34},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000510\u0000":{"address":{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/510","comments":[{"type":"COMMENT","id":"407183262","parent":{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"139634024","pull":{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This sequence of commits is best reviewed individually.","title":"Create a static site","mergedAs":{"type":"COMMIT","hash":"9a356f88a1849cd0ef4f59f0cc6a099c7a28796a"},"additions":376,"deletions":311},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000511\u0000":{"address":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/511","comments":[],"reviews":[{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The WeightConfig is a power user feature. Now that we're building a\r\npublic-facing demo out of the Cred Explorer, it will be better to hide\r\nthe weight configuration by default.\r\n\r\nThis commit adds a button for showing/hiding the weight configuration.\r\nThe weights are still propagated correctly regardless of whether the\r\nweight config is shown.\r\n\r\nTest plan:\r\n- Ensure that the site loads with weights hidden by default.\r\n- Ensure that clicking the button causes the weight config to display.\r\n- Ensure that PageRank loads and displays correctly with the weights\r\nhidden.\r\n- Ensure that changes to the weight config still propagate to PageRank\r\n(with weights hidden or not hidden).","title":"Allow expanding/hiding the WeightConfig","mergedAs":{"type":"COMMIT","hash":"943d04cc701e35e060d82418b050438e778eb9e1"},"additions":34,"deletions":17},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000512\u0000":{"address":{"type":"PULL","number":"512","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/512","comments":[],"reviews":[{"type":"REVIEW","id":"139676744","pull":{"type":"PULL","number":"512","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"- PluginAdapters no longer expose a Renderer; instead, the render\r\nmethods are inlined on the PluginAdapter. The extra abstraction didn't\r\nprovide any lift in the current architecture.\r\n\r\n- The edgeVerb function has been removed.\r\n\r\n- PluginAdapters now enumerate EdgeTypes. Each has a prefix, and a\r\nforward and a backward name.\r\n\r\nTest plan: `yarn travis`, plus manual testing of the frontend and the\r\nweight config.","title":"Refactor PluginAdapter abstraction","mergedAs":{"type":"COMMIT","hash":"3c14ef8a43f0dd98c7d79de5f700b0fe64a56b56"},"additions":105,"deletions":111},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000513\u0000":{"address":{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/513","comments":[],"reviews":[{"type":"REVIEW","id":"139678853","pull":{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In some cases (e.g. WeightConfig) we want to have information from the\r\nPluginAdapater before loading any data from the server. In other cases,\r\nwe need to combine the PluginAdapater with actual data, e.g. so we can\r\nget the description of a GitHub node.\r\n\r\nTo support this, we split the PluginAdapter into a Static and Dynamic\r\ncomponent. The Dynamic component has data needed to give node\r\ndescriptions, etc. Given a static adapter, you can get a promise to load\r\nthe dynamic adapter. Given the dynamic adapter, you can immediately get\r\nthe static adapter. (There's a parallel to NodeReference (static) and\r\nNodePorcelain (dynamic)).\r\n\r\nTest plan:\r\nTravis passes, as does manual testing of the frontend.","title":"Split PluginAdapter into Dynamic and Static parts","mergedAs":{"type":"COMMIT","hash":"2a3984444531764a91443b6a8e3b1d84aef5e538"},"additions":184,"deletions":139},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000514\u0000":{"address":{"type":"PULL","number":"514","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/514","comments":[],"reviews":[{"type":"REVIEW","id":"139674269","pull":{"type":"PULL","number":"514","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe don’t need this to be a “progressive web app”—certainly not now. The\r\nn+1 caching problem is not a good tradeoff for us, and furthermore\r\nservice workers are causing flashes of content on server-side rendered\r\npages.\r\n\r\nThis commit is a quick fix to remove them. We can remove the code\r\nentirely if we want, or just keep it as is.\r\n\r\nTest Plan:\r\nOn a machine has the service worker registered, run `yarn build`, then\r\n`node bin/sourcecred.js start`. Note in the network panel that the\r\nservice worker is loaded on the first page load, but then deregistered.\r\nOn subsequent refreshes, it should not activate. In the “Application”\r\npanel of the Chrome dev tools, it should appear as “deleted”.\r\n\r\nwchargin-branch: disable-sw","title":"Disable service workers","mergedAs":{"type":"COMMIT","hash":"28100275c4f666ee62a00bec30218cfff3b4f960"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000515\u0000":{"address":{"type":"PULL","number":"515","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/515","comments":[],"reviews":[{"type":"REVIEW","id":"139680075","pull":{"type":"PULL","number":"515","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Previously, WeightConfig hackily contained its own enumeration of all\r\nnode and edge types. Now, it loads them from the StaticPluginAdapter.\r\n\r\nTest plan:\r\nUnit tests pass, as does manual inspection of the frontend.","title":"WeightConfig loads from plugin adapters","mergedAs":{"type":"COMMIT","hash":"94a023ef6f3d917cf3e3c21ca8b18b5e01dc1720"},"additions":26,"deletions":28},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000516\u0000":{"address":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/516","comments":[],"reviews":[{"type":"REVIEW","id":"140042088","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140045982","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We want the UI to offer a list of available repositories, rather than\r\nusing a text input box. To do this, we first need the backend to include\r\na registry of all available repositories.\r\n\r\nTest plan:\r\nSadly we don't have CLI testing, so I manually verified this by doing\r\nthe following:\r\n\r\n```\r\n$ rm -r $SOURCECRED_DIRECTORY\r\n$ node bin/sourcecred.js load sourcecred example-github\r\n$ cat $SOURCECRED_DIRECTORY/repositoryRegistry.json\r\n{\"sourcecred/example-github\":true}\r\n$ node bin/sourcecred.js load sourcecred example-github\r\n$ cat $SOURCECRED_DIRECTORY/repositoryRegistry.json\r\n{\"sourcecred/example-github\":true}\r\n$ node bin/sourcecred.js load sourcecred example-git\r\n$ cat $SOURCECRED_DIRECTORY/repositoryRegistry.json\r\n{\"sourcecred/example-git\":true,\"sourcecred/example-github\":true}\r\n```","title":"Add a registry of loaded repositories","mergedAs":{"type":"COMMIT","hash":"cd6c869d84c730e2b9d2a7ccbcace9c1ba5b7622"},"additions":31,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000518\u0000":{"address":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/518","comments":[],"reviews":[{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140052785","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"Update the README to contain contributing section.","title":"README: Adding contribution section","mergedAs":{"type":"COMMIT","hash":"854fd817c051b5e730ac8712ef05ef603586ac79"},"additions":24,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000519\u0000":{"address":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/519","comments":[],"reviews":[{"type":"REVIEW","id":"140100904","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140099222","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe PageRank functions can take a long time to compute. We’d like them\r\nto not lock the browser, and we’d also like them to communicate with\r\ntheir clients (e.g., to update a progress bar). This code updates\r\n`findStationaryDistribution` and downstream `pagerank` to return\r\npromises.\r\n\r\nTest Plan:\r\nUnit tests updated. The cred explorer (`yarn start`) still works.\r\nApplying\r\n\r\n```diff\r\ndiff --git a/src/core/attribution/markovChain.js b/src/core/attribution/markovChain.js\r\nindex 2acce9c..c7a7159 100644\r\n--- a/src/core/attribution/markovChain.js\r\n+++ b/src/core/attribution/markovChain.js\r\n@@ -166,6 +166,7 @@ export function findStationaryDistribution(\r\n           return;\r\n         }\r\n       } while (Date.now() - start < yieldAfterMs);\r\n+      console.log(\"Yielding.\");\r\n       setTimeout(tick, 0);\r\n     };\r\n     tick();\r\n```\r\n\r\ncauses the appropriate log messages to be printed in the browser—about\r\nonce every ten iterations for `sourcecred/sourcecred`.\r\n\r\nwchargin-branch: asynchronous-pagerank","title":"Make PageRank functions asynchronous","mergedAs":{"type":"COMMIT","hash":"4435a3cfadded98e8db34736134d38f2dcc1bf1f"},"additions":144,"deletions":102},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000520\u0000":{"address":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/520","comments":[],"reviews":[{"type":"REVIEW","id":"140101798","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140129306","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit switches to a double-buffered PageRank implementation. When\r\nbenchmarked on `ipfs/js-ipfs`, the critical section improves from\r\n3059 ms to 2433 ms (79.5% of original), and peak heap usage drops from\r\n342 MB to 207 MB. (Tested non-rigorously in Chrome 67.)\r\n\r\nTest Plan:\r\nExisting unit tests for `sparseMarkovChainAction`,\r\n`findStationaryDistribution`, and `pagerank` are sufficient.\r\n\r\nwchargin-branch: pagerank-dbuf","title":"Reduce memory pressure by double-buffered PageRank","mergedAs":{"type":"COMMIT","hash":"77fa29320c5270005f1bc8b2a213e303da21047b"},"additions":21,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000521\u0000":{"address":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/521","comments":[{"type":"COMMENT","id":"407603194","parent":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140131662","pull":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe’d really like to be able to test components that use `LocalStore`. We\r\ncan do this by dependency-injecting the storage backend. This commit\r\nbegins that process by extracting `LocalStore` to its interface,\r\npreserving the unique existing implementation.\r\n\r\nwchargin-branch: extract-localstore","title":"Extract a `LocalStore` interface","mergedAs":{"type":"COMMIT","hash":"1fa039ba6c598e17516098117ba441ae98235372"},"additions":32,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000522\u0000":{"address":{"type":"PULL","number":"522","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/522","comments":[],"reviews":[{"type":"REVIEW","id":"140132026","pull":{"type":"PULL","number":"522","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit modifies components that directly depend on the\r\nbrowser-specific local store implementation to instead have their\r\ndependencies injected.\r\n\r\nTest Plan:\r\nTests pass, but are likely not sufficient. Manual testing indicates that\r\nthe local storage still works, for both reads and writes, on a fresh\r\nprofile or with existing data, for both the repository owner/name and\r\nthe weight configuration.\r\n\r\nwchargin-branch: di-localstore","title":"Dependency-inject `LocalStore`","mergedAs":{"type":"COMMIT","hash":"801b4ec7008848e6037d04e851b8cdc410792c85"},"additions":55,"deletions":29},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000523\u0000":{"address":{"type":"PULL","number":"523","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/523","comments":[],"reviews":[{"type":"REVIEW","id":"140132409","pull":{"type":"PULL","number":"523","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis provides some extra checking around `LocalStore` calls. In\r\nparticular, it fails fast on the nasty bug where storing a `Map`\r\nactually stores the empty object (`JSON.stringify(new Map()) === \"{}\"`).\r\nSimilarly, retrieving a value that was stored as `undefined` will raise\r\nan error, because `JSON.parse(JSON.stringify(undefined))` raises an\r\nerror.\r\n\r\nThis should have negligible performance impact—local storage access\r\nshould never be on a critical path. We can choose to elide this in\r\nproduction if we want.\r\n\r\nTest Plan:\r\nUnit tests added. Manual testing of the cred explorer yields no errors.\r\n\r\nwchargin-branch: checked-local-store","title":"Add a `checkedLocalStore` implementation","mergedAs":{"type":"COMMIT","hash":"d0906eed16a36c4b754dbbe8406923cf8d87ca7f"},"additions":138,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000524\u0000":{"address":{"type":"PULL","number":"524","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/524","comments":[],"reviews":[{"type":"REVIEW","id":"140132659","pull":{"type":"PULL","number":"524","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe can use this in tests. If need be, we can enhance this class to allow\r\nsimulating failures, low storage limits, etc., but just having a pure\r\nimplementation at all is all we need right now.\r\n\r\nTest Plan:\r\nUnit tests added.\r\n\r\nwchargin-branch: memory-local-store","title":"Add a `memoryLocalStore` implementation","mergedAs":{"type":"COMMIT","hash":"0489ff8844016e5bfaff7de0da3d6f08199a349b"},"additions":65,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000525\u0000":{"address":{"type":"PULL","number":"525","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/525","comments":[],"reviews":[{"type":"REVIEW","id":"140132674","pull":{"type":"PULL","number":"525","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis resolves a TODO. It’s not urgent, but it’s good practice.\r\n\r\nwchargin-branch: use-memory-local-store","title":"Use `MemoryLocalStore` for existing tests","mergedAs":{"type":"COMMIT","hash":"c0da12af6ea55e4fb7080c6c32c7e533f59420a9"},"additions":2,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000526\u0000":{"address":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/526","comments":[{"type":"COMMENT","id":"407607974","parent":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140133072","pull":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140143587","pull":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nMight as well have runtime type safety, in case we accidentally try to\r\nstore any more `Map`s or `undefined`s.\r\n\r\nTest Plan:\r\nTests pass, but are likely not sufficient. Manual testing indicates that\r\nthe local storage still works, for both reads and writes, on a fresh\r\nprofile or with existing data, for both the repository owner/name and\r\nthe weight configuration.\r\n\r\nwchargin-branch: use-checked-local-store","title":"Use `CheckedLocalStore` in the cred explorer","mergedAs":{"type":"COMMIT","hash":"8655838b2c941bb8feac57254577e2df2cfc72fa"},"additions":8,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000527\u0000":{"address":{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/527","comments":[{"type":"COMMENT","id":"408283268","parent":{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140926454","pull":{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nTest code should probably always use a checked, memory-backed local\r\nstorage implementation. This endpoint will help users not forget to\r\ninclude the checks.\r\n\r\nwchargin-branch: test-local-store","title":"Extract a `TestLocalStore`","mergedAs":{"type":"COMMIT","hash":"e0c97fee9e0ef50cc17fed8840306ffa52e78815"},"additions":10,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000528\u0000":{"address":{"type":"PULL","number":"528","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/528","comments":[],"reviews":[{"type":"REVIEW","id":"140926801","pull":{"type":"PULL","number":"528","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also add config/jest/setupJest.js so we can configure jest-fetch-mock\r\n\r\nTest plan: I have verified that mocked fetch works as expected in a\r\ndownstream commit.","title":"Add jest-fetch-mock as dev dependency","mergedAs":{"type":"COMMIT","hash":"e06b88364ec1363cddc085f3400b153a9e637dfd"},"additions":22,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000529\u0000":{"address":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/529","comments":[],"reviews":[{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966399","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966409","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966415","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966440","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966466","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966475","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966521","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140966680","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Context: The Cred Explorer loads data (currently on a per-repository\r\nbasis) that has previously been prepared by running the \r\n`sourcecred load` cli command.\r\n\r\nCurrently, to select a repository to load, the user must manually type\r\nthe repository owner and name. This is a confusing UI, because it\r\nsuggests that any repository may be chosen, when in fact only repos\r\nalready loaded into the data store are available. The user is given no\r\nfeedback as to which repositories are valid options.\r\n\r\nAs of #516, the backend stores a registry listing available\r\nrepositories. This commit adds a `RepositorySelect` component which\r\nloads the available from that registry, and makes them available in a\r\ndropdown, in sorted order.\r\n\r\nWhen the user manually selects one of the repositories, that selection\r\nis persisted into localStorage and respected on future loads. If the\r\nuser hasn't made such a choice, then the first repository is selected by\r\ndefault.\r\n\r\nThe implementation is highly influenced by testability considerations.\r\nThe default export, `<RepositorySelect onChange={} localStore={} />`, is\r\npretty straightforward. The `RepositorySelect` is somewhat cumbersome to\r\ntest because it asynchronously fetches data and then updates its state,\r\nwhich affects the render output. So as to avoid testing inside async\r\nreact components wherever possible, I've factored out:\r\n\r\n* `loadStatus`, which uses fetch and localStore to get the status of the\r\nselector.\r\n* `PureRepositorySelect`, which just renders a `Status`, such as\r\nloading, failure, or valid\r\n* `LocalStoreRepositorySelect`, which wraps the `PureRepositorySelect`\r\nwith logic to bind the repository select to localStore on change.\r\n\r\nTest plan: Extensive unit tests were added. Also, to ensure that the\r\ntests were testing the right thing, I manually tested:\r\n- attempting to load invalid registry\r\n- attempting to load with no registry\r\n- attempting to load with empty registry\r\n- loading without valid localStore\r\n- changing the setting via dropdown\r\n- loading from localStore after changing the dropdown\r\n\r\nAnd all behavior was as expected.\r\n\r\nThanks to @wchargin for considerable help testing this PR.","title":"Convert Explorer repository selection to dropdown","mergedAs":{"type":"COMMIT","hash":"f110114833548253fd6a2e057bbee757af8d7d4c"},"additions":571,"deletions":54},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000530\u0000":{"address":{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/530","comments":[{"type":"COMMENT","id":"408283912","parent":{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140960751","pull":{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: Travis","title":"Fix a mistake in the implementation of #527","mergedAs":{"type":"COMMIT","hash":"e36a7c1af20ee23f1f9b448538991d44cd3328f0"},"additions":5,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000531\u0000":{"address":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/531","comments":[{"type":"COMMENT","id":"408311565","parent":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140980343","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141195970","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141196060","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141196333","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In #529, I made the cred explorer populate a dropdown with the list of\r\nrepositories that are available to explore. That dropdown defaults to\r\nselecting the alphabetically first repository.\r\n\r\nThis has an unfortunate consequence in that it makes it impossible for\r\nus to explicitly set a default - for example, we would like\r\nsourcecred.github.io/explorer to show sourcecred/sourcecred by default,\r\nbut instead it shows example-git.\r\n\r\nSo that we can choose the default, I've changed the logic so that it\r\ninstead shows the most-recently-loaded data first. This required\r\na breaking change to the repoRegistry serialized format, so I've also\r\nrefactored the module to use compat, which I should have done from the\r\nbeginning.\r\n\r\nTest plan:\r\nUnit tests for the repo selector are updated. The CLI load command\r\nunfortunately has no tests, so I manually tested that it always provides\r\nthe lastest repository last, and appropriately handles the case where\r\nthe same repository is loaded multiple times.","title":"Default to selecting last loaded repository","mergedAs":{"type":"COMMIT","hash":"aa3382a8b24d852db4944fc9125739f1eb8c6312"},"additions":136,"deletions":60},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000532\u0000":{"address":{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/532","comments":[{"type":"COMMENT","id":"408304630","parent":{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"140979452","pull":{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"This copies the deploy script from sourcecred/sourcecred.github.io into\r\nthe sourcecred/sourcecred repository. It's been modified to reflect the\r\nfact that it is no longer run from within the sourcecred.github.io\r\nrepository.\r\n\r\nWe’re moving this script into the main SourceCred repository so that it\r\ncan be versioned in the same tree as everything else, and in particular\r\nso that the hash-of-built-commit depends on the build script itself.\r\n\r\nThe script was originally created by @wchargin in\r\nhttps://github.com/sourcecred/sourcecred.github.io/pull/1 at hash\r\ne8bc5b669b31df34b439b194cb62af4fd9a789d8, subsequently modified in\r\nhttps://github.com/sourcecred/sourcecred.github.io/pull/2 and\r\nhttps://github.com/sourcecred/sourcecred.github.io/pull/3 and\r\nhttps://github.com/sourcecred/sourcecred.github.io/pull/4\r\n\r\nPaired with @wchargin\r\n\r\nTest plan: Ran locally (on dry-run) and inspected output.\r\n","title":"Import the sourcecred.github.io deploy script","mergedAs":{"type":"COMMIT","hash":"a0c07bf0d7619d602649fb2a417599e70e9c5a82"},"additions":146,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000533\u0000":{"address":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/533","comments":[],"reviews":[{"type":"REVIEW","id":"140980599","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"140980613","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Showing our example-github and example-git repos on sourcecred.github.io\r\nis not particularly interesting. Let's show ipfs/js-ipfs instead!\r\n\r\nSince sourcecred/sourcecred is the last repo to load, as of #531 it will\r\nbe the default option.\r\n\r\nTest plan: Dry run of deploy script","title":"Modify sourcecred.github.io's example repos","mergedAs":{"type":"COMMIT","hash":"e845e8cbbcd5984926a6628d10dfbd20988f0820"},"additions":1,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000535\u0000":{"address":{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/535","comments":[],"reviews":[{"type":"REVIEW","id":"141216698","pull":{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141298181","pull":{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin suggested displaying scores this way. This way, lowest scores\r\nare best, and higher scores are worse. This is a little\r\ncounterintuitive, but maybe less counterintuitive than the current\r\napproach, which arbitrarily adds 10 to scores to keep them non-negative,\r\nand results in an arbitrary crossing point where scores become negative\r\nwithout any particular significance.\r\n\r\nTest plan: Travis, and manual inspection of the frontend.\r\n\r\n![image](https://user-images.githubusercontent.com/1400023/43338472-4d9822b4-918b-11e8-883b-bb7f622b3373.png)","title":"Display cred explorer scores as -Log(score)","mergedAs":{"type":"COMMIT","hash":"49da7cfdb06f3185c969f3f4bc22896d11fe48eb"},"additions":3,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000536\u0000":{"address":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/536","comments":[{"type":"COMMENT","id":"408512022","parent":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141234490","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141243296","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141257878","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Currently, the GitHub graph fetcher will characteristically fail if:\r\n1. it times out GitHub's server\r\n2. it triggers the semidocumented abuse detection mechanism\r\n\r\nIn case 1, an intelligible error is posted to the console. In case 2, it\r\nproduces an unintelligible TypeError, because the response is not a\r\nvalid GraphQL response (the error field is not populated; it has a\r\ncustom message instead).\r\n\r\nAs of this commit, we gracefully catch both cases, and print a message\r\nto console directing the user to #350, which has context on GitHub query\r\nfailures. This new catch works because in case 2, the data field is\r\nempty, so we now properly recognize `x.data === undefined` as an error\r\ncase.\r\n\r\nThanks to @wchargin for the investigatory work behind this commit.\r\n\r\nFixes #223.\r\n\r\nTest plan:\r\nWe don't have unit tests that cover this case, but I did manually test\r\nit by asking GitHub to fetch `ipfs/go-ipfs`, which consistently fails.\r\nI also tested it by using an invalid length-40 GitHub API token.","title":"Improve error messages when GitHub query fails","mergedAs":{"type":"COMMIT","hash":"b61b8fbdb88a64192ca837550b7a53e6c27a90e0"},"additions":9,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000537\u0000":{"address":{"type":"PULL","number":"537","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/537","comments":[],"reviews":[{"type":"REVIEW","id":"141240170","pull":{"type":"PULL","number":"537","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Flow types regenerated via flow-typed install jest@23.4.1\r\n\r\nTest plan: Travis","title":"Upgrade jest to 23.4.1","mergedAs":{"type":"COMMIT","hash":"797fb6331da80745063ad688d4893ac637222a3e"},"additions":1849,"deletions":431},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000538\u0000":{"address":{"type":"PULL","number":"538","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/538","comments":[],"reviews":[{"type":"REVIEW","id":"141240610","pull":{"type":"PULL","number":"538","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThere have been a couple of occasions on which we’ve considered using\r\nit, but didn’t want to require from `app/`.\r\n\r\nTest Plan:\r\nUnit tests added, with full coverage.\r\n\r\nwchargin-branch: extract-dedent","title":"Extract `dedent` to `util`, adding tests","mergedAs":{"type":"COMMIT","hash":"4058a3fd85677669f978ba8d11e3b1e2f3903bcd"},"additions":48,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000539\u0000":{"address":{"type":"PULL","number":"539","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/539","comments":[],"reviews":[{"type":"REVIEW","id":"141240100","pull":{"type":"PULL","number":"539","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: Travis","title":"Remove unused tensorflowjs dependency","mergedAs":{"type":"COMMIT","hash":"6b13ab64a077c735c99d4a1d9a82b5f869d59876"},"additions":0,"deletions":11},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000540\u0000":{"address":{"type":"PULL","number":"540","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/540","comments":[],"reviews":[{"type":"REVIEW","id":"141243215","pull":{"type":"PULL","number":"540","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit is a good faith effort to separate our dependencies (code\r\nthat SourceCred app or CLI require to run) from devDependencies (all\r\nother deps) in our package.json.\r\n\r\nWe don't have any actual dependents, so it's hard to test this\r\ndistinction. Hence, it's a good faith effort.\r\n\r\nTest plan:\r\n`rm -r node_modules && yarn && yarn travis` works.","title":"Reorganize dependencies and devDependencies","mergedAs":{"type":"COMMIT","hash":"28a31cfcd67cc00eb16355fa68899669cfd632a6"},"additions":25,"deletions":25},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000541\u0000":{"address":{"type":"PULL","number":"541","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/541","comments":[],"reviews":[{"type":"REVIEW","id":"141254877","pull":{"type":"PULL","number":"541","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: `yarn travis --full`, as well as thorough manual frontend\r\ntesting","title":"Upgrade react and react-dom to latest","mergedAs":{"type":"COMMIT","hash":"deaba09d0003466693efbaeeeeff4b6fb01ca228"},"additions":8,"deletions":8},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000542\u0000":{"address":{"type":"PULL","number":"542","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/542","comments":[],"reviews":[{"type":"REVIEW","id":"141275421","pull":{"type":"PULL","number":"542","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This required adding a [files property] to the package.json,\r\notherwise oclif started complaining.\r\n\r\nTest plan: I manually tested both CLI commands, and they seem fine.\r\n\r\n[files property]: https://docs.npmjs.com/files/package.json#files","title":"Upgrade oclif packages to latest","mergedAs":{"type":"COMMIT","hash":"ec5b76a83de11461b92b212da3d43dbf749cdcbf"},"additions":37,"deletions":27},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000543\u0000":{"address":{"type":"PULL","number":"543","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/543","comments":[],"reviews":[{"type":"REVIEW","id":"141284463","pull":{"type":"PULL","number":"543","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Modifies the PluginAdapter interface so that NodeTypes come with\r\ndefault weights, and modify the WeightConfig so that it loads those\r\nNodeTypes as the default weights.\r\n\r\nThe new weight choices are not super principled, but are clearly better\r\nthan the uniform default. Now, projects find that most pull requests are\r\nmore valuable than most git blobs. :)\r\n\r\nSadly, the WeightConfig does not yet have any tests, so there are no\r\ntest changes.\r\n\r\nTest plan: I manually verified that it works as expected, by clearing\r\napplication data and reloading the cred explorer.","title":"Add default weights for node types","mergedAs":{"type":"COMMIT","hash":"126fdb69dcd1664c8ed9d9ac403abdef5e3117b5"},"additions":31,"deletions":16},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000544\u0000":{"address":{"type":"PULL","number":"544","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/544","comments":[],"reviews":[{"type":"REVIEW","id":"141287900","pull":{"type":"PULL","number":"544","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Some slight changes were needed to the other test code to avoid spurious\r\nerrors. Specifically, we now always set up a mocked fetch response in\r\nnon-failure cases, even if we don't wait for it to resolve.\r\n\r\nTest plan: I manually tested it, also see the new unit tests.\r\n","title":"When repo registry fails, error to console","mergedAs":{"type":"COMMIT","hash":"0b0815eb1282ba223e3d3f499adadcd706ce5909"},"additions":23,"deletions":5},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000545\u0000":{"address":{"type":"PULL","number":"545","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/545","comments":[],"reviews":[{"type":"REVIEW","id":"141287256","pull":{"type":"PULL","number":"545","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We should really do this as a matter of course on all frontend testing.\r\nNot sure what the right pattern is for ensuring that.\r\n\r\nTest plan: Travis","title":"RepositorySelect tests verify no console errors","mergedAs":{"type":"COMMIT","hash":"294616b556d12c7b83d7a5f0474f6956d25b5adc"},"additions":11,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000546\u0000":{"address":{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/546","comments":[{"type":"COMMENT","id":"408556702","parent":{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141288925","pull":{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn addition to a routine libdef update, we also need to work around a\r\nparticularly nasty new bug in Flow, which requires `any`-casts that are\r\neven more unsafe than usual. That said, I think that it’s worth that\r\ncost to remain up to date with Flow, so that we can amortize future such\r\nissues.\r\n\r\nTest Plan:\r\nRunning `yarn travis --full` passes.\r\n\r\nwchargin-branch: upgrade-flow-v0.76.0","title":"Upgrade Flow to v0.76.0","mergedAs":{"type":"COMMIT","hash":"873eca6350b902766d6dcc6635ea89e9530a70bf"},"additions":18,"deletions":11},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000547\u0000":{"address":{"type":"PULL","number":"547","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/547","comments":[],"reviews":[{"type":"REVIEW","id":"141289019","pull":{"type":"PULL","number":"547","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan: Unit tests included, plus I manually tested it.","title":"RepositorySelect displays NO_REPOS on 404","mergedAs":{"type":"COMMIT","hash":"e669e89315c3658b5bb60d92b31f34bbd9537f0b"},"additions":10,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000548\u0000":{"address":{"type":"PULL","number":"548","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/548","comments":[],"reviews":[{"type":"REVIEW","id":"141298177","pull":{"type":"PULL","number":"548","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nGenerated with `flow-typed install --skip --overwrite`.\r\n\r\nTest Plan:\r\nAmazingly, `yarn flow` passes. Go team.\r\n\r\nwchargin-branch: add-libdefs","title":"Add all available flow-typed libdefs","mergedAs":{"type":"COMMIT","hash":"24a950629a56934481aabb5c3086547df60b9bb5"},"additions":463,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000549\u0000":{"address":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/549","comments":[{"type":"COMMENT","id":"408568450","parent":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"* Weight Slider Drawer\r\n* Prettier Nav Bar\r\n* General Styling\r\n","title":"UI Update v0","mergedAs":null,"additions":352,"deletions":166},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000550\u0000":{"address":{"type":"PULL","number":"550","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/550","comments":[],"reviews":[{"type":"REVIEW","id":"141301606","pull":{"type":"PULL","number":"550","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis patch extends our routing infrastructure to add support for\r\n_external_ redirects. It does not include dedicate support for\r\nsite-internal redirects.\r\n\r\nTest Plan:\r\nAdd an external redirect to `routeData`, like the following:\r\n\r\n```diff\r\ndiff --git a/src/app/routeData.js b/src/app/routeData.js\r\nindex 83dff72..eaba130 100644\r\n--- a/src/app/routeData.js\r\n+++ b/src/app/routeData.js\r\n@@ -36,6 +36,15 @@ const routeData /*: $ReadOnlyArray<RouteDatum> */ = [\r\n     title: \"SourceCred explorer\",\r\n     navTitle: \"Explorer\",\r\n   },\r\n+  {\r\n+    path: \"/discord-invite\",\r\n+    contents: {\r\n+      type: \"EXTERNAL_REDIRECT\",\r\n+      redirectTo: \"https://discord.gg/tsBTgc9\",\r\n+    },\r\n+    title: \"SourceCred Discord invite\",\r\n+    navTitle: null,\r\n+  },\r\n ];\r\n exports.routeData = routeData;\r\n\r\n```\r\n\r\nThen:\r\n  - run `yarn build`, and:\r\n     - verify that the appropriate `index.html` file is correctly\r\n       generated;\r\n     - verify that opening the `index.html` file in a browser redirects\r\n       you to the appropriate destination, even with JavaScript\r\n       disabled;\r\n     - verify that the link in the body of the HTML page is correct\r\n       (easier to do if you remove the `<meta>` tag)\r\n  - run `yarn start`, and:\r\n    1. use the React DevTools to change the “Explorer” link’s `to` prop\r\n       from `/explorer` to `/discord-invite`;\r\n    2. click the link; and\r\n    3. verify that you are properly redirected.\r\n\r\nwchargin-branch: add-external-redirect","title":"Add external redirect infrastructure","mergedAs":{"type":"COMMIT","hash":"8e062592aeb21771d3fbdf721cacfb4434e81100"},"additions":141,"deletions":42},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000551\u0000":{"address":{"type":"PULL","number":"551","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/551","comments":[],"reviews":[{"type":"REVIEW","id":"141301431","pull":{"type":"PULL","number":"551","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nNone really needed—the infrastructure has already been tested—but you\r\ncan verify that this works both under `yarn start` and `yarn build` by\r\nnavigating to the evident URL.\r\n\r\nwchargin-branch: discord-invite","title":"Add external link to Discord invite","mergedAs":{"type":"COMMIT","hash":"68fa7237a0aea23a48aca3349421807cb9fa0fa5"},"additions":9,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000":{"address":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/552","comments":[{"type":"COMMENT","id":"408571321","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408571805","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408575356","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408575540","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408638061","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"409703144","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141304270","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141328212","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142222254","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142222406","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142222809","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142479763","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142935489","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142935607","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142935644","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"Changes: \r\n* Navbar contains links for twitter and github\r\n* Navbar has better styling\r\n\r\nFormerly: \r\n<img width=\"143\" alt=\"screen shot 2018-07-31 at 18 08 41\" src=\"https://user-images.githubusercontent.com/6289761/43495433-f1b2007c-94ec-11e8-86ec-4e1f9d2379b7.png\">\r\n\r\nAfter Update:\r\n<img width=\"1191\" alt=\"screen shot 2018-07-31 at 17 45 05\" src=\"https://user-images.githubusercontent.com/6289761/43495445-fae259bc-94ec-11e8-809e-fed6b359becf.png\">\r\n\r\nTesting Plan:\r\n[x] Visual inspection","title":"UI Update: adding navbar","mergedAs":{"type":"COMMIT","hash":"8e653403dc8186cc6b6bb39ea2eb67ab9c0bcdfd"},"additions":139,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000555\u0000":{"address":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/555","comments":[],"reviews":[{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306958","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306960","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306967","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306973","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306992","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141307064","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Our data model orients on getting repos from GitHub, which are\r\nalternatively represented as strings like \"sourcecred/sourcecred\", or\r\npairs of variables representing the owner and name, or objects with\r\nowner and name properties. We also have a few different implementations\r\nof repo validation, which are not applied consistently.\r\n\r\nThis commit changes all that. We now have a consistent Repo type which\r\nis an object containing a string owner and string name. Thanks to a\r\nclever suggestion by @wchargin, it is implemented as an opaque subtype\r\nof an object containing those properties, so that the only valid way to\r\nconstruct a Repo typed object is to use one of the functions that\r\nconsistently validates the repo.\r\n\r\nAs a fly-by fix, I noticed that there were some functions in the GitHub\r\nquery generation that didn't properly mark arguments as readOnly. I've\r\nfixed these.\r\n\r\nTest plan: No externally-observable behavior changes (except insofar as\r\nthere is a slight change in variable names in the GitHub graphql query,\r\nwhich has also resulted in a snapshot diff). `yarn travis --full`\r\npasses. `git grep repoOwner` presents no hits.","title":"Create a Repo type and use throughout the project","mergedAs":{"type":"COMMIT","hash":"4406c96c956ad9c575b1b80cf55ebf7a23c042e1"},"additions":201,"deletions":180},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000556\u0000":{"address":{"type":"PULL","number":"556","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/556","comments":[],"reviews":[{"type":"REVIEW","id":"141305746","pull":{"type":"PULL","number":"556","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nUsing the environment variable is the preferred way to interact with the\r\nCLI, simply because it’s easier for users. We should demonstrate this\r\ninterface instead of the legacy flag-only version.\r\n\r\nPaired with @decentralion.\r\n\r\nwchargin-branch: readme-env-var","title":"Demonstrate the GitHub token env var in the README","mergedAs":{"type":"COMMIT","hash":"bdb9ae9c465e48f92fdd5605cab5bbd89f9be014"},"additions":6,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000557\u0000":{"address":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/557","comments":[],"reviews":[{"type":"REVIEW","id":"141306711","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141306929","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141307070","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Currently, any non-yes keystroke causes the deply script to abort.\r\nThis is frustrating, as it may take the user several minutes of waiting\r\nto get to the prompt, only to have the program inadvertently terminate.\r\n\r\nAs of this change, the deploys script patiently re-prompts until it gets\r\na valid input.\r\n\r\nPaired with @wchargin.\r\n\r\nTest plan: Ran locally and tested the yes, no, and invalid response\r\ncases. Also ran the script through shellcheck.","title":"Make deploy script wait for valid response","mergedAs":{"type":"COMMIT","hash":"dd09e28d6efe5dde88f38743110d184b541a3b33"},"additions":5,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000558\u0000":{"address":{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/558","comments":[{"type":"COMMENT","id":"408581531","parent":{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141306851","pull":{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"The CNAME file is needed so that our custom domain will continue working\r\nafter deploys.\r\n\r\nTest plan:\r\n- Verified that the generated build now includes the cname file.\r\n- Verified that if a CNAME file is already present, the script will\r\nfail.\r\n\r\nPaired with @wchargin","title":"Deploy script adds necessary CNAME file","mergedAs":{"type":"COMMIT","hash":"81ccda773a08b296dcc782c1ecd579528153c142"},"additions":8,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000559\u0000":{"address":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/559","comments":[],"reviews":[{"type":"REVIEW","id":"141307173","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"141307194","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Test plan:\r\n```\r\n$ yarn backend\r\n$ node bin/sourcecred.js load sourcecred/sourcecred\r\n```","title":"CLI takes repo strings as `owner/name`","mergedAs":{"type":"COMMIT","hash":"3266eb31fade6cf5d7d71c5a1b6fb6bd2e05a84c"},"additions":11,"deletions":18},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000560\u0000":{"address":{"type":"PULL","number":"560","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/560","comments":[],"reviews":[{"type":"REVIEW","id":"141307154","pull":{"type":"PULL","number":"560","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nUnit tests pass, and manual testing indicates that graph loading works.\r\n\r\nwchargin-branch: generic-plugin-adapters","title":"Treat plugin adapters generically in `App`","mergedAs":{"type":"COMMIT","hash":"e492965c12ca7aaf4a602cbd13ae36d3d1cbe6cc"},"additions":3,"deletions":15},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000562\u0000":{"address":{"type":"PULL","number":"562","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/562","comments":[],"reviews":[{"type":"REVIEW","id":"141750043","pull":{"type":"PULL","number":"562","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis module will become the shared home of the production and\r\ndevelopment configurations.\r\n\r\nTest Plan:\r\nRun:\r\n\r\n```\r\nrm -r build/\r\nNODE_ENV=production node node_modules/.bin/webpack \\\r\n    --config config/makeWebpackConfig.js\r\n(cd build && python -m SimpleHTTPServer)\r\n```\r\n\r\nand load http://localhost:8000. Note that the main content of app still\r\nworks, although the static assets in the SourceCred directory are not\r\nloaded so the useful functionality is crippled.\r\n\r\nwchargin-branch: webpack-init","title":"new-webpack: copy prod config to new shared config","mergedAs":{"type":"COMMIT","hash":"8dec3aa61b778203d2facb910d15a53473b6057a"},"additions":248,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000563\u0000":{"address":{"type":"PULL","number":"563","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/563","comments":[],"reviews":[{"type":"REVIEW","id":"141750145","pull":{"type":"PULL","number":"563","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThere really should be an `// $ExpectFlowError` on the dynamic `require`\r\non line 182:\r\n\r\n```js\r\n      paths: require(paths.appRouteData).routeData.map(({path}) => path),\r\n```\r\n\r\nHowever, for some reason Flow does not catch this error now, so adding a\r\nsuppression comment generates an “unused suppression” warning. We\r\ntherefore omit the suppression in this commit; we will add it later,\r\nonce Flow magically finds the error.\r\n\r\nTest Plan:\r\n`yarn flow` reports no errors; a deliberately introduced error is\r\nproperly caught.\r\n\r\nwchargin-branch: webpack-flow","title":"new-webpack: add Flow typing","mergedAs":{"type":"COMMIT","hash":"e2a94c2aa8d71124333146b8c7a726ca36c48436"},"additions":21,"deletions":6},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000564\u0000":{"address":{"type":"PULL","number":"564","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/564","comments":[],"reviews":[{"type":"REVIEW","id":"141750305","pull":{"type":"PULL","number":"564","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis will enable us to differentiate the production and development\r\nbehavior where necessary (primarily, only running minification in prod).\r\n\r\nBest reviewed with `git show -w`.\r\n\r\nTest Plan:\r\nThe diff with `git show -w` and the fact that `yarn flow` passes should\r\nbe sufficient. If you really want to be thorough, run Webpack with this\r\nconfig file and `NODE_ENV` set to `production`.\r\n\r\nwchargin-branch: webpack-functionize","title":"new-webpack: functionize","mergedAs":{"type":"COMMIT","hash":"7bf0ed3c84bb1803121049d9c534c51163ab3b9a"},"additions":239,"deletions":224},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000565\u0000":{"address":{"type":"PULL","number":"565","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/565","comments":[],"reviews":[{"type":"REVIEW","id":"141750464","pull":{"type":"PULL","number":"565","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn addition to simply disabling the prod-only check, we apply a\r\nworkaround for a known bug that breaks static site generation in Webpack\r\nversions >= 2.0.\r\n\r\nTest Plan:\r\nRun\r\n\r\n```\r\nNODE_ENV=development node ./node_modules/.bin/webpack-dev-server \\\r\n    --config config/makeWebpackConfig.js\r\n```\r\n\r\nand visit http://localhost:8080/webpack-dev-server/ (note the trailing\r\nslash) or just http://localhost:8080/. Expect the server to be slow, as\r\nit is actually building for production.\r\n\r\nwchargin-branch: webpack-enable-dev","title":"new-webpack: allow running in dev","mergedAs":{"type":"COMMIT","hash":"fca43f436221d379f5c7eccd5c3d08a4555fb179"},"additions":3,"deletions":9},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000566\u0000":{"address":{"type":"PULL","number":"566","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/566","comments":[],"reviews":[{"type":"REVIEW","id":"141750599","pull":{"type":"PULL","number":"566","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nExtraction of the plugin list to a function is mostly trivial, but\r\nrequires a novel `// $ExpectFlowError`. The error has been there the\r\nwhole time, but Flow only catches it now. Why? Who knows.\r\n\r\nTest Plan:\r\nRun\r\n\r\n```\r\nNODE_ENV=development node ./node_modules/.bin/webpack-dev-server \\\r\n    --config config/makeWebpackConfig.js\r\n```\r\n\r\nNote that the compilation/recompilation time is much faster than\r\npreviously.\r\n\r\nwchargin-branch: webpack-minify-prod-only","title":"new-webpack: only minify in prod","mergedAs":{"type":"COMMIT","hash":"37eddcaf27da2582f941cbb4f48c58d63d4032f4"},"additions":91,"deletions":76},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000567\u0000":{"address":{"type":"PULL","number":"567","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/567","comments":[],"reviews":[{"type":"REVIEW","id":"141750790","pull":{"type":"PULL","number":"567","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis commit makes the Webpack dev server fully functional under the new\r\nconfig, by serving the static SourceCred directory via a piece of\r\ninjected middleware.\r\n\r\nTest Plan:\r\nRun\r\n\r\n```\r\nNODE_ENV=development node ./node_modules/.bin/webpack-dev-server \\\r\n    --config config/makeWebpackConfig.js\r\n```\r\n\r\nand navigate to the cred explorer. Note that the repository registry is\r\nfetched, and the whole cred explorer works.\r\n\r\nwchargin-branch: webpack-statics","title":"new-webpack: serve static files","mergedAs":{"type":"COMMIT","hash":"1d48bf9390f4f54fdd4db8d7aefa018a5480cfe7"},"additions":13,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000568\u0000":{"address":{"type":"PULL","number":"568","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/568","comments":[],"reviews":[{"type":"REVIEW","id":"141750947","pull":{"type":"PULL","number":"568","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nIn our current system, we build by invoking `scripts/build.js`, which\r\nbegins by removing the `build/` directory. This behavior is nice,\r\nbecause it prevents cross-contamination between builds. In this commit,\r\nwe add a plugin to achieve the same result from directly within Webpack.\r\n\r\nTest Plan:\r\nRun\r\n\r\n```\r\nmkdir -p ./build\r\ntouch ./build/wat\r\nNODE_ENV=production node ./node_modules/.bin/webpack \\\r\n    --config config/makeWebpackConfig.js\r\n```\r\n\r\nand ensure that `./build/wat` does not exist after the build completes.\r\n\r\nwchargin-branch: webpack-clean-build","title":"new-webpack: clean `build/` before prod","mergedAs":{"type":"COMMIT","hash":"b45ef739fe5620406ad7839f9517eff16c94aa00"},"additions":11,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000569\u0000":{"address":{"type":"PULL","number":"569","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/569","comments":[],"reviews":[{"type":"REVIEW","id":"141751023","pull":{"type":"PULL","number":"569","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Test Plan:\r\nRun `yarn start` and note that everything checks out.\r\n\r\nRun `yarn build && (cd build/ && python -m SimpleHTTPServer)` and note\r\nthat everything checks out, except that the static assets are of course\r\nnot included in the build.\r\n\r\nwchargin-branch: webpack-replace-scripts","title":"new-webpack: replace old scripts in `package.json`","mergedAs":{"type":"COMMIT","hash":"0128df8c1871db9f3e09719b8bfff31b862d5083"},"additions":2,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000570\u0000":{"address":{"type":"PULL","number":"570","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/570","comments":[],"reviews":[{"type":"REVIEW","id":"141751118","pull":{"type":"PULL","number":"570","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThese are no longer used.\r\n\r\nTest Plan:\r\nBoth `yarn start` and `yarn build` still work.\r\n\r\nwchargin-branch: webpack-remove-old","title":"new-webpack: remove old scripts and configs","mergedAs":{"type":"COMMIT","hash":"c1cb29b1e67a51c5f05fba0124090256c4c75cce"},"additions":0,"deletions":866},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000571\u0000":{"address":{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/571","comments":[],"reviews":[{"type":"REVIEW","id":"142068030","pull":{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nRunning `yarn test` (equiv. `npm test` or `npm run test`) now runs all\r\nchecks. It takes the place of the former `yarn travis`. This is more in\r\nline with the expectation of a top-level `test` command: if it passes,\r\nyour code is good.\r\n\r\nThe `unit` command now runs Jest once, not in watch mode. It takes the\r\nplace of the former `ci-test`. To run tests in watch mode, run any of\r\nthe following:\r\n\r\n  - `yarn unit --watch`, or\r\n  - `npm run unit -- --watch`, or\r\n  - `npm unit -- --watch`.\r\n\r\nThis behavior is more consistent with the standard behavior of commands\r\nlike `make test`. It is also empirically what @wchargin and\r\n@decentralion want most of the time.\r\n\r\nTest Plan:\r\nVerify that each of the scripts `test`, `unit`, and `coverage` passes.\r\nVerify that each of the aforementioned `--watch` invocations works.\r\nVerify that `.travis.yml` has the correct `script:` command.\r\n\r\nwchargin-branch: reorganize-test-command","title":"package.json: reorganize test commands","mergedAs":{"type":"COMMIT","hash":"3b5ad594bd47a9ca9c40913ef582621bae9e88f6"},"additions":10,"deletions":33},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000572\u0000":{"address":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/572","comments":[{"type":"COMMENT","id":"409314209","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"409349314","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"142068097","pull":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nBy pre-filling the “summary” and “test plan” fields, we create a strong\r\nsuggestion that people fill them out.\r\n\r\nI’ve written this template in accordance with Phabricator commit style\r\n(which is also what I use personally). I don’t intend for this to be\r\nnormative. It is perfectly valid to leave off the “Summary” header, for\r\ninstance, and it is perfectly valid to spell “Test Plan” with a\r\nlowercase “p”. However, for a template in particular I think that\r\nincluding the “Summary” header is better than excluding it, to give\r\ncontributors an idea of what’s supposed to go there.\r\n\r\nI expect that upon drafting a pull request with a single commit, the\r\ncommit’s body, if non-empty, will take precedence over the pull request\r\ntemplate. If this is not the case, then we can reconsider whether we\r\nwant to include this template.\r\n\r\nTest Plan:\r\nNote that [GitHub documentation][1] indicates that this is the correct\r\nfile path. Then, merge and hope for the best.\r\n\r\n[1]: https://blog.github.com/2016-02-17-issue-and-pull-request-templates/\r\n\r\nwchargin-branch: pull-request-template","title":"Add a template for pull requests","mergedAs":{"type":"COMMIT","hash":"2af2fe3b43ac1c73242285ccb946008357ff8981"},"additions":5,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000573\u0000":{"address":{"type":"PULL","number":"573","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/573","comments":[],"reviews":[{"type":"REVIEW","id":"142068204","pull":{"type":"PULL","number":"573","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis way, we can document what STOPSHIPs are without having to tip-toe\r\naround the phrase.\r\n\r\nTest Plan:\r\nAdd `STOPSHIP` to `README.md`, and note that `yarn test` fails before\r\nthis change but passes after it.\r\n\r\nwchargin-branch: stopship-markdown-okay","title":"Permit STOPSHIPs in Markdown files","mergedAs":{"type":"COMMIT","hash":"dbf5caa08f87b8b522120d644b1601efbe51c438"},"additions":1,"deletions":1},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000574\u0000":{"address":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/574","comments":[{"type":"COMMENT","id":"409099930","parent":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"141805575","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142071125","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142075609","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142931457","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nHaving a guide for contributors makes the experience more pleasant for\r\neveryone. In the best case, contributors read the guide and submit\r\nperfect PRs. In the event that a discrepancy occurs, we can gently point\r\nthe contributor to the guide—saving us from having to re-explain common\r\npitfalls, and signaling to the contributor that this is a matter of\r\npractice and that we are not “out to get them”.\r\n\r\nThis guide, like all documentation, is intended to evolve over time.\r\n\r\nTest Plan:\r\nNone.\r\n\r\nwchargin-branch: contributing-md","title":"Write `CONTRIBUTING.md`","mergedAs":{"type":"COMMIT","hash":"ee93f4aa01b9ef4d6a0be7f8419b1e72f16610a5"},"additions":276,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000575\u0000":{"address":{"type":"PULL","number":"575","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/575","comments":[],"reviews":[{"type":"REVIEW","id":"142130746","pull":{"type":"PULL","number":"575","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit removes the node and edge counts that are displayed on the\r\ncred explorer. While this is nice information to surface, I think it's\r\ncurrently surfaced in the wrong place: it should be displayed as part of\r\nthe PagerankTable.\r\n\r\nMy proximate motivation for removing it is that it cleans up the data\r\nstructure slightly and I'm about to intensively refactor the whole file.\r\n\r\nTest plan: `yarn test`; also, I manually engaged the cred explorer and\r\nit still works properly.\r\n","title":"Remove graph node and edge count","mergedAs":{"type":"COMMIT","hash":"8009cd279bb54258b7c9f68bd0ab86099a8b74b4"},"additions":12,"deletions":23},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000577\u0000":{"address":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/577","comments":[{"type":"COMMENT","id":"409386959","parent":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"142132895","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142168049","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe were asking the `clean-webpack-plugin` to remove the `build/`\r\ndirectory in all cases. However, Webpack accepts a command-line\r\nparameter `--output-path`. When such a parameter is passed, we would be\r\nremoving the wrong directory.\r\n\r\nThe proper behavior is to remove “whatever the actual output path is”.\r\nWebpack exposes this information, but it appears that the\r\n`clean-webpack-plugin` does not take advantage of it. Therefore, this\r\ncommit includes a small Webpack plugin to do the right thing.\r\n\r\nTest Plan:\r\nTest that the behavior is correct when no output directory is specified:\r\n```\r\nmkdir -p build && touch build/wat && yarn build && ! [ -e build/wat ]\r\n```\r\n\r\nTest that the behavior is correct with an explicit `--output-path`:\r\n```\r\noutdir=\"$(mktemp -d)\" && touch \"${outdir}/wat\" && \\\r\n    yarn build --output-path \"${outdir}\" && \\\r\n    ! [ -e \"${outdir}/wat\" ]\r\n```\r\n\r\nwchargin-branch: clean-actual-build-directory\r\n","title":"Refine the build directory cleaning logic","mergedAs":{"type":"COMMIT","hash":"480bdf1bc74669064bd20f7d026af255950cb951"},"additions":43,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000578\u0000":{"address":{"type":"PULL","number":"578","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/578","comments":[],"reviews":[{"type":"REVIEW","id":"142168092","pull":{"type":"PULL","number":"578","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nAs of #577, this is no longer needed.\r\n\r\nTest Plan:\r\nRunning `yarn && yarn test --full` suffices.\r\n\r\nwchargin-branch: remove-clean-webpack-plugin\r\n","title":"Remove `clean-webpack-plugin`","mergedAs":{"type":"COMMIT","hash":"48275590ba382793dcbb5c96e4b2dc64230bb49f"},"additions":0,"deletions":7},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000579\u0000":{"address":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/579","comments":[],"reviews":[{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142213425","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142213484","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142226222","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"143035590","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The cred explorer app has a variety of valid states. Currently, it is\r\nthrown together without explicit documentation of what its states are,\r\nhow they transition, or error handling or testing. I worry that this\r\nwill be hard to maintain.\r\n\r\nThis commit creates the AppState type which explicitly reifies every\r\nreachable state for the app, and a StateTransitionMachine which handles\r\ntransitions between states. The transitions are thoroughly tested,\r\nincluding edge cases where the user makes a change while waiting for a\r\npromise to resolve, or where one of the promises failes.\r\n\r\nTest plan:\r\nThe unit tests are comprehensive. `yarn test` passes.\r\n\r\nThanks to @wchargin for much discussion about how to structure the\r\nstates.\r\n","title":"Implement AppState and StateTransitionMachine","mergedAs":{"type":"COMMIT","hash":"56c17d2597cfe4ac038864d258023f2fecd1a0e6"},"additions":572,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000581\u0000":{"address":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/581","comments":[],"reviews":[{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This commit removes some unecessary text and whitespace from the cred\r\nexplorer. The result is more minimal. It's not super pretty, but that\r\nwill come later.\r\n\r\nTest plan: Visual inspection\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/1400023/43498229-db28ea56-94fa-11e8-8a66-803b4ccea585.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/1400023/43498270-139cc5ba-94fb-11e8-8bf4-d08297105924.png)\r\n\r\n\r\n","title":"Streamline the cred explorer UI","mergedAs":{"type":"COMMIT","hash":"56f0b8b1b9c2bcb4996cab3b684e1d47a4ab1e77"},"additions":8,"deletions":19},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000582\u0000":{"address":{"type":"PULL","number":"582","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/582","comments":[],"reviews":[{"type":"REVIEW","id":"142226263","pull":{"type":"PULL","number":"582","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis subtree has no effect on the new build process; it contains only\r\nstale code.\r\n\r\nTest Plan:\r\nRunning `yarn test --full` passes. Running `yarn build` and running an\r\nHTTP server on the result indicates the expected behavior, as does\r\nrunning `yarn start`. A quick `git grep public` finds no amok results.\r\n\r\nwchargin-branch: remove-public\r\n","title":"Remove `src/app/public`","mergedAs":{"type":"COMMIT","hash":"9d5c4454c554b473cf13e09f4eb2d48b4399a187"},"additions":0,"deletions":43},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000583\u0000":{"address":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/583","comments":[{"type":"COMMENT","id":"409815987","parent":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"409997166","parent":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"142539811","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"143039164","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Pull #579 reifies the cred explorer state as an explicit state\r\ntransition machine, with a well-tested implementation. This pull\r\nre-writes `credExplorer/App.js` to use that implementation, and thoroughly\r\ntests it.\r\n\r\nThe result is that `credExplorer/App.js` has much simpler code\r\n(because it just binds the rendered components to the state machine),\r\nand is much more thoroughly tested.\r\n\r\nTo ensure easy testability of the `App` class, it was refactored so that\r\nthe module exports a factory function which takes a method for creating\r\nthe `AppStateTransitionMachine` and returns an `App` class. This ensures\r\nthat in test code, we can easily mock the state transition machine. This\r\nhad no effect on external callers, since the higher-level `<AppPage>`\r\nclass, which already wraps over `LocalStore` choice, was already the\r\npreferred call site.\r\n\r\nI also added a loading indicator component, which presently displays a\r\nstatus text corresponding to the state, such as \"Loading graph...\", or\r\n\"Error while running PageRank\". This way, there is always some user\r\nfeedback during loading states (which could take a while).\r\n\r\nTest plan:\r\nVisual inspection, and the very thorough included unit tests.\r\n\r\nSummary:\r\n[Please describe your changes.]\r\n\r\nTest Plan:\r\n[Please list the steps required to verify that your change is correct.]\r\n","title":"Use AppStateTransitionMachine to drive App","mergedAs":{"type":"COMMIT","hash":"10f704ebd2f004530c95036fec70c0fb8945d450"},"additions":427,"deletions":180},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000585\u0000":{"address":{"type":"PULL","number":"585","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/585","comments":[],"reviews":[{"type":"REVIEW","id":"142965352","pull":{"type":"PULL","number":"585","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThe information currently in the README is helpful but incomplete. We\r\nnow have a `CONTRIBUTING.md` guide, so we can simply link to that.\r\n\r\nTest Plan:\r\nNone.\r\n\r\nwchargin-branch: contributing-md-readme\r\n","title":"Link to `CONTRIBUTING.md` from the README","mergedAs":{"type":"COMMIT","hash":"038d1669724e3fd2d2c0c4bbe9577db89c2a0be5"},"additions":4,"deletions":12},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000591\u0000":{"address":{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/591","comments":[],"reviews":[{"type":"REVIEW","id":"142953116","pull":{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"142953196","pull":{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"\"Explore(r)\" does not accurately convey the current state of the\r\nproject. In order to more accurately convey the current state,\r\n\"Explore(r)\" has been updated to \"Prototype\"\r\n\r\nAddresses #584\r\n\r\nTest plan: Visual inspection and manual testing of pathing\r\n","title":"Rename \"Explore(r)\" to \"Prototype\" in route and navigation","mergedAs":{"type":"COMMIT","hash":"fa66c7ba8079a09054ce6862e6aaa0772b4074e0"},"additions":3,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000592\u0000":{"address":{"type":"PULL","number":"592","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/592","comments":[{"type":"COMMENT","id":"410054666","parent":{"type":"PULL","number":"592","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nCurrently, we create the static site and deploy it all at once in\r\n`scripts/deploy.sh`. This commit creates a new script that only builds\r\nthe static site. This has the advantage that it is easier/less scary to\r\nchange that script (because it can be tested without worrying about\r\ndeploying to a local test target), and that we can write automated tests\r\nfor it.\r\n\r\nTest Plan:\r\nIn a shell with your SourceCred GitHub token exported, run:\r\n\r\n```shell\r\noutdir=\"$(mktemp -d --suffix .sourcecred-site)\"\r\n./scripts/build_static_site.sh --target \"${outdir}\" \\\r\n    --cname sourcecred.io \\\r\n    --repo sourcecred/example-git \\\r\n    --repo sourcecred/example-github \\\r\n    ;\r\n(cd \"${outdir}\" && python -m SimpleHTTPServer)\r\n```\r\n\r\nand ensure that <http://localhost:8000/> is as expected.\r\n\r\nTest each error case in the script. The following invocations suffice\r\nfor most of them:\r\n\r\n  - no arguments (and therefore no target)\r\n  - `--target dir1 --target dir2` after `mkdir dir1 dir2`\r\n  - `--target some_nonexistent_file`\r\n  - `--target some_nonexistent_file/another_component`\r\n  - `--target somefile` after `touch somefile`\r\n  - `--target dir` after `mkdir dir; echo stuff >dir/file`\r\n    (here, `dir/file` should still contain `stuff`)\r\n  - `--target`\r\n  - `--target some_empty_directory --repo`\r\n  - `--target some_empty_directory --cname \"\"`\r\n  - `--target some_empty_directory --cname a --cname b`\r\n  - `--target some_empty_directory --cname`\r\n\r\nSimulate an existing `cname_file` by adding `>\"${cname_file}\"` after\r\ndefinition of that variable. Expect failure.\r\n\r\nTest that the script works when no repositories are provided. (This\r\nshould be trivial but for a quirk of Bash.)\r\n\r\nTest that the script can be run from a directory other than the\r\nrepository root:\r\n\r\n```shell\r\n(cd scripts; rm -rf out; mkdir out; ./build_static_site.sh --target out)\r\n```\r\n\r\n(In particular, this tests that arguments are parsed before the `cd` is\r\ninvoked.)\r\n\r\nTest the help message.\r\n\r\nThis plethora of test cases indicates why automated tests for this\r\nscript are a valuable thing to have. I will add them, but need to\r\nconsider what architecture to use for the test script, so I am deferring\r\nthe automated tests to a subsequent commit. For now, I have run each of\r\nthese tests manually.\r\n\r\nwchargin-branch: build-static-site-script\r\n","title":"Create script to build static site","mergedAs":null,"additions":135,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000593\u0000":{"address":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/593","comments":[],"reviews":[{"type":"REVIEW","id":"143035329","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"Summary:\r\nTo facilitate communication and contribution, the Discord\r\ninvitation has been linked.\r\n\r\nAddresses #587\r\n\r\nTest plan:\r\nVisual inspection and manual link clicking","title":"Add Discord link and logo to navbar","mergedAs":null,"additions":41,"deletions":3},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000597\u0000":{"address":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/597","comments":[{"type":"COMMENT","id":"410090712","parent":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"reviews":[{"type":"REVIEW","id":"143000747","pull":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"143004699","pull":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nWe will shortly want to perform testing of shell scripts; it makes the\r\nmost sense to do so via the shell. We could roll our own testing\r\nframework, but it makes more sense to use an existing one. By choosing\r\nSharness, we’re in good company: `go-ipfs` and `go-multihash` use it as\r\nwell, and it’s derived from Git’s testing library (which I like a lot).\r\n\r\nThis commit was generated by following the “per-project installation”\r\ninstructions at https://github.com/chriscool/sharness, and by\r\nadditionally including that repository’s `COPYING` file as\r\n`SHARNESS_LICENSE`, with a header prepended. I considered instead adding\r\nSharness as a submodule, which is supported and has clear advantages\r\n(e.g., you can update the thing), but opted to avoid the complexity of\r\nsubmodules for now.\r\n\r\nTest Plan:\r\nCreate the following tests in the `sharness` directory:\r\n\r\n```shell\r\n$ cat sharness/success.t\r\n#!/bin/sh\r\ntest_description=\"Show basic features of Sharness\"\r\n. ./sharness.sh\r\ntest_expect_success \"this will pass\" true\r\ntest_done\r\n$ cat sharness/failure.t\r\n#!/bin/sh\r\ntest_description=\"Show basic features of Sharness\"\r\n. ./sharness.sh\r\ntest_expect_success \"this should fail\" false\r\ntest_done\r\n```\r\n\r\nNote that `yarn sharness` and `yarn test` fail appropriately, and (if\r\nyou have prove(1)) that `make -sC sharness prove` fails appropriately.\r\nThen, remove `sharness/failure.t`, and note that the above commands each\r\npass.\r\n\r\nwchargin-branch: add-sharness\r\n","title":"Add `sharness` for shell-based testing","mergedAs":null,"additions":1412,"deletions":0},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000598\u0000":{"address":{"type":"PULL","number":"598","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/598","comments":[],"reviews":[{"type":"REVIEW","id":"143035709","pull":{"type":"PULL","number":"598","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\n@decentralion and I have spent a bunch of time on this prose, and we\r\nthink that it’s pretty good. Let’s put some content on our otherwise\r\nbare site.\r\n\r\nTest Plan:\r\nRunning `yarn start` suffices.\r\n\r\nPaired with @decentralion.\r\n\r\nwchargin-branch: home-page-prose\r\n","title":"Write prose for the home page","mergedAs":{"type":"COMMIT","hash":"f137b83cde5cf04b86dba7127cd3bfb0212839ea"},"additions":215,"deletions":2},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000599\u0000":{"address":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/599","comments":[],"reviews":[{"type":"REVIEW","id":"143038051","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"143039801","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Summary:\r\nHere, we make the width consistent across the home page, the explorer,\r\nand the navbar. Arguably, the PageRank table itself should be wider. We\r\ncan let it pop out of the box model with `relative`, `width`, and `left`\r\nproperties (using `calc`), but we don’t want to deal with the details\r\nright now.\r\n\r\nAt some time in the future, we can also of course unify these styles.\r\n\r\nPaired with @decentralion.\r\n\r\nTest Plan:\r\nRunning `yarn start` and clicking around the various pages suffices. To\r\ncheck the external redirect page, you can apply\r\n\r\n```diff\r\ndiff --git a/src/app/HomePage.js b/src/app/HomePage.js\r\nindex 4d0f832..0eee519 100644\r\n--- a/src/app/HomePage.js\r\n+++ b/src/app/HomePage.js\r\n@@ -143,7 +143,8 @@ export default class HomePage extends React.Component<{||}> {\r\n         <h2>Roadmap</h2>\r\n         <p>\r\n           SourceCred is under active development.{\" \"}\r\n-          <Link className={css(styles.link)} to=\"/prototype\">\r\n+          <Link className={css(styles.link)} to=\"/discord-invite\">\r\n+            {/* STOPSHIP */}\r\n             We have a prototype\r\n           </Link>{\" \"}\r\n           that ingests data from Git and GitHub, computes cred, and allows the\r\n```\r\n\r\nand then click the appropriate link on the home page.\r\n\r\nwchargin-branch: max-width-900\r\n\r\n","title":"Enforce a max-width of 900px","mergedAs":{"type":"COMMIT","hash":"05ef54be807d99541e717e498f8c9cd793145588"},"additions":9,"deletions":4},"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000600\u0000":{"address":{"type":"PULL","number":"600","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},"url":"https://github.com/sourcecred/sourcecred/pull/600","comments":[],"reviews":[{"type":"REVIEW","id":"143041053","pull":{"type":"PULL","number":"600","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Summary:\r\nThis is minor, but we might as well point to the canonical\r\ncapitalization.\r\n\r\nTest Plan:\r\nNone.\r\n\r\nwchargin-branch: downcase-sourcecred-url\r\n","title":"Downcase `sourcecred` URL on homepage","mergedAs":{"type":"COMMIT","hash":"20c80c33905f83496bc610b19e6539b1316f250c"},"additions":1,"deletions":1}},"reviews":{"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u00001\u000093852769\u0000":{"address":{"type":"REVIEW","id":"93852769","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/1#pullrequestreview-93852769","state":"COMMENTED","comments":[{"type":"COMMENT","id":"165852057","parent":{"type":"REVIEW","id":"93852769","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"AChildAtPlay"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u00001\u000093852802\u0000":{"address":{"type":"REVIEW","id":"93852802","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/1#pullrequestreview-93852802","state":"COMMENTED","comments":[],"body":"Generally good, I made one note about a potential restructure. With or without that change, I think this is a good start. ","authors":[{"type":"USERLIKE","login":"AChildAtPlay"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u00007\u000094904456\u0000":{"address":{"type":"REVIEW","id":"94904456","pull":{"type":"PULL","number":"7","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/7#pullrequestreview-94904456","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u00008\u000097051530\u0000":{"address":{"type":"REVIEW","id":"97051530","pull":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/8#pullrequestreview-97051530","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097094905\u0000":{"address":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#pullrequestreview-97094905","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168686266","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168686906","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168687028","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168687476","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I like the spirit of this change, but I'd like `yarn start` and `yarn test` to work immediately after a fresh `hub clone sourcecred/sourcecred; cd sourcecred/explorer; yarn install`.\r\n\r\nThe first one, `yarn start`, fails because `App.js` is missing. Could you include the skeleton provided by `create-react-app`?\r\n\r\nThe second one, `yarn test`, produces no output because no tests are included. I think it would be nice to have a dummy test—if you don't want to couple it to `App.js`, that's fine with me. What do you think?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097336189\u0000":{"address":{"type":"REVIEW","id":"97336189","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#pullrequestreview-97336189","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168886484","parent":{"type":"REVIEW","id":"97336189","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097336599\u0000":{"address":{"type":"REVIEW","id":"97336599","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#pullrequestreview-97336599","state":"APPROVED","comments":[],"body":":+1: ","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000":{"address":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#pullrequestreview-97099474","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168690422","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168690672","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168693389","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168694297","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168694527","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Cool! I'm _pretty_ sure that I think that this is all reasonable to go in as a first commit, but I'll take another look in the morning.\r\n\r\nUI looks good.\r\n\r\nI wonder whether the data structure that we're using for the tree is the right one. All the substring manipulation (esp. `startsWith` and the like) and fiddling with `\".\"` rubs me the wrong way. But I'm confident that any such change could easily be made in a subsequent refactoring the commit, so I'd err on the side of keeping it as-is for now.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097283892\u0000":{"address":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#pullrequestreview-97283892","state":"APPROVED","comments":[{"type":"COMMENT","id":"168843614","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168844183","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168845250","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097346717\u0000":{"address":{"type":"REVIEW","id":"97346717","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#pullrequestreview-97346717","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168895478","parent":{"type":"REVIEW","id":"97346717","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097347081\u0000":{"address":{"type":"REVIEW","id":"97347081","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#pullrequestreview-97347081","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168895829","parent":{"type":"REVIEW","id":"97347081","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000015\u000097354203\u0000":{"address":{"type":"REVIEW","id":"97354203","pull":{"type":"PULL","number":"15","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/15#pullrequestreview-97354203","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000016\u000097354603\u0000":{"address":{"type":"REVIEW","id":"97354603","pull":{"type":"PULL","number":"16","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/16#pullrequestreview-97354603","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387232\u0000":{"address":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#pullrequestreview-97387232","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168935082","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168935138","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"168935158","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> I would love to customize the error message so that it advises that \"npm run pretty\" is the right solution\r\n\r\n(Or `yarn pretty`.) Agreed, but unfortunately that string is hardcoded in `lint-staged`:  \r\nhttps://github.com/okonet/lint-staged/blob/8f214f0700b4d8ec4a1cc0a30cb8cf6124b1edbc/src/runScript.js#L72\r\n\r\n> For the moment, I'm only having it format .js.\r\n\r\nAgreed, for all the reasons that you mention.\r\n\r\n---\r\n\r\nI’d like to keep an eye on `config/` and `scripts/` in addition to `src/`—basically, everything checked in gets linted. Luckily, per my comments on the diff, this is easy!\r\n\r\n(Note: `config/` and `scripts/` use single-quotes throughout, so will have a large initial diff. But that’s okay: there’s no useful git blame that this will squash, because it just came from the create-react-app ejection.)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387466\u0000":{"address":{"type":"REVIEW","id":"97387466","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#pullrequestreview-97387466","state":"COMMENTED","comments":[{"type":"COMMENT","id":"168935336","parent":{"type":"REVIEW","id":"97387466","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097392287\u0000":{"address":{"type":"REVIEW","id":"97392287","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#pullrequestreview-97392287","state":"APPROVED","comments":[],"body":"LGTM. Thanks!\r\n\r\n> it modifies flow_typed now, which is a little weird\r\n\r\nAgreed that it's a little weird. If you want, feel free to write a [`.prettierignore` file](https://prettier.io/docs/en/ignore.html) for extern code. If not, also fine.\r\n\r\nEither way—want to make an immediate follow-up PR by running `yarn prettify` and committing results?","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000019\u000097383023\u0000":{"address":{"type":"REVIEW","id":"97383023","pull":{"type":"PULL","number":"19","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/19#pullrequestreview-97383023","state":"APPROVED","comments":[],"body":"Looks good","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000020\u000097383098\u0000":{"address":{"type":"REVIEW","id":"97383098","pull":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/20#pullrequestreview-97383098","state":"APPROVED","comments":[],"body":"Super in to it","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000021\u000097393894\u0000":{"address":{"type":"REVIEW","id":"97393894","pull":{"type":"PULL","number":"21","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/21#pullrequestreview-97393894","state":"APPROVED","comments":[],"body":"Changes and implementation both look good to me. Nice!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000022\u000097407868\u0000":{"address":{"type":"REVIEW","id":"97407868","pull":{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/22#pullrequestreview-97407868","state":"APPROVED","comments":[],"body":"Looks good; diff is largely unsurprising. I can merge. Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000027\u000097418427\u0000":{"address":{"type":"REVIEW","id":"97418427","pull":{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/27#pullrequestreview-97418427","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000028\u000097418519\u0000":{"address":{"type":"REVIEW","id":"97418519","pull":{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/28#pullrequestreview-97418519","state":"APPROVED","comments":[],"body":"As you note, from a readability perspective it's an unfortunate change, but both to satisfy the linter and fix the semantics it's worth it. You mentioned elsewhere that we shouldn't get in the habit of ignoring the linter and I agree.\r\n\r\nIf we can get this fixed (both in the flow linter and the propTypes plugin) then we can move the types back around.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000030\u000099432888\u0000":{"address":{"type":"REVIEW","id":"99432888","pull":{"type":"PULL","number":"30","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/30#pullrequestreview-99432888","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000031\u000099527023\u0000":{"address":{"type":"REVIEW","id":"99527023","pull":{"type":"PULL","number":"31","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/31#pullrequestreview-99527023","state":"APPROVED","comments":[],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000032\u000099522494\u0000":{"address":{"type":"REVIEW","id":"99522494","pull":{"type":"PULL","number":"32","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/32#pullrequestreview-99522494","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000033\u000099522999\u0000":{"address":{"type":"REVIEW","id":"99522999","pull":{"type":"PULL","number":"33","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/33#pullrequestreview-99522999","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000034\u000099524696\u0000":{"address":{"type":"REVIEW","id":"99524696","pull":{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/34#pullrequestreview-99524696","state":"APPROVED","comments":[],"body":"Nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000035\u000099526398\u0000":{"address":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/35#pullrequestreview-99526398","state":"COMMENTED","comments":[{"type":"COMMENT","id":"170787029","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"170787102","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"170787156","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM modulo small comments  below.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000035\u000099527140\u0000":{"address":{"type":"REVIEW","id":"99527140","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/35#pullrequestreview-99527140","state":"APPROVED","comments":[],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000036\u000099528285\u0000":{"address":{"type":"REVIEW","id":"99528285","pull":{"type":"PULL","number":"36","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/36#pullrequestreview-99528285","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000037\u000099570687\u0000":{"address":{"type":"REVIEW","id":"99570687","pull":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/37#pullrequestreview-99570687","state":"APPROVED","comments":[],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000038\u000099573196\u0000":{"address":{"type":"REVIEW","id":"99573196","pull":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/38#pullrequestreview-99573196","state":"COMMENTED","comments":[],"body":"It would be nice to test that round trip is equal to the identity","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000038\u000099574418\u0000":{"address":{"type":"REVIEW","id":"99574418","pull":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/38#pullrequestreview-99574418","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000043\u0000100294536\u0000":{"address":{"type":"REVIEW","id":"100294536","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/43#pullrequestreview-100294536","state":"COMMENTED","comments":[{"type":"COMMENT","id":"171442756","parent":{"type":"REVIEW","id":"100294536","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000043\u0000100295046\u0000":{"address":{"type":"REVIEW","id":"100295046","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/43#pullrequestreview-100295046","state":"APPROVED","comments":[],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000044\u0000100315131\u0000":{"address":{"type":"REVIEW","id":"100315131","pull":{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/44#pullrequestreview-100315131","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000045\u0000100315613\u0000":{"address":{"type":"REVIEW","id":"100315613","pull":{"type":"PULL","number":"45","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/45#pullrequestreview-100315613","state":"APPROVED","comments":[],"body":"LGTM","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000046\u0000100347073\u0000":{"address":{"type":"REVIEW","id":"100347073","pull":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/46#pullrequestreview-100347073","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000047\u0000100350816\u0000":{"address":{"type":"REVIEW","id":"100350816","pull":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/47#pullrequestreview-100350816","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000048\u0000100351273\u0000":{"address":{"type":"REVIEW","id":"100351273","pull":{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/48#pullrequestreview-100351273","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000049\u0000100352972\u0000":{"address":{"type":"REVIEW","id":"100352972","pull":{"type":"PULL","number":"49","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/49#pullrequestreview-100352972","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000051\u0000100882160\u0000":{"address":{"type":"REVIEW","id":"100882160","pull":{"type":"PULL","number":"51","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/51#pullrequestreview-100882160","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000052\u0000100887019\u0000":{"address":{"type":"REVIEW","id":"100887019","pull":{"type":"PULL","number":"52","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/52#pullrequestreview-100887019","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000053\u0000100887852\u0000":{"address":{"type":"REVIEW","id":"100887852","pull":{"type":"PULL","number":"53","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/53#pullrequestreview-100887852","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100916804\u0000":{"address":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#pullrequestreview-100916804","state":"COMMENTED","comments":[{"type":"COMMENT","id":"171965363","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"171965632","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"171966083","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"171967355","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100923650\u0000":{"address":{"type":"REVIEW","id":"100923650","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#pullrequestreview-100923650","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000055\u0000100924099\u0000":{"address":{"type":"REVIEW","id":"100924099","pull":{"type":"PULL","number":"55","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/55#pullrequestreview-100924099","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000056\u0000100924682\u0000":{"address":{"type":"REVIEW","id":"100924682","pull":{"type":"PULL","number":"56","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/56#pullrequestreview-100924682","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000057\u0000100931196\u0000":{"address":{"type":"REVIEW","id":"100931196","pull":{"type":"PULL","number":"57","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/57#pullrequestreview-100931196","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000058\u0000100935950\u0000":{"address":{"type":"REVIEW","id":"100935950","pull":{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/58#pullrequestreview-100935950","state":"APPROVED","comments":[],"body":":tada:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000059\u0000100941267\u0000":{"address":{"type":"REVIEW","id":"100941267","pull":{"type":"PULL","number":"59","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/59#pullrequestreview-100941267","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000060\u0000100964401\u0000":{"address":{"type":"REVIEW","id":"100964401","pull":{"type":"PULL","number":"60","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/60#pullrequestreview-100964401","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000061\u0000100964577\u0000":{"address":{"type":"REVIEW","id":"100964577","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/61#pullrequestreview-100964577","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172006359","parent":{"type":"REVIEW","id":"100964577","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"also, maybe mention including the lodash import in the commit message","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000061\u0000100964681\u0000":{"address":{"type":"REVIEW","id":"100964681","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/61#pullrequestreview-100964681","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172006460","parent":{"type":"REVIEW","id":"100964681","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000061\u0000100964742\u0000":{"address":{"type":"REVIEW","id":"100964742","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/61#pullrequestreview-100964742","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000062\u0000100965285\u0000":{"address":{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/62#pullrequestreview-100965285","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172006979","parent":{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"172006985","parent":{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I suggest adding the following test cases, for completeness's sake:\r\n\r\n[] + []\r\ng + []\r\n[] + g","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000062\u0000100965650\u0000":{"address":{"type":"REVIEW","id":"100965650","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/62#pullrequestreview-100965650","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000063\u0000100989447\u0000":{"address":{"type":"REVIEW","id":"100989447","pull":{"type":"PULL","number":"63","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/63#pullrequestreview-100989447","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000064\u0000100989430\u0000":{"address":{"type":"REVIEW","id":"100989430","pull":{"type":"PULL","number":"64","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/64#pullrequestreview-100989430","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101371831\u0000":{"address":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#pullrequestreview-101371831","state":"APPROVED","comments":[{"type":"COMMENT","id":"172367101","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"172368045","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"172368605","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks nice overall; I like the clever and precise type system usage.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101374589\u0000":{"address":{"type":"REVIEW","id":"101374589","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#pullrequestreview-101374589","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172369456","parent":{"type":"REVIEW","id":"101374589","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101376475\u0000":{"address":{"type":"REVIEW","id":"101376475","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#pullrequestreview-101376475","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172371111","parent":{"type":"REVIEW","id":"101376475","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101378561\u0000":{"address":{"type":"REVIEW","id":"101378561","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#pullrequestreview-101378561","state":"COMMENTED","comments":[{"type":"COMMENT","id":"172372981","parent":{"type":"REVIEW","id":"101378561","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000068\u0000101374323\u0000":{"address":{"type":"REVIEW","id":"101374323","pull":{"type":"PULL","number":"68","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/68#pullrequestreview-101374323","state":"APPROVED","comments":[],"body":"nice encapsulation","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000069\u0000101374848\u0000":{"address":{"type":"REVIEW","id":"101374848","pull":{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/69#pullrequestreview-101374848","state":"APPROVED","comments":[],"body":"lgtm","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000070\u0000101405091\u0000":{"address":{"type":"REVIEW","id":"101405091","pull":{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/70#pullrequestreview-101405091","state":"APPROVED","comments":[{"type":"COMMENT","id":"172396660","parent":{"type":"REVIEW","id":"101405091","pull":{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM modulo style nit.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000071\u0000101404772\u0000":{"address":{"type":"REVIEW","id":"101404772","pull":{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/71#pullrequestreview-101404772","state":"APPROVED","comments":[{"type":"COMMENT","id":"172396375","parent":{"type":"REVIEW","id":"101404772","pull":{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM, with one optional suggestion.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104290997\u0000":{"address":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104290997","state":"COMMENTED","comments":[{"type":"COMMENT","id":"174856304","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"174860619","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"174861199","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"174868746","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352639\u0000":{"address":{"type":"REVIEW","id":"104352639","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104352639","state":"COMMENTED","comments":[{"type":"COMMENT","id":"174908240","parent":{"type":"REVIEW","id":"104352639","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352712\u0000":{"address":{"type":"REVIEW","id":"104352712","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104352712","state":"COMMENTED","comments":[{"type":"COMMENT","id":"174908303","parent":{"type":"REVIEW","id":"104352712","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352770\u0000":{"address":{"type":"REVIEW","id":"104352770","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104352770","state":"COMMENTED","comments":[{"type":"COMMENT","id":"174908380","parent":{"type":"REVIEW","id":"104352770","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352799\u0000":{"address":{"type":"REVIEW","id":"104352799","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104352799","state":"COMMENTED","comments":[{"type":"COMMENT","id":"174908411","parent":{"type":"REVIEW","id":"104352799","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104393600\u0000":{"address":{"type":"REVIEW","id":"104393600","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#pullrequestreview-104393600","state":"APPROVED","comments":[{"type":"COMMENT","id":"174943685","parent":{"type":"REVIEW","id":"104393600","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000077\u0000104425699\u0000":{"address":{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#pullrequestreview-104425699","state":"APPROVED","comments":[{"type":"COMMENT","id":"174971751","parent":{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"174972985","parent":{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good overall, I have some suggestions on making the naming clearer.\r\n\r\nRegarding the canonicalization issue - I don't understand why the test script will require canonicalization going forward. The responsibility of the test script is to test that one piece we won't put into standard CI, which is hitting Github's live API with an API key. However, so long as the test script only compares the result of running fetchGithubRepo in the past to the result of running fetchGithubRepo at present (i.e. it is basically a manually-implemented snapshot test), the canonicalization in fetchGithubRepo is sufficient. The data source that doesn't canonicalize (manually running curl against the API using the new query) isn't expected to be part of the future test plan, so there isn't a need to accomodate it in the script; your having checked in the output query in snapshot form is sufficient. No?\r\n\r\nThat said, there's basically no cost to putting canonicalization back in the test script, so you're free to do that if you wish.\r\n","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000078\u0000104662093\u0000":{"address":{"type":"REVIEW","id":"104662093","pull":{"type":"PULL","number":"78","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/78#pullrequestreview-104662093","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000079\u0000104758230\u0000":{"address":{"type":"REVIEW","id":"104758230","pull":{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/79#pullrequestreview-104758230","state":"APPROVED","comments":[],"body":"nice tests.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000080\u0000104758239\u0000":{"address":{"type":"REVIEW","id":"104758239","pull":{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/80#pullrequestreview-104758239","state":"APPROVED","comments":[],"body":"This looks distantly familiar! :-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000081\u0000104758999\u0000":{"address":{"type":"REVIEW","id":"104758999","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#pullrequestreview-104758999","state":"COMMENTED","comments":[],"body":"First-pass comments in https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373899511.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000081\u0000105101229\u0000":{"address":{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#pullrequestreview-105101229","state":"APPROVED","comments":[{"type":"COMMENT","id":"175553358","parent":{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175556290","parent":{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good. (I didn't review the big snapshot, but I reviewed the little ones.) Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000083\u0000104774323\u0000":{"address":{"type":"REVIEW","id":"104774323","pull":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/83#pullrequestreview-104774323","state":"APPROVED","comments":[],"body":"Cool","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000084\u0000104818759\u0000":{"address":{"type":"REVIEW","id":"104818759","pull":{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/84#pullrequestreview-104818759","state":"APPROVED","comments":[],"body":"next time there's a fork+modify pattern, please consider forking in one commit, and modifying in a second one. we can squash them together for nice history, but it would make the review a bit easier.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000087\u0000105148125\u0000":{"address":{"type":"REVIEW","id":"105148125","pull":{"type":"PULL","number":"87","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/87#pullrequestreview-105148125","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000088\u0000105158497\u0000":{"address":{"type":"REVIEW","id":"105158497","pull":{"type":"PULL","number":"88","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/88#pullrequestreview-105158497","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000089\u0000105162526\u0000":{"address":{"type":"REVIEW","id":"105162526","pull":{"type":"PULL","number":"89","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/89#pullrequestreview-105162526","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105191693\u0000":{"address":{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#pullrequestreview-105191693","state":"APPROVED","comments":[{"type":"COMMENT","id":"175631387","parent":{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175631420","parent":{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM, two nits","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105206517\u0000":{"address":{"type":"REVIEW","id":"105206517","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#pullrequestreview-105206517","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175644461","parent":{"type":"REVIEW","id":"105206517","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105206543\u0000":{"address":{"type":"REVIEW","id":"105206543","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#pullrequestreview-105206543","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175644488","parent":{"type":"REVIEW","id":"105206543","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000091\u0000105254836\u0000":{"address":{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/91#pullrequestreview-105254836","state":"APPROVED","comments":[{"type":"COMMENT","id":"175686809","parent":{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175827393","parent":{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000092\u0000105486328\u0000":{"address":{"type":"REVIEW","id":"105486328","pull":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/92#pullrequestreview-105486328","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000093\u0000105542088\u0000":{"address":{"type":"REVIEW","id":"105542088","pull":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/93#pullrequestreview-105542088","state":"APPROVED","comments":[{"type":"COMMENT","id":"175927376","parent":{"type":"REVIEW","id":"105542088","pull":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105423063\u0000":{"address":{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#pullrequestreview-105423063","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175828378","parent":{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175828499","parent":{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good overall","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105540817\u0000":{"address":{"type":"REVIEW","id":"105540817","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#pullrequestreview-105540817","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175926250","parent":{"type":"REVIEW","id":"105540817","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105541051\u0000":{"address":{"type":"REVIEW","id":"105541051","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#pullrequestreview-105541051","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175926438","parent":{"type":"REVIEW","id":"105541051","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105559917\u0000":{"address":{"type":"REVIEW","id":"105559917","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#pullrequestreview-105559917","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000095\u0000105498359\u0000":{"address":{"type":"REVIEW","id":"105498359","pull":{"type":"PULL","number":"95","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/95#pullrequestreview-105498359","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000096\u0000105522282\u0000":{"address":{"type":"REVIEW","id":"105522282","pull":{"type":"PULL","number":"96","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/96#pullrequestreview-105522282","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000097\u0000105561088\u0000":{"address":{"type":"REVIEW","id":"105561088","pull":{"type":"PULL","number":"97","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/97#pullrequestreview-105561088","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000":{"address":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105574298","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175955184","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175955714","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175956110","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175956241","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175963896","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175964236","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"175965046","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586459\u0000":{"address":{"type":"REVIEW","id":"105586459","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586459","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966006","parent":{"type":"REVIEW","id":"105586459","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586481\u0000":{"address":{"type":"REVIEW","id":"105586481","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586481","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966041","parent":{"type":"REVIEW","id":"105586481","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586484\u0000":{"address":{"type":"REVIEW","id":"105586484","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586484","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966043","parent":{"type":"REVIEW","id":"105586484","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586488\u0000":{"address":{"type":"REVIEW","id":"105586488","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586488","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966045","parent":{"type":"REVIEW","id":"105586488","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586494\u0000":{"address":{"type":"REVIEW","id":"105586494","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586494","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966051","parent":{"type":"REVIEW","id":"105586494","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586880\u0000":{"address":{"type":"REVIEW","id":"105586880","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105586880","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966399","parent":{"type":"REVIEW","id":"105586880","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105587120\u0000":{"address":{"type":"REVIEW","id":"105587120","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105587120","state":"APPROVED","comments":[],"body":"Looks great!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105587260\u0000":{"address":{"type":"REVIEW","id":"105587260","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#pullrequestreview-105587260","state":"COMMENTED","comments":[{"type":"COMMENT","id":"175966728","parent":{"type":"REVIEW","id":"105587260","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000099\u0000105575313\u0000":{"address":{"type":"REVIEW","id":"105575313","pull":{"type":"PULL","number":"99","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/99#pullrequestreview-105575313","state":"APPROVED","comments":[],"body":"Nice!","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000100\u0000105589418\u0000":{"address":{"type":"REVIEW","id":"105589418","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/100#pullrequestreview-105589418","state":"CHANGES_REQUESTED","comments":[{"type":"COMMENT","id":"175968709","parent":{"type":"REVIEW","id":"105589418","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"sweet","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000100\u0000105589545\u0000":{"address":{"type":"REVIEW","id":"105589545","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/100#pullrequestreview-105589545","state":"APPROVED","comments":[],"body":":tada:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000101\u0000105591364\u0000":{"address":{"type":"REVIEW","id":"105591364","pull":{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/101#pullrequestreview-105591364","state":"APPROVED","comments":[],"body":"Approved, with a TODO to include enzyme and test the interaction. Also, we may want to consider developing the hero of time demo data into a more fully-fledged example case that we can re-use, e.g. here","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105867854\u0000":{"address":{"type":"REVIEW","id":"105867854","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#pullrequestreview-105867854","state":"APPROVED","comments":[{"type":"COMMENT","id":"176205004","parent":{"type":"REVIEW","id":"105867854","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good. I have a minor comment, also:\r\n- Can we yarn remove react-test-renderer?","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105881348\u0000":{"address":{"type":"REVIEW","id":"105881348","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#pullrequestreview-105881348","state":"COMMENTED","comments":[{"type":"COMMENT","id":"176216415","parent":{"type":"REVIEW","id":"105881348","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105883980\u0000":{"address":{"type":"REVIEW","id":"105883980","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#pullrequestreview-105883980","state":"COMMENTED","comments":[{"type":"COMMENT","id":"176218570","parent":{"type":"REVIEW","id":"105883980","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000104\u0000105961064\u0000":{"address":{"type":"REVIEW","id":"105961064","pull":{"type":"PULL","number":"104","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/104#pullrequestreview-105961064","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000106389635\u0000":{"address":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#pullrequestreview-106389635","state":"APPROVED","comments":[{"type":"COMMENT","id":"176648687","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"176649054","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"177135933","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"This PR looks good to me. I've been thinking about a way to get better type-safety on linking nodes' types with payloads by parameterizing over a subtype of `Node`/`Edge` instead of just a payload, but this would be a ~necessary prerequisite anyway.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107000295\u0000":{"address":{"type":"REVIEW","id":"107000295","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#pullrequestreview-107000295","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177172802","parent":{"type":"REVIEW","id":"107000295","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107000720\u0000":{"address":{"type":"REVIEW","id":"107000720","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#pullrequestreview-107000720","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177173158","parent":{"type":"REVIEW","id":"107000720","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107002438\u0000":{"address":{"type":"REVIEW","id":"107002438","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#pullrequestreview-107002438","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177174604","parent":{"type":"REVIEW","id":"107002438","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000106\u0000107021508\u0000":{"address":{"type":"REVIEW","id":"107021508","pull":{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/106#pullrequestreview-107021508","state":"APPROVED","comments":[{"type":"COMMENT","id":"177190682","parent":{"type":"REVIEW","id":"107021508","pull":{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Trusting you that the snapshots are fine. :-)\r\n\r\nLGTM, modulo one nit.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000107\u0000107033662\u0000":{"address":{"type":"REVIEW","id":"107033662","pull":{"type":"PULL","number":"107","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/107#pullrequestreview-107033662","state":"APPROVED","comments":[],"body":"LGTM","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000108\u0000107059806\u0000":{"address":{"type":"REVIEW","id":"107059806","pull":{"type":"PULL","number":"108","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/108#pullrequestreview-107059806","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000109\u0000107069780\u0000":{"address":{"type":"REVIEW","id":"107069780","pull":{"type":"PULL","number":"109","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/109#pullrequestreview-107069780","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000110\u0000107096025\u0000":{"address":{"type":"REVIEW","id":"107096025","pull":{"type":"PULL","number":"110","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/110#pullrequestreview-107096025","state":"APPROVED","comments":[],"body":"INSTA REVIEW","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000111\u0000107132098\u0000":{"address":{"type":"REVIEW","id":"107132098","pull":{"type":"PULL","number":"111","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/111#pullrequestreview-107132098","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000112\u0000107133407\u0000":{"address":{"type":"REVIEW","id":"107133407","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/112#pullrequestreview-107133407","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177289999","parent":{"type":"REVIEW","id":"107133407","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000112\u0000107136464\u0000":{"address":{"type":"REVIEW","id":"107136464","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/112#pullrequestreview-107136464","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177292846","parent":{"type":"REVIEW","id":"107136464","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000112\u0000107136933\u0000":{"address":{"type":"REVIEW","id":"107136933","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/112#pullrequestreview-107136933","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000113\u0000107132626\u0000":{"address":{"type":"REVIEW","id":"107132626","pull":{"type":"PULL","number":"113","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/113#pullrequestreview-107132626","state":"APPROVED","comments":[],"body":"LGTM; again, I'm trusting you on the snapshots. :-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000114\u0000107138003\u0000":{"address":{"type":"REVIEW","id":"107138003","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/114#pullrequestreview-107138003","state":"APPROVED","comments":[{"type":"COMMENT","id":"177294373","parent":{"type":"REVIEW","id":"107138003","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000114\u0000107139169\u0000":{"address":{"type":"REVIEW","id":"107139169","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/114#pullrequestreview-107139169","state":"COMMENTED","comments":[{"type":"COMMENT","id":"177295423","parent":{"type":"REVIEW","id":"107139169","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000115\u0000107141373\u0000":{"address":{"type":"REVIEW","id":"107141373","pull":{"type":"PULL","number":"115","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/115#pullrequestreview-107141373","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000116\u0000107145559\u0000":{"address":{"type":"REVIEW","id":"107145559","pull":{"type":"PULL","number":"116","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/116#pullrequestreview-107145559","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000118\u0000109587382\u0000":{"address":{"type":"REVIEW","id":"109587382","pull":{"type":"PULL","number":"118","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/118#pullrequestreview-109587382","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109589512\u0000":{"address":{"type":"REVIEW","id":"109589512","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#pullrequestreview-109589512","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179361436","parent":{"type":"REVIEW","id":"109589512","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109589883\u0000":{"address":{"type":"REVIEW","id":"109589883","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#pullrequestreview-109589883","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179361768","parent":{"type":"REVIEW","id":"109589883","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109590292\u0000":{"address":{"type":"REVIEW","id":"109590292","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#pullrequestreview-109590292","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179362102","parent":{"type":"REVIEW","id":"109590292","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109590319\u0000":{"address":{"type":"REVIEW","id":"109590319","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#pullrequestreview-109590319","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000120\u0000109595904\u0000":{"address":{"type":"REVIEW","id":"109595904","pull":{"type":"PULL","number":"120","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/120#pullrequestreview-109595904","state":"APPROVED","comments":[],"body":"I like this PR a lot. very clean :)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000":{"address":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#pullrequestreview-109601075","state":"APPROVED","comments":[{"type":"COMMENT","id":"179371552","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179372842","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179373377","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179373941","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179374038","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179375571","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Very nice. The documentation is lovely, the code is pretty clear, and the test cases are entertaining.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109607696\u0000":{"address":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#pullrequestreview-109607696","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179377196","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179377406","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179378736","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Glad that you enjoyed.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109610775\u0000":{"address":{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#pullrequestreview-109610775","state":"APPROVED","comments":[{"type":"COMMENT","id":"179379760","parent":{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179380552","parent":{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109612592\u0000":{"address":{"type":"REVIEW","id":"109612592","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#pullrequestreview-109612592","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179381366","parent":{"type":"REVIEW","id":"109612592","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109613370\u0000":{"address":{"type":"REVIEW","id":"109613370","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#pullrequestreview-109613370","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179382154","parent":{"type":"REVIEW","id":"109613370","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109618316\u0000":{"address":{"type":"REVIEW","id":"109618316","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#pullrequestreview-109618316","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179386422","parent":{"type":"REVIEW","id":"109618316","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109616076\u0000":{"address":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109616076","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179384452","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179384940","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179385740","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"It would be nice to have a docstring that explains how the pieces of postQueryExhaustive fit together.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109619155\u0000":{"address":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109619155","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179387155","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179387386","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179387853","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> It would be nice to have a docstring that explains how the pieces of postQueryExhaustive fit together.\r\n\r\nRe-reading the function definitions, this is reasonable. I’ll add it.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109624099\u0000":{"address":{"type":"REVIEW","id":"109624099","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109624099","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179391469","parent":{"type":"REVIEW","id":"109624099","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109945582\u0000":{"address":{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109945582","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179659267","parent":{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179659721","parent":{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Overall, looks good to me. I like your use of snapshot testing and mocking the postQuery function to test the behavior. I'd like that test not to depend on the actual query though, for reasons I lay out in a comment.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109947256\u0000":{"address":{"type":"REVIEW","id":"109947256","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109947256","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179660741","parent":{"type":"REVIEW","id":"109947256","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109948076\u0000":{"address":{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109948076","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179661493","parent":{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179661600","parent":{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109986822\u0000":{"address":{"type":"REVIEW","id":"109986822","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#pullrequestreview-109986822","state":"APPROVED","comments":[{"type":"COMMENT","id":"179694267","parent":{"type":"REVIEW","id":"109986822","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Excellent work with this sequence of PRs!","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000":{"address":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110245933","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179907718","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907784","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907796","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907808","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907817","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907853","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179907862","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Thanks for updating. Looks good overall. Some suggestions inline. One\r\noverall Markdown comment: for links in the flow of text, could you\r\nplease use anchors instead of embedding the full links? Like so:\r\n\r\n```markdown\r\nSome text with a [hyperlink], which can be named if, for example, [the\r\nlink anchor is really, really long][anchors].\r\n\r\n[hyperlink]: https://en.wikipedia.org/wiki/Hyperlink\r\n[anchors]: https://en.wikipedia.org/wiki/Hyperlink#Anchor\r\n```\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255888\u0000":{"address":{"type":"REVIEW","id":"110255888","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110255888","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917121","parent":{"type":"REVIEW","id":"110255888","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255910\u0000":{"address":{"type":"REVIEW","id":"110255910","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110255910","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917146","parent":{"type":"REVIEW","id":"110255910","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255924\u0000":{"address":{"type":"REVIEW","id":"110255924","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110255924","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917159","parent":{"type":"REVIEW","id":"110255924","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256030\u0000":{"address":{"type":"REVIEW","id":"110256030","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110256030","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917260","parent":{"type":"REVIEW","id":"110256030","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256062\u0000":{"address":{"type":"REVIEW","id":"110256062","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110256062","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917292","parent":{"type":"REVIEW","id":"110256062","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256202\u0000":{"address":{"type":"REVIEW","id":"110256202","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110256202","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917446","parent":{"type":"REVIEW","id":"110256202","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256348\u0000":{"address":{"type":"REVIEW","id":"110256348","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110256348","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179917584","parent":{"type":"REVIEW","id":"110256348","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000":{"address":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110257536","state":"APPROVED","comments":[{"type":"COMMENT","id":"179918694","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918728","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918759","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918804","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918875","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918971","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179918979","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo comments, and the following global mega-nit: your post-sentence spacing is inconsistent; it doesn’t affect the rendered output, but let’s standardize on one space anyway.\r\n\r\n> I prefer attribution. I know I've said \"cred allocation\" a lot in the past, but \"attribution\" is a better semantic fit - allocation suggests a scarce resource that needs to be divvied up, which cred is not. There's as much cred available as there is work that deserves recognition.\r\n\r\nSGTM.\r\n\r\n> > em dashes\r\n> Done, but why?\r\n\r\nFor the same reason that we use ellipses…instead of three-dots, and “© ® ™” instead of “(C) TM”, and “smart quotes” instead of \"straight quotes\"\\*: it’s the proper typography, as opposed to the vestigial [typewriter habit]. (Good book, by the way.) (LaTeX is an exception---three consecutive hyphens in the _source code_ are rendered as an em-dash ligature in the output. But Markdown is not LaTeX. The Markdown analogy would be `&mdash;`, but there are other arguments against this: primarily, (1) it’s harder to read than just using the correct character; (2) it’s nice to pretend that Markdown doesn’t have an HTML escape hatch, wherever possible, because it makes things like `pandoc` more feasible.)\r\n\r\n\\* I always use smart quotes, but don’t usually complain when other people use straight quotes, including in this PR. :-)\r\n\r\n[typewriter habit]: https://practicaltypography.com/typewriter-habits.html\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329776\u0000":{"address":{"type":"REVIEW","id":"110329776","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110329776","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179988655","parent":{"type":"REVIEW","id":"110329776","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329784\u0000":{"address":{"type":"REVIEW","id":"110329784","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110329784","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179988664","parent":{"type":"REVIEW","id":"110329784","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329842\u0000":{"address":{"type":"REVIEW","id":"110329842","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110329842","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179988713","parent":{"type":"REVIEW","id":"110329842","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329904\u0000":{"address":{"type":"REVIEW","id":"110329904","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110329904","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179988772","parent":{"type":"REVIEW","id":"110329904","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110331281\u0000":{"address":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110331281","state":"APPROVED","comments":[{"type":"COMMENT","id":"179990034","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179990069","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"179990242","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM modulo three small things. :-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332471\u0000":{"address":{"type":"REVIEW","id":"110332471","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110332471","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179991048","parent":{"type":"REVIEW","id":"110332471","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332478\u0000":{"address":{"type":"REVIEW","id":"110332478","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110332478","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179991053","parent":{"type":"REVIEW","id":"110332478","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332490\u0000":{"address":{"type":"REVIEW","id":"110332490","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#pullrequestreview-110332490","state":"COMMENTED","comments":[{"type":"COMMENT","id":"179991059","parent":{"type":"REVIEW","id":"110332490","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000":{"address":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#pullrequestreview-113402856","state":"COMMENTED","comments":[{"type":"COMMENT","id":"182578313","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182578533","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182579056","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182579393","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182579538","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182579556","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182582615","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Main comment: It seems simpler to me to have an enrichment pass where we compute all references (dangling or not) _after_ we have all the nodes. This removes all need to track state and such. Any disadvantages?\r\n\r\nAlso some inlines. Might review more later.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000128\u0000113842786\u0000":{"address":{"type":"REVIEW","id":"113842786","pull":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/128#pullrequestreview-113842786","state":"APPROVED","comments":[],"body":"Sounds great to me. Agreed with implementation. Ship it!\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000":{"address":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-113844822","state":"COMMENTED","comments":[{"type":"COMMENT","id":"182942012","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182942100","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182942124","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182942266","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182942377","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> Keeping the GitHub demo data up-to-date is important, and there isn't\r\n> good documentation for how to do that.\r\n>\r\n> This commit adds a short README.md for the demo data, and a\r\n> regenerate.sh script that can be invoked to easily update it.\r\n\r\nExcellent. Thanks.\r\n\r\n> regenerate.sh was forked from fetchGithubRepoTest.sh.\r\n\r\nCan we instead let `fetchGithubRepoTest.sh` take a `-u|--updateSnapshot`\r\nargument? This way, (a) we reduce code duplication, and (b) we present\r\nan interface consistent with Jest (which we shouldn’t necessarily strive\r\nfor in general, but is a nice benefit).\r\n\r\n> manually run yarn backend rather than trusting the user to hvae done\r\n> it; this ensures correctness, as the user may have changed the query\r\n> since the last rebuild, which would result in outdated results. For\r\n> consistency and correctness, I also updated fetchGithubRepoTest.sh.\r\n\r\nThis is fine with me. It’s not ideal: best would be a Makefile-like\r\nresolution that avoids spurious invocations of `yarn backend`, which\r\ntakes an annoyingly long time. Second-best would be an “override”\r\nargument, but fine to keep as is for now.\r\n\r\n> (To avoid noise in the console, the stdout of the build command is\r\n> redirected to /dev/null. The error message when build fails [1] is\r\n> still reasonably interpretable as a build failure, and the user can\r\n> run yarn backend on their own to see the exact failure.)\r\n\r\nTwo things. First: this is a sneaky way to say, “by the way, we now\r\nsilence all warnings”. I disagree with this change. I believe that the\r\nbenefit of seeing new actual warnings outweighs the loss of a few lines\r\nof terminal space. Second (more minor): if we ever want to run this on\r\nany kind of CI system, the benefit of having the exact errors available\r\nwithout re-running `yarn backend` is increased.\r\n\r\n> confirm that the data was regenerated\r\n\r\n…with no changes. :-)\r\n\r\n> Note: One of the end cursors minutely changed. I do not know why, but\r\n> I verified that it is unrelated to this commit (repros on master).\r\n\r\nStrange. Here are the decoded contents:\r\n```\r\n# Old\r\n00000000: 6375 7273 6f72 3a76 323a 93b9 3230 3138  cursor:v2:..2018\r\n00000010: 2d30 322d 3238 5432 303a 3234 3a35 362d  -02-28T20:24:56-\r\n00000020: 3038 3a30 30b9 3230 3138 2d30 322d 3238  08:00.2018-02-28\r\n00000030: 5432 303a 3234 3a35 362d 3038 3a30 30ce  T20:24:56-08:00.\r\n00000040: 05fa abb6                                ....\r\n\r\n# New\r\n00000000: 6375 7273 6f72 3a76 323a 93b9 3230 3138  cursor:v2:..2018\r\n00000010: 2d30 332d 3031 5430 363a 3234 3a35 362b  -03-01T06:24:56+\r\n00000020: 3032 3a30 30b9 3230 3138 2d30 332d 3031  02:00.2018-03-01\r\n00000030: 5430 363a 3234 3a35 362b 3032 3a30 30ce  T06:24:56+02:00.\r\n00000040: 05fa abb6                                ....\r\n```\r\nHere’s the delta (interpreting as Latin-1):\r\n```\r\ncursor:v2:\u0013¹2018-02-28T20:24:56-08:00¹2018-02-28T20:24:56-08:00Îú«¶\r\ncursor:v2:\u0013¹2018-03-01T06:24:56+02:00¹2018-03-01T06:24:56+02:00Îú«¶\r\n                  ^ ^^ ^^      ^ ^          ^ ^^ ^^      ^ ^        \r\n```\r\nIt looks like the cursors are annotated with timestamps, and these are\r\nthe only parts that changed, but the meanings of the timestamps are not\r\nobvious. It’s not the time at which you run the GraphQL query to\r\ngenerate the data. Also, the timestamps changed by a whole number of\r\nhours!\r\n\r\nLet’s leave this bear asleep for now. If we have cursor drift in this\r\none file, no problem. If it gets really bad, we can set up a cron job to\r\nautomate it (or at least alert us).\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114009400\u0000":{"address":{"type":"REVIEW","id":"114009400","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114009400","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183075947","parent":{"type":"REVIEW","id":"114009400","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011831\u0000":{"address":{"type":"REVIEW","id":"114011831","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114011831","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183077903","parent":{"type":"REVIEW","id":"114011831","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011860\u0000":{"address":{"type":"REVIEW","id":"114011860","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114011860","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183077926","parent":{"type":"REVIEW","id":"114011860","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011936\u0000":{"address":{"type":"REVIEW","id":"114011936","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114011936","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183077990","parent":{"type":"REVIEW","id":"114011936","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114493414\u0000":{"address":{"type":"REVIEW","id":"114493414","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114493414","state":"CHANGES_REQUESTED","comments":[{"type":"COMMENT","id":"183485904","parent":{"type":"REVIEW","id":"114493414","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"nit","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114493716\u0000":{"address":{"type":"REVIEW","id":"114493716","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#pullrequestreview-114493716","state":"APPROVED","comments":[],"body":"yay!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000113849998\u0000":{"address":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-113849998","state":"COMMENTED","comments":[{"type":"COMMENT","id":"182946567","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182946894","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"182948989","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"High-level thoughts:\r\n\r\n 1. I love red diffs!\r\n 2. Changes to numeric and username references look great. However,\r\n    you’re losing functionality with the URL references: the function\r\n    used to provide structured results, but now provides only ugly\r\n    strings. This is a symptom of a bigger problem, explained below.\r\n 3. Usually, I’d nag to put the username reference detection in a\r\n    separate PR, but the red diff put me in a good mood. :-)\r\n\r\nAn immediate fix to avoid losing the structured form of URL references\r\nis to do the following. Expose an additional function\r\n`parseGithubUrlReference` that takes a string that is already expected\r\nto match the regex exactly (i.e., to be an element of a result of\r\n`findGithubUrlReferences`) and projects out the relevant structured\r\nform. (Doing this now makes sense to me, because it enables you to\r\npreserve the detailed test coverage.)\r\n\r\nThe bigger problem is that you actually want the structured form for\r\n_all_ reference kinds. Otherwise, you’ll see client code like:\r\n```js\r\nfindNumericReferences(body).map((x) => {\r\n  const actualNumber = +(x.substr(\"#\".length));\r\n});\r\nfindUsernameReferences(body).map((x) => {\r\n  const actualLogin = x.substr(\"@\".length);\r\n});\r\n```\r\nwhich is ugly at best, and arguably breaks the module encapsulation.\r\n\r\nSo we could have a function `parseReference`, like\r\n`parseGithubUrlReference` above, that extracts the relevant parts of any\r\nreference!\r\n\r\nBut there are two downsides to this. First: we’re using an unnecessary\r\nand limiting intermediate string format. If a reference is\r\ncontext-sensitive then we may not be able to infer all relevant\r\ninformation from the reference itself—consider `Fixes #123`. Second: why\r\nfind the references with structure, throw away the structure, and then\r\nreconstruct it? It seems wasteful and confusing…\r\n\r\n…so this leads us to suspect that perhaps the best solution is for the\r\ncode to just do the right thing from the start. Let `findAllReferences`\r\nreturn a `Reference[]`, where we have types like the following:\r\n```js\r\nexport type NumericReference = {|\r\n  +type: \"NUMERIC\",\r\n  +raw: string,\r\n  +number: number,\r\n|};\r\nexport type UsernameReference = {|\r\n  +type: \"USERNAME\",\r\n  +raw: string,\r\n  +login: string,\r\n|};\r\nexport type IssueReference = {|\r\n  +type: \"ISSUE\",\r\n  +raw: string,\r\n  +repoName: string,\r\n  +repoOwner: string,\r\n  // no `parentType` needed!\r\n  +number: number,\r\n|};\r\n// more, e.g.:\r\nexport type PullRequestReviewCommentReference = {|\r\n  +type: \"PULL_REQUEST_REVIEW_COMMENT\",\r\n  +raw: string,\r\n  +repoName: string,\r\n  +repoOwner: string,\r\n  +number: number,\r\n  +fragmentNumber: number,\r\n|};\r\nexport type Reference = | ...;\r\n```\r\nThen, `findAllReferences` can be the unique export, which is a sign that\r\nwe have a Good API.\r\n\r\nNow, clients can look at the raw form—for printing, maybe, or using as\r\nan ID—and also have access to all the relevant structure.\r\n\r\nWhat do you think?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114565645\u0000":{"address":{"type":"REVIEW","id":"114565645","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-114565645","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183545917","parent":{"type":"REVIEW","id":"114565645","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114565670\u0000":{"address":{"type":"REVIEW","id":"114565670","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-114565670","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183545943","parent":{"type":"REVIEW","id":"114565670","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114566678\u0000":{"address":{"type":"REVIEW","id":"114566678","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-114566678","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183546785","parent":{"type":"REVIEW","id":"114566678","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114567703\u0000":{"address":{"type":"REVIEW","id":"114567703","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-114567703","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183547714","parent":{"type":"REVIEW","id":"114567703","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114568220\u0000":{"address":{"type":"REVIEW","id":"114568220","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#pullrequestreview-114568220","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114425071\u0000":{"address":{"type":"REVIEW","id":"114425071","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#pullrequestreview-114425071","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183428958","parent":{"type":"REVIEW","id":"114425071","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good overall","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114439642\u0000":{"address":{"type":"REVIEW","id":"114439642","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#pullrequestreview-114439642","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183440916","parent":{"type":"REVIEW","id":"114439642","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114468040\u0000":{"address":{"type":"REVIEW","id":"114468040","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#pullrequestreview-114468040","state":"COMMENTED","comments":[],"body":"Looks good overall","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114472173\u0000":{"address":{"type":"REVIEW","id":"114472173","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#pullrequestreview-114472173","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183468364","parent":{"type":"REVIEW","id":"114472173","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114472306\u0000":{"address":{"type":"REVIEW","id":"114472306","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#pullrequestreview-114472306","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000135\u0000114570210\u0000":{"address":{"type":"REVIEW","id":"114570210","pull":{"type":"PULL","number":"135","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/135#pullrequestreview-114570210","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000136\u0000114574296\u0000":{"address":{"type":"REVIEW","id":"114574296","pull":{"type":"PULL","number":"136","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/136#pullrequestreview-114574296","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000137\u0000114577999\u0000":{"address":{"type":"REVIEW","id":"114577999","pull":{"type":"PULL","number":"137","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/137#pullrequestreview-114577999","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000138\u0000114600910\u0000":{"address":{"type":"REVIEW","id":"114600910","pull":{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/138#pullrequestreview-114600910","state":"APPROVED","comments":[{"type":"COMMENT","id":"183576679","parent":{"type":"REVIEW","id":"114600910","pull":{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Fine with me in principle. This is now `parser.test.js`, though, right?","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114867285\u0000":{"address":{"type":"REVIEW","id":"114867285","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114867285","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183799776","parent":{"type":"REVIEW","id":"114867285","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114867796\u0000":{"address":{"type":"REVIEW","id":"114867796","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114867796","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183800178","parent":{"type":"REVIEW","id":"114867796","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868668\u0000":{"address":{"type":"REVIEW","id":"114868668","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114868668","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183800923","parent":{"type":"REVIEW","id":"114868668","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114869127\u0000":{"address":{"type":"REVIEW","id":"114869127","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114869127","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183801287","parent":{"type":"REVIEW","id":"114869127","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000":{"address":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114868346","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183800631","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183801641","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183803023","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183823430","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183825447","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183828489","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000":{"address":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114909111","state":"COMMENTED","comments":[{"type":"COMMENT","id":"183834239","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183834704","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183834801","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183835302","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183838115","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183838696","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114954844\u0000":{"address":{"type":"REVIEW","id":"114954844","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#pullrequestreview-114954844","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000140\u0000114962547\u0000":{"address":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/140#pullrequestreview-114962547","state":"APPROVED","comments":[{"type":"COMMENT","id":"183877699","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183877741","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"183878108","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000140\u0000114963862\u0000":{"address":{"type":"REVIEW","id":"114963862","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/140#pullrequestreview-114963862","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000141\u0000114987725\u0000":{"address":{"type":"REVIEW","id":"114987725","pull":{"type":"PULL","number":"141","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/141#pullrequestreview-114987725","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000142\u0000114991225\u0000":{"address":{"type":"REVIEW","id":"114991225","pull":{"type":"PULL","number":"142","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/142#pullrequestreview-114991225","state":"APPROVED","comments":[],"body":"Approved, with the help of `git show -w`.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000143\u0000114994194\u0000":{"address":{"type":"REVIEW","id":"114994194","pull":{"type":"PULL","number":"143","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/143#pullrequestreview-114994194","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000144\u0000115361099\u0000":{"address":{"type":"REVIEW","id":"115361099","pull":{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/144#pullrequestreview-115361099","state":"APPROVED","comments":[],"body":"Approved, given an offline discussion. Here is a summary of that discussion:\r\n\r\nPoint (in favor): If an external plugin wants to interface with the GitHub graph—say, create an edge from a GitHub user node to some FooPlugin node—then it will need to construct the appropriate ID, and it would be nice if it didn’t have to query a GitHub API to do so. Transparent IDs are helpful in this case.\r\n\r\nCounterpoint: The most salient point (in my opinion) of the preceding statement is that external consumers need to have a way to construct IDs. It seems clear that this should be functionality provided by the GitHub plugin—something like `declare function userNodeAddress(login: string): Address`—and not just expecting clients to do string interpolation or something. This gives us more flexibility: the format is still opaque to clients, but clients have ways to work with these opaque formats.\r\n\r\nPoint (in favor): URLs are already part of GitHub’s contract. If GitHub changes the issue URLs to something else, the web breaks, and so GitHub is incentivized not to do that.\r\n\r\nCounterpoint: True, but they could (and would) just add 301s and make the change anyway, so this doesn’t actually stop them from changing the URL format.\r\n\r\nRelated observation: It looks like GitHub’s GraphQL IDs are guaranteed to be stable; the [`ID` documentation][id] mentions that an ID is “often used to refetch an object or as key for a cache”; neither of these operations makes sense unless the ID is stable.\r\n\r\n[id]: https://developer.github.com/v4/scalar/id/\r\n\r\nPoint (against): Making fundamental API decisions based on snapshot test legibility is clearly questionable.\r\n\r\nCounterpoint: True, but legibility in general _is_ an important criterion, and snapshot test legibility is perhaps a good indicator of overall legibility.\r\n\r\nPoint (in favor): Our whole addressing API will almost certainly be overhauled due to things that we’ve learned since its creation. For instance, the address–payload distinction is very clunky, and we are looking into ways to improve it. So there’s not too much harm in making a decision now that we might reverse later.\r\n\r\nConclusions: We agree that the opaque-IDs-with-exposed-operations is a good paradigm. Given the last point about the early-alpha status of the addressing API, we feel comfortable making this change now with the understanding that we can feel free to change it later.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000145\u0000115399656\u0000":{"address":{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/145#pullrequestreview-115399656","state":"APPROVED","comments":[{"type":"COMMENT","id":"184243903","parent":{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184244092","parent":{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks great! Thanks for putting in the effort to refactor the tests.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000145\u0000115401360\u0000":{"address":{"type":"REVIEW","id":"115401360","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/145#pullrequestreview-115401360","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000146\u0000115783754\u0000":{"address":{"type":"REVIEW","id":"115783754","pull":{"type":"PULL","number":"146","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/146#pullrequestreview-115783754","state":"APPROVED","comments":[],"body":"All looks good. Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000":{"address":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#pullrequestreview-115798679","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184573583","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184574736","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184574774","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184574850","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184574937","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good; some small changes.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115800925\u0000":{"address":{"type":"REVIEW","id":"115800925","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#pullrequestreview-115800925","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184575496","parent":{"type":"REVIEW","id":"115800925","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115801024\u0000":{"address":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#pullrequestreview-115801024","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184575585","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184575670","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184575682","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115802779\u0000":{"address":{"type":"REVIEW","id":"115802779","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#pullrequestreview-115802779","state":"APPROVED","comments":[],"body":"Great; thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000149\u0000115803635\u0000":{"address":{"type":"REVIEW","id":"115803635","pull":{"type":"PULL","number":"149","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/149#pullrequestreview-115803635","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000150\u0000115804047\u0000":{"address":{"type":"REVIEW","id":"115804047","pull":{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/150#pullrequestreview-115804047","state":"APPROVED","comments":[{"type":"COMMENT","id":"184578139","parent":{"type":"REVIEW","id":"115804047","pull":{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000151\u0000115805537\u0000":{"address":{"type":"REVIEW","id":"115805537","pull":{"type":"PULL","number":"151","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/151#pullrequestreview-115805537","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000152\u0000115806074\u0000":{"address":{"type":"REVIEW","id":"115806074","pull":{"type":"PULL","number":"152","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/152#pullrequestreview-115806074","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000153\u0000115806344\u0000":{"address":{"type":"REVIEW","id":"115806344","pull":{"type":"PULL","number":"153","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/153#pullrequestreview-115806344","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000154\u0000115807015\u0000":{"address":{"type":"REVIEW","id":"115807015","pull":{"type":"PULL","number":"154","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/154#pullrequestreview-115807015","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000155\u0000115807611\u0000":{"address":{"type":"REVIEW","id":"115807611","pull":{"type":"PULL","number":"155","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/155#pullrequestreview-115807611","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000156\u0000115808416\u0000":{"address":{"type":"REVIEW","id":"115808416","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/156#pullrequestreview-115808416","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184581964","parent":{"type":"REVIEW","id":"115808416","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000156\u0000115808927\u0000":{"address":{"type":"REVIEW","id":"115808927","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/156#pullrequestreview-115808927","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184582422","parent":{"type":"REVIEW","id":"115808927","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000156\u0000115809335\u0000":{"address":{"type":"REVIEW","id":"115809335","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/156#pullrequestreview-115809335","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810029\u0000":{"address":{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#pullrequestreview-115810029","state":"APPROVED","comments":[{"type":"COMMENT","id":"184583327","parent":{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184583401","parent":{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810217\u0000":{"address":{"type":"REVIEW","id":"115810217","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#pullrequestreview-115810217","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184583478","parent":{"type":"REVIEW","id":"115810217","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810266\u0000":{"address":{"type":"REVIEW","id":"115810266","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#pullrequestreview-115810266","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184583523","parent":{"type":"REVIEW","id":"115810266","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000158\u0000116045282\u0000":{"address":{"type":"REVIEW","id":"116045282","pull":{"type":"PULL","number":"158","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/158#pullrequestreview-116045282","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000159\u0000116045728\u0000":{"address":{"type":"REVIEW","id":"116045728","pull":{"type":"PULL","number":"159","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/159#pullrequestreview-116045728","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000160\u0000116082772\u0000":{"address":{"type":"REVIEW","id":"116082772","pull":{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/160#pullrequestreview-116082772","state":"APPROVED","comments":[],"body":"I'd also like to see a script that (without requiring perms) can check that the example repositories are synced with the source(s) of truth in our repo.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000161\u0000116088409\u0000":{"address":{"type":"REVIEW","id":"116088409","pull":{"type":"PULL","number":"161","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/161#pullrequestreview-116088409","state":"APPROVED","comments":[],"body":":red_circle: :+1: ","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000162\u0000116092182\u0000":{"address":{"type":"REVIEW","id":"116092182","pull":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/162#pullrequestreview-116092182","state":"APPROVED","comments":[{"type":"COMMENT","id":"184813987","parent":{"type":"REVIEW","id":"116092182","pull":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000163\u0000116096590\u0000":{"address":{"type":"REVIEW","id":"116096590","pull":{"type":"PULL","number":"163","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/163#pullrequestreview-116096590","state":"APPROVED","comments":[],"body":"Cool. I didn't carefully look at the whole diff; tests passing is fine with me.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000164\u0000116102626\u0000":{"address":{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/164#pullrequestreview-116102626","state":"APPROVED","comments":[{"type":"COMMENT","id":"184823002","parent":{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184823072","parent":{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Nice. Thanks.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000165\u0000116118477\u0000":{"address":{"type":"REVIEW","id":"116118477","pull":{"type":"PULL","number":"165","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/165#pullrequestreview-116118477","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000166\u0000116118579\u0000":{"address":{"type":"REVIEW","id":"116118579","pull":{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/166#pullrequestreview-116118579","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000168\u0000116119360\u0000":{"address":{"type":"REVIEW","id":"116119360","pull":{"type":"PULL","number":"168","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/168#pullrequestreview-116119360","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116120885\u0000":{"address":{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#pullrequestreview-116120885","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839256","parent":{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184839473","parent":{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Would it be feasible to have a test case that examines a particular known path thru the repo?\r\n\r\nEg.:\r\n\r\n```\r\ncommit(A) -> tree(A) -> TreeEntry(A,B) -> Tree(B) -> TreeEntry(B,x) -> Blob(x)\r\n```\r\n\r\nHaving one specific case that we've verified, in addition to the general property checks, would give me a lot of confidence in the correctness.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116386453\u0000":{"address":{"type":"REVIEW","id":"116386453","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#pullrequestreview-116386453","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185068122","parent":{"type":"REVIEW","id":"116386453","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116386627\u0000":{"address":{"type":"REVIEW","id":"116386627","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#pullrequestreview-116386627","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185068269","parent":{"type":"REVIEW","id":"116386627","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116456307\u0000":{"address":{"type":"REVIEW","id":"116456307","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#pullrequestreview-116456307","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000":{"address":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116120803","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839138","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184839161","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184839250","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184839308","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"First: the client API, as used in the test code, looks very nice and clean.\r\n\r\nSecond: I appreciate that the `Post` and `Commentable` types are private and not exported. This seems like a good decision (and I’m glad that it’s possible)—I would not be surprised if there were some churn in this implementation.\r\n\r\nRegarding these `Post` and `Commentable` types: although they use inheritance, I don’t really see anything wrong with them right now! Inheritance without overriding functions is, I think, pretty benign. So I’m very happy to give it a shot.\r\n\r\nUndeveloped food for thought: another pattern that we could consider is to have something like\r\n\r\n```js\r\nconst commentable = (C) =>\r\n  class extends C {\r\n    comments() { /* … */ }\r\n  };\r\nconst post = (C) =>\r\n  class extends C {\r\n    authors() { /* … */ }\r\n    body() { /* … */ }\r\n  };\r\nconst issueLike = (C) =>\r\n  class extends C {\r\n    number() { /* … */ }\r\n    title() { /* … */ }\r\n  };\r\nexport const Issue = commentable(\r\n  post(\r\n    issueLike(\r\n      class Issue extends GithubEntity<IssueNodePayload> {\r\n        number() { /* … */ }\r\n      }\r\n    )\r\n  )\r\n);\r\n```\r\n\r\n**edit** to add: A reason that we might want this is that it lets you have a `commentable` that is not a `post`, for instance. There’s no fixed hierarchy.\r\n\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121106\u0000":{"address":{"type":"REVIEW","id":"116121106","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116121106","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839574","parent":{"type":"REVIEW","id":"116121106","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121171\u0000":{"address":{"type":"REVIEW","id":"116121171","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116121171","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839706","parent":{"type":"REVIEW","id":"116121171","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121174\u0000":{"address":{"type":"REVIEW","id":"116121174","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116121174","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839710","parent":{"type":"REVIEW","id":"116121174","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121256\u0000":{"address":{"type":"REVIEW","id":"116121256","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116121256","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184839832","parent":{"type":"REVIEW","id":"116121256","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121404\u0000":{"address":{"type":"REVIEW","id":"116121404","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#pullrequestreview-116121404","state":"APPROVED","comments":[],"body":"Agreed on all counts.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000172\u0000116197734\u0000":{"address":{"type":"REVIEW","id":"116197734","pull":{"type":"PULL","number":"172","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/172#pullrequestreview-116197734","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116187354\u0000":{"address":{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#pullrequestreview-116187354","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184903374","parent":{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"184903411","parent":{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116200245\u0000":{"address":{"type":"REVIEW","id":"116200245","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#pullrequestreview-116200245","state":"COMMENTED","comments":[{"type":"COMMENT","id":"184914230","parent":{"type":"REVIEW","id":"116200245","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116360983\u0000":{"address":{"type":"REVIEW","id":"116360983","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#pullrequestreview-116360983","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185047192","parent":{"type":"REVIEW","id":"116360983","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116361624\u0000":{"address":{"type":"REVIEW","id":"116361624","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#pullrequestreview-116361624","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000":{"address":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#pullrequestreview-116420380","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185096229","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185096951","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185098227","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185099652","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185102001","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good. See inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116453001\u0000":{"address":{"type":"REVIEW","id":"116453001","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#pullrequestreview-116453001","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185123522","parent":{"type":"REVIEW","id":"116453001","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116453018\u0000":{"address":{"type":"REVIEW","id":"116453018","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#pullrequestreview-116453018","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185123538","parent":{"type":"REVIEW","id":"116453018","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116458717\u0000":{"address":{"type":"REVIEW","id":"116458717","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#pullrequestreview-116458717","state":"APPROVED","comments":[{"type":"COMMENT","id":"185128493","parent":{"type":"REVIEW","id":"116458717","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000175\u0000116450121\u0000":{"address":{"type":"REVIEW","id":"116450121","pull":{"type":"PULL","number":"175","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/175#pullrequestreview-116450121","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000176\u0000116475903\u0000":{"address":{"type":"REVIEW","id":"116475903","pull":{"type":"PULL","number":"176","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/176#pullrequestreview-116475903","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000177\u0000116480969\u0000":{"address":{"type":"REVIEW","id":"116480969","pull":{"type":"PULL","number":"177","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/177#pullrequestreview-116480969","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000178\u0000116481723\u0000":{"address":{"type":"REVIEW","id":"116481723","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/178#pullrequestreview-116481723","state":"APPROVED","comments":[{"type":"COMMENT","id":"185148150","parent":{"type":"REVIEW","id":"116481723","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000178\u0000116483280\u0000":{"address":{"type":"REVIEW","id":"116483280","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/178#pullrequestreview-116483280","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185149552","parent":{"type":"REVIEW","id":"116483280","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000179\u0000116483992\u0000":{"address":{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/179#pullrequestreview-116483992","state":"APPROVED","comments":[{"type":"COMMENT","id":"185150175","parent":{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185150240","parent":{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000180\u0000116490738\u0000":{"address":{"type":"REVIEW","id":"116490738","pull":{"type":"PULL","number":"180","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/180#pullrequestreview-116490738","state":"APPROVED","comments":[],"body":"sure","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000181\u0000116491110\u0000":{"address":{"type":"REVIEW","id":"116491110","pull":{"type":"PULL","number":"181","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/181#pullrequestreview-116491110","state":"APPROVED","comments":[],"body":"Cool. We note that there is a related but extant bug where URLs with trailing punctuation match with the punctuation included. The fix is simple.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000182\u0000116495168\u0000":{"address":{"type":"REVIEW","id":"116495168","pull":{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/182#pullrequestreview-116495168","state":"APPROVED","comments":[{"type":"COMMENT","id":"185160463","parent":{"type":"REVIEW","id":"116495168","pull":{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":":+1:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000183\u0000116682511\u0000":{"address":{"type":"REVIEW","id":"116682511","pull":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/183#pullrequestreview-116682511","state":"APPROVED","comments":[],"body":"nice, thanks","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117071195\u0000":{"address":{"type":"REVIEW","id":"117071195","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#pullrequestreview-117071195","state":"CHANGES_REQUESTED","comments":[{"type":"COMMENT","id":"185640129","parent":{"type":"REVIEW","id":"117071195","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> parsing the ID (which should never be required)\r\n\r\nI disagree. Outside of the plugin that generated the ID, parsing the id is inappropriate. However, for the Git plugin to know how to parse Git plugin ids is reasonable. I believe the git plugin should expose (as part of its porcelain API) `getHash`, `getName` type methods that internally get this from the ids.\r\n\r\nAdvantages :\r\n- Avoids a 2x redundancy in memory usage\r\n- Able to retrieve the information given just the address, no payloads required","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117081822\u0000":{"address":{"type":"REVIEW","id":"117081822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#pullrequestreview-117081822","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185648951","parent":{"type":"REVIEW","id":"117081822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117088427\u0000":{"address":{"type":"REVIEW","id":"117088427","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#pullrequestreview-117088427","state":"APPROVED","comments":[{"type":"COMMENT","id":"185654699","parent":{"type":"REVIEW","id":"117088427","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"That's a reasonable position; I'm happy to keep our \"provisional yes, with option to revisit\" bias for handling contentious changes. Also, I think we should add a porcelain API over the git plugin, and expect most API users to use that API, so whether the hashes go in the payload or not will become an implementation detail moreso than an API surface, and hence it will be easy to change.\r\n\r\nThus: Approved, modulo my request that we move the treeHash to the tree instead of the tree entry.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117105822\u0000":{"address":{"type":"REVIEW","id":"117105822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#pullrequestreview-117105822","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185669448","parent":{"type":"REVIEW","id":"117105822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000185\u0000117080610\u0000":{"address":{"type":"REVIEW","id":"117080610","pull":{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/185#pullrequestreview-117080610","state":"APPROVED","comments":[],"body":"The commit description mentions an explanatory comment that doesn't seem to exist.\r\n\r\nI don't feel I have great context on this commit, and the testing is pretty light. That said, I also feel quite willing to approve it: both because it is basically a wrapper around Git, and it seems unlikely that there are subtle bugs in your wrapper, (ie. you've clearly accounted for possible error cases and made them explicit failures), and because submodule handling is a fairly unimportant feature right now.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099205\u0000":{"address":{"type":"REVIEW","id":"117099205","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#pullrequestreview-117099205","state":"APPROVED","comments":[{"type":"COMMENT","id":"185663909","parent":{"type":"REVIEW","id":"117099205","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Minor question, looks good overall.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099508\u0000":{"address":{"type":"REVIEW","id":"117099508","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#pullrequestreview-117099508","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185664147","parent":{"type":"REVIEW","id":"117099508","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099731\u0000":{"address":{"type":"REVIEW","id":"117099731","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#pullrequestreview-117099731","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185664335","parent":{"type":"REVIEW","id":"117099731","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117347169\u0000":{"address":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#pullrequestreview-117347169","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185870099","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185870355","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185870979","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185872134","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I'd be willing to approve this as is, but I'd prefer to see it split into smaller pieces that would be easier to review and would have somewhat more comprehensive tests. E.g. splitting `becomesEdgesForCommits` into its own commit.\r\n\r\nOne behavior that doesn't seem to be well tested is the case where the same `name` reoccurs in multiple different trees, e.g. `/README.md` and `src/README.md` both exist. From reading the code, I'm pretty sure there isn't a bug on this behavior, but it would be nice to see a test.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117356441\u0000":{"address":{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#pullrequestreview-117356441","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185877591","parent":{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185877866","parent":{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"As discussed offline: I’ll split this up into a commit that exposes a\r\nstandalone function in `createGraph` that takes a (high-level)\r\nrepository and returns a (high-level) list of becomes-edges. This makes\r\nit easier to add specific test cases for conditions like the one that\r\nyou mention. Then, I’ll reintegrate this PR to use that function.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000188\u0000117086270\u0000":{"address":{"type":"REVIEW","id":"117086270","pull":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/188#pullrequestreview-117086270","state":"APPROVED","comments":[],"body":"I assume that `BUILD=` as opposed to say, `BUILD=0` is idiom for some good reason. What is that reason?","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000189\u0000117097169\u0000":{"address":{"type":"REVIEW","id":"117097169","pull":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/189#pullrequestreview-117097169","state":"APPROVED","comments":[],"body":"Nice.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000191\u0000117117080\u0000":{"address":{"type":"REVIEW","id":"117117080","pull":{"type":"PULL","number":"191","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/191#pullrequestreview-117117080","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000193\u0000117117185\u0000":{"address":{"type":"REVIEW","id":"117117185","pull":{"type":"PULL","number":"193","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/193#pullrequestreview-117117185","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000195\u0000117373295\u0000":{"address":{"type":"REVIEW","id":"117373295","pull":{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/195#pullrequestreview-117373295","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000196\u0000117384999\u0000":{"address":{"type":"REVIEW","id":"117384999","pull":{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/196#pullrequestreview-117384999","state":"COMMENTED","comments":[],"body":"Looks like a bunch of REFERENCES edges were removed because direct-URL references haven't been updated to use the new URL.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000196\u0000117386533\u0000":{"address":{"type":"REVIEW","id":"117386533","pull":{"type":"PULL","number":"196","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/196#pullrequestreview-117386533","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000197\u0000117388752\u0000":{"address":{"type":"REVIEW","id":"117388752","pull":{"type":"PULL","number":"197","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/197#pullrequestreview-117388752","state":"APPROVED","comments":[],"body":"Contingent approval on providing a quick description. :-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000198\u0000117394754\u0000":{"address":{"type":"REVIEW","id":"117394754","pull":{"type":"PULL","number":"198","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/198#pullrequestreview-117394754","state":"APPROVED","comments":[],"body":"Verified that commit SHAs are correct via https://github.com/sourcecred/example-github/commits/master. LGTM.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000199\u0000117401541\u0000":{"address":{"type":"REVIEW","id":"117401541","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/199#pullrequestreview-117401541","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185913834","parent":{"type":"REVIEW","id":"117401541","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000199\u0000117401796\u0000":{"address":{"type":"REVIEW","id":"117401796","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/199#pullrequestreview-117401796","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000200\u0000117418223\u0000":{"address":{"type":"REVIEW","id":"117418223","pull":{"type":"PULL","number":"200","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/200#pullrequestreview-117418223","state":"APPROVED","comments":[],"body":"Looks good. Nice and easy to read. :-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000201\u0000117417373\u0000":{"address":{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/201#pullrequestreview-117417373","state":"APPROVED","comments":[{"type":"COMMENT","id":"185926383","parent":{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185926535","parent":{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Much easier to review than last time :)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000201\u0000117419435\u0000":{"address":{"type":"REVIEW","id":"117419435","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/201#pullrequestreview-117419435","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185927953","parent":{"type":"REVIEW","id":"117419435","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000202\u0000117419556\u0000":{"address":{"type":"REVIEW","id":"117419556","pull":{"type":"PULL","number":"202","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/202#pullrequestreview-117419556","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117421111\u0000":{"address":{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#pullrequestreview-117421111","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185929333","parent":{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185929416","parent":{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117422949\u0000":{"address":{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#pullrequestreview-117422949","state":"COMMENTED","comments":[{"type":"COMMENT","id":"185930730","parent":{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"185930753","parent":{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117432718\u0000":{"address":{"type":"REVIEW","id":"117432718","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#pullrequestreview-117432718","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000204\u0000117688715\u0000":{"address":{"type":"REVIEW","id":"117688715","pull":{"type":"PULL","number":"204","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/204#pullrequestreview-117688715","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000205\u0000117702104\u0000":{"address":{"type":"REVIEW","id":"117702104","pull":{"type":"PULL","number":"205","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/205#pullrequestreview-117702104","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117713461\u0000":{"address":{"type":"REVIEW","id":"117713461","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#pullrequestreview-117713461","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186176387","parent":{"type":"REVIEW","id":"117713461","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117714188\u0000":{"address":{"type":"REVIEW","id":"117714188","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#pullrequestreview-117714188","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186177001","parent":{"type":"REVIEW","id":"117714188","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117715007\u0000":{"address":{"type":"REVIEW","id":"117715007","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#pullrequestreview-117715007","state":"APPROVED","comments":[{"type":"COMMENT","id":"186177692","parent":{"type":"REVIEW","id":"117715007","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000207\u0000117727382\u0000":{"address":{"type":"REVIEW","id":"117727382","pull":{"type":"PULL","number":"207","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/207#pullrequestreview-117727382","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000208\u0000117783828\u0000":{"address":{"type":"REVIEW","id":"117783828","pull":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/208#pullrequestreview-117783828","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000209\u0000117786433\u0000":{"address":{"type":"REVIEW","id":"117786433","pull":{"type":"PULL","number":"209","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/209#pullrequestreview-117786433","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117783411\u0000":{"address":{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#pullrequestreview-117783411","state":"APPROVED","comments":[{"type":"COMMENT","id":"186234609","parent":{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186235724","parent":{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"This is fine.\r\n\r\nTo serialize some state: we’re pretty dissatisfied with this state of\r\naffairs. Yargs be havin’ more rough edges than the barnacles on me ship,\r\nboth in the parser itself and in its inability to work with Webpack. We\r\nplan to move off of it soon.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117786477\u0000":{"address":{"type":"REVIEW","id":"117786477","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#pullrequestreview-117786477","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186237140","parent":{"type":"REVIEW","id":"117786477","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117786486\u0000":{"address":{"type":"REVIEW","id":"117786486","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#pullrequestreview-117786486","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186237143","parent":{"type":"REVIEW","id":"117786486","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000211\u0000117792017\u0000":{"address":{"type":"REVIEW","id":"117792017","pull":{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/211#pullrequestreview-117792017","state":"COMMENTED","comments":[],"body":"Wonderful.\r\n\r\nCould you please remove the `exprContextCritical: false` line 70 of `webpack.config.backend.js` now?","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000211\u0000117792782\u0000":{"address":{"type":"REVIEW","id":"117792782","pull":{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/211#pullrequestreview-117792782","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000212\u0000117801464\u0000":{"address":{"type":"REVIEW","id":"117801464","pull":{"type":"PULL","number":"212","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/212#pullrequestreview-117801464","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000213\u0000117801496\u0000":{"address":{"type":"REVIEW","id":"117801496","pull":{"type":"PULL","number":"213","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/213#pullrequestreview-117801496","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000214\u0000117801584\u0000":{"address":{"type":"REVIEW","id":"117801584","pull":{"type":"PULL","number":"214","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/214#pullrequestreview-117801584","state":"APPROVED","comments":[],"body":"Cool! Let's hope for this to be a pleasant experience.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000215\u0000117801692\u0000":{"address":{"type":"REVIEW","id":"117801692","pull":{"type":"PULL","number":"215","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/215#pullrequestreview-117801692","state":"APPROVED","comments":[],"body":"don't you dare skip travis","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000216\u0000117822716\u0000":{"address":{"type":"REVIEW","id":"117822716","pull":{"type":"PULL","number":"216","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/216#pullrequestreview-117822716","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000":{"address":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-117822774","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186269977","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186270071","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186270111","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186270155","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186270165","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"A few nits, looks very nice overall :)\r\n\r\nBTW, I spent some time looking into testing oclif with our setup. Unfortunately, it doesn't work out of the box (I had `...it(\"doesn't work\", () => { expect(1).to.equal(2) }` passing). \r\n\r\nBasically, it expects a mocha/chai environment, and just doesn't seem to interact that well with jest. I spent a little time unsuccessfully trying to get a minimal example that I could share with the author, will maybe put some more work into that. But i think for now the \"untested imperative shell\" works just fine (and oclif is clearly superior to the alternatives considered even if we don't have testing for a while)\r\n\r\nIf you decide you want to take a look: oclif-test uses [fancy-test] as a utility library for wrapping the oclif commands. fancy-test is also written by the author of oclif and oclif represents substantively all of its usage. the fancy-test docs suggest that it hasn't been tested with jest but the author is open to getting it to work, so producing a minimal failing fancy-{j}est example would be be a good next step.\r\n\r\n[fancy-test]: https://www.npmjs.com/package/fancy-test","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117823128\u0000":{"address":{"type":"REVIEW","id":"117823128","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-117823128","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186270350","parent":{"type":"REVIEW","id":"117823128","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000":{"address":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-118077899","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186489810","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186490142","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186490224","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186490316","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186490693","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Will revise and resubmit.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118083137\u0000":{"address":{"type":"REVIEW","id":"118083137","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-118083137","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186494294","parent":{"type":"REVIEW","id":"118083137","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118083385\u0000":{"address":{"type":"REVIEW","id":"118083385","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-118083385","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186494473","parent":{"type":"REVIEW","id":"118083385","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000":{"address":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-118106332","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186512952","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186513994","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186515056","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186516010","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186516734","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"feedback without requested change: I think this PR is on the larger side, it would have been easier to review if it were split up (e.g 1-PR-per-command)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118117902\u0000":{"address":{"type":"REVIEW","id":"118117902","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#pullrequestreview-118117902","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000219\u0000118117889\u0000":{"address":{"type":"REVIEW","id":"118117889","pull":{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/219#pullrequestreview-118117889","state":"APPROVED","comments":[],"body":"This makes sense. To be extra sure, could you export your token and run `yarn travis --full`?","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000220\u0000118128305\u0000":{"address":{"type":"REVIEW","id":"118128305","pull":{"type":"PULL","number":"220","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/220#pullrequestreview-118128305","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000221\u0000118128413\u0000":{"address":{"type":"REVIEW","id":"118128413","pull":{"type":"PULL","number":"221","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/221#pullrequestreview-118128413","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000222\u0000118175673\u0000":{"address":{"type":"REVIEW","id":"118175673","pull":{"type":"PULL","number":"222","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/222#pullrequestreview-118175673","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000224\u0000118179954\u0000":{"address":{"type":"REVIEW","id":"118179954","pull":{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/224#pullrequestreview-118179954","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000225\u0000118182797\u0000":{"address":{"type":"REVIEW","id":"118182797","pull":{"type":"PULL","number":"225","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/225#pullrequestreview-118182797","state":"APPROVED","comments":[],"body":"neat.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000226\u0000118183334\u0000":{"address":{"type":"REVIEW","id":"118183334","pull":{"type":"PULL","number":"226","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/226#pullrequestreview-118183334","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000227\u0000118193011\u0000":{"address":{"type":"REVIEW","id":"118193011","pull":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/227#pullrequestreview-118193011","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000228\u0000118192855\u0000":{"address":{"type":"REVIEW","id":"118192855","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/228#pullrequestreview-118192855","state":"APPROVED","comments":[{"type":"COMMENT","id":"186585532","parent":{"type":"REVIEW","id":"118192855","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000228\u0000130194148\u0000":{"address":{"type":"REVIEW","id":"130194148","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/228#pullrequestreview-130194148","state":"COMMENTED","comments":[{"type":"COMMENT","id":"196608077","parent":{"type":"REVIEW","id":"130194148","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000229\u0000118194745\u0000":{"address":{"type":"REVIEW","id":"118194745","pull":{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/229#pullrequestreview-118194745","state":"APPROVED","comments":[{"type":"COMMENT","id":"186587140","parent":{"type":"REVIEW","id":"118194745","pull":{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"neat.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000230\u0000118198389\u0000":{"address":{"type":"REVIEW","id":"118198389","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/230#pullrequestreview-118198389","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186590424","parent":{"type":"REVIEW","id":"118198389","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000230\u0000118198933\u0000":{"address":{"type":"REVIEW","id":"118198933","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/230#pullrequestreview-118198933","state":"APPROVED","comments":[{"type":"COMMENT","id":"186590915","parent":{"type":"REVIEW","id":"118198933","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000231\u0000118210273\u0000":{"address":{"type":"REVIEW","id":"118210273","pull":{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/231#pullrequestreview-118210273","state":"APPROVED","comments":[{"type":"COMMENT","id":"186600984","parent":{"type":"REVIEW","id":"118210273","pull":{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM/nit","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118210432\u0000":{"address":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#pullrequestreview-118210432","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186601130","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186601318","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186601370","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118211071\u0000":{"address":{"type":"REVIEW","id":"118211071","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#pullrequestreview-118211071","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186601684","parent":{"type":"REVIEW","id":"118211071","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118211081\u0000":{"address":{"type":"REVIEW","id":"118211081","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#pullrequestreview-118211081","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186601693","parent":{"type":"REVIEW","id":"118211081","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118211142\u0000":{"address":{"type":"REVIEW","id":"118211142","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#pullrequestreview-118211142","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000233\u0000118216022\u0000":{"address":{"type":"REVIEW","id":"118216022","pull":{"type":"PULL","number":"233","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/233#pullrequestreview-118216022","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000234\u0000118216553\u0000":{"address":{"type":"REVIEW","id":"118216553","pull":{"type":"PULL","number":"234","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/234#pullrequestreview-118216553","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000235\u0000118505491\u0000":{"address":{"type":"REVIEW","id":"118505491","pull":{"type":"PULL","number":"235","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/235#pullrequestreview-118505491","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000236\u0000118505750\u0000":{"address":{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/236#pullrequestreview-118505750","state":"APPROVED","comments":[{"type":"COMMENT","id":"186844689","parent":{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186844861","parent":{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000238\u0000118538080\u0000":{"address":{"type":"REVIEW","id":"118538080","pull":{"type":"PULL","number":"238","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/238#pullrequestreview-118538080","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000239\u0000118538236\u0000":{"address":{"type":"REVIEW","id":"118538236","pull":{"type":"PULL","number":"239","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/239#pullrequestreview-118538236","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000240\u0000118538927\u0000":{"address":{"type":"REVIEW","id":"118538927","pull":{"type":"PULL","number":"240","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/240#pullrequestreview-118538927","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000241\u0000118542389\u0000":{"address":{"type":"REVIEW","id":"118542389","pull":{"type":"PULL","number":"241","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/241#pullrequestreview-118542389","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000242\u0000118546927\u0000":{"address":{"type":"REVIEW","id":"118546927","pull":{"type":"PULL","number":"242","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/242#pullrequestreview-118546927","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000243\u0000118547513\u0000":{"address":{"type":"REVIEW","id":"118547513","pull":{"type":"PULL","number":"243","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/243#pullrequestreview-118547513","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000244\u0000118556909\u0000":{"address":{"type":"REVIEW","id":"118556909","pull":{"type":"PULL","number":"244","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/244#pullrequestreview-118556909","state":"APPROVED","comments":[],"body":":fire:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118560404\u0000":{"address":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#pullrequestreview-118560404","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186890013","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186890114","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"186890327","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118561169\u0000":{"address":{"type":"REVIEW","id":"118561169","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#pullrequestreview-118561169","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186890636","parent":{"type":"REVIEW","id":"118561169","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118561209\u0000":{"address":{"type":"REVIEW","id":"118561209","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#pullrequestreview-118561209","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186890668","parent":{"type":"REVIEW","id":"118561209","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118564202\u0000":{"address":{"type":"REVIEW","id":"118564202","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#pullrequestreview-118564202","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118564203\u0000":{"address":{"type":"REVIEW","id":"118564203","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#pullrequestreview-118564203","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186893331","parent":{"type":"REVIEW","id":"118564203","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000246\u0000118565108\u0000":{"address":{"type":"REVIEW","id":"118565108","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/246#pullrequestreview-118565108","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186894120","parent":{"type":"REVIEW","id":"118565108","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000246\u0000118566240\u0000":{"address":{"type":"REVIEW","id":"118566240","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/246#pullrequestreview-118566240","state":"COMMENTED","comments":[{"type":"COMMENT","id":"186895142","parent":{"type":"REVIEW","id":"118566240","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000246\u0000118568384\u0000":{"address":{"type":"REVIEW","id":"118568384","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/246#pullrequestreview-118568384","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000247\u0000118573555\u0000":{"address":{"type":"REVIEW","id":"118573555","pull":{"type":"PULL","number":"247","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/247#pullrequestreview-118573555","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000248\u0000118572781\u0000":{"address":{"type":"REVIEW","id":"118572781","pull":{"type":"PULL","number":"248","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/248#pullrequestreview-118572781","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000249\u0000118573422\u0000":{"address":{"type":"REVIEW","id":"118573422","pull":{"type":"PULL","number":"249","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/249#pullrequestreview-118573422","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000250\u0000118607768\u0000":{"address":{"type":"REVIEW","id":"118607768","pull":{"type":"PULL","number":"250","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/250#pullrequestreview-118607768","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000251\u0000118841022\u0000":{"address":{"type":"REVIEW","id":"118841022","pull":{"type":"PULL","number":"251","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/251#pullrequestreview-118841022","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000":{"address":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118920629","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187189209","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187189257","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187192948","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187193037","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187193359","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"throughout the file: please add function arg type signatures","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118926858\u0000":{"address":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118926858","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187194747","parent":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187194817","parent":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118927214\u0000":{"address":{"type":"REVIEW","id":"118927214","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118927214","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187195043","parent":{"type":"REVIEW","id":"118927214","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000":{"address":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118936809","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187203137","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187203295","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187203408","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187203471","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187203800","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187205074","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187205543","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187206497","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> throughout the file: please add function arg type signatures\r\n\r\nHow should I do this when the arguments are tensors? As far as I can\r\ntell, neither `tfjs-core` nor `deeplearn.js` has flow-typed bindings.\r\n\r\n> Note: as of this PR, `yarn test` now prints the following warning:\r\n\r\nThat makes sense. I don’t mind having that for now. What do you think?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118941918\u0000":{"address":{"type":"REVIEW","id":"118941918","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118941918","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187207478","parent":{"type":"REVIEW","id":"118941918","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118942135\u0000":{"address":{"type":"REVIEW","id":"118942135","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118942135","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187207663","parent":{"type":"REVIEW","id":"118942135","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118942350\u0000":{"address":{"type":"REVIEW","id":"118942350","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118942350","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187207856","parent":{"type":"REVIEW","id":"118942350","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118982922\u0000":{"address":{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-118982922","state":"APPROVED","comments":[{"type":"COMMENT","id":"187243770","parent":{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187244099","parent":{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved with a small nit.\r\nNice changes; I like the use of `$Call<tf.tensor2d>` and really like the `AddressMap` interface for PageRank. It will enable my downstream PageRank UI code to be much cleaner. Also, I just think it's neat that we're finding uses for `AddressMap` elsewhere, I have a feeling this is far from the last instance :+1:. (I wonder if #67 will earn a lot of cred?). Binding data with just the address also corroborates the interface for the porcelain, where one references just the Address and then rehydrates the data via the graph.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000119169448\u0000":{"address":{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#pullrequestreview-119169448","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187396325","parent":{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187396351","parent":{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000253\u0000119185995\u0000":{"address":{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/253#pullrequestreview-119185995","state":"APPROVED","comments":[{"type":"COMMENT","id":"187409979","parent":{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187413276","parent":{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"LGTM/nits","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000254\u0000119191581\u0000":{"address":{"type":"REVIEW","id":"119191581","pull":{"type":"PULL","number":"254","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/254#pullrequestreview-119191581","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000255\u0000119193288\u0000":{"address":{"type":"REVIEW","id":"119193288","pull":{"type":"PULL","number":"255","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/255#pullrequestreview-119193288","state":"APPROVED","comments":[],"body":"Testing only the success case seems fine to me.\r\n\r\n<sub>(edited for spelling)</sub>","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000257\u0000119193731\u0000":{"address":{"type":"REVIEW","id":"119193731","pull":{"type":"PULL","number":"257","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/257#pullrequestreview-119193731","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000258\u0000119215462\u0000":{"address":{"type":"REVIEW","id":"119215462","pull":{"type":"PULL","number":"258","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/258#pullrequestreview-119215462","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000259\u0000119216007\u0000":{"address":{"type":"REVIEW","id":"119216007","pull":{"type":"PULL","number":"259","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/259#pullrequestreview-119216007","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119218959\u0000":{"address":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#pullrequestreview-119218959","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187436916","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187437039","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187437712","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187437930","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I like this. It's definitely easier to read. Nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119221778\u0000":{"address":{"type":"REVIEW","id":"119221778","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#pullrequestreview-119221778","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000261\u0000119245080\u0000":{"address":{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/261#pullrequestreview-119245080","state":"APPROVED","comments":[{"type":"COMMENT","id":"187458246","parent":{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187458399","parent":{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Cool. Nit: I'd prefer lowercase descriptions over sentence case descriptions over title case descriptions, so `review comment` better than `Review comment` better than `Review Comment`.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000262\u0000119246371\u0000":{"address":{"type":"REVIEW","id":"119246371","pull":{"type":"PULL","number":"262","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/262#pullrequestreview-119246371","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000263\u0000119255909\u0000":{"address":{"type":"REVIEW","id":"119255909","pull":{"type":"PULL","number":"263","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/263#pullrequestreview-119255909","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119255674\u0000":{"address":{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119255674","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187466627","parent":{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187466684","parent":{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"submitting partial review because GH won't let me add more comments","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119257063\u0000":{"address":{"type":"REVIEW","id":"119257063","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119257063","state":"COMMENTED","comments":[],"body":"another partial review","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119258323\u0000":{"address":{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119258323","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187468751","parent":{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"187468863","parent":{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119259432\u0000":{"address":{"type":"REVIEW","id":"119259432","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119259432","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187469662","parent":{"type":"REVIEW","id":"119259432","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119259443\u0000":{"address":{"type":"REVIEW","id":"119259443","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119259443","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187469669","parent":{"type":"REVIEW","id":"119259443","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119259770\u0000":{"address":{"type":"REVIEW","id":"119259770","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#pullrequestreview-119259770","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000265\u0000119285696\u0000":{"address":{"type":"REVIEW","id":"119285696","pull":{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/265#pullrequestreview-119285696","state":"APPROVED","comments":[],"body":"Cool. I find this really easy to read.\r\n\r\nIn principle, I would like to see UI interaction tests for this code. But we don't have to write these right now. If you want to write them, feel free; otherwise, I'm happy to.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000266\u0000119561769\u0000":{"address":{"type":"REVIEW","id":"119561769","pull":{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/266#pullrequestreview-119561769","state":"APPROVED","comments":[],"body":"It needs more documentation and tests, but that can come in future PRs.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000267\u0000119566062\u0000":{"address":{"type":"REVIEW","id":"119566062","pull":{"type":"PULL","number":"267","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/267#pullrequestreview-119566062","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000271\u0000119612735\u0000":{"address":{"type":"REVIEW","id":"119612735","pull":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/271#pullrequestreview-119612735","state":"APPROVED","comments":[],"body":"Nicely documented, thank you.\r\nI don't believe this code should live in `src/app/credExplorer`. The easiest way to keep the blame easily intelligible is to do your moves upfront. Would you mind moving this (and the downstream PRs) into a different directory before merging?","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000272\u0000119612427\u0000":{"address":{"type":"REVIEW","id":"119612427","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/272#pullrequestreview-119612427","state":"APPROVED","comments":[{"type":"COMMENT","id":"187760284","parent":{"type":"REVIEW","id":"119612427","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000272\u0000119614718\u0000":{"address":{"type":"REVIEW","id":"119614718","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/272#pullrequestreview-119614718","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187762228","parent":{"type":"REVIEW","id":"119614718","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000273\u0000119612913\u0000":{"address":{"type":"REVIEW","id":"119612913","pull":{"type":"PULL","number":"273","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/273#pullrequestreview-119612913","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000274\u0000119612998\u0000":{"address":{"type":"REVIEW","id":"119612998","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/274#pullrequestreview-119612998","state":"APPROVED","comments":[{"type":"COMMENT","id":"187760775","parent":{"type":"REVIEW","id":"119612998","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000274\u0000119614731\u0000":{"address":{"type":"REVIEW","id":"119614731","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/274#pullrequestreview-119614731","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187762242","parent":{"type":"REVIEW","id":"119614731","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000275\u0000119613260\u0000":{"address":{"type":"REVIEW","id":"119613260","pull":{"type":"PULL","number":"275","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/275#pullrequestreview-119613260","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000276\u0000119613286\u0000":{"address":{"type":"REVIEW","id":"119613286","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/276#pullrequestreview-119613286","state":"APPROVED","comments":[{"type":"COMMENT","id":"187761022","parent":{"type":"REVIEW","id":"119613286","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000276\u0000119614737\u0000":{"address":{"type":"REVIEW","id":"119614737","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/276#pullrequestreview-119614737","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187762247","parent":{"type":"REVIEW","id":"119614737","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000277\u0000119613522\u0000":{"address":{"type":"REVIEW","id":"119613522","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/277#pullrequestreview-119613522","state":"APPROVED","comments":[{"type":"COMMENT","id":"187761225","parent":{"type":"REVIEW","id":"119613522","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Lovely test cases.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000277\u0000119614439\u0000":{"address":{"type":"REVIEW","id":"119614439","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/277#pullrequestreview-119614439","state":"COMMENTED","comments":[{"type":"COMMENT","id":"187762006","parent":{"type":"REVIEW","id":"119614439","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000278\u0000119612289\u0000":{"address":{"type":"REVIEW","id":"119612289","pull":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/278#pullrequestreview-119612289","state":"APPROVED","comments":[],"body":"Very nice performance improvements, and nicely documented, thank you.\r\nI mentioned over text that I had another idea on how to improve AddressMap serialization. That idea is more invasive, and is best implemented as a re-write of the graph rather than the AddressMap. So, I support merging this change as it is an large and unambiguous performance win. :+1: ","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119967317\u0000":{"address":{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#pullrequestreview-119967317","state":"COMMENTED","comments":[{"type":"COMMENT","id":"188063202","parent":{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"188065679","parent":{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"partial review","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119974448\u0000":{"address":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#pullrequestreview-119974448","state":"COMMENTED","comments":[{"type":"COMMENT","id":"188069050","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"188069511","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"188069799","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119976582\u0000":{"address":{"type":"REVIEW","id":"119976582","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#pullrequestreview-119976582","state":"COMMENTED","comments":[{"type":"COMMENT","id":"188070807","parent":{"type":"REVIEW","id":"119976582","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119981287\u0000":{"address":{"type":"REVIEW","id":"119981287","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#pullrequestreview-119981287","state":"APPROVED","comments":[],"body":"lgtm","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000284\u0000120060141\u0000":{"address":{"type":"REVIEW","id":"120060141","pull":{"type":"PULL","number":"284","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/284#pullrequestreview-120060141","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000285\u0000120457161\u0000":{"address":{"type":"REVIEW","id":"120457161","pull":{"type":"PULL","number":"285","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/285#pullrequestreview-120457161","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000286\u0000120459485\u0000":{"address":{"type":"REVIEW","id":"120459485","pull":{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/286#pullrequestreview-120459485","state":"APPROVED","comments":[{"type":"COMMENT","id":"188473797","parent":{"type":"REVIEW","id":"120459485","pull":{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000287\u0000120461350\u0000":{"address":{"type":"REVIEW","id":"120461350","pull":{"type":"PULL","number":"287","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/287#pullrequestreview-120461350","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000288\u0000120464689\u0000":{"address":{"type":"REVIEW","id":"120464689","pull":{"type":"PULL","number":"288","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/288#pullrequestreview-120464689","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000289\u0000123129658\u0000":{"address":{"type":"REVIEW","id":"123129658","pull":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/289#pullrequestreview-123129658","state":"APPROVED","comments":[{"type":"COMMENT","id":"190696773","parent":{"type":"REVIEW","id":"123129658","pull":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000290\u0000120877410\u0000":{"address":{"type":"REVIEW","id":"120877410","pull":{"type":"PULL","number":"290","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/290#pullrequestreview-120877410","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000291\u0000120881823\u0000":{"address":{"type":"REVIEW","id":"120881823","pull":{"type":"PULL","number":"291","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/291#pullrequestreview-120881823","state":"APPROVED","comments":[],"body":"> Node defaults to ~1.76GB of heap available, which is just not that much.\r\n\r\nToday is a sad day.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121492373\u0000":{"address":{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121492373","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189328680","parent":{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189329450","parent":{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I see three primary problems, which have a common solution.\r\n\r\nFirst: The `T & Compatible` type has some alarming implications, I'm afraid. Suppose that `T` is `{| +color: string |}`. Then `T & Compatible` is uninhabited: any value that has type `Compatible` must have a `__compat__` attribute, but `T` is exact and must not have that attribute, so no value can have both type `T` and type `Compatible`. Surely we do not want to prohibit callers from using exact types `T`.\r\n\r\nSecond: The restriction that only non-`null` object types may be processed by this module is, in my opinion, highly understandabad. The whole point of this module is to allow separating the logical value of a datum from its internal representation; further restricting the internal representation seems counterproductive. We have recently seen that such restrictions can be frustrating, as with `WeakMap`'s object-only key requirement.\r\n\r\nThird: While is not obviously absurd to reserve an object attribute (`__compat__`) and require that clients omit this field, doing so has some negative implications. Suppose that the `Graph` class uses this versioning module. Suppose also that the Git porcelain’s `GraphPorcelain` wants to use this versioning module. The `GraphPorcelain` simply wraps a `Graph`, so its natural serialized form is simply the serialized form of the graph. But the serialized form of a `Graph` will have a `__compat__` field! This example reveals that the restriction is actually a major problem: it means that clients have to be aware of the serialized forms of their elements, which breaks encapsulation.\r\n\r\nHere is a solution that fixes all of the above problems. What do you think about using `[CompatInfo, T]` as the at-rest type instead, where `type CompatInfo = {| +type: string, +version: string |}`? An alternative would be `{| +__compat__: CompatInfo, +value: T |}`, which is arguably more readable but does take up slightly more space on disk.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000":{"address":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121879121","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189657055","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189657399","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189657549","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189660876","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189661489","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189661954","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189662327","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189662758","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189663017","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Nice tests. Approved modulo inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889191\u0000":{"address":{"type":"REVIEW","id":"121889191","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889191","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189665336","parent":{"type":"REVIEW","id":"121889191","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889367\u0000":{"address":{"type":"REVIEW","id":"121889367","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889367","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189665495","parent":{"type":"REVIEW","id":"121889367","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889403\u0000":{"address":{"type":"REVIEW","id":"121889403","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889403","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189665525","parent":{"type":"REVIEW","id":"121889403","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889547\u0000":{"address":{"type":"REVIEW","id":"121889547","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889547","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189665645","parent":{"type":"REVIEW","id":"121889547","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889724\u0000":{"address":{"type":"REVIEW","id":"121889724","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889724","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189665803","parent":{"type":"REVIEW","id":"121889724","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889965\u0000":{"address":{"type":"REVIEW","id":"121889965","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121889965","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189666023","parent":{"type":"REVIEW","id":"121889965","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890061\u0000":{"address":{"type":"REVIEW","id":"121890061","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121890061","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189666106","parent":{"type":"REVIEW","id":"121890061","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890423\u0000":{"address":{"type":"REVIEW","id":"121890423","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121890423","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189666463","parent":{"type":"REVIEW","id":"121890423","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890444\u0000":{"address":{"type":"REVIEW","id":"121890444","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121890444","state":"COMMENTED","comments":[{"type":"COMMENT","id":"189666478","parent":{"type":"REVIEW","id":"121890444","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121894277\u0000":{"address":{"type":"REVIEW","id":"121894277","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#pullrequestreview-121894277","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000293\u0000121899057\u0000":{"address":{"type":"REVIEW","id":"121899057","pull":{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/293#pullrequestreview-121899057","state":"APPROVED","comments":[{"type":"COMMENT","id":"189673835","parent":{"type":"REVIEW","id":"121899057","pull":{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good (reviewed with `-w`).","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000294\u0000121887543\u0000":{"address":{"type":"REVIEW","id":"121887543","pull":{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/294#pullrequestreview-121887543","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000":{"address":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#pullrequestreview-121983990","state":"APPROVED","comments":[{"type":"COMMENT","id":"189745332","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189745384","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189745610","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189745683","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189745800","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"189746617","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I'd like a little more context on the motivation for this change in the commit description. E.g., this enables much faster `neighbor` detection (and thus all graph traversal is sped up - in a future commit.)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000":{"address":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#pullrequestreview-122293222","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190004221","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190004488","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190007134","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190007197","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190013023","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190016082","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122318172\u0000":{"address":{"type":"REVIEW","id":"122318172","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#pullrequestreview-122318172","state":"APPROVED","comments":[{"type":"COMMENT","id":"190024732","parent":{"type":"REVIEW","id":"122318172","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good to me, merge at your convenience :+1:","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000":{"address":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122709316","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190351565","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190354156","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190355139","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190355678","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190358159","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190358225","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190358839","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190360486","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Thank you for taking the time to write this proposal so clearly!\r\n\r\nOverall, I quite like the suggestions. My inline comments gesture at my larger belief that attempting to de-privilege type is misguided; it serves a vital function, as evidenced by the fact that it's been independently created in two consonant contexts (node type and compat type), and is used throughout the codebase and even in your examples for what a non-privileged type world would look like. It's actually the `address`, specifically `address.id`, that should be de-privileged; plugins should be able to make their own choices about which pieces of information are sufficient to ID the payload. Here is a sketch of what I think should happen with type:\r\n\r\n- Types should be treated as opaque by callers, i.e. they do not get to directly look at something's type and do string comparison. Instead, they use a functional interface. This interface will enable caching and deduplication, i.e. the graph uses an integer type representation under the hood and in serialization.\r\n- It should be legal to check just the pluginName property on a type, but illegal to check just the \"type\". This eliminates a class of bug where you want `sourcecred/sourcecred/github/issue` but accidentally get `foo/bar/gitlab/issue` and your code breaks.\r\n- Types should be unified across the `CompatInfo` and the node types. We should also come up with a spec on type namespacing (e.g. sourcecred/github-beta is clearly inferior to sourcecred/sourcecred/github@v0.1.0). If we unify compatinfo with type, that implies that node types get versioning, which seems clearly desirable.\r\n\r\nMy other nit: as you know, I appreciate concision in regularly-referenced concepts and names. `node.ref` is nice and concise; `node.payload` not so much. Can we find a 3 or 4 character alias for `payload`? `node.data`, `node.own` (as in own data), ...?","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000":{"address":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122758544","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190391842","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190394816","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190395457","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190395890","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190396401","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190396579","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190397184","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190400352","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> plugins should be able to make their own choices about which pieces of information are sufficient to ID the payload.\r\n\r\nYes; agreed. (This is what I was trying to suggest near the end; perhaps\r\nI wasn’t clear enough.)\r\n\r\n> Here is a sketch of what I think should happen with type: […]\r\n\r\nAfter reading this list, I feel like I’m missing a piece of the picture\r\nas you see it. I suspect that we’ll be able to communicate better in\r\nperson, and can then serialize thoughts back to this PR or elsewhere.\r\n\r\n> Can we find a 3 or 4 character alias for `payload`? `node.data`,\r\n> `node.own` (as in own data), ...?\r\n\r\nThe name `data`, as in `node.ref` and `node.data`, is fine with me in\r\nprinciple. Are you suggesting that we change the core interfaces to\r\n`NodeReference` and `NodeData`? It might be confusing to have\r\n`node.data` give a `NodePayload`.\r\n\r\nBy the way: the Rust team [used to have][rust] a rule that no keywords\r\nmay have more than five letters. (Some Rust keywords include `fn`,\r\n`mut`, `impl`, `trait`, and `pub`, all of which are used reasonably\r\nfrequently.) Rust now has some longer keywords: `fmt` became `format`,\r\nfor instance. I’d be interested to hear what motivated the change, if\r\nthere was any formal discussion of it.\r\n\r\nAnd, just to put my point of view in the bikeshed: I greatly appreciate\r\n_cognitive_ concision, and only weakly appreciate _orthographic_\r\nconcision. To me, `node.payload` and `node.data` are basically the same,\r\nin the same sense that `yellow` is not actually any more complicated\r\nthan `red`. (Consequently, I’m happy to use `data` if it makes you\r\nhappier). The time to type three marginal letters simply doesn’t matter.\r\n\r\n[rust]: http://words.steveklabnik.com/four-years-with-rust\r\n\r\n---\r\n\r\nOn the whole: it seems to me that most of the ongoing discussion relates\r\nto things that are not on the critical path of this change. I’ll make\r\nsome small changes to the design doc and resubmit for your\r\nconsideration, then we can start implementing the parts that we agree on\r\n(which are also naturally the first parts to be implemented). Does this\r\nsound good to you?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803449\u0000":{"address":{"type":"REVIEW","id":"122803449","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122803449","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190429694","parent":{"type":"REVIEW","id":"122803449","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122804113\u0000":{"address":{"type":"REVIEW","id":"122804113","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122804113","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190430275","parent":{"type":"REVIEW","id":"122804113","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122804495\u0000":{"address":{"type":"REVIEW","id":"122804495","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122804495","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190430626","parent":{"type":"REVIEW","id":"122804495","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122806588\u0000":{"address":{"type":"REVIEW","id":"122806588","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122806588","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190432374","parent":{"type":"REVIEW","id":"122806588","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803263\u0000":{"address":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122803263","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190429548","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190431787","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190432277","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"190435270","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I have made some simple changes and one nontrivial change, to be pushed shortly.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122817391\u0000":{"address":{"type":"REVIEW","id":"122817391","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-122817391","state":"COMMENTED","comments":[{"type":"COMMENT","id":"190441488","parent":{"type":"REVIEW","id":"122817391","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> I would be exceedingly pleased if the names were precisely the same\r\n> number of characters - as in `ref` and `dat` - but I understand if you\r\n> prefer `data` :)\r\n\r\nI also appreciate when this happens naturally (or mostly naturally), but\r\nclearly `dat` is the wrong name. ;-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000123120152\u0000":{"address":{"type":"REVIEW","id":"123120152","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#pullrequestreview-123120152","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123508914\u0000":{"address":{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#pullrequestreview-123508914","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191006166","parent":{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191006399","parent":{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123509554\u0000":{"address":{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#pullrequestreview-123509554","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191006714","parent":{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191006727","parent":{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123510829\u0000":{"address":{"type":"REVIEW","id":"123510829","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#pullrequestreview-123510829","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000298\u0000123512459\u0000":{"address":{"type":"REVIEW","id":"123512459","pull":{"type":"PULL","number":"298","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/298#pullrequestreview-123512459","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000299\u0000123543573\u0000":{"address":{"type":"REVIEW","id":"123543573","pull":{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/299#pullrequestreview-123543573","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000300\u0000123544701\u0000":{"address":{"type":"REVIEW","id":"123544701","pull":{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/300#pullrequestreview-123544701","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000301\u0000123544737\u0000":{"address":{"type":"REVIEW","id":"123544737","pull":{"type":"PULL","number":"301","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/301#pullrequestreview-123544737","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000302\u0000123544692\u0000":{"address":{"type":"REVIEW","id":"123544692","pull":{"type":"PULL","number":"302","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/302#pullrequestreview-123544692","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000303\u0000123544778\u0000":{"address":{"type":"REVIEW","id":"123544778","pull":{"type":"PULL","number":"303","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/303#pullrequestreview-123544778","state":"APPROVED","comments":[],"body":":boom:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000304\u0000123784802\u0000":{"address":{"type":"REVIEW","id":"123784802","pull":{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/304#pullrequestreview-123784802","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000305\u0000123788937\u0000":{"address":{"type":"REVIEW","id":"123788937","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#pullrequestreview-123788937","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191252996","parent":{"type":"REVIEW","id":"123788937","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000305\u0000123789101\u0000":{"address":{"type":"REVIEW","id":"123789101","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#pullrequestreview-123789101","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000305\u0000123797511\u0000":{"address":{"type":"REVIEW","id":"123797511","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#pullrequestreview-123797511","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191260475","parent":{"type":"REVIEW","id":"123797511","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000306\u0000123801200\u0000":{"address":{"type":"REVIEW","id":"123801200","pull":{"type":"PULL","number":"306","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/306#pullrequestreview-123801200","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000307\u0000123804196\u0000":{"address":{"type":"REVIEW","id":"123804196","pull":{"type":"PULL","number":"307","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/307#pullrequestreview-123804196","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000308\u0000123814802\u0000":{"address":{"type":"REVIEW","id":"123814802","pull":{"type":"PULL","number":"308","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/308#pullrequestreview-123814802","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000309\u0000123815250\u0000":{"address":{"type":"REVIEW","id":"123815250","pull":{"type":"PULL","number":"309","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/309#pullrequestreview-123815250","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000310\u0000123816931\u0000":{"address":{"type":"REVIEW","id":"123816931","pull":{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/310#pullrequestreview-123816931","state":"APPROVED","comments":[{"type":"COMMENT","id":"191277633","parent":{"type":"REVIEW","id":"123816931","pull":{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"approved modulo nit\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000311\u0000123821940\u0000":{"address":{"type":"REVIEW","id":"123821940","pull":{"type":"PULL","number":"311","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/311#pullrequestreview-123821940","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000123822063\u0000":{"address":{"type":"REVIEW","id":"123822063","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#pullrequestreview-123822063","state":"APPROVED","comments":[{"type":"COMMENT","id":"191282085","parent":{"type":"REVIEW","id":"123822063","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124107823\u0000":{"address":{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#pullrequestreview-124107823","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191520039","parent":{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191522942","parent":{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"[pre-patch partial review]\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124114614\u0000":{"address":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#pullrequestreview-124114614","state":"APPROVED","comments":[{"type":"COMMENT","id":"191525862","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191526099","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191526481","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191527230","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000313\u0000124134456\u0000":{"address":{"type":"REVIEW","id":"124134456","pull":{"type":"PULL","number":"313","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/313#pullrequestreview-124134456","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000314\u0000124134686\u0000":{"address":{"type":"REVIEW","id":"124134686","pull":{"type":"PULL","number":"314","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/314#pullrequestreview-124134686","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000315\u0000124163071\u0000":{"address":{"type":"REVIEW","id":"124163071","pull":{"type":"PULL","number":"315","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/315#pullrequestreview-124163071","state":"APPROVED","comments":[],"body":"Looks good to me. If you want to (additionally?) allow `// $ExpectFlowError` and prefer to use that, I'd support it, but sticking with the de facto standard is fine with me, too.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000316\u0000124170843\u0000":{"address":{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/316#pullrequestreview-124170843","state":"APPROVED","comments":[{"type":"COMMENT","id":"191572663","parent":{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191572862","parent":{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000317\u0000124173971\u0000":{"address":{"type":"REVIEW","id":"124173971","pull":{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/317#pullrequestreview-124173971","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000318\u0000124214582\u0000":{"address":{"type":"REVIEW","id":"124214582","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/318#pullrequestreview-124214582","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191611399","parent":{"type":"REVIEW","id":"124214582","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000318\u0000124220054\u0000":{"address":{"type":"REVIEW","id":"124220054","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/318#pullrequestreview-124220054","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191616080","parent":{"type":"REVIEW","id":"124220054","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000318\u0000124220409\u0000":{"address":{"type":"REVIEW","id":"124220409","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/318#pullrequestreview-124220409","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124236667\u0000":{"address":{"type":"REVIEW","id":"124236667","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124236667","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191630914","parent":{"type":"REVIEW","id":"124236667","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124236886\u0000":{"address":{"type":"REVIEW","id":"124236886","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124236886","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191631093","parent":{"type":"REVIEW","id":"124236886","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124525570\u0000":{"address":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124525570","state":"APPROVED","comments":[{"type":"COMMENT","id":"191867201","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191868813","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191884352","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191885320","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557117\u0000":{"address":{"type":"REVIEW","id":"124557117","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124557117","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191893367","parent":{"type":"REVIEW","id":"124557117","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557159\u0000":{"address":{"type":"REVIEW","id":"124557159","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124557159","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191893422","parent":{"type":"REVIEW","id":"124557159","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557191\u0000":{"address":{"type":"REVIEW","id":"124557191","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124557191","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191893451","parent":{"type":"REVIEW","id":"124557191","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124562303\u0000":{"address":{"type":"REVIEW","id":"124562303","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124562303","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191897757","parent":{"type":"REVIEW","id":"124562303","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124563477\u0000":{"address":{"type":"REVIEW","id":"124563477","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124563477","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191898793","parent":{"type":"REVIEW","id":"124563477","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124566934\u0000":{"address":{"type":"REVIEW","id":"124566934","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#pullrequestreview-124566934","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191901573","parent":{"type":"REVIEW","id":"124566934","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124619808\u0000":{"address":{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124619808","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191945362","parent":{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191946091","parent":{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124625209\u0000":{"address":{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124625209","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191949799","parent":{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"191950062","parent":{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124626000\u0000":{"address":{"type":"REVIEW","id":"124626000","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124626000","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191950448","parent":{"type":"REVIEW","id":"124626000","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124626332\u0000":{"address":{"type":"REVIEW","id":"124626332","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124626332","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191950732","parent":{"type":"REVIEW","id":"124626332","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124637246\u0000":{"address":{"type":"REVIEW","id":"124637246","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124637246","state":"COMMENTED","comments":[{"type":"COMMENT","id":"191960051","parent":{"type":"REVIEW","id":"124637246","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124638262\u0000":{"address":{"type":"REVIEW","id":"124638262","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#pullrequestreview-124638262","state":"APPROVED","comments":[{"type":"COMMENT","id":"191960944","parent":{"type":"REVIEW","id":"124638262","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000321\u0000124621180\u0000":{"address":{"type":"REVIEW","id":"124621180","pull":{"type":"PULL","number":"321","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/321#pullrequestreview-124621180","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000322\u0000124959533\u0000":{"address":{"type":"REVIEW","id":"124959533","pull":{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/322#pullrequestreview-124959533","state":"APPROVED","comments":[],"body":"Thanks for catching this!","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000":{"address":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#pullrequestreview-124963637","state":"APPROVED","comments":[{"type":"COMMENT","id":"192227079","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192229510","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192231521","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192231729","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"As the code is mostly ported from https://github.com/sourcecred/sourcecred/pull/295 (which has a paired with), this one probably should too.\r\n\r\nLooks good overall, modulo a few nits.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124973950\u0000":{"address":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#pullrequestreview-124973950","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192235662","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192235895","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192236031","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192236094","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000":{"address":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#pullrequestreview-125256091","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192466145","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192468775","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192471185","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192471718","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192471906","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192472435","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192474381","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192474747","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192475061","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192476291","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192477502","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192478244","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Some comments attached.\r\n\r\nThe implementation strategy looks good (modulo small inlines). It is\r\ndefinitely strange not only that that edges sort of require a graph to\r\nexist, but also that it doesn’t really matter what graph that is. This\r\ncombination suggests to me that this API isn’t quite right—there’s\r\nsomething hiding that we haven’t found yet.\r\n\r\n**edit:** An additional concern, which I did not understand initially,\r\nis discussed here:\r\nhttps://github.com/sourcecred/sourcecred/pull/324/files#r192523891\r\n\r\nHow would you like to proceed with this PR?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125327015\u0000":{"address":{"type":"REVIEW","id":"125327015","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#pullrequestreview-125327015","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192523891","parent":{"type":"REVIEW","id":"125327015","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000325\u0000125025177\u0000":{"address":{"type":"REVIEW","id":"125025177","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/325#pullrequestreview-125025177","state":"APPROVED","comments":[{"type":"COMMENT","id":"192279409","parent":{"type":"REVIEW","id":"125025177","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000325\u0000125025483\u0000":{"address":{"type":"REVIEW","id":"125025483","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/325#pullrequestreview-125025483","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192279700","parent":{"type":"REVIEW","id":"125025483","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000326\u0000125345558\u0000":{"address":{"type":"REVIEW","id":"125345558","pull":{"type":"PULL","number":"326","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/326#pullrequestreview-125345558","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000327\u0000125346759\u0000":{"address":{"type":"REVIEW","id":"125346759","pull":{"type":"PULL","number":"327","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/327#pullrequestreview-125346759","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125358066\u0000":{"address":{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125358066","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192552055","parent":{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192552074","parent":{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373543\u0000":{"address":{"type":"REVIEW","id":"125373543","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125373543","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192567077","parent":{"type":"REVIEW","id":"125373543","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373553\u0000":{"address":{"type":"REVIEW","id":"125373553","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125373553","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192567092","parent":{"type":"REVIEW","id":"125373553","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373612\u0000":{"address":{"type":"REVIEW","id":"125373612","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125373612","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192567156","parent":{"type":"REVIEW","id":"125373612","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125379578\u0000":{"address":{"type":"REVIEW","id":"125379578","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125379578","state":"APPROVED","comments":[{"type":"COMMENT","id":"192573170","parent":{"type":"REVIEW","id":"125379578","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125380497\u0000":{"address":{"type":"REVIEW","id":"125380497","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#pullrequestreview-125380497","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192574057","parent":{"type":"REVIEW","id":"125380497","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000":{"address":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#pullrequestreview-125357185","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192551223","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192551708","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192551719","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192551861","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192551896","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125379593\u0000":{"address":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#pullrequestreview-125379593","state":"APPROVED","comments":[{"type":"COMMENT","id":"192573181","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192573310","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192573322","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192573333","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125380679\u0000":{"address":{"type":"REVIEW","id":"125380679","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#pullrequestreview-125380679","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192574244","parent":{"type":"REVIEW","id":"125380679","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125380680\u0000":{"address":{"type":"REVIEW","id":"125380680","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#pullrequestreview-125380680","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192574245","parent":{"type":"REVIEW","id":"125380680","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125381028\u0000":{"address":{"type":"REVIEW","id":"125381028","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#pullrequestreview-125381028","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192574611","parent":{"type":"REVIEW","id":"125381028","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000330\u0000125370616\u0000":{"address":{"type":"REVIEW","id":"125370616","pull":{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/330#pullrequestreview-125370616","state":"COMMENTED","comments":[],"body":"> I added a unit test to verify this behavior\r\n\r\nThanks; I was going to ask for this!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000330\u0000125381784\u0000":{"address":{"type":"REVIEW","id":"125381784","pull":{"type":"PULL","number":"330","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/330#pullrequestreview-125381784","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125753076\u0000":{"address":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#pullrequestreview-125753076","state":"APPROVED","comments":[{"type":"COMMENT","id":"192889126","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192889182","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192889299","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192889465","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125754748\u0000":{"address":{"type":"REVIEW","id":"125754748","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#pullrequestreview-125754748","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192890520","parent":{"type":"REVIEW","id":"125754748","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125758963\u0000":{"address":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#pullrequestreview-125758963","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192894119","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192894161","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"192894511","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125762006\u0000":{"address":{"type":"REVIEW","id":"125762006","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#pullrequestreview-125762006","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192896731","parent":{"type":"REVIEW","id":"125762006","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125762491\u0000":{"address":{"type":"REVIEW","id":"125762491","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#pullrequestreview-125762491","state":"APPROVED","comments":[],"body":"LGTD","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000333\u0000125381356\u0000":{"address":{"type":"REVIEW","id":"125381356","pull":{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/333#pullrequestreview-125381356","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000334\u0000125434549\u0000":{"address":{"type":"REVIEW","id":"125434549","pull":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/334#pullrequestreview-125434549","state":"CHANGES_REQUESTED","comments":[],"body":"I have some questions, a couple of suggestions.\r\n\r\nWhy is `address.js` this kind of pseudo-private module that shouldn’t be\r\ndirectly imported by clients? It could just expose:\r\n\r\n```js\r\ndeclare module \"address\" {\r\n  declare opaque type NodeAddress;\r\n  declare opaque type EdgeAddress;\r\n  declare function nodeAddress(parts: $ReadOnlyArray<string>): NodeAddress;\r\n  declare function edgeAddress(parts: $ReadOnlyArray<string>): EdgeAddress;\r\n  declare function toParts(address: NodeAddress | EdgeAddress): string[];\r\n}\r\n```\r\n\r\nIf you want the assertion functions to be visible for test code only,\r\nor test code and `graph.js`, you can just underscore-name them. (Though\r\nI don’t see a problem with the assertions being part of the public\r\nAPI—I’m happy to include them or exclude them, as you prefer.)\r\n\r\nWhat’s with all the underscore-names in `address.js`? (Are you trying to\r\nget around “cannot declare `NodeAddress` because the name is already\r\nbound” or something? If so, just `export`-`from`, or `import` with an\r\nalias.)\r\n\r\nWhy export an object `_Address` containing functions? This is unsafe\r\n(callers may freely and typesafely modify the attributes on the object)\r\nand annoying (callers can no longer import individual values). If you\r\nexport values individually, callers can either import them individually\r\nor `import * as Address from \"./address\"` (which _is_ safe).\r\n\r\nIf you want to re-export the members of `address.js` from `graph.js`,\r\nthat’s probably fine with me (depending on how you do it).\r\n\r\nIt seems desirable that `NodeAddress` and `EdgeAddress` should be\r\n[declared as opaque subtypes][1] of `string`:\r\n\r\n```js\r\nexport opaque type NodeAddress: string = string;\r\nexport opaque type EdgeAddress: string = string;\r\n```\r\n\r\nThis enables other modules to safely reason about reference semantics\r\n(i.e., that `(===)` coincides with logical equality), and therefore use\r\nthese in `Set`s and `Map`s, don’t have to worry about defensively\r\ncopying them, etc. Clients still won’t be able to obtain them from\r\nstrings: if `a1` and `a2` are addresses, then `a1 + a2` is _not_ an\r\naddress (which is good).\r\n\r\n[1]: https://flow.org/en/docs/types/opaque-types/#toc-subtyping-constraints\r\n\r\nI’m not dead-set against using union types in public APIs for things\r\nlike `toParts` and `concat`. However, I thoroughly disagree that this is\r\n“simpler”—one function that has a bounded wildcard with an upper bound\r\nof a union type is clearly more complicated than two monomorphic\r\nfunctions with simple domain and codomain. Is there an advantage here\r\nbesides implementation laziness (no offense)? That is, under what\r\ncircumstances is there a value whose type is known to be “either\r\n`NodeAddress` or `EdgeAddress`, but we’re not sure which one”? This\r\ncan’t be a very useful type for callers, because it is incompatible with\r\nevery method on `Graph` (you can’t `addNode` or `hasEdge` or anything,\r\nand with good reason). I’m feeling very “when in doubt, leave it out”.\r\n\r\nWhy allow `nodeAddress` and `edgeAddress` to be called with `undefined`?\r\nThis seems like a great way to mask bugs: if a client passes `undefined`\r\ninstead of an array, it seems at least as likely that the client has a\r\nbug causing their intended-array to be `undefined` than that they\r\nactually want the address given by `[]`. If a client does want this\r\nsemantics, they can just write `myArrayOrUndefined || []`.\r\n\r\nThe following two tests would have passed in the previous API, but fail\r\nunder the code in this pull request:\r\n\r\n```js\r\ndescribe(\"toParts\", () => {\r\n  it(\"throws on fake (slash-separated) node address\", () => {\r\n    // $ExpectFlowError\r\n    expect(() => toParts(\"N/bad/stuff\\0\")).toThrow();\r\n  });\r\n  it(\"throws on fake (slash-separated) edge address\", () => {\r\n    // $ExpectFlowError\r\n    expect(() => toParts(\"E/bad/stuff\\0\")).toThrow();\r\n  });\r\n});\r\n```\r\n\r\nIs this intentional? If so, why?\r\n\r\nNote that `typeof NODE | typeof EDGE` is just `Symbol`; there is no\r\nadditional safety granted by using that definition.\r\n\r\nI like the tests that node and edge addresses are distinct at both the\r\ntype layer and the value layer.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000334\u0000125703590\u0000":{"address":{"type":"REVIEW","id":"125703590","pull":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/334#pullrequestreview-125703590","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000335\u0000125721219\u0000":{"address":{"type":"REVIEW","id":"125721219","pull":{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/335#pullrequestreview-125721219","state":"APPROVED","comments":[{"type":"COMMENT","id":"192862766","parent":{"type":"REVIEW","id":"125721219","pull":{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Sounds good; feel free to merge.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000337\u0000125745841\u0000":{"address":{"type":"REVIEW","id":"125745841","pull":{"type":"PULL","number":"337","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/337#pullrequestreview-125745841","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000338\u0000125747399\u0000":{"address":{"type":"REVIEW","id":"125747399","pull":{"type":"PULL","number":"338","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/338#pullrequestreview-125747399","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000339\u0000125749456\u0000":{"address":{"type":"REVIEW","id":"125749456","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/339#pullrequestreview-125749456","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192886063","parent":{"type":"REVIEW","id":"125749456","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000339\u0000125756000\u0000":{"address":{"type":"REVIEW","id":"125756000","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/339#pullrequestreview-125756000","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000340\u0000125749506\u0000":{"address":{"type":"REVIEW","id":"125749506","pull":{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/340#pullrequestreview-125749506","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000341\u0000125806397\u0000":{"address":{"type":"REVIEW","id":"125806397","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/341#pullrequestreview-125806397","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192934935","parent":{"type":"REVIEW","id":"125806397","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000341\u0000125815304\u0000":{"address":{"type":"REVIEW","id":"125815304","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/341#pullrequestreview-125815304","state":"COMMENTED","comments":[{"type":"COMMENT","id":"192942458","parent":{"type":"REVIEW","id":"125815304","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000341\u0000126069347\u0000":{"address":{"type":"REVIEW","id":"126069347","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/341#pullrequestreview-126069347","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000342\u0000125806063\u0000":{"address":{"type":"REVIEW","id":"125806063","pull":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/342#pullrequestreview-125806063","state":"COMMENTED","comments":[],"body":"If I’m understanding the code correctly, this limitation only applies to\r\nthe top level. As soon as you expand the tree view, you’re back to the\r\nfull contents. In particular, if you expand the root repository node, or\r\nthe node for a user with lots of edges, you’re in just as much of a\r\npickle as before this commit. Is this correct?\r\n\r\nThis also, of course, doesn’t have pagination.\r\n\r\nI would prefer a solution that applied at each layer of the recursive\r\ntable a pair of “show more” and “show less” buttons, or something else.\r\nWhat do you think?\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000342\u0000126074952\u0000":{"address":{"type":"REVIEW","id":"126074952","pull":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/342#pullrequestreview-126074952","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000343\u0000126073783\u0000":{"address":{"type":"REVIEW","id":"126073783","pull":{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/343#pullrequestreview-126073783","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000344\u0000126089261\u0000":{"address":{"type":"REVIEW","id":"126089261","pull":{"type":"PULL","number":"344","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/344#pullrequestreview-126089261","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000345\u0000126089759\u0000":{"address":{"type":"REVIEW","id":"126089759","pull":{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/345#pullrequestreview-126089759","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000346\u0000126105274\u0000":{"address":{"type":"REVIEW","id":"126105274","pull":{"type":"PULL","number":"346","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/346#pullrequestreview-126105274","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000347\u0000126130542\u0000":{"address":{"type":"REVIEW","id":"126130542","pull":{"type":"PULL","number":"347","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/347#pullrequestreview-126130542","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126186583\u0000":{"address":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126186583","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193250161","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"193250239","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"193250617","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"193252881","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191608\u0000":{"address":{"type":"REVIEW","id":"126191608","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126191608","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193254645","parent":{"type":"REVIEW","id":"126191608","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191635\u0000":{"address":{"type":"REVIEW","id":"126191635","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126191635","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193254667","parent":{"type":"REVIEW","id":"126191635","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191651\u0000":{"address":{"type":"REVIEW","id":"126191651","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126191651","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193254701","parent":{"type":"REVIEW","id":"126191651","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191694\u0000":{"address":{"type":"REVIEW","id":"126191694","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126191694","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193254746","parent":{"type":"REVIEW","id":"126191694","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191966\u0000":{"address":{"type":"REVIEW","id":"126191966","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#pullrequestreview-126191966","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000349\u0000126193228\u0000":{"address":{"type":"REVIEW","id":"126193228","pull":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/349#pullrequestreview-126193228","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000351\u0000126490702\u0000":{"address":{"type":"REVIEW","id":"126490702","pull":{"type":"PULL","number":"351","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/351#pullrequestreview-126490702","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000352\u0000126491513\u0000":{"address":{"type":"REVIEW","id":"126491513","pull":{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/352#pullrequestreview-126491513","state":"APPROVED","comments":[],"body":"Nice test cases - very thorough","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000353\u0000126491772\u0000":{"address":{"type":"REVIEW","id":"126491772","pull":{"type":"PULL","number":"353","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/353#pullrequestreview-126491772","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000354\u0000126538478\u0000":{"address":{"type":"REVIEW","id":"126538478","pull":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/354#pullrequestreview-126538478","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000355\u0000126689020\u0000":{"address":{"type":"REVIEW","id":"126689020","pull":{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/355#pullrequestreview-126689020","state":"APPROVED","comments":[],"body":"Nice sequence of PRs. My only complaint with this commit is that I'd like to keep a test in graph that verifies that _NodeAddressT and _EdgeAddressT are actually distinct types, so that assigning a _NodeAddressT to an _EdgeAddressT is an error.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000356\u0000126676528\u0000":{"address":{"type":"REVIEW","id":"126676528","pull":{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/356#pullrequestreview-126676528","state":"APPROVED","comments":[],"body":"Any reason for inlining separator = \"\\0\" rather than making it a constant? I generally like factoring constants like this to the top of the module, but that tends to suggest that the constant is modifiable or tunable, which isn't the case here. No change necessarily requested.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126681988\u0000":{"address":{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#pullrequestreview-126681988","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193666985","parent":{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"193667683","parent":{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I posit there should also be snapshot testing in this commit. Address compatibility is required, and as written, the tests allow incompatible changes in address serialization. (For example, the representation could be changed to always have two NUL separators between the prefix and the parts).\r\n\r\nOtherwise: looks quite good, very nice error messaging and testing. Code quality higher than the code it is replacing. :+1: ","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126689198\u0000":{"address":{"type":"REVIEW","id":"126689198","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#pullrequestreview-126689198","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126839652\u0000":{"address":{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#pullrequestreview-126839652","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193794009","parent":{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"193797377","parent":{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> I posit there should also be snapshot testing in this commit.\r\n\r\nThis makes sense. Will add.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000358\u0000126686019\u0000":{"address":{"type":"REVIEW","id":"126686019","pull":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/358#pullrequestreview-126686019","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000359\u0000126686377\u0000":{"address":{"type":"REVIEW","id":"126686377","pull":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/359#pullrequestreview-126686377","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000360\u0000126687434\u0000":{"address":{"type":"REVIEW","id":"126687434","pull":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/360#pullrequestreview-126687434","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000361\u0000126688082\u0000":{"address":{"type":"REVIEW","id":"126688082","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/361#pullrequestreview-126688082","state":"APPROVED","comments":[{"type":"COMMENT","id":"193671919","parent":{"type":"REVIEW","id":"126688082","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000361\u0000126846851\u0000":{"address":{"type":"REVIEW","id":"126846851","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/361#pullrequestreview-126846851","state":"COMMENTED","comments":[{"type":"COMMENT","id":"193800210","parent":{"type":"REVIEW","id":"126846851","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000362\u0000126688254\u0000":{"address":{"type":"REVIEW","id":"126688254","pull":{"type":"PULL","number":"362","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/362#pullrequestreview-126688254","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000363\u0000127287585\u0000":{"address":{"type":"REVIEW","id":"127287585","pull":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/363#pullrequestreview-127287585","state":"APPROVED","comments":[],"body":"nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000364\u0000127255719\u0000":{"address":{"type":"REVIEW","id":"127255719","pull":{"type":"PULL","number":"364","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/364#pullrequestreview-127255719","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000365\u0000127255868\u0000":{"address":{"type":"REVIEW","id":"127255868","pull":{"type":"PULL","number":"365","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/365#pullrequestreview-127255868","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000366\u0000127287889\u0000":{"address":{"type":"REVIEW","id":"127287889","pull":{"type":"PULL","number":"366","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/366#pullrequestreview-127287889","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000367\u0000127291670\u0000":{"address":{"type":"REVIEW","id":"127291670","pull":{"type":"PULL","number":"367","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/367#pullrequestreview-127291670","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000368\u0000127300384\u0000":{"address":{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/368#pullrequestreview-127300384","state":"APPROVED","comments":[{"type":"COMMENT","id":"194169450","parent":{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194169641","parent":{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000369\u0000127313401\u0000":{"address":{"type":"REVIEW","id":"127313401","pull":{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/369#pullrequestreview-127313401","state":"APPROVED","comments":[{"type":"COMMENT","id":"194180186","parent":{"type":"REVIEW","id":"127313401","pull":{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good; thanks.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000370\u0000127329560\u0000":{"address":{"type":"REVIEW","id":"127329560","pull":{"type":"PULL","number":"370","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/370#pullrequestreview-127329560","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000371\u0000127329986\u0000":{"address":{"type":"REVIEW","id":"127329986","pull":{"type":"PULL","number":"371","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/371#pullrequestreview-127329986","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000":{"address":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#pullrequestreview-127354341","state":"COMMENTED","comments":[{"type":"COMMENT","id":"194216047","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194216317","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194216357","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194216427","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194216435","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Nice use of logic. A few comments, will look over again before approving.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127691366\u0000":{"address":{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#pullrequestreview-127691366","state":"COMMENTED","comments":[{"type":"COMMENT","id":"194505954","parent":{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194505992","parent":{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127707921\u0000":{"address":{"type":"REVIEW","id":"127707921","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#pullrequestreview-127707921","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000373\u0000127669352\u0000":{"address":{"type":"REVIEW","id":"127669352","pull":{"type":"PULL","number":"373","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/373#pullrequestreview-127669352","state":"APPROVED","comments":[],"body":"Confirmed copy: `git show b1a12ea711fbe788f8715cf8a8fa045cfbf8d038 --find-copies-harder`","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000374\u0000127672710\u0000":{"address":{"type":"REVIEW","id":"127672710","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/374#pullrequestreview-127672710","state":"COMMENTED","comments":[{"type":"COMMENT","id":"194490339","parent":{"type":"REVIEW","id":"127672710","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> This is based on work in #295, but in contrast to that PR, we do not\r\n> index the in-memory representations of graphs. Only the JSON\r\n> representation is indexed.\r\n\r\nRight, and (for posterity) this is because the in-memory representation\r\nno longer needs to be indexed: instead of using address maps, we just\r\nhave `Map<Address, *>`, because `Address` is now a value type. :+1:\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000374\u0000127696102\u0000":{"address":{"type":"REVIEW","id":"127696102","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/374#pullrequestreview-127696102","state":"APPROVED","comments":[],"body":"If you would like to merge this, and then buff the tests with a shared advanced graph later, that would be fine with me.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000375\u0000127673602\u0000":{"address":{"type":"REVIEW","id":"127673602","pull":{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/375#pullrequestreview-127673602","state":"APPROVED","comments":[{"type":"COMMENT","id":"194491113","parent":{"type":"REVIEW","id":"127673602","pull":{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good. I love how simple `merge` is.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000376\u0000127667101\u0000":{"address":{"type":"REVIEW","id":"127667101","pull":{"type":"PULL","number":"376","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/376#pullrequestreview-127667101","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000377\u0000127700203\u0000":{"address":{"type":"REVIEW","id":"127700203","pull":{"type":"PULL","number":"377","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/377#pullrequestreview-127700203","state":"APPROVED","comments":[],"body":"Lovely.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000378\u0000127797557\u0000":{"address":{"type":"REVIEW","id":"127797557","pull":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/378#pullrequestreview-127797557","state":"COMMENTED","comments":[],"body":"Please update.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000378\u0000127798032\u0000":{"address":{"type":"REVIEW","id":"127798032","pull":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/378#pullrequestreview-127798032","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000379\u0000127797402\u0000":{"address":{"type":"REVIEW","id":"127797402","pull":{"type":"PULL","number":"379","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/379#pullrequestreview-127797402","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128060381\u0000":{"address":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#pullrequestreview-128060381","state":"APPROVED","comments":[{"type":"COMMENT","id":"194816899","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194821921","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194824022","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194824569","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved with some suggestions.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128076806\u0000":{"address":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#pullrequestreview-128076806","state":"COMMENTED","comments":[{"type":"COMMENT","id":"194830584","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194830602","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194830788","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"194830913","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"This code is pretty repetitive and should probably be refactored. I think we could generalize over the pattern here pretty easily by creating a general tool for mapping object properties to parts of an array of strings. However, let's wait for this pattern to come up again before we put in the effort; for now I'd rather push on ahead with using our new graph and getting rid of the v1/v3 divide.\r\nApproved on my end (although the GitHub UI won't let me do that officially.)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000381\u0000128146911\u0000":{"address":{"type":"REVIEW","id":"128146911","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/381#pullrequestreview-128146911","state":"COMMENTED","comments":[{"type":"COMMENT","id":"194887412","parent":{"type":"REVIEW","id":"128146911","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000381\u0000128151591\u0000":{"address":{"type":"REVIEW","id":"128151591","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/381#pullrequestreview-128151591","state":"COMMENTED","comments":[],"body":"I note that the E2E test probably doesn’t actually exercise the\r\ncontinuations, because the `example-github` repository is small.\r\nHowever, the unit tests on `graphql.js` are good enough to convince me\r\nthat the change is actually correct.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000381\u0000128151619\u0000":{"address":{"type":"REVIEW","id":"128151619","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/381#pullrequestreview-128151619","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000382\u0000128150089\u0000":{"address":{"type":"REVIEW","id":"128150089","pull":{"type":"PULL","number":"382","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/382#pullrequestreview-128150089","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000383\u0000128199239\u0000":{"address":{"type":"REVIEW","id":"128199239","pull":{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/383#pullrequestreview-128199239","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000384\u0000128501620\u0000":{"address":{"type":"REVIEW","id":"128501620","pull":{"type":"PULL","number":"384","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/384#pullrequestreview-128501620","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128502937\u0000":{"address":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#pullrequestreview-128502937","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195185911","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195188088","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195188204","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195188635","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Definitely should be refactored :) The implementation here is pretty messy, but it shouldn't leak across the functional boundary, so i think its ok. ","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128554368\u0000":{"address":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#pullrequestreview-128554368","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195227483","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195228574","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195228628","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195229009","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"One question for you (inline).","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128568401\u0000":{"address":{"type":"REVIEW","id":"128568401","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#pullrequestreview-128568401","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195239022","parent":{"type":"REVIEW","id":"128568401","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128586231\u0000":{"address":{"type":"REVIEW","id":"128586231","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#pullrequestreview-128586231","state":"APPROVED","comments":[{"type":"COMMENT","id":"195254069","parent":{"type":"REVIEW","id":"128586231","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Thanks for writing this, I know it wasn't fun. \r\nPlease fix the rawAddress and change to ParentAddress, and then good to merge.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000386\u0000128554004\u0000":{"address":{"type":"REVIEW","id":"128554004","pull":{"type":"PULL","number":"386","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/386#pullrequestreview-128554004","state":"APPROVED","comments":[],"body":"Appreciated; thanks.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128569466\u0000":{"address":{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#pullrequestreview-128569466","state":"APPROVED","comments":[{"type":"COMMENT","id":"195239922","parent":{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195240325","parent":{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo one change and one consideration.\r\n\r\n(I see that your war against trailing punctuation continues.)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128570447\u0000":{"address":{"type":"REVIEW","id":"128570447","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#pullrequestreview-128570447","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195240810","parent":{"type":"REVIEW","id":"128570447","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128572602\u0000":{"address":{"type":"REVIEW","id":"128572602","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#pullrequestreview-128572602","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195242602","parent":{"type":"REVIEW","id":"128572602","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128561069\u0000":{"address":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128561069","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195233058","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195239386","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195239707","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128574440\u0000":{"address":{"type":"REVIEW","id":"128574440","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128574440","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195244042","parent":{"type":"REVIEW","id":"128574440","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128574545\u0000":{"address":{"type":"REVIEW","id":"128574545","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128574545","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195244124","parent":{"type":"REVIEW","id":"128574545","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128577324\u0000":{"address":{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128577324","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195246448","parent":{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195247155","parent":{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"New test structure looks good; thanks. I’ve added two inlines that\r\nshould have been submitted the first time; they appear to have\r\ndisappeared into the black hole of GitHub.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128580233\u0000":{"address":{"type":"REVIEW","id":"128580233","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128580233","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195248856","parent":{"type":"REVIEW","id":"128580233","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128581297\u0000":{"address":{"type":"REVIEW","id":"128581297","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128581297","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195249732","parent":{"type":"REVIEW","id":"128581297","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128585942\u0000":{"address":{"type":"REVIEW","id":"128585942","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128585942","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195253671","parent":{"type":"REVIEW","id":"128585942","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128590828\u0000":{"address":{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128590828","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195258026","parent":{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"195258903","parent":{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128598234\u0000":{"address":{"type":"REVIEW","id":"128598234","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128598234","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195264661","parent":{"type":"REVIEW","id":"128598234","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128599028\u0000":{"address":{"type":"REVIEW","id":"128599028","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#pullrequestreview-128599028","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000390\u0000128910487\u0000":{"address":{"type":"REVIEW","id":"128910487","pull":{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/390#pullrequestreview-128910487","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000391\u0000128926593\u0000":{"address":{"type":"REVIEW","id":"128926593","pull":{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/391#pullrequestreview-128926593","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000392\u0000128948385\u0000":{"address":{"type":"REVIEW","id":"128948385","pull":{"type":"PULL","number":"392","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/392#pullrequestreview-128948385","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000393\u0000128948531\u0000":{"address":{"type":"REVIEW","id":"128948531","pull":{"type":"PULL","number":"393","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/393#pullrequestreview-128948531","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000394\u0000128961985\u0000":{"address":{"type":"REVIEW","id":"128961985","pull":{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/394#pullrequestreview-128961985","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000395\u0000128982869\u0000":{"address":{"type":"REVIEW","id":"128982869","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/395#pullrequestreview-128982869","state":"APPROVED","comments":[{"type":"COMMENT","id":"195582569","parent":{"type":"REVIEW","id":"128982869","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo accidental `CommentableAddress` and inline comment.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000395\u0000128984758\u0000":{"address":{"type":"REVIEW","id":"128984758","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/395#pullrequestreview-128984758","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195584075","parent":{"type":"REVIEW","id":"128984758","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000396\u0000128981301\u0000":{"address":{"type":"REVIEW","id":"128981301","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/396#pullrequestreview-128981301","state":"COMMENTED","comments":[{"type":"COMMENT","id":"195581121","parent":{"type":"REVIEW","id":"128981301","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000396\u0000128981980\u0000":{"address":{"type":"REVIEW","id":"128981980","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/396#pullrequestreview-128981980","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000397\u0000130163593\u0000":{"address":{"type":"REVIEW","id":"130163593","pull":{"type":"PULL","number":"397","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/397#pullrequestreview-130163593","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000398\u0000130187340\u0000":{"address":{"type":"REVIEW","id":"130187340","pull":{"type":"PULL","number":"398","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/398#pullrequestreview-130187340","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000399\u0000130187433\u0000":{"address":{"type":"REVIEW","id":"130187433","pull":{"type":"PULL","number":"399","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/399#pullrequestreview-130187433","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000400\u0000130190532\u0000":{"address":{"type":"REVIEW","id":"130190532","pull":{"type":"PULL","number":"400","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/400#pullrequestreview-130190532","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000401\u0000130202914\u0000":{"address":{"type":"REVIEW","id":"130202914","pull":{"type":"PULL","number":"401","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/401#pullrequestreview-130202914","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000402\u0000130203101\u0000":{"address":{"type":"REVIEW","id":"130203101","pull":{"type":"PULL","number":"402","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/402#pullrequestreview-130203101","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000403\u0000130203720\u0000":{"address":{"type":"REVIEW","id":"130203720","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/403#pullrequestreview-130203720","state":"APPROVED","comments":[{"type":"COMMENT","id":"196616708","parent":{"type":"REVIEW","id":"130203720","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000403\u0000130204897\u0000":{"address":{"type":"REVIEW","id":"130204897","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/403#pullrequestreview-130204897","state":"COMMENTED","comments":[{"type":"COMMENT","id":"196617746","parent":{"type":"REVIEW","id":"130204897","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000404\u0000130603951\u0000":{"address":{"type":"REVIEW","id":"130603951","pull":{"type":"PULL","number":"404","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/404#pullrequestreview-130603951","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000":{"address":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130201329","state":"COMMENTED","comments":[{"type":"COMMENT","id":"196614588","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196614815","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196615920","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196616473","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196617246","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196619827","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196620110","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196620490","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196620853","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196621045","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196621126","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"196621296","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Preliminary review. I like this diff overall. Might review more later.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654958\u0000":{"address":{"type":"REVIEW","id":"130654958","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130654958","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000241","parent":{"type":"REVIEW","id":"130654958","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654968\u0000":{"address":{"type":"REVIEW","id":"130654968","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130654968","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000251","parent":{"type":"REVIEW","id":"130654968","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654975\u0000":{"address":{"type":"REVIEW","id":"130654975","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130654975","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000257","parent":{"type":"REVIEW","id":"130654975","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654981\u0000":{"address":{"type":"REVIEW","id":"130654981","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130654981","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000262","parent":{"type":"REVIEW","id":"130654981","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655012\u0000":{"address":{"type":"REVIEW","id":"130655012","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655012","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000289","parent":{"type":"REVIEW","id":"130655012","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655056\u0000":{"address":{"type":"REVIEW","id":"130655056","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655056","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000326","parent":{"type":"REVIEW","id":"130655056","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655064\u0000":{"address":{"type":"REVIEW","id":"130655064","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655064","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000333","parent":{"type":"REVIEW","id":"130655064","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655074\u0000":{"address":{"type":"REVIEW","id":"130655074","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655074","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000340","parent":{"type":"REVIEW","id":"130655074","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655091\u0000":{"address":{"type":"REVIEW","id":"130655091","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655091","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000352","parent":{"type":"REVIEW","id":"130655091","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655134\u0000":{"address":{"type":"REVIEW","id":"130655134","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655134","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000389","parent":{"type":"REVIEW","id":"130655134","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655149\u0000":{"address":{"type":"REVIEW","id":"130655149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130655149","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197000400","parent":{"type":"REVIEW","id":"130655149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000":{"address":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-130945236","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197238870","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197244849","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197245397","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197245648","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197247070","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197248312","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197249683","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197250341","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"These tests look great! Some comments inline.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131076017\u0000":{"address":{"type":"REVIEW","id":"131076017","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131076017","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197348862","parent":{"type":"REVIEW","id":"131076017","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078088\u0000":{"address":{"type":"REVIEW","id":"131078088","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131078088","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197350553","parent":{"type":"REVIEW","id":"131078088","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078112\u0000":{"address":{"type":"REVIEW","id":"131078112","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131078112","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197350568","parent":{"type":"REVIEW","id":"131078112","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078149\u0000":{"address":{"type":"REVIEW","id":"131078149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131078149","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197350596","parent":{"type":"REVIEW","id":"131078149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131079392\u0000":{"address":{"type":"REVIEW","id":"131079392","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131079392","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197351612","parent":{"type":"REVIEW","id":"131079392","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131080070\u0000":{"address":{"type":"REVIEW","id":"131080070","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131080070","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197352150","parent":{"type":"REVIEW","id":"131080070","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131080226\u0000":{"address":{"type":"REVIEW","id":"131080226","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131080226","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197352288","parent":{"type":"REVIEW","id":"131080226","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131328588\u0000":{"address":{"type":"REVIEW","id":"131328588","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#pullrequestreview-131328588","state":"APPROVED","comments":[{"type":"COMMENT","id":"197554015","parent":{"type":"REVIEW","id":"131328588","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Great; nice work on this PR.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000406\u0000131081168\u0000":{"address":{"type":"REVIEW","id":"131081168","pull":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/406#pullrequestreview-131081168","state":"APPROVED","comments":[],"body":"I don't mind having the graph creator before the porcelain; your checksumming approach (and the comparative simpleness of the git plugin) leaves me reasonably confident it's correct.\r\n\r\nI sort of skimmed this PR for plausibility, but didn't reload all the git data structure stuff into my mental state. It seems like a straightforward port of existing logic so I'm happy to approve it, but if you want a more thorough review I can provide that too.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000407\u0000131288168\u0000":{"address":{"type":"REVIEW","id":"131288168","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/407#pullrequestreview-131288168","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000407\u0000131288297\u0000":{"address":{"type":"REVIEW","id":"131288297","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/407#pullrequestreview-131288297","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197521736","parent":{"type":"REVIEW","id":"131288297","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000408\u0000131363376\u0000":{"address":{"type":"REVIEW","id":"131363376","pull":{"type":"PULL","number":"408","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/408#pullrequestreview-131363376","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000410\u0000131370571\u0000":{"address":{"type":"REVIEW","id":"131370571","pull":{"type":"PULL","number":"410","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/410#pullrequestreview-131370571","state":"APPROVED","comments":[],"body":"Verified verbatim copy.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382351\u0000":{"address":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#pullrequestreview-131382351","state":"APPROVED","comments":[{"type":"COMMENT","id":"197600152","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197600281","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197600335","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382994\u0000":{"address":{"type":"REVIEW","id":"131382994","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#pullrequestreview-131382994","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197600752","parent":{"type":"REVIEW","id":"131382994","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382998\u0000":{"address":{"type":"REVIEW","id":"131382998","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#pullrequestreview-131382998","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197600758","parent":{"type":"REVIEW","id":"131382998","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000412\u0000131740853\u0000":{"address":{"type":"REVIEW","id":"131740853","pull":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/412#pullrequestreview-131740853","state":"CHANGES_REQUESTED","comments":[],"body":"(see https://github.com/sourcecred/sourcecred/pull/412#issuecomment-400059242)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000413\u0000131745973\u0000":{"address":{"type":"REVIEW","id":"131745973","pull":{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/413#pullrequestreview-131745973","state":"APPROVED","comments":[],"body":"> I also fixed some `any`s that were leaking in our test code (due to\r\n> use of runtime require for GitHub example data). These anys were\r\n> discovered by bumping into uncaught type errors. :)\r\n\r\nGreat! But, to clarify: the problem isn’t that we used `require` instead\r\nof `import`. All imports happen at runtime. The problem is that imported\r\nJSON is untyped, which you’ve fixed by adding the type declaration.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000415\u0000131848450\u0000":{"address":{"type":"REVIEW","id":"131848450","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/415#pullrequestreview-131848450","state":"APPROVED","comments":[{"type":"COMMENT","id":"197998017","parent":{"type":"REVIEW","id":"131848450","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000415\u0000132187525\u0000":{"address":{"type":"REVIEW","id":"132187525","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/415#pullrequestreview-132187525","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198283283","parent":{"type":"REVIEW","id":"132187525","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000":{"address":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#pullrequestreview-131746698","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197911079","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197913309","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197914198","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197914271","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197914470","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197914963","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"197915387","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Empty-type assertion and spelling fix are requests; rest are questions\r\nor suggestions.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131848072\u0000":{"address":{"type":"REVIEW","id":"131848072","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#pullrequestreview-131848072","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197997691","parent":{"type":"REVIEW","id":"131848072","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131848106\u0000":{"address":{"type":"REVIEW","id":"131848106","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#pullrequestreview-131848106","state":"COMMENTED","comments":[{"type":"COMMENT","id":"197997720","parent":{"type":"REVIEW","id":"131848106","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000":{"address":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#pullrequestreview-132136356","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198241054","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198241810","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198245518","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198249304","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198249794","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000419\u0000132164883\u0000":{"address":{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/419#pullrequestreview-132164883","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198264936","parent":{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198266277","parent":{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Implementation looks fine, but, as noted inline, I don’t understand why\r\nyou don’t use `EntityStore` as the data source.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000420\u0000132186846\u0000":{"address":{"type":"REVIEW","id":"132186846","pull":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/420#pullrequestreview-132186846","state":"DISMISSED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000422\u0000132251756\u0000":{"address":{"type":"REVIEW","id":"132251756","pull":{"type":"PULL","number":"422","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/422#pullrequestreview-132251756","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000423\u0000132252035\u0000":{"address":{"type":"REVIEW","id":"132252035","pull":{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/423#pullrequestreview-132252035","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000":{"address":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132251573","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198337323","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198338071","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198339708","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198342610","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198342829","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198343116","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198344105","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198344201","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I have not carefully read the snapshot, but I agree that it is pretty\r\nreadable! This looks good modulo inlines.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132272637\u0000":{"address":{"type":"REVIEW","id":"132272637","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132272637","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198355917","parent":{"type":"REVIEW","id":"132272637","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617174\u0000":{"address":{"type":"REVIEW","id":"132617174","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132617174","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198648096","parent":{"type":"REVIEW","id":"132617174","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617216\u0000":{"address":{"type":"REVIEW","id":"132617216","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132617216","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198648120","parent":{"type":"REVIEW","id":"132617216","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617509\u0000":{"address":{"type":"REVIEW","id":"132617509","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132617509","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198648367","parent":{"type":"REVIEW","id":"132617509","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617720\u0000":{"address":{"type":"REVIEW","id":"132617720","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132617720","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198648558","parent":{"type":"REVIEW","id":"132617720","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617864\u0000":{"address":{"type":"REVIEW","id":"132617864","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132617864","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198648679","parent":{"type":"REVIEW","id":"132617864","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132619756\u0000":{"address":{"type":"REVIEW","id":"132619756","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132619756","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198650361","parent":{"type":"REVIEW","id":"132619756","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132626801\u0000":{"address":{"type":"REVIEW","id":"132626801","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132626801","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198656162","parent":{"type":"REVIEW","id":"132626801","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo missing `empty` assertion.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132629008\u0000":{"address":{"type":"REVIEW","id":"132629008","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#pullrequestreview-132629008","state":"APPROVED","comments":[],"body":"thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000425\u0000132619835\u0000":{"address":{"type":"REVIEW","id":"132619835","pull":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/425#pullrequestreview-132619835","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000426\u0000132252159\u0000":{"address":{"type":"REVIEW","id":"132252159","pull":{"type":"PULL","number":"426","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/426#pullrequestreview-132252159","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132253333\u0000":{"address":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#pullrequestreview-132253333","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198338982","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198339348","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198339535","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"The tests in this file are not sufficiently powerful to persuade me that the code is correct.\r\n\r\nSuppose that the code were incorrectly written so that any of the following statements are true:\r\n- `src` and `dst` are swapped in `moreWeight`\r\n- if two edges both point from the same `src` to the same `dst`, the weight of the first one is discarded in favor of the second.\r\n- the self-loop edge is not properly counted for weight normalization\r\n\r\nIf any of those statements are true, the tests should fail unambiguously. As of right now it would require incredibly dedicated snapshot inspection.\r\n\r\nAlso, please consider linking to the pull requests that implemented the v1 versions of this code.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132269828\u0000":{"address":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#pullrequestreview-132269828","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198353351","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198353454","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198353475","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Swapping `src` and `dst` in `moreWeight` causes the test to fail. Taking\r\nonly the last edge’s weight causes the test to fail. If the self-loop\r\nedge is not included in weight normalization, then the result has `NaN`s\r\nfor the isolated node, so the test will fail.\r\n\r\nI’m not sure exactly what you mean by “would require incredibly\r\ndedicated snapshot inspection.” The tests will unambiguously fail. The\r\nauthor of the code that caused them to fail should then inspect why they\r\nfailed, not simply update the snapshot and carry on.\r\n\r\nI’m happy to add test cases for some simple Markov chains, using a\r\nnormalization factor of `0` (and making sure that there aren’t any\r\nisolated nodes) so that the output is easy to inspect. Offline, you\r\nintimated that you might prefer that such tests be written not as\r\nsnapshots, but rather directly in the code. Is this correct? (I note\r\nthat they’re obviously equivalent, but one may be more “tempting” to\r\nblow away with the updated, incorrect values just by hitting `u`.\r\nWhether this temptation should influence the decision is up for\r\ndiscussion.)\r\n\r\n> Also, please consider linking to the pull requests that implemented\r\n> the v1 versions of this code.\r\n\r\nSure; will do.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132622637\u0000":{"address":{"type":"REVIEW","id":"132622637","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#pullrequestreview-132622637","state":"APPROVED","comments":[{"type":"COMMENT","id":"198652844","parent":{"type":"REVIEW","id":"132622637","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132634111\u0000":{"address":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-132634111","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198662464","parent":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198664313","parent":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"High-level question: why is this hierarchical? You could instead write:\r\n\r\n```js\r\nfor (const x of view.repos()) this.addRepo(x);\r\nfor (const x of view.issues()) this.addIssue(x);\r\nfor (const x of view.pulls()) this.addPull(x);\r\nfor (const x of view.reviews()) this.addReview(x);\r\nfor (const x of view.comments()) this.addComment(x);\r\nfor (const x of view.userlikes()) this.addUserlike(x);\r\n```\r\n\r\nThis should be possible now that our `Entry`s have `parent` accessors\r\n(where appropriate), as witnessed by the fact that `addHasParent` no\r\nlonger needs to take the parent as an argument.\r\n\r\nIt seems to me that this would (a) simplify the implementation, and\r\n(b) preclude the case where you forget to include a particular path\r\nthrough the space (say, pull request review comments).\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132647448\u0000":{"address":{"type":"REVIEW","id":"132647448","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-132647448","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198673857","parent":{"type":"REVIEW","id":"132647448","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132647500\u0000":{"address":{"type":"REVIEW","id":"132647500","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-132647500","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198673910","parent":{"type":"REVIEW","id":"132647500","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000":{"address":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-132648273","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198674580","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198674760","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198676110","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198677192","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198677522","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000133012676\u0000":{"address":{"type":"REVIEW","id":"133012676","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-133012676","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198979295","parent":{"type":"REVIEW","id":"133012676","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000133013249\u0000":{"address":{"type":"REVIEW","id":"133013249","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#pullrequestreview-133013249","state":"APPROVED","comments":[{"type":"COMMENT","id":"198979752","parent":{"type":"REVIEW","id":"133013249","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000429\u0000132556521\u0000":{"address":{"type":"REVIEW","id":"132556521","pull":{"type":"PULL","number":"429","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/429#pullrequestreview-132556521","state":"APPROVED","comments":[],"body":"Maybe this one will even be merged. ;-)","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000":{"address":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-132961126","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198937283","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198939136","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198942589","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198946898","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198949475","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"198952610","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004063\u0000":{"address":{"type":"REVIEW","id":"133004063","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133004063","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198972409","parent":{"type":"REVIEW","id":"133004063","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004605\u0000":{"address":{"type":"REVIEW","id":"133004605","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133004605","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198972840","parent":{"type":"REVIEW","id":"133004605","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004907\u0000":{"address":{"type":"REVIEW","id":"133004907","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133004907","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198973090","parent":{"type":"REVIEW","id":"133004907","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133005054\u0000":{"address":{"type":"REVIEW","id":"133005054","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133005054","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198973205","parent":{"type":"REVIEW","id":"133005054","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133006098\u0000":{"address":{"type":"REVIEW","id":"133006098","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133006098","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198974029","parent":{"type":"REVIEW","id":"133006098","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133006876\u0000":{"address":{"type":"REVIEW","id":"133006876","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133006876","state":"COMMENTED","comments":[{"type":"COMMENT","id":"198974702","parent":{"type":"REVIEW","id":"133006876","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133007332\u0000":{"address":{"type":"REVIEW","id":"133007332","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#pullrequestreview-133007332","state":"APPROVED","comments":[{"type":"COMMENT","id":"198975022","parent":{"type":"REVIEW","id":"133007332","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000434\u0000133016578\u0000":{"address":{"type":"REVIEW","id":"133016578","pull":{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/434#pullrequestreview-133016578","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000435\u0000133022702\u0000":{"address":{"type":"REVIEW","id":"133022702","pull":{"type":"PULL","number":"435","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/435#pullrequestreview-133022702","state":"APPROVED","comments":[],"body":"Cool; thanks for running `--full`.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000436\u0000133035216\u0000":{"address":{"type":"REVIEW","id":"133035216","pull":{"type":"PULL","number":"436","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/436#pullrequestreview-133035216","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000437\u0000133035290\u0000":{"address":{"type":"REVIEW","id":"133035290","pull":{"type":"PULL","number":"437","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/437#pullrequestreview-133035290","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000438\u0000133036464\u0000":{"address":{"type":"REVIEW","id":"133036464","pull":{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/438#pullrequestreview-133036464","state":"APPROVED","comments":[{"type":"COMMENT","id":"198999065","parent":{"type":"REVIEW","id":"133036464","pull":{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000439\u0000133059227\u0000":{"address":{"type":"REVIEW","id":"133059227","pull":{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/439#pullrequestreview-133059227","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000440\u0000133058613\u0000":{"address":{"type":"REVIEW","id":"133058613","pull":{"type":"PULL","number":"440","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/440#pullrequestreview-133058613","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000441\u0000133060566\u0000":{"address":{"type":"REVIEW","id":"133060566","pull":{"type":"PULL","number":"441","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/441#pullrequestreview-133060566","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000442\u0000133073798\u0000":{"address":{"type":"REVIEW","id":"133073798","pull":{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/442#pullrequestreview-133073798","state":"APPROVED","comments":[{"type":"COMMENT","id":"199032153","parent":{"type":"REVIEW","id":"133073798","pull":{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo inline.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000443\u0000133074860\u0000":{"address":{"type":"REVIEW","id":"133074860","pull":{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/443#pullrequestreview-133074860","state":"APPROVED","comments":[{"type":"COMMENT","id":"199033124","parent":{"type":"REVIEW","id":"133074860","pull":{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000444\u0000133331131\u0000":{"address":{"type":"REVIEW","id":"133331131","pull":{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/444#pullrequestreview-133331131","state":"APPROVED","comments":[{"type":"COMMENT","id":"199243490","parent":{"type":"REVIEW","id":"133331131","pull":{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000445\u0000133334927\u0000":{"address":{"type":"REVIEW","id":"133334927","pull":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/445#pullrequestreview-133334927","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000446\u0000133334904\u0000":{"address":{"type":"REVIEW","id":"133334904","pull":{"type":"PULL","number":"446","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/446#pullrequestreview-133334904","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000447\u0000133335326\u0000":{"address":{"type":"REVIEW","id":"133335326","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/447#pullrequestreview-133335326","state":"APPROVED","comments":[{"type":"COMMENT","id":"199246830","parent":{"type":"REVIEW","id":"133335326","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000447\u0000133347074\u0000":{"address":{"type":"REVIEW","id":"133347074","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/447#pullrequestreview-133347074","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199256196","parent":{"type":"REVIEW","id":"133347074","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000448\u0000133353174\u0000":{"address":{"type":"REVIEW","id":"133353174","pull":{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/448#pullrequestreview-133353174","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000449\u0000133353294\u0000":{"address":{"type":"REVIEW","id":"133353294","pull":{"type":"PULL","number":"449","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/449#pullrequestreview-133353294","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000450\u0000133353339\u0000":{"address":{"type":"REVIEW","id":"133353339","pull":{"type":"PULL","number":"450","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/450#pullrequestreview-133353339","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133353837\u0000":{"address":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133353837","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199261497","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199261781","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199262365","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199263172","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357688\u0000":{"address":{"type":"REVIEW","id":"133357688","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133357688","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199264461","parent":{"type":"REVIEW","id":"133357688","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357813\u0000":{"address":{"type":"REVIEW","id":"133357813","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133357813","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199264545","parent":{"type":"REVIEW","id":"133357813","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357822\u0000":{"address":{"type":"REVIEW","id":"133357822","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133357822","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199264555","parent":{"type":"REVIEW","id":"133357822","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357840\u0000":{"address":{"type":"REVIEW","id":"133357840","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133357840","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357858\u0000":{"address":{"type":"REVIEW","id":"133357858","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#pullrequestreview-133357858","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199264579","parent":{"type":"REVIEW","id":"133357858","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000452\u0000133375847\u0000":{"address":{"type":"REVIEW","id":"133375847","pull":{"type":"PULL","number":"452","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/452#pullrequestreview-133375847","state":"APPROVED","comments":[],"body":":x: rejecting on principle due to branch name","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000453\u0000133377248\u0000":{"address":{"type":"REVIEW","id":"133377248","pull":{"type":"PULL","number":"453","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/453#pullrequestreview-133377248","state":"APPROVED","comments":[],"body":"I’m glad to see that you took my suggestions abuot the branch name and\r\nabout mentioning that `pagerank.js` is specifically for the use case\r\nwhere you start with a graph.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000455\u0000133382187\u0000":{"address":{"type":"REVIEW","id":"133382187","pull":{"type":"PULL","number":"455","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/455#pullrequestreview-133382187","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000456\u0000133389968\u0000":{"address":{"type":"REVIEW","id":"133389968","pull":{"type":"PULL","number":"456","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/456#pullrequestreview-133389968","state":"APPROVED","comments":[],"body":":ok_hand:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000457\u0000133406296\u0000":{"address":{"type":"REVIEW","id":"133406296","pull":{"type":"PULL","number":"457","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/457#pullrequestreview-133406296","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000458\u0000133407097\u0000":{"address":{"type":"REVIEW","id":"133407097","pull":{"type":"PULL","number":"458","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/458#pullrequestreview-133407097","state":"APPROVED","comments":[],"body":"Perfect; thanks.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000459\u0000133409231\u0000":{"address":{"type":"REVIEW","id":"133409231","pull":{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/459#pullrequestreview-133409231","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000460\u0000133409774\u0000":{"address":{"type":"REVIEW","id":"133409774","pull":{"type":"PULL","number":"460","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/460#pullrequestreview-133409774","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000461\u0000133409870\u0000":{"address":{"type":"REVIEW","id":"133409870","pull":{"type":"PULL","number":"461","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/461#pullrequestreview-133409870","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000462\u0000133411094\u0000":{"address":{"type":"REVIEW","id":"133411094","pull":{"type":"PULL","number":"462","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/462#pullrequestreview-133411094","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000463\u0000133412909\u0000":{"address":{"type":"REVIEW","id":"133412909","pull":{"type":"PULL","number":"463","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/463#pullrequestreview-133412909","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000464\u0000133412915\u0000":{"address":{"type":"REVIEW","id":"133412915","pull":{"type":"PULL","number":"464","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/464#pullrequestreview-133412915","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000466\u0000133436059\u0000":{"address":{"type":"REVIEW","id":"133436059","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/466#pullrequestreview-133436059","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199332064","parent":{"type":"REVIEW","id":"133436059","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000466\u0000133436122\u0000":{"address":{"type":"REVIEW","id":"133436122","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/466#pullrequestreview-133436122","state":"APPROVED","comments":[],"body":"Yay! :tada:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000467\u0000133436357\u0000":{"address":{"type":"REVIEW","id":"133436357","pull":{"type":"PULL","number":"467","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/467#pullrequestreview-133436357","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000468\u0000133437160\u0000":{"address":{"type":"REVIEW","id":"133437160","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/468#pullrequestreview-133437160","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000468\u0000133437213\u0000":{"address":{"type":"REVIEW","id":"133437213","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/468#pullrequestreview-133437213","state":"CHANGES_REQUESTED","comments":[],"body":"wait test it","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000468\u0000133437221\u0000":{"address":{"type":"REVIEW","id":"133437221","pull":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/468#pullrequestreview-133437221","state":"APPROVED","comments":[],"body":"oh okay that was fast","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000469\u0000133437505\u0000":{"address":{"type":"REVIEW","id":"133437505","pull":{"type":"PULL","number":"469","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/469#pullrequestreview-133437505","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000470\u0000133437541\u0000":{"address":{"type":"REVIEW","id":"133437541","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/470#pullrequestreview-133437541","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199333548","parent":{"type":"REVIEW","id":"133437541","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Would approve modulo inline.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000470\u0000133437597\u0000":{"address":{"type":"REVIEW","id":"133437597","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/470#pullrequestreview-133437597","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199333586","parent":{"type":"REVIEW","id":"133437597","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000470\u0000133437602\u0000":{"address":{"type":"REVIEW","id":"133437602","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/470#pullrequestreview-133437602","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000471\u0000133437875\u0000":{"address":{"type":"REVIEW","id":"133437875","pull":{"type":"PULL","number":"471","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/471#pullrequestreview-133437875","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000472\u0000133438085\u0000":{"address":{"type":"REVIEW","id":"133438085","pull":{"type":"PULL","number":"472","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/472#pullrequestreview-133438085","state":"APPROVED","comments":[],"body":":red_circle: ","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000473\u0000133438234\u0000":{"address":{"type":"REVIEW","id":"133438234","pull":{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/473#pullrequestreview-133438234","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000474\u0000133438387\u0000":{"address":{"type":"REVIEW","id":"133438387","pull":{"type":"PULL","number":"474","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/474#pullrequestreview-133438387","state":"APPROVED","comments":[],"body":":tada: doesn't seem like enough, but here it is! :tada:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000475\u0000133443451\u0000":{"address":{"type":"REVIEW","id":"133443451","pull":{"type":"PULL","number":"475","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/475#pullrequestreview-133443451","state":"APPROVED","comments":[],"body":":-) thanks.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000477\u0000134083821\u0000":{"address":{"type":"REVIEW","id":"134083821","pull":{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/477#pullrequestreview-134083821","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000478\u0000134084796\u0000":{"address":{"type":"REVIEW","id":"134084796","pull":{"type":"PULL","number":"478","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/478#pullrequestreview-134084796","state":"APPROVED","comments":[],"body":"Subtle. Great catch!","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000479\u0000134085996\u0000":{"address":{"type":"REVIEW","id":"134085996","pull":{"type":"PULL","number":"479","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/479#pullrequestreview-134085996","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000480\u0000134087406\u0000":{"address":{"type":"REVIEW","id":"134087406","pull":{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/480#pullrequestreview-134087406","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134162878\u0000":{"address":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134162878","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199944413","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199945153","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199945894","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"199947084","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Looks good overall. Some suggestions. Thanks for writing this.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202514\u0000":{"address":{"type":"REVIEW","id":"134202514","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134202514","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199978318","parent":{"type":"REVIEW","id":"134202514","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202686\u0000":{"address":{"type":"REVIEW","id":"134202686","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134202686","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199978466","parent":{"type":"REVIEW","id":"134202686","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202749\u0000":{"address":{"type":"REVIEW","id":"134202749","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134202749","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199978518","parent":{"type":"REVIEW","id":"134202749","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202854\u0000":{"address":{"type":"REVIEW","id":"134202854","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134202854","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199978625","parent":{"type":"REVIEW","id":"134202854","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134204349\u0000":{"address":{"type":"REVIEW","id":"134204349","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134204349","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134204366\u0000":{"address":{"type":"REVIEW","id":"134204366","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#pullrequestreview-134204366","state":"COMMENTED","comments":[{"type":"COMMENT","id":"199979882","parent":{"type":"REVIEW","id":"134204366","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000484\u0000134481473\u0000":{"address":{"type":"REVIEW","id":"134481473","pull":{"type":"PULL","number":"484","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/484#pullrequestreview-134481473","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000485\u0000134482219\u0000":{"address":{"type":"REVIEW","id":"134482219","pull":{"type":"PULL","number":"485","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/485#pullrequestreview-134482219","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000486\u0000134483582\u0000":{"address":{"type":"REVIEW","id":"134483582","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/486#pullrequestreview-134483582","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000486\u0000134484633\u0000":{"address":{"type":"REVIEW","id":"134484633","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/486#pullrequestreview-134484633","state":"APPROVED","comments":[{"type":"COMMENT","id":"200213799","parent":{"type":"REVIEW","id":"134484633","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000486\u0000134486894\u0000":{"address":{"type":"REVIEW","id":"134486894","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/486#pullrequestreview-134486894","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200215535","parent":{"type":"REVIEW","id":"134486894","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134484194\u0000":{"address":{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#pullrequestreview-134484194","state":"APPROVED","comments":[{"type":"COMMENT","id":"200213427","parent":{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200213655","parent":{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134487148\u0000":{"address":{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#pullrequestreview-134487148","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200215754","parent":{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200215765","parent":{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000488\u0000134490137\u0000":{"address":{"type":"REVIEW","id":"134490137","pull":{"type":"PULL","number":"488","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/488#pullrequestreview-134490137","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134803070\u0000":{"address":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#pullrequestreview-134803070","state":"APPROVED","comments":[{"type":"COMMENT","id":"200477307","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200479049","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200481100","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200482051","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134813923\u0000":{"address":{"type":"REVIEW","id":"134813923","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#pullrequestreview-134813923","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200486334","parent":{"type":"REVIEW","id":"134813923","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134815509\u0000":{"address":{"type":"REVIEW","id":"134815509","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#pullrequestreview-134815509","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200487655","parent":{"type":"REVIEW","id":"134815509","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000490\u0000134845221\u0000":{"address":{"type":"REVIEW","id":"134845221","pull":{"type":"PULL","number":"490","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/490#pullrequestreview-134845221","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000491\u0000134845451\u0000":{"address":{"type":"REVIEW","id":"134845451","pull":{"type":"PULL","number":"491","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/491#pullrequestreview-134845451","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000492\u0000134878414\u0000":{"address":{"type":"REVIEW","id":"134878414","pull":{"type":"PULL","number":"492","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/492#pullrequestreview-134878414","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000493\u0000135140389\u0000":{"address":{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#pullrequestreview-135140389","state":"APPROVED","comments":[{"type":"COMMENT","id":"200756701","parent":{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200758436","parent":{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"For reference, I don’t feel like this was substantively paired with me;\r\nthe code is almost entirely yours. Feel free to remove the edge if you\r\nlike.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000493\u0000135153703\u0000":{"address":{"type":"REVIEW","id":"135153703","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#pullrequestreview-135153703","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200767605","parent":{"type":"REVIEW","id":"135153703","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000494\u0000135184051\u0000":{"address":{"type":"REVIEW","id":"135184051","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/494#pullrequestreview-135184051","state":"APPROVED","comments":[{"type":"COMMENT","id":"200794013","parent":{"type":"REVIEW","id":"135184051","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"> The sliders have the range [0,1] with step size of 0.01.\r\n\r\nI wonder whether it would be interesting to allow a user to toggle\r\nbetween linear space and sigmoid space.\r\n\r\n> many users then have a score of -Infinity.\r\n\r\nTo be clear: they have a *log* score of `-Infinity`, and a score of\r\nsimply zero. :-)\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000494\u0000135192414\u0000":{"address":{"type":"REVIEW","id":"135192414","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/494#pullrequestreview-135192414","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200801319","parent":{"type":"REVIEW","id":"135192414","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000495\u0000135180678\u0000":{"address":{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#pullrequestreview-135180678","state":"COMMENTED","comments":[{"type":"COMMENT","id":"200791023","parent":{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"200791073","parent":{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I think I'm going to hold off on reviewing until we can discuss in person, as I want to understand the decisions made here and right now I certainly don't :)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000495\u0000135192800\u0000":{"address":{"type":"REVIEW","id":"135192800","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#pullrequestreview-135192800","state":"APPROVED","comments":[],"body":"You've persuaded me to approve this. The implementation is fine, and I trust you on the typing.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000496\u0000135192841\u0000":{"address":{"type":"REVIEW","id":"135192841","pull":{"type":"PULL","number":"496","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/496#pullrequestreview-135192841","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000497\u0000135193093\u0000":{"address":{"type":"REVIEW","id":"135193093","pull":{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/497#pullrequestreview-135193093","state":"APPROVED","comments":[],"body":"Seems fine. Will need rebase. I do wish we had some testing on this module.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000500\u0000135184022\u0000":{"address":{"type":"REVIEW","id":"135184022","pull":{"type":"PULL","number":"500","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/500#pullrequestreview-135184022","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000501\u0000135193680\u0000":{"address":{"type":"REVIEW","id":"135193680","pull":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/501#pullrequestreview-135193680","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000503\u0000135195104\u0000":{"address":{"type":"REVIEW","id":"135195104","pull":{"type":"PULL","number":"503","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/503#pullrequestreview-135195104","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000504\u0000135589958\u0000":{"address":{"type":"REVIEW","id":"135589958","pull":{"type":"PULL","number":"504","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/504#pullrequestreview-135589958","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000505\u0000135599866\u0000":{"address":{"type":"REVIEW","id":"135599866","pull":{"type":"PULL","number":"505","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/505#pullrequestreview-135599866","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000506\u0000135601724\u0000":{"address":{"type":"REVIEW","id":"135601724","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#pullrequestreview-135601724","state":"APPROVED","comments":[{"type":"COMMENT","id":"201154778","parent":{"type":"REVIEW","id":"135601724","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"nice changes, especially NullUtil.get around map.get","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000506\u0000135641686\u0000":{"address":{"type":"REVIEW","id":"135641686","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#pullrequestreview-135641686","state":"COMMENTED","comments":[{"type":"COMMENT","id":"201189448","parent":{"type":"REVIEW","id":"135641686","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000507\u0000135651404\u0000":{"address":{"type":"REVIEW","id":"135651404","pull":{"type":"PULL","number":"507","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/507#pullrequestreview-135651404","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000510\u0000139634024\u0000":{"address":{"type":"REVIEW","id":"139634024","pull":{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/510#pullrequestreview-139634024","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000511\u0000139651513\u0000":{"address":{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/511#pullrequestreview-139651513","state":"APPROVED","comments":[{"type":"COMMENT","id":"204551711","parent":{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"204551824","parent":{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000512\u0000139676744\u0000":{"address":{"type":"REVIEW","id":"139676744","pull":{"type":"PULL","number":"512","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/512#pullrequestreview-139676744","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000513\u0000139678853\u0000":{"address":{"type":"REVIEW","id":"139678853","pull":{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/513#pullrequestreview-139678853","state":"APPROVED","comments":[{"type":"COMMENT","id":"204574199","parent":{"type":"REVIEW","id":"139678853","pull":{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000514\u0000139674269\u0000":{"address":{"type":"REVIEW","id":"139674269","pull":{"type":"PULL","number":"514","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/514#pullrequestreview-139674269","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000515\u0000139680075\u0000":{"address":{"type":"REVIEW","id":"139680075","pull":{"type":"PULL","number":"515","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/515#pullrequestreview-139680075","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000516\u0000140042088\u0000":{"address":{"type":"REVIEW","id":"140042088","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/516#pullrequestreview-140042088","state":"COMMENTED","comments":[{"type":"COMMENT","id":"204880897","parent":{"type":"REVIEW","id":"140042088","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000516\u0000140045982\u0000":{"address":{"type":"REVIEW","id":"140045982","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/516#pullrequestreview-140045982","state":"APPROVED","comments":[],"body":"Discussed; punting.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000518\u0000140051030\u0000":{"address":{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/518#pullrequestreview-140051030","state":"COMMENTED","comments":[{"type":"COMMENT","id":"204888159","parent":{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"204888302","parent":{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Minor tweaks :)","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000518\u0000140052785\u0000":{"address":{"type":"REVIEW","id":"140052785","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/518#pullrequestreview-140052785","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000519\u0000140100904\u0000":{"address":{"type":"REVIEW","id":"140100904","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/519#pullrequestreview-140100904","state":"COMMENTED","comments":[{"type":"COMMENT","id":"204929225","parent":{"type":"REVIEW","id":"140100904","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000519\u0000140099222\u0000":{"address":{"type":"REVIEW","id":"140099222","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/519#pullrequestreview-140099222","state":"APPROVED","comments":[{"type":"COMMENT","id":"204927770","parent":{"type":"REVIEW","id":"140099222","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000520\u0000140101798\u0000":{"address":{"type":"REVIEW","id":"140101798","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/520#pullrequestreview-140101798","state":"APPROVED","comments":[{"type":"COMMENT","id":"204930043","parent":{"type":"REVIEW","id":"140101798","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000520\u0000140129306\u0000":{"address":{"type":"REVIEW","id":"140129306","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/520#pullrequestreview-140129306","state":"COMMENTED","comments":[{"type":"COMMENT","id":"204953914","parent":{"type":"REVIEW","id":"140129306","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000521\u0000140131662\u0000":{"address":{"type":"REVIEW","id":"140131662","pull":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/521#pullrequestreview-140131662","state":"APPROVED","comments":[{"type":"COMMENT","id":"204956059","parent":{"type":"REVIEW","id":"140131662","pull":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000522\u0000140132026\u0000":{"address":{"type":"REVIEW","id":"140132026","pull":{"type":"PULL","number":"522","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/522#pullrequestreview-140132026","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000523\u0000140132409\u0000":{"address":{"type":"REVIEW","id":"140132409","pull":{"type":"PULL","number":"523","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/523#pullrequestreview-140132409","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000524\u0000140132659\u0000":{"address":{"type":"REVIEW","id":"140132659","pull":{"type":"PULL","number":"524","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/524#pullrequestreview-140132659","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000525\u0000140132674\u0000":{"address":{"type":"REVIEW","id":"140132674","pull":{"type":"PULL","number":"525","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/525#pullrequestreview-140132674","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000526\u0000140133072\u0000":{"address":{"type":"REVIEW","id":"140133072","pull":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/526#pullrequestreview-140133072","state":"COMMENTED","comments":[],"body":"TestLocalStore = Checked Memory Local Store","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000526\u0000140143587\u0000":{"address":{"type":"REVIEW","id":"140143587","pull":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/526#pullrequestreview-140143587","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000527\u0000140926454\u0000":{"address":{"type":"REVIEW","id":"140926454","pull":{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/527#pullrequestreview-140926454","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000528\u0000140926801\u0000":{"address":{"type":"REVIEW","id":"140926801","pull":{"type":"PULL","number":"528","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/528#pullrequestreview-140926801","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140957827\u0000":{"address":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140957827","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205644016","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205644793","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205644957","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000":{"address":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140960295","state":"APPROVED","comments":[{"type":"COMMENT","id":"205646095","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205646682","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205647328","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205647632","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205648219","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205649660","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966399\u0000":{"address":{"type":"REVIEW","id":"140966399","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966399","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651469","parent":{"type":"REVIEW","id":"140966399","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966409\u0000":{"address":{"type":"REVIEW","id":"140966409","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966409","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651475","parent":{"type":"REVIEW","id":"140966409","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966415\u0000":{"address":{"type":"REVIEW","id":"140966415","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966415","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651481","parent":{"type":"REVIEW","id":"140966415","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966440\u0000":{"address":{"type":"REVIEW","id":"140966440","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966440","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651500","parent":{"type":"REVIEW","id":"140966440","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966466\u0000":{"address":{"type":"REVIEW","id":"140966466","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966466","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651522","parent":{"type":"REVIEW","id":"140966466","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966475\u0000":{"address":{"type":"REVIEW","id":"140966475","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966475","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651532","parent":{"type":"REVIEW","id":"140966475","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966521\u0000":{"address":{"type":"REVIEW","id":"140966521","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966521","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651560","parent":{"type":"REVIEW","id":"140966521","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966680\u0000":{"address":{"type":"REVIEW","id":"140966680","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#pullrequestreview-140966680","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205651710","parent":{"type":"REVIEW","id":"140966680","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000530\u0000140960751\u0000":{"address":{"type":"REVIEW","id":"140960751","pull":{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/530#pullrequestreview-140960751","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000140980003\u0000":{"address":{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-140980003","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205663576","parent":{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205663646","parent":{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000140980343\u0000":{"address":{"type":"REVIEW","id":"140980343","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-140980343","state":"COMMENTED","comments":[],"body":".","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141172798\u0000":{"address":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-141172798","state":"APPROVED","comments":[{"type":"COMMENT","id":"205822107","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205822469","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205824113","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205824426","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Much better. Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141195970\u0000":{"address":{"type":"REVIEW","id":"141195970","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-141195970","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205840830","parent":{"type":"REVIEW","id":"141195970","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141196060\u0000":{"address":{"type":"REVIEW","id":"141196060","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-141196060","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205840911","parent":{"type":"REVIEW","id":"141196060","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141196333\u0000":{"address":{"type":"REVIEW","id":"141196333","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#pullrequestreview-141196333","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205841129","parent":{"type":"REVIEW","id":"141196333","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000532\u0000140979452\u0000":{"address":{"type":"REVIEW","id":"140979452","pull":{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/532#pullrequestreview-140979452","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000533\u0000140980599\u0000":{"address":{"type":"REVIEW","id":"140980599","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/533#pullrequestreview-140980599","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205664083","parent":{"type":"REVIEW","id":"140980599","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000533\u0000140980613\u0000":{"address":{"type":"REVIEW","id":"140980613","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/533#pullrequestreview-140980613","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000535\u0000141216698\u0000":{"address":{"type":"REVIEW","id":"141216698","pull":{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/535#pullrequestreview-141216698","state":"APPROVED","comments":[],"body":"Excellent. :+1:","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000535\u0000141298181\u0000":{"address":{"type":"REVIEW","id":"141298181","pull":{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/535#pullrequestreview-141298181","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000536\u0000141234490\u0000":{"address":{"type":"REVIEW","id":"141234490","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#pullrequestreview-141234490","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205872047","parent":{"type":"REVIEW","id":"141234490","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000536\u0000141243296\u0000":{"address":{"type":"REVIEW","id":"141243296","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#pullrequestreview-141243296","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205878894","parent":{"type":"REVIEW","id":"141243296","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000536\u0000141257878\u0000":{"address":{"type":"REVIEW","id":"141257878","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#pullrequestreview-141257878","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000537\u0000141240170\u0000":{"address":{"type":"REVIEW","id":"141240170","pull":{"type":"PULL","number":"537","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/537#pullrequestreview-141240170","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000538\u0000141240610\u0000":{"address":{"type":"REVIEW","id":"141240610","pull":{"type":"PULL","number":"538","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/538#pullrequestreview-141240610","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000539\u0000141240100\u0000":{"address":{"type":"REVIEW","id":"141240100","pull":{"type":"PULL","number":"539","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/539#pullrequestreview-141240100","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000540\u0000141243215\u0000":{"address":{"type":"REVIEW","id":"141243215","pull":{"type":"PULL","number":"540","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/540#pullrequestreview-141243215","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000541\u0000141254877\u0000":{"address":{"type":"REVIEW","id":"141254877","pull":{"type":"PULL","number":"541","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/541#pullrequestreview-141254877","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000542\u0000141275421\u0000":{"address":{"type":"REVIEW","id":"141275421","pull":{"type":"PULL","number":"542","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/542#pullrequestreview-141275421","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000543\u0000141284463\u0000":{"address":{"type":"REVIEW","id":"141284463","pull":{"type":"PULL","number":"543","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/543#pullrequestreview-141284463","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000544\u0000141287900\u0000":{"address":{"type":"REVIEW","id":"141287900","pull":{"type":"PULL","number":"544","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/544#pullrequestreview-141287900","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000545\u0000141287256\u0000":{"address":{"type":"REVIEW","id":"141287256","pull":{"type":"PULL","number":"545","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/545#pullrequestreview-141287256","state":"APPROVED","comments":[],"body":"Cool. I have some ideas on how to do this generically, but we can leave that for another day.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000546\u0000141288925\u0000":{"address":{"type":"REVIEW","id":"141288925","pull":{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/546#pullrequestreview-141288925","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000547\u0000141289019\u0000":{"address":{"type":"REVIEW","id":"141289019","pull":{"type":"PULL","number":"547","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/547#pullrequestreview-141289019","state":"APPROVED","comments":[],"body":"Glad that we're in a state where this is easily tested!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000548\u0000141298177\u0000":{"address":{"type":"REVIEW","id":"141298177","pull":{"type":"PULL","number":"548","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/548#pullrequestreview-141298177","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000549\u0000141303620\u0000":{"address":{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/549#pullrequestreview-141303620","state":"PENDING","comments":[{"type":"COMMENT","id":"205929170","parent":{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205956056","parent":{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000550\u0000141301606\u0000":{"address":{"type":"REVIEW","id":"141301606","pull":{"type":"PULL","number":"550","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/550#pullrequestreview-141301606","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000551\u0000141301431\u0000":{"address":{"type":"REVIEW","id":"141301431","pull":{"type":"PULL","number":"551","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/551#pullrequestreview-141301431","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000":{"address":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-141302243","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205927783","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205927790","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205927825","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205927967","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205928015","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205928073","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205928363","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205928379","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205929337","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205929342","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205929371","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205929501","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Initial review pass. I might take a closer look later.\r\n\r\nThanks for all the work so far! :-)\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141304270\u0000":{"address":{"type":"REVIEW","id":"141304270","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-141304270","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205929662","parent":{"type":"REVIEW","id":"141304270","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141328212\u0000":{"address":{"type":"REVIEW","id":"141328212","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-141328212","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205954531","parent":{"type":"REVIEW","id":"141328212","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000":{"address":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142202313","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206732264","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206732502","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206732690","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206733018","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206734848","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206735030","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206735236","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Thanks for including the screenshots. This is certainly an improvement!\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222254\u0000":{"address":{"type":"REVIEW","id":"142222254","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142222254","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206750273","parent":{"type":"REVIEW","id":"142222254","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222406\u0000":{"address":{"type":"REVIEW","id":"142222406","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142222406","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206750380","parent":{"type":"REVIEW","id":"142222406","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222809\u0000":{"address":{"type":"REVIEW","id":"142222809","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142222809","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206750772","parent":{"type":"REVIEW","id":"142222809","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142479763\u0000":{"address":{"type":"REVIEW","id":"142479763","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142479763","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206963837","parent":{"type":"REVIEW","id":"142479763","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142895639\u0000":{"address":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142895639","state":"APPROVED","comments":[{"type":"COMMENT","id":"207308685","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"207311960","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"207314461","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"207314844","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approving modulo some inline comments. After addressing them and\r\nre-pushing, and once Travis has passed, feel free to merge via “Squash\r\nand merge” (not “Rebase and merge”). When you do so, please ensure that\r\nthe commit message is exactly what you intend.\r\n\r\nThanks!\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935489\u0000":{"address":{"type":"REVIEW","id":"142935489","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142935489","state":"COMMENTED","comments":[{"type":"COMMENT","id":"207341025","parent":{"type":"REVIEW","id":"142935489","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935607\u0000":{"address":{"type":"REVIEW","id":"142935607","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142935607","state":"COMMENTED","comments":[{"type":"COMMENT","id":"207341116","parent":{"type":"REVIEW","id":"142935607","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935644\u0000":{"address":{"type":"REVIEW","id":"142935644","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#pullrequestreview-142935644","state":"COMMENTED","comments":[{"type":"COMMENT","id":"207341147","parent":{"type":"REVIEW","id":"142935644","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000":{"address":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306095","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205931368","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205931379","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205931382","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205931430","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"205931710","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306958\u0000":{"address":{"type":"REVIEW","id":"141306958","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306958","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932393","parent":{"type":"REVIEW","id":"141306958","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306960\u0000":{"address":{"type":"REVIEW","id":"141306960","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306960","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932394","parent":{"type":"REVIEW","id":"141306960","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306967\u0000":{"address":{"type":"REVIEW","id":"141306967","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306967","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932398","parent":{"type":"REVIEW","id":"141306967","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306973\u0000":{"address":{"type":"REVIEW","id":"141306973","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306973","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932407","parent":{"type":"REVIEW","id":"141306973","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306992\u0000":{"address":{"type":"REVIEW","id":"141306992","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141306992","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932428","parent":{"type":"REVIEW","id":"141306992","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141307064\u0000":{"address":{"type":"REVIEW","id":"141307064","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#pullrequestreview-141307064","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000556\u0000141305746\u0000":{"address":{"type":"REVIEW","id":"141305746","pull":{"type":"PULL","number":"556","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/556#pullrequestreview-141305746","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000557\u0000141306711\u0000":{"address":{"type":"REVIEW","id":"141306711","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/557#pullrequestreview-141306711","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932030","parent":{"type":"REVIEW","id":"141306711","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Suggested alternative implementation. Thoughts?","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000557\u0000141306929\u0000":{"address":{"type":"REVIEW","id":"141306929","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/557#pullrequestreview-141306929","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932367","parent":{"type":"REVIEW","id":"141306929","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000557\u0000141307070\u0000":{"address":{"type":"REVIEW","id":"141307070","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/557#pullrequestreview-141307070","state":"APPROVED","comments":[],"body":"Thanks!","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000558\u0000141306851\u0000":{"address":{"type":"REVIEW","id":"141306851","pull":{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/558#pullrequestreview-141306851","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000559\u0000141307173\u0000":{"address":{"type":"REVIEW","id":"141307173","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/559#pullrequestreview-141307173","state":"APPROVED","comments":[{"type":"COMMENT","id":"205932601","parent":{"type":"REVIEW","id":"141307173","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"approved/nits","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000559\u0000141307194\u0000":{"address":{"type":"REVIEW","id":"141307194","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/559#pullrequestreview-141307194","state":"COMMENTED","comments":[{"type":"COMMENT","id":"205932623","parent":{"type":"REVIEW","id":"141307194","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000560\u0000141307154\u0000":{"address":{"type":"REVIEW","id":"141307154","pull":{"type":"PULL","number":"560","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/560#pullrequestreview-141307154","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000562\u0000141750043\u0000":{"address":{"type":"REVIEW","id":"141750043","pull":{"type":"PULL","number":"562","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/562#pullrequestreview-141750043","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000563\u0000141750145\u0000":{"address":{"type":"REVIEW","id":"141750145","pull":{"type":"PULL","number":"563","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/563#pullrequestreview-141750145","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000564\u0000141750305\u0000":{"address":{"type":"REVIEW","id":"141750305","pull":{"type":"PULL","number":"564","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/564#pullrequestreview-141750305","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000565\u0000141750464\u0000":{"address":{"type":"REVIEW","id":"141750464","pull":{"type":"PULL","number":"565","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/565#pullrequestreview-141750464","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000566\u0000141750599\u0000":{"address":{"type":"REVIEW","id":"141750599","pull":{"type":"PULL","number":"566","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/566#pullrequestreview-141750599","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000567\u0000141750790\u0000":{"address":{"type":"REVIEW","id":"141750790","pull":{"type":"PULL","number":"567","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/567#pullrequestreview-141750790","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000568\u0000141750947\u0000":{"address":{"type":"REVIEW","id":"141750947","pull":{"type":"PULL","number":"568","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/568#pullrequestreview-141750947","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000569\u0000141751023\u0000":{"address":{"type":"REVIEW","id":"141751023","pull":{"type":"PULL","number":"569","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/569#pullrequestreview-141751023","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000570\u0000141751118\u0000":{"address":{"type":"REVIEW","id":"141751118","pull":{"type":"PULL","number":"570","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/570#pullrequestreview-141751118","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000571\u0000142068030\u0000":{"address":{"type":"REVIEW","id":"142068030","pull":{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/571#pullrequestreview-142068030","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000572\u0000142068097\u0000":{"address":{"type":"REVIEW","id":"142068097","pull":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/572#pullrequestreview-142068097","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000573\u0000142068204\u0000":{"address":{"type":"REVIEW","id":"142068204","pull":{"type":"PULL","number":"573","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/573#pullrequestreview-142068204","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000141805575\u0000":{"address":{"type":"REVIEW","id":"141805575","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#pullrequestreview-141805575","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206399266","parent":{"type":"REVIEW","id":"141805575","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000142071125\u0000":{"address":{"type":"REVIEW","id":"142071125","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#pullrequestreview-142071125","state":"APPROVED","comments":[],"body":"Looks great to me. Thanks for writing this.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000142075609\u0000":{"address":{"type":"REVIEW","id":"142075609","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#pullrequestreview-142075609","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206627089","parent":{"type":"REVIEW","id":"142075609","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000142931457\u0000":{"address":{"type":"REVIEW","id":"142931457","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#pullrequestreview-142931457","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000575\u0000142130746\u0000":{"address":{"type":"REVIEW","id":"142130746","pull":{"type":"PULL","number":"575","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/575#pullrequestreview-142130746","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000577\u0000142132895\u0000":{"address":{"type":"REVIEW","id":"142132895","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/577#pullrequestreview-142132895","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206673515","parent":{"type":"REVIEW","id":"142132895","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Please add to the test plan handling the case where no output path was (implicitly) specified","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000577\u0000142168049\u0000":{"address":{"type":"REVIEW","id":"142168049","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/577#pullrequestreview-142168049","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000578\u0000142168092\u0000":{"address":{"type":"REVIEW","id":"142168092","pull":{"type":"PULL","number":"578","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/578#pullrequestreview-142168092","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142208149\u0000":{"address":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#pullrequestreview-142208149","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206737599","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206739282","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206741618","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206741774","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"I have read the implementation and will now proceed to read the tests. Looks good so far.\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142213425\u0000":{"address":{"type":"REVIEW","id":"142213425","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#pullrequestreview-142213425","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206742484","parent":{"type":"REVIEW","id":"142213425","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142213484\u0000":{"address":{"type":"REVIEW","id":"142213484","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#pullrequestreview-142213484","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206742545","parent":{"type":"REVIEW","id":"142213484","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142226222\u0000":{"address":{"type":"REVIEW","id":"142226222","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#pullrequestreview-142226222","state":"COMMENTED","comments":[{"type":"COMMENT","id":"206753727","parent":{"type":"REVIEW","id":"142226222","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000143035590\u0000":{"address":{"type":"REVIEW","id":"143035590","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#pullrequestreview-143035590","state":"APPROVED","comments":[],"body":"Moving a bit faster than usual on this—I haven’t read the tests\r\ncarefully, but @decentralion assures me that they’re excellent. B-)\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000581\u0000142213225\u0000":{"address":{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/581#pullrequestreview-142213225","state":"APPROVED","comments":[{"type":"COMMENT","id":"206742306","parent":{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"206742321","parent":{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000582\u0000142226263\u0000":{"address":{"type":"REVIEW","id":"142226263","pull":{"type":"PULL","number":"582","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/582#pullrequestreview-142226263","state":"APPROVED","comments":[],"body":"Great.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000583\u0000142539811\u0000":{"address":{"type":"REVIEW","id":"142539811","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#pullrequestreview-142539811","state":"COMMENTED","comments":[{"type":"COMMENT","id":"207012684","parent":{"type":"REVIEW","id":"142539811","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000583\u0000143039164\u0000":{"address":{"type":"REVIEW","id":"143039164","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#pullrequestreview-143039164","state":"APPROVED","comments":[{"type":"COMMENT","id":"207428004","parent":{"type":"REVIEW","id":"143039164","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"nice.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000585\u0000142965352\u0000":{"address":{"type":"REVIEW","id":"142965352","pull":{"type":"PULL","number":"585","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/585#pullrequestreview-142965352","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"claireandcode"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000591\u0000142953116\u0000":{"address":{"type":"REVIEW","id":"142953116","pull":{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/591#pullrequestreview-142953116","state":"APPROVED","comments":[],"body":"Code looks good.\r\n\r\nFYI, Markdown syntax for links is any of the following:\r\n\r\n  - ```markdown\r\n    [#584](https://github.com/sourcecred/sourcecred/issues/584)\r\n    ```\r\n\r\n  - ```markdown\r\n    [#584]\r\n\r\n    [#584]: https://github.com/sourcecred/sourcecred/issues/584\r\n    ```\r\n  - For GitHub issues/PRs specifically:\r\n\r\n    ```markdown\r\n    #584\r\n    ```\r\n","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000591\u0000142953196\u0000":{"address":{"type":"REVIEW","id":"142953196","pull":{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/591#pullrequestreview-142953196","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000593\u0000143035329\u0000":{"address":{"type":"REVIEW","id":"143035329","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/593#pullrequestreview-143035329","state":"APPROVED","comments":[],"body":"Note: if you write \"Closes #587\" in the commit message, then GitHub will automatically close it for you when this merges.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000593\u0000143042263\u0000":{"address":{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/593#pullrequestreview-143042263","state":"APPROVED","comments":[{"type":"COMMENT","id":"207430779","parent":{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"207430819","parent":{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"Approved modulo inlines.","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000597\u0000143000747\u0000":{"address":{"type":"REVIEW","id":"143000747","pull":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/597#pullrequestreview-143000747","state":"COMMENTED","comments":[],"body":"I don't think we should complicate `yarn unit`. The vast majority of development in this project is against js code, so let's make the testing surface area cater to the usual case, and add `yarn sharness` as a separate command. Of course, `yarn test` will run both.\r\n\r\nAlso, for posterity please document the \"clear advantages\" to adding yarness as a submodule in the commit message.","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000597\u0000143004699\u0000":{"address":{"type":"REVIEW","id":"143004699","pull":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/597#pullrequestreview-143004699","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000598\u0000143035709\u0000":{"address":{"type":"REVIEW","id":"143035709","pull":{"type":"PULL","number":"598","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/598#pullrequestreview-143035709","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000599\u0000143038051\u0000":{"address":{"type":"REVIEW","id":"143038051","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/599#pullrequestreview-143038051","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000599\u0000143039801\u0000":{"address":{"type":"REVIEW","id":"143039801","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/599#pullrequestreview-143039801","state":"COMMENTED","comments":[{"type":"COMMENT","id":"207428594","parent":{"type":"REVIEW","id":"143039801","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"body":"","authors":[{"type":"USERLIKE","login":"wchargin"}]},"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000600\u0000143041053\u0000":{"address":{"type":"REVIEW","id":"143041053","pull":{"type":"PULL","number":"600","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/600#pullrequestreview-143041053","state":"APPROVED","comments":[],"body":"","authors":[{"type":"USERLIKE","login":"decentralion"}]}},"comments":{"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000362942411\u0000":{"address":{"type":"COMMENT","id":"362942411","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-362942411","authors":[{"type":"USERLIKE","login":"000drax"}],"body":"I like the symbol idea!\r\n\r\nChiming in on the bikeshed... I think the symbol should be simple and familiar.\r\nSourceCredϾ\r\nSourceCred¿\r\n\r\nI'm rather partial to the Lunate Sigma (Ͼ)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000362952582\u0000":{"address":{"type":"COMMENT","id":"362952582","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-362952582","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I like Lunate Sigma too, although I'm still quite fond of the [currency sign ¤](https://en.wikipedia.org/wiki/Currency_sign_(typography)). Now that I know that ¤ semantically means \"an unknown currency\" it seems pretty appropriate. \r\n\r\nSome more examples to look at:\r\nPython¤\r\nTensorFlow¤\r\nGit¤\r\n\r\nPythonϾ\r\nTensorFlowϾ\r\nGitϾ\r\n\r\nHmm, the fact that Lunate Sigma looks like a \"C\" does make it easier for my brain to parse/pronounce PythonϾ as \"PythonCred\". "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000362953396\u0000":{"address":{"type":"COMMENT","id":"362953396","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-362953396","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ooh, another benefit to using Ͼ: Everywhere that I was writing \"Cred\", I can now write \"Ͼred\". That makes it extremely transparent that Ͼ stands for Ͼred. I made a PR that effects this switch in the README (#3) take a look maybe?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000362965136\u0000":{"address":{"type":"COMMENT","id":"362965136","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-362965136","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Another benefit to Ͼ (or any other symbol that visually looks like a C): if someone wants to write 1000Ͼ but doesn't know how to grab that unicode symbol, they can just write 1000C and it will still be pretty clear what they mean."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000363345459\u0000":{"address":{"type":"COMMENT","id":"363345459","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-363345459","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Two notes on the lunate sigma:\r\n  - At least to me, it is very hard to distinguish from a standard \"C\". The dot is small and not prominent, as opposed to the strokes in the dollar, euro, pound, etc. signs.\r\n  - We would need to specify \"dotted lunate sigma\", which is not the standard variant. A capital lunate sigma (U+03F9) is just Ϲ `Ϲ`; the dotted one is U+03FE Ͼ `Ͼ`. (Somewhat unfortunately—if [unsourced Wikipedia][1] is to be believed—the dotted form is \"an editorial sign indicating that the line so marked is at an incorrect position.\")\r\n\r\n[1]: https://en.wikipedia.org/w/index.php?title=Sigma&oldid=822738925#Lunate_sigma\r\n\r\nMy two cents:\r\n  - I like U+A4 CURRENCY SIGN ¤ `¤`. It's kind of amusing that you suggested it without knowing the currency-related meaning! :-) Interpreting \"unknown currency\" as \"arbitrary currency\" seems very appropriate to me. The standard glyph is simple and unambiguous.\r\n  - *And* it's in Latin-1, which—practically speaking—has the potential to avert a lot of problems. Of the options in Latin-1, it seems the best to me.\r\n  - As a less-valuable-but-also-nice technical boon, the catcode of ¤ is \"Symbol, Currency\", while Ϲ is \"Letter, Uppercase\".\r\n  - I suspect that picking anything that looks like the \"cents\" symbol, as in a few of the examples, would lead people to read \"GitCents\" and \"TensorFlowCents\", which doesn't really match what you want."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000370991890\u0000":{"address":{"type":"COMMENT","id":"370991890","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/2#issuecomment-370991890","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'm going to close this issue in favor of ¤ as our symbol for SourceCred. This is absolutely something we can revisit later if someone comes up with a compelling reason to switch to a different symbol in particular."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000011\u0000366123567\u0000":{"address":{"type":"COMMENT","id":"366123567","parent":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/11#issuecomment-366123567","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think the project isn't yet at the level of maturity where it's easy / time efficient to carve out tasks like this; once we have more core code that we're relatively sure of, it will make sense.\r\n\r\nFor now, I'm glad you're eager to contribute, if you want to coordinate offline to hang out and hack on it for a few hours I'd be glad to! Also, you can join the SourceCred slack (see README)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000011\u0000366506813\u0000":{"address":{"type":"COMMENT","id":"366506813","parent":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/11#issuecomment-366506813","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@000drax I've fleshed out some more available tasks"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000017\u0000366428155\u0000":{"address":{"type":"COMMENT","id":"366428155","parent":{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/17#issuecomment-366428155","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"thoughts:\r\n- flow types are much nicer to write than propTypes (no more .isRequired everything!)\r\n- not maintaining 2 sources of truth is very nice\r\n- 70k downloads/mo suggests that the community is invested enough to keep it working\r\n\r\n\r\nI think it's quite likely that we'll eject either way, e.g. plans to integrate with a node js backend for collecting git data will add complexity that create-react-app is not expecting. Given that we probably will eject, I think it's worth ejecting now to collect these benefits. Want to send a PR? "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000017\u0000366452814\u0000":{"address":{"type":"COMMENT","id":"366452814","parent":{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/17#issuecomment-366452814","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"That seems reasonable to me. It looks like the only downside of ejecting is that we lose out on potential future updates to `react-scripts`—but I don't think that that's a big deal. I'll send a PR."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000366506065\u0000":{"address":{"type":"COMMENT","id":"366506065","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/23#issuecomment-366506065","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"cc @wchargin "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000366515504\u0000":{"address":{"type":"COMMENT","id":"366515504","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/23#issuecomment-366515504","authors":[{"type":"USERLIKE","login":"VictorBjelkholm"}],"body":"We could put this on our jenkins instance that we're using for most Protocol Labs projects if you're interested?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000366553223\u0000":{"address":{"type":"COMMENT","id":"366553223","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/23#issuecomment-366553223","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the offer @VictorBjelkholm. My instinct right now is to use Travis - it's simpler, I'm more familiar with it, it's free, and I'm almost certain it will solve all our immediate needs. Happy to hear any arguments in favor of using jenkins, though."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000366529043\u0000":{"address":{"type":"COMMENT","id":"366529043","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-366529043","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> * should be able to read git data, probably via NodeGit\r\n\r\nI’ve been doing a bunch of hacking with `nodegit` and `simple-git`. Here are my thoughts.\r\n\r\nOf the two, `simple-git` (known on GitHub as `steveukx/git-js`) is certainly simpler. It provides a JS veneer over standard Git APIs. But I think that it may be too simple. Most of its commands seem to be wrappers around the actual `git(1)` CLI, whose output is parsed by `simple-git`. But this parsing is flaky—e.g., `repo.log(['--stat'])` silently gives completely wrong output, and `repo.log(['--follow', filename])` has the same issue that `gitpython` does with renames (creating “filenames” like `\"file => file2\"`).\r\n\r\nWe might have to consider coming back to `simple-git`, but it’s not my top choice. Combine the fact that it will spawn a ton of subprocesses (not great) with the fact that it doesn’t even do a great job of parsing the output, and I don’t see a compelling reason to use it.\r\n\r\nNow, `nodegit` takes a different approach. It exposes direct bindings to `libgit2`, and in fact is the official set of JS bindings for this standard library (as seen on [the `libgit2` homepage][libgit2]). This suggests to me that it should theoretically have better support. In my opinion, the library has two major downsides. First, while the documentation serves as a useful skeleton for the type hierarchies and structures, its explanatory value is next to nothing. For instance, [here’s the page for `Revwalk`][nodegit-revwalk]. I can gather that it’s supposed to walk over revisions, and I can see what _types_ of arguments I’m supposed to pass to the `push*` family of functions—but I have no idea what they actually do. (Why does a file walker need a stack?) The `hide` options are even more confusing.\r\n\r\nThat said, the failures of the documentation are partially mitigated by the fact that `nodegit`’s architecture very closely mirrors that of `libgit2` itself, and `libgit2`’s documentation is far better. The [`libgit2` documentation for `git_revwalk_push`][libgit2-revwalk-push] answers all my questions in plain English. (Believe it or not, it was easier for me to write a working program using `libgit2` in C than the same program using `nodegit` in JS, given that I did the latter first.)\r\n\r\nThe other problem that I have with `nodegit` is that… well, I’ve just had an unusual of trouble getting simple examples working. Things like, their docs say that a callback is called with `(null, null)` when iteration finishes, but it’s actually called with `(someErrorObject, undefined)`. I even managed to get a ten-line program, basically copied from their examples, to throw a `SIGABRT` (134) and hard-crash all of node ([issue details])—this worries me a bit.\r\n\r\nIn summary: I really want to like `nodegit`, but I’m not sure that it’s the right choice, either. Maybe parsing the output of `git(1)` CLI commands really is simpler. I’m open to opinions.\r\n\r\n[libgit2]: https://libgit2.github.com/\r\n[nodegit-revwalk]: http://www.nodegit.org/api/revwalk/\r\n[libgit2-revwalk-push]: https://libgit2.github.com/libgit2/#HEAD/group/revwalk/git_revwalk_push\r\n[issue details]: https://github.com/nodegit/nodegit/issues/1442\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000366531702\u0000":{"address":{"type":"COMMENT","id":"366531702","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-366531702","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note on subprocessing: the forking itself is not _that_ bad. I can batch `vfork`/`exec` with throughput 9200 Hz on my laptop.  With ~one subprocess per repo commit, that makes ~3s overhead for tensorflow/tensorflow (29K commits) and ~5s overhead for git/git (50K commits).\r\n\r\n<details>\r\n\r\n```c\r\n#include <sys/types.h>\r\n#include <sys/wait.h>\r\n#include <unistd.h>\r\n\r\nint main() {\r\n    /* Runtime: 1m53.459s = 113.459s = 0.1082 ms/op */\r\n    /* When unbatched: 0.2122ms/op */\r\n    for (size_t i = 0; i < 1024; i++) {\r\n        pid_t pids[1024];\r\n        for (size_t j = 0; j < 1024; j++) {\r\n            pid_t pid = vfork();\r\n            if (!pid) {\r\n                execl(\"/bin/true\", \"/bin/true\", NULL);\r\n            }\r\n            pids[j] = pid;\r\n        }\r\n        for (size_t j = 0; j < 1024; j++) {\r\n            waitpid(pids[j], NULL, 0);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n```\r\n</details>\r\n\r\nIt’s still possible that a subprocess-based solution could be significantly slower, though, because the subprocesses can’t share memory, state, or work.\r\n\r\n*(edited for spelling)*"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000366552082\u0000":{"address":{"type":"COMMENT","id":"366552082","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-366552082","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"NodeGit seems to be basically unmaintained - observe the two month-old PRs with no comments or progress, and very spare activity on the issues. So, given that you're running into so many issues, I think the only feasible way to use this would be to fork it (with an eventual hope of merging all our improvements back in).\r\n\r\nSimpleGit seems to have an active owner and maintenance, but as you note it doesn't look like a perfect match for us. If we were to use it, I think it would be another case where we should fork it, fix it up to our needs, but with a better trajectory for merging it back.\r\n\r\nSo - given that we will be maintaining a Git API, which is best? Fork nodegit, fork simplegit, or roll our own? Rolling our own makes sense to me - we only need a small subset of Git integration; since we only care about reads and not writes, we will focus our attention differently and get the semantics precisely correct for our use case. However, it seems like there are two major approaches: we can wrap the CLI (in which case we may benefit by taking some code from SimpleGit) or we can wrap libgit2 (in which case we may benefit taking some code from NodeGit).\r\n\r\nAlternatively, we could take a step back and re-assess whether we want to use Node for the backend, given that when we made the call for Node, we believed we would have high-quality git libraries. But I still think using Node is worth it; being able to share code, types, testing, and infrastructure across the frontend and backend will make maintaining the system a lot easier. Also, I don't see compelling advantages to using any other language (Go or Python) as the backend."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000366793217\u0000":{"address":{"type":"COMMENT","id":"366793217","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-366793217","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> So - given that we will be maintaining a Git API, which is best? Fork nodegit, fork simplegit, or roll our own?\r\n\r\nI think that before we attempt to answer this question, we should nail down exactly what it is that we want from git: for instance, come up with a formal spec for the functions that we’re trying to implement, and worry about implementing them later. There are a couple of points in particular that I think we have not fully explored:\r\n\r\n 1. After the allocation, which values are going to be persisted as part of a permanent (but evolving) datastore, as opposed to solely being used transiently in the initial construction process?\r\n 2. How will later allocations build incrementally on the work from the original allocation?\r\n 3. What do we do with merge commits (and nonlinear histories in general)?\r\n\r\nPerhaps surprisingly, I think that (3) is the most important question—it’s not just an implementation detail; rather, it informs the answers to the previous two questions, and in fact restricts the sets of possible answers. (Part of this has to do with git’s internal object model, and part of it stems from loose interpretations of terms like “file”.) It may be easiest to discuss this in person.\r\n\r\nOnce we’ve answered these questions, let’s build a rough, but fully functional, implementation using whatever tools are easiest. This probably means interacting with git’s plumbing CLI utilities via Python-ish. After that, I expect that we will be able to make a more informed decision on how to interface with git in production code.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000369094312\u0000":{"address":{"type":"COMMENT","id":"369094312","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-369094312","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The root content of this issue is outdated, since it describes a backend which consists entirely of serving Git data, but now we are pivoting to a pluggable graph-based backend. However, I think the discussion here is still relevant, for the specific question of how to integrate with Git - which makes me think we should either close this (but reference the contents when we develop a git plugin), or cannibalize this thread into something about making a Git plugin.\r\n\r\n@wchargin thoughts?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000370992029\u0000":{"address":{"type":"COMMENT","id":"370992029","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/24#issuecomment-370992029","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'm going to close this issue as obsolete. We can reference back to it if we need context on building Git integration, although as it looks complicated I think we can punt on it for the near term."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000366550767\u0000":{"address":{"type":"COMMENT","id":"366550767","parent":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/25#issuecomment-366550767","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":+1:\r\n\r\n> For each individual component-specific interaction, we can test the logic via unit tests\r\n\r\nAgreed. \r\n\r\n> For end-to-end integration, we can describe a sequence of user inputs and then take a snapshot in the terminal state\r\n\r\nPerhaps. This suggests to me that the E2E test’s snapshot will change frequently: the test could be invalidated by style/copytext changes even at leaf nodes, changes to default sorting/allocation settings, etc. It would be unfortunate if this led to people (read: future-me) regenerating the snapshots blithely enough that actual regressions are not only unnoticed but promoted to the “correct” behavior. But I’m still willing to try it out!\r\n\r\nI _do_ agree that we should have “E2E things-still-work” tests for each major feature. Such tests are probably easy enough to write without snapshot testing—DOM inspection is made pretty easy by helper functions like `findManyWithTag`, `findUniqueWithId`, etc. For instance, the test that you describe with “`UserExplorer` displays new sums” is easy to write in this way.\r\n\r\nHeck, we could write both versions, and see which ones give better ROC curves. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000375140486\u0000":{"address":{"type":"COMMENT","id":"375140486","parent":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/25#issuecomment-375140486","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Closed by #102."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000366549259\u0000":{"address":{"type":"COMMENT","id":"366549259","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/26#issuecomment-366549259","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> based on past experience, retro-converting a complicated system designed without plugins in mind into a plugin architecture is a lot of work!\r\n\r\nTrue. But it is also true that attempting to generalize an API before you have three or so different targets is unwise. I'd be wary about trying to make _everything_ pluggable from the start, but thinking in terms of extension points as we build out core APIs is still a good idea."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000366550160\u0000":{"address":{"type":"COMMENT","id":"366550160","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/26#issuecomment-366550160","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yeah, that's a good point. We should probably build out the v0 featureset (collect signals from Git & GitHub, keep track of cred) before designing the plugin apis, while keeping plugin design in mind. Then once we have 2-4 targets, we can start to factor them into plugins. We'll also need to give some good thought into the shared data model, and the shared UI around that data model."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000369093445\u0000":{"address":{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/26#issuecomment-369093445","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Summarizing discussion with @wchargin, and brain dumping the current state of the plan:\r\n\r\nWe're planning on implementing a generic graph data structure as described in https://github.com/sourcecred/sourcecred/issues/29#issuecomment-368397367, with initial implementation in https://github.com/sourcecred/sourcecred/pull/34. The graph will provide the basis for plugin integrations: plugins create their own nodes and edges, as appropriate. As you can see in #34, each node and edge can have a custom \"payload\", which is determined by the plugin that generated those nodes and edges.\r\n\r\nPlugins will also provide their own rendering and organization logic to the credgraph visualizer, as described in #39.\r\n\r\nA few plugins which I expect we'll develop soon:\r\n- the GitHub plugin, which sources information from GitHub interactions (#40)\r\n- the \"project\" plugin, which organizes contributions into logical projects (#41)\r\n- the npm plugin, which explores package.json dependencies within node projects (#42)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000376250186\u0000":{"address":{"type":"COMMENT","id":"376250186","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/26#issuecomment-376250186","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing this issue, because we've begun sketching out the plugin system in code and there isn't much added value from the context here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000376265562\u0000":{"address":{"type":"COMMENT","id":"376265562","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/26#issuecomment-376265562","authors":[{"type":"USERLIKE","login":"jart"}],"body":"Note that TensorBoard didn't design a plugin system until other folks started writing plugins for us. Our plugin system was a reaction that attempted to formalize the direction we saw the software evolving.\r\n\r\nI like it when software starts off as an ordered anarchy. A highly precise and correct simple thing that folks can easily understand and lets them run free and do whatever they want. Then we bolt on design to reel back in the trouble."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368345225\u0000":{"address":{"type":"COMMENT","id":"368345225","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/29#issuecomment-368345225","authors":[{"type":"USERLIKE","login":"Recmo"}],"body":"(@dandelionmane introduced me to this problem yesterday).\r\n\r\nCan you explain how the transparency criteria works in the case of a DAG that is not a tree? Let's say frontend and backend have some overlap in submodules:\r\n\r\n```\r\n    +-->frontend +---------+\r\n    |        +             |\r\n    +        |             |\r\nroot         +---->shared +-> user\r\n    +        |             |\r\n    |        +             |\r\n    +-> backend +----------+\r\n```\r\n\r\nIs this also required to satisfy `c_total = 0.6 · c_backend + 0.4 · c_frontend`?\r\n\r\nWhat if `shared` is also considered a top level module, like so:\r\n\r\n```\r\n    +-->frontend +---------+\r\n    |        +             |\r\n    +        |             |\r\nroot +------------>shared +-> user\r\n    +        |             |\r\n    |        +             |\r\n    +-> backend +----------+\r\n```\r\n\r\nIs this required to satisfy `c_total = a · c_backend + b · c_frontend + c · c_shared`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368359785\u0000":{"address":{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/29#issuecomment-368359785","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In the past, we were expecting to have relatively hard barriers between different projects. Each project would issue its own cred, which would be a distinct exchangeable cryptoasset; within this view, it made sense to start with a top-down view that begins at the project root and progresses down to subprojects, and then directly to contributions. \r\n\r\nNow, I'm thinking of SourceCred as more of a \"web-of-contributions\", in which the underlying data structure is just a directed graph. There are three kinds of nodes: *projects*, *contributions*, and *identities*. \r\n\r\nA *project* is an attempt to make an easy entry point for recognizing the value provided by a set of contributions. It has directed edges (or, transitively, paths) to all of the contributions that compose the project. For example, I expect `SourceCred`, `SourceCred/explorer`, and `SourceCred/explorer/infrastructure` to all be projects. `/infrastructure` would have edges to the PRs that set up frontend infrastructure, like #22 and #27. `explorer/` would have edges to `explorer/infrastructure`, and so forth. \r\n\r\nA *contribution* is something that adds value to the project. It's a deliberately broad concept; in the case of SourceCred, I expect pull requests, issues, issue comments, Git commits, and giving talks could all be contributions. Contributions have edges to things they depend on. For example, let's consider #27. I imagine it having edges to:\r\n- The two PRs that it directly references, which are the actual bugfixes we want merged\r\n- @wchargin, for merging the PR\r\n- @dandelionmane, for reviewing and merging the PR\r\n- the SourceCred/infrastructure project, since it builds on the rest of the infrastructure in the SC frontend, and wouldn't have any value absent that context\r\n\r\nAs a consequence of those edges, it will likely also have paths to:\r\n- babel-plugin-flow-react, because it points to two PRs in that project\r\n- flow, via babel-plugin-flow-react\r\n- react, as above\r\n- babel, as above\r\n- itself, via SourceCred/infrastructure (cycles will be *very* common)\r\n\r\nAlso, I think SourceCred/infrastructure should point to SourceCred/ root, because SourceCred frontend infrastructure derives its value from being useful to SourceCred as a whole, and if someone else e.g. makes a massive contribution to the SourceCred backend infrastructure, it makes the SC frontend infra more valuable as well.\r\n\r\nAlso, I think another path from #27 to SC/root would be via the PRs in babel-plugin-flow-react, e.g. https://github.com/brigand/babel-plugin-flow-react-proptypes/pull/182. That PR, which provides value to b-p-f-r, exists because the SourceCred project decided to use b-p-f-r, and people primarily focused on SC went and fixed it for them. So I think there's a real sense in which the SC project (or maybe more immediately: sc/explorer/infra) has contributed value to babel-plugin-flow-react.\r\n\r\nMoving on: an *identity* is an agent or actor that deserves cred for contributing value. Identities can have edges to other identities, projects, and contributions; for example, it might make sense to create a \"team identity\" that has edges to the members of the team; this might be a good way to capture the value of e.g. managers, who don't directly create many recognizable contributions but let a group of people work more effectively. Also, identities may want to recognize that they derive value from other projects; for example, if I use Ubuntu and XMonad, I may want to flow value to those two projects.\r\n\r\n(Aside: I think in the future we'll want \"scoped identities\" that are scoped to projects or other contexts. Hypothetically, when I make a contribution to sc/explorer/infra, by default I want to flow value to a vim-react plugin, but when I make a contribution to sc/design/incentives, I want to flow value to the authors of an open-source game theory textbook. These are future considerations.)\r\n\r\nThis graph gets weird in a recursive way when you consider that the graph, itself, is a contribution. For example, if I do a bunch of housekeeping work on the SourceCred/Explorer project (e.g. I discover a lot of important contributions that weren't acknowledged by the project, but according to our practices on maintaining the top level projects, they should have been), then that modification to the cred graph is itself a contribution that merits some cred. I'm not sure how to model that, exactly.\r\n\r\nQuestion: Does this seem like a good semantic fit for the task of attributing credit to projects? Do you agree with the examples in the case of SourceCred? "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368397367\u0000":{"address":{"type":"COMMENT","id":"368397367","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/29#issuecomment-368397367","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"If we provisionally accept the data model I described above: I think it's helpful to next explore what kinds of questions we want to answer. I think we want to assess the value provided by a {project, contribution, identity} in a way that is consistent across different contexts. Here are some examples questions within this framework:\r\n\r\n- How valuable is the React project, in general? (~ Relative to all other projects globally, how valuable is React?)\r\n- How valuable is the React project to SourceCred? (~ Relative to all other projects or dependencies, how much value did React contribute?)\r\n- How valuable was #22 to the SourceCred project? How does its value compare to #21?\r\n- How much value has @dandelionmane contributed to open-source projects in general? How much have they contributed to SourceCred? How much have they contributed in the context of frontend projects across the ecosystem? (Is there a way to define a meta \"frontend-project\" which can be used to measure generic \"frontend-cred\", as abstracted across individual projects?)\r\n\r\nI think we need a function that takes a set of nodes that we want to value (e.g. the set of all projects and contributions that constitute React) and a set of nodes that is the scope for evaluation (e.g. the set of all projects and contributions that constitute SourceCred), and the function returns a scalar value. I.e. \r\n\r\n`C :: Set(Node) -> Set(Node) -> Number`\r\n\r\nI think `C` should have the following properties:\r\n- The amount of cred attributed to a set of contributions should be the sum of the cred attributed to the contributions within that set, after accounting for duplication. Formally, if `A` and `B` are sets of contributions and `ω` is an arbitrary context, then:\r\nIf `A∪B=U` and `A∩B=I` then `C(A,ω) + C(B,ω) - C(Y,ω) = C(X,ω)`\r\n\r\n- The amount of cred attributed to a set of contributions across all contexts should be equal to the sum of the cred attributed to those contributions in every particular context, after accounting for duplication. Formally, if `A` and `B` are sets of contributions acting as a context, and `ω` is an arbitrary set of contributions being valued, then:\r\nIf `A∪B=U` and `A∩B=I` then `C(ω,A) + C(ω,B) - C(ω,I) = C(ω,U)`.\r\n\r\nI believe these properties include the transparency result, in that when we look at the cred attributed to any node, we can meaningfully decompose that cred into the contexts that originated it - e.g. someone's cred in X project may be the sum of their cred in X/backend and X/frontend.\r\n\r\nA few other properties we will want:\r\n\r\n- Resistant to gaming by projects, e.g. the total cred allocated to SourceCred should not be meaningfully modifiable by SourceCred adding or removing internal edges. (Need some more thought to formalize this.)\r\n\r\n- Respects graph transitivity, e.g. if `X` is a high cred node, and `X` has a high weight edge to `Y` and few other edges, then `Y` should be a reasonably high cred node.\r\n\r\nAlso, trivially:\r\n`C(∅,X) = 0` and `C(X, ∅) = 0`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000387147428\u0000":{"address":{"type":"COMMENT","id":"387147428","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/29#issuecomment-387147428","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The core data models are sufficiently designed, such that we don't need this issue to be open."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000039\u0000407174095\u0000":{"address":{"type":"COMMENT","id":"407174095","parent":{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/39#issuecomment-407174095","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing as obsolete - at the moment the SourceCred explorer uses a text-based UI for exploring the graph, and it seems to work pretty well, so I don't think we need the complexity of maintaining a graph visualizer."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000040\u0000387147792\u0000":{"address":{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/40#issuecomment-387147792","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The GitHub plugin is pretty well established! We have some open feature issues (e..g #131, #132, #148, #171) but the plugin as a whole is working. :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000370181708\u0000":{"address":{"type":"COMMENT","id":"370181708","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/50#issuecomment-370181708","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For context, here is a rough dump of the conversation that @dandelionmane and I had, leading to this issue.\r\n\r\nIf a `Node` has `address` and `payload`, and an `Edge` additionally has `src` and `dst`, then structurally `Edge` is an (inexact) subtype of `Node`. For instance, if your types are inexact, then Flow won’t complain if you try to use an edge as a node.\r\n\r\nIf we want to recognize that careful valuations are themselves valuable, then it kind of makes sense to be able to flow value to a valuation: i.e., have an edge to an edge.\r\n\r\nIf edges are nodes, then the types can be unified to something like\r\n```js\r\nexport type Entity<T> = {|\r\n  +address: Address,\r\n  +payload: T,\r\n  +hom: ?{| +src: Address, +dst: Address |},\r\n|};\r\n```\r\nwhere the `src` and `dst` addresses are for any entity.\r\n\r\nThis also suggests that the address space should be unified, which is something that we had been wondering about previously.\r\n\r\nIf edges are nodes, then it’s not clear how standard graph algorithms work. But there is a “splicing” translation from ω-graphs (← good name for the “edges are nodes” data structure) to graphs, something like the following: if an edge `e : a → b` has an incident 2-edge `f : u → e`, then make a new node `•`, replace the edge `e` with edges `e_1 : a → •` and `e_2 : • → b`, and change the edge `f` to be `f : u → •`. It’s certainly not clear that the semantics of this translation are what we want, though—it’s not even clear what the semantics that we want _are_.\r\n\r\nUsing an ω-graph instead of a graph makes the resulting structure harder to understand at a glance."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000370183721\u0000":{"address":{"type":"COMMENT","id":"370183721","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/50#issuecomment-370183721","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note that the splicing transformation described above also yields useful semantics for hyperedges (edges with multiple sources or destinations), which is something else that we had considered and rejected."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000370183736\u0000":{"address":{"type":"COMMENT","id":"370183736","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/50#issuecomment-370183736","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Also note that it is possible to have an unfounded structure with the type signature reprsented above. (I believe that it is not strictly an ω-graph, because its entities don’t admit meaningful ranks; I’ll call it an aleph-graph.) Using string addresses for simplicity:\r\n\r\n```js\r\nconst entities = {\r\n  \"a\": {\r\n    address: \"a\", payload: {},\r\n    hom: {src: \"b\", dst: \"d\"},\r\n  },\r\n  \"b\": {\r\n    address: \"b\", payload: {},\r\n    hom: {src: \"a\", dst: \"c\"},\r\n  },\r\n  \"c\": {\r\n    address: \"c\", payload: {},\r\n    hom: {src: \"d\", dst: \"b\"},\r\n  },\r\n  \"d\": {\r\n    address: \"d\", payload: {},\r\n    hom: {src: \"c\", dst: \"a\"},\r\n  },\r\n};\r\n```\r\n\r\nThis aleph-graph has four entities, none of which is a node (0-entity). The structure could be drawn like this:\r\n\r\n![Example drawing of an unfounded aleph-graph](https://user-images.githubusercontent.com/4317806/36939802-6db6c526-1eec-11e8-8c49-97cb73e14c55.png)\r\n\r\n*(edited to downsample image)*\r\n\r\n<!-- original: https://user-images.githubusercontent.com/4317806/36939766-c6542e0e-1eeb-11e8-9788-235cd062650b.png -->\r\n\r\nThe splicing transformation described above works inductively on rank, so is unable to transform this aleph-graph into a normal graph because there is no base case.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000371004636\u0000":{"address":{"type":"COMMENT","id":"371004636","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/50#issuecomment-371004636","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's call \"meta-valuation\" the problem of assigning value to the work of assigning value. The motivation for making edges nodes is that it provides a seemingly principled solution to the meta-valuation problem. However, as @wchargin's discussion demonstrates, it also adds a lot of complexity to our underlying data structure. Also, when you look at the semantics closely, valuing edges rarely seems like the right thing to do. Most edges are programmatically generated by some tool, e.g. the GitHub plugin automatically generates edges that represent comment authorship or cross-reference. Rewarding the individual edge that effects cross-reference seems like a very indirect way to approach meta-valuation, since really we should be rewarding contributions to the tool that generated those edges.\r\n\r\nIn #41 I describe an \"artifact\" plugin that creates nodes that represent curated allocations of value to pieces and processes that compose a project. The each artifact has a meta-artifact which values the work of maintaining the artifact. I believe that artifacts and meta-artifacts make significant progress towards solving meta-valuation:\r\n\r\n- For valuing auto-generated edges, the project itself should value artifact that auto-generates those edges. For example, if SourceCred values the GitHub value network, it should flow some Cred to the artifacts that maintain that network. (Precise semantics still need clarification).\r\n\r\nMy belief is that the artifact system, or followon developments, will allow us to solve the meta-valuation problem without needing to make every edge into a node. I think that even if we need to invent some clever abstractions or practices to make it all work, it will be better than taking on an significant complexity cost in our core data structure.\r\n\r\n@wchargin if you find this persuasive, then let's close the issue"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370187508\u0000":{"address":{"type":"COMMENT","id":"370187508","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370187508","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> This factor will increase as addresses get longer in proportion to the payloads, and indeed for our `advancedMealGraph` the addresses are reasonably short.\r\n\r\nA thought: plugins, or the Graph class itself, could choose to SHA-3 (or similar) the string-form keys to save space in the address table, if desired. This could have significant space savings for keys that are `JSON.stringify(someComplexStructure)`, at the cost of some time."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370187800\u0000":{"address":{"type":"COMMENT","id":"370187800","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370187800","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Given these two options, I prefer the object approach. It has better semantics: the way we think of the graph is that it actually *is* a map in which nodes have unique keys, and so storing it this way matches what the data structure actually means.\r\n\r\nHowever, it is redundant, because we essentially have a `Map k (k, v)`.\r\n\r\nAn aside on types. We had an offline discussion about how we want to set up our `Node` type: do we want to express subtyping by saying `Node`s have a payload with subtype, or `Node`s are extended to the subtype? I.e.:\r\n\r\nPayload Approach:\r\n```ts\r\ntype Node<T> {\r\n  address: Address,\r\n  payload: T,\r\n}\r\n\r\ntype IssuePayload {\r\n  title: string,\r\n}\r\n\r\ntype IssueNode = Node<IssuePayload>\r\n```\r\n\r\nExtension Approach:\r\n\r\n```ts\r\ntype Node {\r\n  address: Address,\r\n}\r\n\r\ntype IssueNode extends Node {\r\n  title: string,\r\n}\r\n```\r\n\r\nWe decided to go with the payload approach; both because it's considered best practice to prefer composition over inheritance, and because it creates a data structure that explicitly reflects how our data is composed (ie: everything from plugin is under payload/, rather than plugin data is mixed in at the same level).\r\n\r\nHowever, when you consider the Edge type:\r\n\r\n```ts\r\ntype Edge<T> {\r\n  address: Address,\r\n  src: Address,\r\n  dst: Address,\r\n  payload: T,\r\n}\r\n```\r\n\r\nIt starts to look like both Edge and Node are implicitly inheriting from an undeclared base type Addressable:\r\n\r\n```ts\r\ntype Addressable {\r\n  address: Address,\r\n}\r\n```\r\n\r\nWhile writing test code, we've actually reified the Addressable type a few times, which suggests that it's a useful concept. \r\n\r\nWould it be useful to factor out `Addressable`s as a payload-bearing-type like we did with `Node` and `Edge`? E.g. \r\n\r\n```ts\r\ntype Addressable<T> {\r\n  address: Address,\r\n  payload: T,\r\n}\r\n```\r\n\r\nExcept really I think we can more clearly express ourselves by understanding that the semantics we want from addresses are really just key-value semantics, where the keys are arbitrary JSON-serializable objects, and as an implementation detail, we can easily generate a map over Addressables by JSON-stringifying the key.\r\n\r\n```ts\r\ntype Addressable<T> {\r\n  key: JSONSerialiazable,\r\n  value: T,\r\n}\r\n```\r\nIf we factor things like this, I think there's a very natural answer to \"how should AddressableMaps be serialized\": when JSON serializing, we stringify the keys, and elide them from the objects to avoid redundant encoding. When deserializing, we parse the keys into Address objects so that consumers can read the addresses as expected. \r\n\r\nBasically, this whole structure is an abstraction over a bug, where the bug is that you can't use JSON objects as keys in js maps."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370288322\u0000":{"address":{"type":"COMMENT","id":"370288322","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370288322","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> It starts to look like both Edge and Node are implicitly inheriting from an undeclared base type Addressable: […] While writing test code, we've actually reified the Addressable type a few times, which suggests that it's a useful concept.\r\n\r\nAgreed. It could also make sense to make it an interface:\r\n```js\r\ninterface Addressable {\r\n  +address: Address;\r\n}\r\n```\r\n(This appeals to me in part because we’ve had lots of trouble getting Flow to work as expected with intersection types and similar. Also, semantically it _is_ an interface.)\r\n   \r\n> Would it be useful to factor out `Addressable`s as a payload-bearing-type like we did with Node and Edge? E.g. \r\n> ```js\r\n> type Addressable<T> {\r\n>   address: Address,\r\n>   payload: T,\r\n> }\r\n> ```\r\n\r\nI don’t think so, because this doesn’t work nicely for edges. What happens to `src` and `dst`? You could put them into the payload, so that\r\n```js\r\ntype Edge<T> = Addressable<{| +src: Address, +dst: Address, +realPayload: T |}>\r\n```\r\nbut that’s quite ugly, IMO: `edge.payload.realPayload` is ungainly, and `edge.payload.src` doesn’t make sense. Semantically, `src` and `dst` are _not_ part of the payload of the edge. They are metadata, like the address. But if we put them at top level, then `Edge<T>` adds additional properties onto `Addressable<T>`. This is weird, because the structure of this version of `Addressable<T>` strongly suggests that an object `x: Addressable<T>` is determined only by its `address` and its `payload`. For instance, given this interface, I would feel comfortable writing an equality function:\r\n```js\r\nfunction equals<T>(x: Addressable<T>, y: Addressable<T>) {\r\n  return deepEqual(x.address, y.address) && deepEqual(x.payload, y.payload);\r\n}\r\n```\r\nwhich would fail on edges.\r\n\r\nI also don’t really see any advantage to including the payload in the `Addressable` interface, so I think that the simple `interface Addressable { +address: Address; }` is the way to go.\r\n\r\nYou also propose an alternate interface where the `Addressable`’s key is an arbitrary `JSONSerializable`. This idea sounds reasonable to me, but I would also consider putting the `JSONSerializable` on the `id` field of the `Address` type, so that all addresses are still required to have a repository and plugin name:\r\n```js\r\ntype Address = {|\r\n  +repositoryName: string,\r\n  +pluginName: string,\r\n  +id: JSONSerializable,\r\n|};\r\n```\r\nThis is structure that we do want in the graph, so we have to encode it somewhere. And putting it in the address is the only reasonable way that I can see to do it.\r\n\r\nWhat do you think?\r\n\r\n> Basically, this whole structure is an abstraction over a bug, where the bug is that you can't use JSON objects as keys in js maps.\r\n\r\n…yes, and that ES6 maps are keyed against object identity. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370310688\u0000":{"address":{"type":"COMMENT","id":"370310688","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370310688","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"> I also don’t really see any advantage to including the payload in the Addressable interface, so I think that the simple interface Addressable { +address: Address; } is the way to go.\r\n\r\nAgreed.\r\n\r\n> You also propose an alternate interface where the Addressable’s key is an arbitrary JSONSerializable. This idea sounds reasonable to me, but I would also consider putting the JSONSerializable on the id field of the Address type, so that all addresses are still required to have a repository and plugin name:\r\n>\r\n>```\r\n>type Address = {|\r\n>  +repositoryName: string,\r\n>  +pluginName: string,\r\n>  +id: JSONSerializable,\r\n>|};\r\n>```\r\n>\r\n> This is structure that we do want in the graph, so we have to encode it somewhere. And putting it in the address is the only reasonable way that I can see to do it.\r\n\r\nAgreed.\r\n\r\nI also suggested that in the Object serialization approach, we can use the JSON serialization of the Address as the object keys, and elide them from the Addressables. (And on deserialization we put them back.) What do you think of that?\r\n\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370322854\u0000":{"address":{"type":"COMMENT","id":"370322854","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370322854","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Another point in favor of the explicit Address struct: Per [my perf testing](https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370321398), that approach is a lot faster - assuming that the JSON stringification is handled by the plugins, so that generic graph code just operates on string IDs.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370348872\u0000":{"address":{"type":"COMMENT","id":"370348872","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370348872","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"\r\n> I also suggested that in the Object serialization approach, we can use the JSON serialization of the Address as the object keys, and elide them from the Addressables. (And on deserialization we put them back.) What do you think of that?\r\n\r\nIt seems reasonable in practice, and I'm open to it. In practice: this is a realm of Flow that _should_ work just fine, though I would not be surprised if we quickly run into corner cases.\r\n\r\nFor instance, we’ll need a type like\r\n```js\r\ntype SansAddress<T: Addressable> = $Exact<$Diff<T, {+address: Address}>>;\r\n```\r\n(without the `$Exact`, we have `T <: SansAddress<T>`, which is not correct) so that we can write\r\n```js\r\nexport type AddressMapJSON<T> = {[serializedAddress: string]: SansAddress<T>};\r\n```\r\nThis is mostly well and good\\*. The type error messages, however, are not great. For instance, with the type\r\n```js\r\ntype Node<T> = {\r\n  +address: Address,\r\n  +payload: T,\r\n};\r\n```\r\n…I can produce [two statements][bad-errors] that have real type errors, which Flow detects but surfaces with the following inordinately unhelpful messages:\r\n  - “Cannot get `bareNode.address` because property `address` is missing in `Node` [1].”\r\n  - “Cannot assign `node` to `bareNode` because property `address` is missing in `Node` [1] but exists in `Node` [2].”\r\n  - “Cannot assign `node` to `bareNode` because property `payload` is read-only in `Node` [1] but writable in `Node` [2].”\r\n\r\nThe first two are *extremely* understandabad. The last one…I don’t even know.\r\n\r\n[bad-errors]: https://flow.org/try/#0PTAEAEDMBsHsHcBQiCmAPADrATgF1LgJ4YqgBSAygPIByFK2AlgIbSMBezARtKQLyJQoAD6gA3gG0AzriYA7AOYBdAFzlqdBizaceKAL6CR62vSasO3XhKVHRM+Qrug5AVwC2XBs66xYvZjlnN2hoAG5kdCw8AmJSAEEAE0TsFCkpUD5xYSMAalSsKUZcHEIaZncUNQdGRQAaPIxoVwVa8srq2VqFBqFcxkS1SlMtC11eBuF9CMRa3AZIZgBjBOTU9KtSMTzmNbSpNSSU-YjDVEwcfCISUApAqSP1qQAeABVDvY29AD5M0AASACiaGWuGe-wAIoxIJA3nVxLldsd0h9kVJ9N9vhEopdYjdHvsALLMDDDGhvVFPTa-LKSKSjHQoRIElGgGqKVS3e4sl6vb7TZDXUg0WCJFBvGnZHafA6gHm9UC5DDMQhwXZqV6TAWISCuORLXCMWByNldDAUuUy6kAClwGoAlGo7nIHjKJeIjEtjTJQOtXNB8LSAHQh3ACoRi3jzX1pf24INIp4RISpXCubAm61+gNqQKEe2nZBel34OSiqqgEVi55uTwMSXbISJ-ZqRtCGOFYqldoVgBEUlg6ZWS1SiWAA6HKBHTN7CqETRabQqfcY6VcKAAtAA2ACss6MQgGal7XAqvlg7F4QYAVhgFPuhPoFcrVbB1aAAIwAZga2qjoFPVIqwrZ1XTRZ5gJrDwvGwTE-hqDBrTLMUC0QQCUGAhMZTCIQQBjVhoEIUAlkCAByfBlhWdI0OYIDyz+ZCUBw0A8KkAALQdoESADSAAAwQpDy3tXjQFqGQUF2ZBgAAKkQa17UyX4JWtNA1EgvlHS5F0eQg8sJRpX40AiYsfSkRinW5N1INrGC4NpIxm1ZNsUxQTsSmwMpl2PCdsGHUdx0HXyp1HB92wXVo5B7Y9Vykddtz3OdRMGUATzPPxLxQG871Cp8jBfNVku-X8Imk4AgA\r\n\r\nValid code appears to type-check correctly, though. [These tests][tests] pass and yield the following snapshot:\r\n```json\r\n{\r\n    \"{\\\"repositoryName\\\":\\\"sourcecred/sourcecred\\\",\\\"pluginName\\\":\\\"issue65\\\",\\\"id\\\":{\\\"en\\\":\\\"one\\\"}}\": {\r\n        \"payload\": \"uno\"\r\n    },\r\n    \"{\\\"repositoryName\\\":\\\"sourcecred/sourcecred\\\",\\\"pluginName\\\":\\\"issue65\\\",\\\"id\\\":{\\\"en\\\":\\\"two\\\"}}\": {\r\n        \"payload\": \"dos\"\r\n    }\r\n}\r\n```\r\n\r\n[tests]: https://gist.github.com/wchargin/745ef7c3b8991443cf1ae5bbcf60b02b\r\n\r\nSo I support it in principle and also happen to think that it’s tractable—good enough for me.\r\n\r\nOne caveat to my approval: this is strictly an optimization, and its implementation trades off smaller space for more complicated code, potentially more complicated interop (external consumers will be confused to see missing addresses), and potentially longer time (though potentially faster here, too, due to serializing less). Before making any final decisions, we should look at the actual space and time differences on some real data!\r\n\r\n\\* It may behave weirdly with exact types. I’m not sure what exactly is going on.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370598926\u0000":{"address":{"type":"COMMENT","id":"370598926","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370598926","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> where the keys are arbitrary JSON-serializable objects\r\n\r\nAfter a bit more thinking and prototyping, I’m less sold on this. I think that it forces a lot more serialization and deserialization than is really necessary. Any time that we need to refer to an address opaquely, we’ll have to serialize and deserialize the plugin-specific `id`—which may be arbitrarily large. For instance, a breadth-first search requires at least one roundtrip serialization for each node in the connected component of the source (and with our APIs we’re looking at two or three). If `Address` has `id: string`, then no such computation is performed: a plugin only parses IDs when their contents are relevant.\r\n\r\nUsing `id: string` of course _allows_ plugins to serialize the data from JSON themselves, but does not require them to. Using `id: JSONSerializable` would be convenient for the standard use case, and promote good defaults, but it _may_ be the case that it precludes efficient implementations.\r\n\r\nNote that this is compatible with your other suggestion that “we can use the JSON serialization of the Address as the object keys, and elide them from the Addressables. (And on deserialization we put them back.)”\r\n\r\nWe’ve spent a bunch of time talking about this, so here’s what I suggest: I’ll implement an address map against this spec, just so that we have something to work from, and then we can remain open to changing it later—either in response to perf requirements or because we decide that another approach is semantically better. Sound good?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370600980\u0000":{"address":{"type":"COMMENT","id":"370600980","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370600980","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sounds good. As you say, using `id: string` allows plugins to layer in additional information, while restricting the performance cost of maintaining that additional information to the scope of the plugin that actually knows how to use the info. Generic algorithms operating at the level of a ContributionGraph shouldn't be expected to have insight into what the plugin specific ID means, so therefore they shouldn't pay the associated serialization cost."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370601234\u0000":{"address":{"type":"COMMENT","id":"370601234","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370601234","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Generic algorithms operating at the level of a ContributionGraph shouldn't be expected to have insight into what the plugin specific ID means, so therefore they shouldn't pay the associated serialization cost.\r\n\r\nYep, exactly. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370616306\u0000":{"address":{"type":"COMMENT","id":"370616306","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/65#issuecomment-370616306","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Implemented in #67, #68, #69."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370186734\u0000":{"address":{"type":"COMMENT","id":"370186734","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370186734","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"What if we replace `addressToString(address)` with `JSON.stringify(address)`?\r\nWe get the same benefits, and perhaps more (going to add a comment on #65 going into more details). And it's simpler than both your suggestion, and the current implementation."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370187344\u0000":{"address":{"type":"COMMENT","id":"370187344","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370187344","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> What if we replace `addressToString(address)` with `JSON.stringify(address)`?\r\n\r\nThis would certainly work, but puts `JSON.stringify` on the hot path. I would expect the approach described above to perform significantly better than `JSON.stringify`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370187985\u0000":{"address":{"type":"COMMENT","id":"370187985","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370187985","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Since it's just an implementation detail, favoring the more-complex approach over JSON.stringify seems like premature optimization; we can revive the triplemap when/if JSON.stringify shows up on our profilers."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370187999\u0000":{"address":{"type":"COMMENT","id":"370187999","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370187999","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also, understandabad: 👍 "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370321398\u0000":{"address":{"type":"COMMENT","id":"370321398","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370321398","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I decided to test the performance.\r\n\r\n```js\r\nfunction addressMapGet(map, key) {\r\n  let repositoryBucket = map[key.repositoryName];\r\n  if (repositoryBucket === undefined)\r\n    return undefined;\r\n  let pluginNameBucket = repositoryBucket[key.pluginName];\r\n  if (pluginNameBucket === undefined)\r\n    return undefined;\r\n  return pluginNameBucket[key.id];\r\n}\r\nfunction addressMapSet(map, key, value) {\r\n  let repositoryBucket = map[key.repositoryName];\r\n  if (repositoryBucket === undefined)\r\n    repositoryBucket = map[key.repositoryName] = {};\r\n  let pluginNameBucket = repositoryBucket[key.pluginName];\r\n  if (pluginNameBucket === undefined)\r\n    pluginNameBucket = repositoryBucket[key.pluginName] = {};\r\n  pluginNameBucket[key.id] = value;\r\n}\r\n\r\nfunction stringifyGet(map, key) {\r\n  return map[JSON.stringify(key)];\r\n}\r\nfunction stringifySet(map, key, value) {\r\n  map[JSON.stringify(key)] = value;\r\n}\r\n\r\nlet repos = [\"ironfield\", \"copperfield\", \"oilpatch\", \"smelters\", \"mainbase\"];\r\nlet plugins = [\"belts\", \"bots\", \"trains\", \"pipes\", \"furnaces\"];\r\n\r\nlet addresses = [];\r\n\r\nfor (let r of repos) {\r\n  for (let p of plugins) {\r\n    for (let i=0; i<100; i++) {\r\n      let id = $`{r/p/i}`;\r\n      let address = {repositoryName: r, pluginName: p, id: id};\r\n      addresses.push(address);\r\n    }\r\n  }\r\n}\r\n\r\nlet wcharginMap = {};\r\nlet stringifyMap = {};\r\nfor (let a of addresses) {\r\n  addressMapSet(wcharginMap, a, {});\r\n  stringifySet(stringifyMap, a, {});\r\n}\r\n\r\nconsole.time('wcharginGet')\r\nfor (let i=0; i<1000; i++) {\r\n  for (let a of addresses) {\r\n    addressMapGet(wcharginMap, a);\r\n  }\r\n}\r\nconsole.timeEnd('wcharginGet')\r\n//700 ms\r\n\r\nconsole.time('stringifyGet')\r\nfor (let i=0; i<1000; i++) {\r\n  for (let a of addresses) {\r\n    stringifyGet(stringifyMap, a);\r\n  }\r\n}\r\nconsole.timeEnd('stringifyGet')\r\n// 2800 ms\r\n```\r\n\r\nSo yeah, the JSON.stringify approach is about 4x slower. I think it's a fair inference that this will be on the critical path. So, I support using your more efficient code."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370331901\u0000":{"address":{"type":"COMMENT","id":"370331901","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/66#issuecomment-370331901","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> I decided to test the performance.\r\n\r\nSweet; thanks!\r\n\r\n> ```js\r\n>      let id = $`{r/p/i}`;\r\n> ```\r\n\r\nWhat's this? It evaluates to `undefined`, because `$` is not a tag function.\r\n\r\nDid you mean ``let id = `${r}/${p}/${i}`;``?\r\n\r\nOn your original code, I get the following:\r\n```\r\nwcharginGet: 302.1630859375ms\r\nstringifyGet: 2653.994140625ms\r\n```\r\n\r\nWith this modification, I get:\r\n```\r\nwcharginGet: 259.894775390625ms\r\nstringifyGet: 3873.736083984375ms\r\n```\r\nMy profiling isn't super precise—I've got other processes running—but there seems to be a clear difference in the `stringifyGet` due to actually needing to stringify meaningful content.\r\n\r\nI also made a jsperf based on your code. It shows wcharginGet to be approximately 12× faster, with 3948 get-all operations per second for `wcharginGet`, and 319 for `stringifyGet`:\r\n\r\n![JSperf results](https://user-images.githubusercontent.com/4317806/36962194-689bd172-2003-11e8-880b-b0ed746b2862.png)\r\n\r\nYou can try it on your machine here: https://jsperf.com/address-string-302039074\r\n\r\n*(edited due to markdown formatting on `` `backtick-strings` ``)*"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000370661024\u0000":{"address":{"type":"COMMENT","id":"370661024","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/72#issuecomment-370661024","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The major problem with this is that the resulting structure is no longer serializable.\r\n\r\nA secondary problem is that `Graph.merge` with a nontrivial node resolver becomes much more expensive: for each resolution, you need to touch all edges, or at least all incident edges.\r\n\r\nI'm totally fine with `source`/`target` instead of `src`/`dst`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000370661081\u0000":{"address":{"type":"COMMENT","id":"370661081","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/72#issuecomment-370661081","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What motivates this issue? Performance, usability, something else?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000371005306\u0000":{"address":{"type":"COMMENT","id":"371005306","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/72#issuecomment-371005306","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think it could present a benefit in terms of performance (fewer map lookups on graph traversal) and usability (makes a common case more convenient). However, you make a good point that it adds complexity to our algorithms. I suggest we table this, but set ourselves up with an easy path to add it in the future if we so desire. We can do this by renaming `Edge.src` and `Edge.dst` to `Edge.srcAddress` and `Edge.dstAddress`; more verbose, but more descriptive too. This way, if we decide down the line that it would be nice to give the objects direct pointers to the nodes as well, the naming will still be consistent.\r\n\r\nAlso, I think aligning with `d3-force` on layout is a non-goal, the abstractions are pretty different anyway, so let's forget about that."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000371007266\u0000":{"address":{"type":"COMMENT","id":"371007266","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/72#issuecomment-371007266","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"After giving some thought to https://github.com/sourcecred/sourcecred/issues/73, I now think that attempting to pre-load the `Node` is a bad idea, because in general the addressed nodes may be in a different value network, which is not locally accessible, or the lookup may be high-latency. So storing the Node cannot work in the general case.\r\n\r\nI'm still weakly in favor of `srcAddress` and `dstAddress` because `explicit>implicit`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000401571614\u0000":{"address":{"type":"COMMENT","id":"401571614","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/72#issuecomment-401571614","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What's the difference?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000073\u0000407174606\u0000":{"address":{"type":"COMMENT","id":"407174606","parent":{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/73#issuecomment-407174606","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing, this has been fixed / rendered obsolete (depending on perspective) by the v3 rewrite, which totally changed the address semantics."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000074\u0000374434248\u0000":{"address":{"type":"COMMENT","id":"374434248","parent":{"type":"ISSUE","number":"74","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/74#issuecomment-374434248","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed by: https://github.com/sourcecred/sourcecred/pull/84"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000373478089\u0000":{"address":{"type":"COMMENT","id":"373478089","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/76#issuecomment-373478089","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I propose the following. @dandelionmane , penny for your thoughts? (Note that this passes Flow—you can paste it into the playground at https://flow.org/try—and is formatted with `prettier`, so it is representative of code that would be in our codebase.)\r\n\r\n```js\r\n// @flow\r\n\r\n// Sample request, exhibiting the query construction API.\r\nconst makePageInfo = () => field(\"pageInfo\", {}, [field(\"hasNextPage\")]);\r\nconst makeAuthor = () => field(\"author\", {}, [fragmentSpread(\"whoami\")]);\r\nconst body: Body = [\r\n  query(\r\n    \"FetchData\",\r\n    [param(\"repoOwner\", \"String!\"), param(\"repoName\", \"String!\")],\r\n    [\r\n      field(\r\n        \"repository\",\r\n        {owner: variable(\"repoOwner\"), name: variable(\"repoName\")},\r\n        [\r\n          field(\"issues\", {first: literal(100)}, [\r\n            makePageInfo(),\r\n            field(\"nodes\", {}, [\r\n              field(\"id\"),\r\n              field(\"title\"),\r\n              field(\"body\"),\r\n              field(\"number\"),\r\n              makeAuthor(),\r\n              field(\"comments\", {}, [\r\n                makePageInfo(),\r\n                field(\"nodes\", {}, [\r\n                  field(\"id\"),\r\n                  makeAuthor(),\r\n                  field(\"body\"),\r\n                  field(\"url\"),\r\n                ]),\r\n              ]),\r\n            ]),\r\n          ]),\r\n          field(\"pullRequests\", {first: literal(100)}, [\r\n            makePageInfo(),\r\n            field(\"nodes\", {}, [\r\n              field(\"id\"),\r\n              field(\"title\"),\r\n              field(\"body\"),\r\n              field(\"number\"),\r\n              makeAuthor(),\r\n              field(\"comments\", {first: literal(20)}, [\r\n                makePageInfo(),\r\n                field(\"nodes\", {}, [\r\n                  field(\"id\"),\r\n                  makeAuthor(),\r\n                  field(\"body\"),\r\n                  field(\"url\"),\r\n                ]),\r\n              ]),\r\n              field(\"reviews\", {first: literal(10)}, [\r\n                makePageInfo(),\r\n                field(\"nodes\", {}, [\r\n                  field(\"id\"),\r\n                  field(\"body\"),\r\n                  makeAuthor(),\r\n                  field(\"state\"),\r\n                  field(\"comments\", {first: literal(10)}, [\r\n                    makePageInfo(),\r\n                    field(\"nodes\", {}, [\r\n                      field(\"id\"),\r\n                      field(\"body\"),\r\n                      makeAuthor(),\r\n                    ]),\r\n                  ]),\r\n                ]),\r\n              ]),\r\n            ]),\r\n          ]),\r\n        ]\r\n      ),\r\n    ]\r\n  ),\r\n  fragment(\"whoami\", \"Actor\", [\r\n    field(\"__typename\"),\r\n    field(\"login\"),\r\n    inlineFragment(\"User\", [field(\"id\")]),\r\n    inlineFragment(\"Organization\", [field(\"id\")]),\r\n    inlineFragment(\"Bot\", [field(\"id\")]),\r\n  ]),\r\n];\r\n\r\n// Type definitions.\r\n\r\ntype Body = Definition[];\r\ndeclare function bodyToString(body: Body): string;\r\n\r\ntype Definition = QueryDefinition | FragmentDefinition;\r\n\r\n// We only need opaque type handles; no need to embed the GraphQL type\r\n// system into Flow.\r\ntype GraphQLType = string;\r\n\r\ntype QueryDefinition = {|\r\n  +type: \"QUERY\",\r\n  +name: string,\r\n  +params: Parameter[],\r\n  +selections: Selection[],\r\n|};\r\ntype Parameter = {|+name: string, +type: GraphQLType|};\r\n\r\ntype FragmentDefinition = {|\r\n  +type: \"FRAGMENT\",\r\n  +name: string,\r\n  +typeCondition: GraphQLType,\r\n  +selections: Selection[],\r\n|};\r\n\r\ntype Selection = Field | FragmentSpread | InlineFragment;\r\ntype Field = {|\r\n  +type: \"FIELD\",\r\n  +name: string,\r\n  +args: Arguments,\r\n  +selections: ?(Selection[]),\r\n|};\r\ntype FragmentSpread = {|+type: \"FRAGMENT_SPREAD\", +fragmentName: string|};\r\ntype InlineFragment = {|\r\n  +type: \"INLINE_FRAGMENT\",\r\n  +typeCondition: ?GraphQLType,\r\n  +selections: Selection[],\r\n|};\r\n\r\ntype Arguments = {[string]: Value};\r\ntype Value = VariableValue | LiteralValue | EnumValue | ListValue | ObjectValue;\r\ntype VariableValue = {|+type: \"VARIABLE\", +data: string|};\r\ntype LiteralValue = {|\r\n  +type: \"LITERAL\",\r\n  +data: number | string | boolean | null,\r\n|};\r\ntype EnumValue = {|+type: \"ENUM\", +data: string|};\r\ntype ListValue = {|+type: \"LIST\", +data: Value[]|};\r\ntype ObjectValue = {|+type: \"OBJECT\", +data: {[string]: Value}|};\r\n\r\n// anamorphisms for convenience\r\ndeclare function query(\r\n  name: string,\r\n  params: Parameter[],\r\n  selections: Selection[]\r\n): QueryDefinition;\r\ndeclare function param(name: string, type: GraphQLType): Parameter;\r\n\r\ndeclare function fragment(\r\n  name: string,\r\n  typeCondition: GraphQLType,\r\n  selections: Selection[]\r\n): FragmentDefinition;\r\n\r\ndeclare function field(\r\n  name: string,\r\n  arguments: ?Arguments,\r\n  selections: ?(Selection[])\r\n): Field;\r\ndeclare function fragmentSpread(name: string): FragmentSpread;\r\ndeclare function inlineFragment(\r\n  typeCondition: ?GraphQLType,\r\n  selections: Selection[]\r\n): InlineFragment;\r\n\r\ndeclare function variable(name: string): VariableValue;\r\ndeclare function literal(value: number | string | boolean | null): LiteralValue;\r\ndeclare function enumLiteral(value: string): EnumValue;\r\ndeclare function list(data: Value[]): ListValue;\r\ndeclare function object(data: {[string]: Value}): ObjectValue;\r\n```\r\n\r\n*edited* to fix ~~two~~ four typos in the types."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000373501529\u0000":{"address":{"type":"COMMENT","id":"373501529","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/76#issuecomment-373501529","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This looks nice to me.\r\n\r\nA few thoughts:\r\n\r\n- Would it be an unreasonable metaprogramming ask to overload this structure so that it can both construct the appropriate graphQL query, and the flow type signature that the query will return? Then we could commit the generated typesignature in its own file, but have a test that verifies it is identical to what would be generated if we re-ran the generation function. It seems this could be accomplished by having your code be aware of the type expected for each field.\r\n\r\n- Is this sufficiently generic that we should think about getting it adopted back into the reference implementation, or similar? (Maybe would consume a lot of rabbit hole budget.)\r\n\r\n- We should factor all of the (first N) type arguments into constants, since we'll want to make those easy to tune.\r\n\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000373521200\u0000":{"address":{"type":"COMMENT","id":"373521200","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/76#issuecomment-373521200","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> (1)\r\n\r\nIt wouldn't be _unreasonable_ metaprogramming, in the sense that I could implement that in zero time I would absolutely do so. But I definitely think that it's out of the rabbit hole budget for right now. You say \"having the code be aware of the type _expected_ for each field\"—emphasis mine; I think we probably want something stronger than expectation. We should do something \r\n\r\n> (2)\r\n\r\nYes, I think so. ~~The only major thing that I left out of the spec was directives, because we don't plan to use them, but they could be trivially added back in.~~ I don't want to do this right now, though, not least because I want flexibility and control over the API. (There are already things that I want to change.)\r\n\r\n(edit: I retract the stricken sentence; I wasn't really thinking about it. I left out parts of the spec that weren't relevant to what we're doing but are certainly important: mutations, for instance, and aliases. These examples both appear on the first page of the tutorial, so they should certainly be included in any general system. That said, I still think that it is possible to generalize and would be nice to do.)\r\n\r\n> (3)\r\n\r\n(I think that you are talking about our particular query for sourcecred rather than a generic API.) I am happy to consider doing that. Note that, now that we have a DSL, we can factor them into GraphQL query parameters or into JavaScript constants, as desired."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000373613940\u0000":{"address":{"type":"COMMENT","id":"373613940","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/76#issuecomment-373613940","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Re (1) being out of the rabbit hole budget - do we expect to not have any typing at all for the result from running the query (status quo)? Or do we want to generate flow types for the query response and maintain it by hand (seems suboptimal since we could break things by changing the query) or via runtime type checking?\r\n\r\nGiven that we already have machinery for producing formatted strings (queries) from the structured query descriptor, it seems reasonable to also produce Flow type signatures. How about we use the fact that GraphQL schemas are introspective, and generate the typesig by talking to the actual prod server and getting the schema? Then, we can include verifying that the query types are correct with the non-CI test that verifies that the query works."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000376247882\u0000":{"address":{"type":"COMMENT","id":"376247882","parent":{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/76#issuecomment-376247882","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Re (1) being out of the rabbit hole budget - do we expect to not have any typing at all for the result from running the query (status quo)? Or do we want to generate flow types for the query response and maintain it by hand (seems suboptimal since we could break things by changing the query) or via runtime type checking?\r\n\r\nI think that omitting types is fine for the short term. The queries have a small API surface area, so it should be easy enough to make sure that the (actual) types are kept in sync with any changes. In the long term, static typing would be great. I think that runtime checking would be superfluous, but maybe we could have it as an extra, optional check run (e.g.) only during tests.\r\n\r\n> Given that we already have machinery for producing formatted strings (queries) from the structured query descriptor, it seems reasonable to also produce Flow type signatures.\r\n\r\nThe current mechanism is not type-aware. We could make it type-aware with a moderate amount of effort. We could then modify it to print Flow type signatures as strings, but I'm not aware of any way to actually integrate those type signatures into the rest of our code, so we'd have to build some tooling around it. All in all, it probably isn't conceptually hard, but I would expect it to take a few days to get right, and I'm just not convinced that it's worth it right now.\r\n\r\n> How about we use the fact that GraphQL schemas are introspective, and generate the typesig by talking to the actual prod server and getting the schema? Then, we can include verifying that the query types are correct with the non-CI test that verifies that the query works.\r\n\r\nAgain, I agree that this is reasonable in principle but would take a couple days, and I'm not sure that it's the best use of time.\r\n\r\nPer offline discussion, closing for now; we can reopen or keep discussing later."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000082\u0000373907183\u0000":{"address":{"type":"COMMENT","id":"373907183","parent":{"type":"ISSUE","number":"82","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/82#issuecomment-373907183","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I reconsidered. I now think that this is a _great_ idea, so I went ahead and implemented it. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000086\u0000401571625\u0000":{"address":{"type":"COMMENT","id":"401571625","parent":{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/86#issuecomment-401571625","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We're not going to do this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000375174303\u0000":{"address":{"type":"COMMENT","id":"375174303","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-375174303","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I have some work in progress here: https://github.com/sourcecred/sourcecred/commit/1472cf2e304f22359831c35b691a9584ca06b7da\r\n\r\nUnfortunately, as of adding types to mergeGraph and mergeConservative, flow now times out when trying to typecheck."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000375537094\u0000":{"address":{"type":"COMMENT","id":"375537094","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-375537094","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Just to get back to you on this: the general idea sounds reasonable to me. That `flow` should time out after 100s of typechecking is extremely alarming, and having twelve type parameters on `merge`, et al. does not bode well. \r\n\r\nI see that you've now created a PR, so I'll take a look at that.\r\n\r\nRegarding namespacing types by plugin: I agree that they should be namespaced."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000383135334\u0000":{"address":{"type":"COMMENT","id":"383135334","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-383135334","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"One downside/question raised by this: does this couple too closely the\r\nlogical type of an edge with the implementation type?\r\n\r\nFor instance, a GitHub comment can link to an issue by writing `#23` or\r\n`https://github.com/owner/project/issues/23`. It is reasonable that\r\nthese should both have the type “issue reference”. But it is also\r\nreasonable that the GitHub plugin might want to distinguish these\r\ninternally. (Say, the former just has `number: number`, while the latter\r\nalso has `repoOwner: string` and `repoName: string`.)\r\n\r\nThis is perhaps not a perfect example, but I think that it illustrates\r\nthe point."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000383157901\u0000":{"address":{"type":"COMMENT","id":"383157901","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-383157901","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"The `Address` is part of the public surface area of the `Edge`. If the GitHub plugin wants to distinguish those cases internally, why would it want to reveal that distinction in the `Address`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000383167876\u0000":{"address":{"type":"COMMENT","id":"383167876","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-383167876","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Logically, it wouldn’t. But if it doesn’t, then it has to have nodes\r\nlike this:\r\n```js\r\n{\r\n    repositoryOwner: \"sourcecred\",\r\n    repositoryName: \"example-repo\",\r\n    type: \"ISSUE_REFERENCE\",\r\n    id: id,\r\n    payload: JSON.stringify({\r\n        type: \"NUMERIC\",\r\n        number: 23,\r\n    }),\r\n}\r\n```\r\nThis is the kind of thing that I worry about. Now we have two notions of\r\n`type`: the generic one, and the inevitable plugin-specific one because\r\nno generic solution will always suffice. What are the remaining benefits\r\nof the generic `type`, given that we’ll have plugin-specific adapter\r\ninterfaces anyway?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000383649277\u0000":{"address":{"type":"COMMENT","id":"383649277","parent":{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/103#issuecomment-383649277","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's discuss this more offline - I think we would benefit from discussing what we want the API / contract of a \"plugin\" to look like; so far we've been developing it in a very ad hoc fashion.\r\n\r\n(One idea: each plugin defines `Contribution` and `Connection` classes, which implement methods for e.g. rendering, self-description, helpers for attribution. The plugin also provides a graph-generate method that takes in some configuration/input data and produces a Contribution graph)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000379634100\u0000":{"address":{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/117#issuecomment-379634100","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’ve now merged PRs #118, #119, #120, #121, #122, and #123, which\r\ncollectively implement the pagination API for our particular GitHub\r\nquery (as you can tell from the commit spam above!). Here are some\r\nthings that I learned along the way and TODOs for the future.\r\n\r\n## General foundations\r\n\r\nThe process of implementing this specific case was valuable. It is\r\n_easier_ to see how to generalize to the general case, and this could\r\nplausibly be done incrementally while maintaining test coverage. It’s\r\nstill not trivial: for one thing, the schema is currently hard-coded in\r\nthe type of the `enclosingNodeType` attribute of the `Continuation`\r\ntype, and in the `continuationsForX` functions.\r\n\r\n## Fold direction for continuation accumulation\r\n\r\nSuppose that we have a sequence of three queries: the first an original\r\nquery, and the next two fetching more pages for some subfields. We might\r\nreceive the following results:\r\n```js\r\nconst r1 = {\r\n  repository: {\r\n    issues: {\r\n      pageInfo: {hasMorePages: true},\r\n      nodes: [/* issue #1 */],\r\n    },\r\n  },\r\n};\r\nconst r2 = {\r\n  _n7: {\r\n    issues: {\r\n      pageInfo: {hasMorePages: true},\r\n      nodes: [/* issue #2 */],\r\n    },\r\n  },\r\n};\r\nconst r3 = {\r\n  _n3: {\r\n    issues: {\r\n      pageInfo: {hasMorePages: false},\r\n      nodes: [/* issue #3 */],\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nWe need to combine these. We have two options: we could combine `r1` and\r\n`r2` to form\r\n```js\r\nconst r12 = {\r\n  repository: {\r\n    issues: {\r\n      pageInfo: {hasMorePages: true},\r\n      nodes: [/* issue #1 */, /* issue #2 */],\r\n    },\r\n  },\r\n};\r\n```\r\nand then merge `r3` into this to form our final result, or we could\r\nstart by combining `r2` and `r3` thus:\r\n```js\r\nconst r23 = {\r\n  _n7: {\r\n    issues: {\r\n      pageInfo: {hasMorePages: true},\r\n      nodes: [/* issue #2 */, /* issue #3 */],\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nThis can roughly be seen as varying the associativity of the merge\r\noperation: the former option has left-associative merge, and the latter\r\noperator right-associative merge.\r\n\r\nThe left-associative merge has the advantage that at each step the\r\nresult is a sensible response to the original query that becomes\r\nincrementally more complete. This makes it easier to gradually display\r\nmore information in a UI, or to pick up where we left off if we are\r\ninterrupted. The right-associative merge is more computationally\r\nefficient, because we are always operating on small structures until the\r\nvery end, instead of operating on a megastructure at each step.\r\n\r\nWhich strategy is used is an implementation detail, so there’s nothing\r\npressing here, but we should keep an eye on it. Currently, we use a\r\nvariant of the left-associative merge. In fact, our process is to\r\ngenerate `r12` and analyze _it_ for continuations to form the query that\r\nyields `r3`, instead of getting these directly from `r2`. This is\r\nespecially computationally wasteful, so improving this (while keeping\r\nthe merge left-associative) should be our first step if client-side\r\nperformance becomes an issue.\r\n\r\n## Typing for queries and results\r\n\r\nThis is an interesting one. In [a comment][comment-flow-types] on #76,\r\n@decentralion proposed that we generate Flow types for the _results_ of\r\nGraphQL queries. If we had had this infrastructure when I was writing\r\nthe specific implementation, then a few mistakes that I made would have\r\nbeen mitigated. Others, that could be caught in principle, would not:\r\nfor instance, at one point I declared something like\r\n```js\r\nconst subpath = [...path, \"issues\", i];\r\n```\r\nwhere I should have written\r\n```js\r\nconst subpath = [...path, \"issues\", \"nodes\", i];\r\n```\r\nbut it is not possible\\* to express the semantics of the logical type of\r\n`path` in a Flow type (e.g., that `result.issues.nodes[i]` should be\r\ndefined in the above example).\r\n\r\nHowever, I believe that these benefits would be mostly lost if we moved\r\nto the more general API (still GitHub-specific, but not query-specific).\r\nAlso, I think that the marginal value of these types _once the\r\npagination API is already written_ (and never changed again or\r\nrefactored, of course! :-) ) is small. The top-level API’s types are\r\nvery simple and do not depend on any particular schema types. Therefore,\r\nmy conclusion is that my needle on whether we should add GraphQL result\r\ntypes hasn’t actually moved much at all as a result of performing this\r\nwork.\r\n\r\n\\* Certainly not possible without tricky tricks. I’ve played around with\r\nit and don’t think that it’s possible at all with these value types.\r\nMaybe some contortions would be able to force it, but I suspect that it\r\nwould not be worth the trouble.\r\n\r\n[comment-flow-types]: https://github.com/sourcecred/sourcecred/issues/76#issuecomment-373613940\r\n\r\n## Relay Cursor Connections Specification\r\n\r\nGitHub’s GraphQL API implements the [Relay Cursor Connections\r\nSpecification][spec]. It would therefore be feasible to write our more\r\ngeneral pagination API against this spec, so that it could be more\r\neasily applicable to other projects. There’s one catch: GitHub provides\r\nsome syntactic sugar that is not required by the spec, but which we use\r\nextensively. In particular:\r\n\r\n  - The `nodes` fields on connections are not required; only the `edges`\r\n    fields are. Of course, `nodes { … }` can always be replaced with\r\n    `edges { node { … } }`, but this changes the structure of the output\r\n    by introducing an additional level of nesting.\r\n\r\n  - The `PageInfo` type is not required to expose `endCursor` and\r\n    `startCursor`; instead, cursor are provided via `edges { cursor }`.\r\n    Here, `data.pageInfo.endCursor` is approximately equivalent to\r\n    `data.edges[data.edges.length - 1].cursor`, modulo error handling.\r\n\r\nThis presents the following options.\r\n\r\n  - Write the pagination API against an extension of the GraphQL spec\r\n    that also requires these extensions. (Before selecting this, it\r\n    would be a good idea to find other implementors of the Relay spec\r\n    and see if they provide a similar affordance. The [examples] in\r\n    the Relay docs have `endCursor` but not `nodes`, for instance.)\r\n\r\n  - Write the pagination API against the vanilla Relay spec, and change\r\n    our data format accordingly. This would cause a bit of bloat in the\r\n    output data, but probably not significantly.\r\n\r\n  - Write some kind of hybrid that fetches according to the spec but\r\n    then transforms the data into our currently-expected format. (This\r\n    doesn’t seem like a good idea to me.)\r\n\r\n[spec]: https://facebook.github.io/relay/graphql/connections.htm\r\n[examples]: https://facebook.github.io/relay/docs/en/graphql-server-specification.html#schema\r\n\r\n## Long-term plan\r\n\r\nThis whole module is predicated on the assumption that recursively\r\nfetching the whole repository is the right thing to do. This scales well\r\nto small, medium, and even large-ish projects, but not to the outliers:\r\nfor instance, torvalds/linux has 750,000 commits. Eventually, we’ll need\r\nto make sure to use online algorithms everywhere. But that’s a task for\r\nanother time.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000379634273\u0000":{"address":{"type":"COMMENT","id":"379634273","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/117#issuecomment-379634273","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m closing this issue for now. When we want to extend the pagination\r\nAPI, we can create a new issue and link it hence."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000379634294\u0000":{"address":{"type":"COMMENT","id":"379634294","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/117#issuecomment-379634294","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(But feel free to continue discussing here!)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000127\u0000387147210\u0000":{"address":{"type":"COMMENT","id":"387147210","parent":{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/127#issuecomment-387147210","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closed by #144"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000383157219\u0000":{"address":{"type":"COMMENT","id":"383157219","parent":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/131#issuecomment-383157219","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We will also want to implement \"advanced\" or \"contextual\" reference parsing, e.g: parsing \"Paired with USER\" as being a special type of reference with particular semantics.\r\n\r\noff the top of my head, it's not clear what the best abstraction for this is"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000387148124\u0000":{"address":{"type":"COMMENT","id":"387148124","parent":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/131#issuecomment-387148124","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"#182 mostly solved this, although we will still want to add \"Paired with @\" as well as, potentially, other contextual references."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000171\u0000388284945\u0000":{"address":{"type":"COMMENT","id":"388284945","parent":{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/171#issuecomment-388284945","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I do believe this is now implemented! :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000386153839\u0000":{"address":{"type":"COMMENT","id":"386153839","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-386153839","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Here is one idea: nodes are arbitrary JSON blobs with a `type`\r\nidentifier; plugins register handlers that take nodes of a fixed `type`\r\nto a unique address.\r\n\r\nIn more detail, suppose that we define nodes as follows (names up for\r\ndiscussion):\r\n```js\r\ninterface Node {\r\n  +__type: {|\r\n    +repositoryName: string,\r\n    +pluginName: string,\r\n    +type: string,\r\n  |};\r\n}\r\n```\r\nThen, a plugin can register a handler:\r\n```\r\ntype Id = string;\r\ninterface AddressHandler<T> {\r\n  (node: Node<T>): Id;\r\n}\r\ntype AddressHandlers = {[type: string]: AddressHandler};\r\n```\r\n\r\nFor simple nodes, this can just be a projection:\r\n```js\r\ntype Commit: Node = {|\r\n  +__type: {|\r\n    +repositoryName: string,\r\n    +pluginName: \"sourcecred/git-beta\",\r\n    +type: \"COMMIT\",\r\n  |},\r\n  +hash: string,\r\n  +summary: string,\r\n|};\r\nfunction handleCommit(commit: Commit) {\r\n  // Commits can be uniquely identified by hash.\r\n  return commit.hash;\r\n}\r\n```\r\nSomething more complicated, like `JSON.stringify(someFieldsOfNode)`,\r\nmight be necessary for more complicated nodes.\r\n\r\nIn some sense, this addressing function can be considered an\r\noptimization, because `JSON.stringify(theWholeNode)` should always be a\r\nsafe (i.e., injective) implementation. This implementation has a few\r\ndownsides, though. First, memory performance: using a commit’s full\r\nsummary, or a blob’s full contents, as an address will lead to a lot of\r\nwasted space. This is especially true for nodes with lots of incident\r\nedges. Second, decreased lookup potential: using `handleCommit` above,\r\none can write\r\n```js\r\ngraph.node(gitPlugin.commitNodeAddress(someHash)).summary\r\n```\r\nto find the summary of a commit for which only the hash is known. (This\r\npattern obviously generalizes.) If the content-addressing requires the\r\nwhole object, then this is no longer feasible. It could be argued that\r\nthis is not inherently bad, that a graph is not necessarily supposed to\r\nbe a key–value store.\r\n\r\nLots of details remain to be filled in, of course. Thoughts welcome."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000386362870\u0000":{"address":{"type":"COMMENT","id":"386362870","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-386362870","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I like this proposal, and am open to implementing it soon (and, as ever, we can try it out and see how we like it in practice).\r\n\r\nOne addition: I think we should get rid of the `repositoryName` field. In cases where the repositoryName is actually needed to disambiguate, the projector logic can be responsible for inserting it, but in many cases (e.g. Git and GitHub plugins), it seems unnecessary.\r\n\r\nI think what we were aiming for with the repositoryName field was really something more like: `publisher`, i.e. which entity has responsibility for updating this information / can canonically provide the source of truth? However, conflating that with repository boundaries needlessly complicates cross-repository projects. For now, I think we can assume that all graphs exist in the purview of a single publisher (the entity that created it) and we can hold off on adding publisher-type information until the requirements are clear."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000386371435\u0000":{"address":{"type":"COMMENT","id":"386371435","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-386371435","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> One addition: I think we should get rid of the `repositoryName` field.\r\n> In cases where the repositoryName is actually needed to disambiguate,\r\n> the projector logic can be responsible for inserting it, but in many\r\n> cases (e.g. Git and GitHub plugins), it seems unnecessary.\r\n\r\nI hadn’t thought about this, but it totally makes sense. Good call.\r\n\r\n> I think what we were aiming for with the repositoryName field was\r\n> really something more like: `publisher`, i.e. which entity has\r\n> responsibility for updating this information / can canonically provide\r\n> the source of truth? However, conflating that with repository\r\n> boundaries needlessly complicates cross-repository projects. For now,\r\n> I think we can assume that all graphs exist in the purview of a single\r\n> publisher (the entity that created it) and we can hold off on adding\r\n> publisher-type information until the requirements are clear.\r\n\r\nYep. Additionally, our current model doesn’t have a notion of\r\n“updates”—we always generate a graph from scratch—so we doubly don’t\r\nneed to worry about this yet."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391216103\u0000":{"address":{"type":"COMMENT","id":"391216103","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-391216103","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> This post is a mirror of:\r\n> https://gist.github.com/wchargin/8e41c67b5448d9caf55da799a0723c47\r\n\r\n---\r\n\r\n> This post typechecks—run its source through [`print_code_fences`] and\r\n> copy the result into https://flow.org/try.\r\n\r\n[`print_code_fences`]: https://gist.github.com/wchargin/e371d4f3047cf5d89e7ff9bb47224243\r\n\r\nHere is my latest proposal, based off brainstorming with @decentralion\r\nyesterday.\r\n\r\n## Core structures\r\n\r\nThe `Address` type is, for now, unchanged:\r\n\r\n```javascript\r\ntype Address = {|\r\n  +pluginName: string,\r\n  +type: string,\r\n  +id: string,\r\n|};\r\n```\r\n\r\nAt the core are two interfaces. First is `NodePayload`:\r\n\r\n```javascript\r\ninterface NodePayload {\r\n  address(): Address;\r\n}\r\n```\r\n\r\nPlugins are expected to have a variety of subclasses of `NodePayload`,\r\none for each logical type. These classes can provide domain-specific\r\nporcelain. For instance, the GitHub plugin might have:\r\n\r\n```javascript\r\ntype GithubNodeType = \"PULL_REQUEST\" | \"PULL_REQUEST_COMMENT\";  // e.g.\r\nclass GithubNodePayload<+T: {+url: string}> implements NodePayload {\r\n  +record: T;\r\n  +_type: GithubNodeType;\r\n  constructor(record: T, type: GithubNodeType) {\r\n    this.record = record;\r\n    this._type = type;\r\n  }\r\n  address() {\r\n    return {\r\n      pluginName: \"sourcecred/github-beta\",\r\n      type: this._type,\r\n      id: this.url(),\r\n    };\r\n  }\r\n  url() {\r\n    return this.record.url;\r\n  }\r\n  toJSON() { throw new Error(\"Must be implemented by subclass.\"); }\r\n  static fromJSON() { throw new Error(\"Must be implemented by subclass.\"); }\r\n}\r\n\r\ntype PullRequestJson = {|\r\n  +url: string,\r\n  +number: number,\r\n  +title: string,\r\n  +body: string,\r\n|};\r\nclass PullRequestPayload extends GithubNodePayload<PullRequestJson> {\r\n  constructor(record: PullRequestJson) {\r\n    super(record, \"PULL_REQUEST\");\r\n  }\r\n  number(): number { return this.record.number; }\r\n  title(): string { return this.record.title; }\r\n  body(): string { return this.record.body; }\r\n  toJSON() { return toCompat(PULL_REQUEST_COMPAT_INFO, this.record); }\r\n  static fromJSON(json) { return fromCompat(PULL_REQUEST_COMPAT_INFO, json); }\r\n}\r\nconst PULL_REQUEST_COMPAT_INFO: CompatInfo = {\r\n  type: \"sourcecred/sourcecred/github/PullRequest\",\r\n  version: \"0.1.0\",\r\n};\r\n\r\ntype PullRequestCommentJson = {|+url: string, /* elided */|};\r\ndeclare class PullRequestCommentPayload\r\nextends GithubNodePayload<PullRequestCommentJson> {\r\n  constructor(record: PullRequestJson): void;\r\n  /* elided */\r\n}\r\n```\r\n\r\nNote that a `NodePayload` should have well-defined serialization\r\nbehavior—probably, but not necessarily, via an explicit `toJSON` method.\r\nBy convention, nodes will have a `static fromJSON` for deserialization.\r\n\r\nNote also that `NodePayload`s exist outside the context of a graph: they\r\nsimply define data.\r\n\r\nThe second core interface is `NodeReference`:\r\n\r\n```javascript\r\ninterface NodeReference {\r\n  graph(): Graph;\r\n  address(): Address;\r\n  get(): ?Node<any, any>;\r\n\r\n  neighbors(options?: NeighborhoodOptions): Iterator<NodeReference>;\r\n}\r\ntype NeighborhoodOptions = {|\r\n  +nodeType?: string,\r\n  +edgeType?: string,\r\n  +direction?: \"IN\" | \"OUT\" | \"ANY\",\r\n|};\r\n```\r\n\r\nHere, we make use of the following useful type alias, which binds\r\ntogether the two core interfaces:\r\n\r\n```javascript\r\ntype Node<NR: NodeReference, NP: NodePayload> = {|\r\n  +ref: NR,\r\n  +payload: NP,\r\n|};\r\n```\r\n\r\nThat is, a `Node<NR, NP>` is just a pair of an `NR` and an `NP`.\r\n\r\nNote that a `NodeReference` is tied to a specific node and a specific\r\ngraph. The `core/graph.js` module itself will include one important\r\nimplementation of this interface:\r\n\r\n```javascript\r\nclass IndexedNodeReference implements NodeReference {\r\n  _graph: Graph;\r\n  _address: Address;\r\n  _index: ?number;\r\n  _indexVersion: number;  // explained below\r\n\r\n  constructor(graph, address, index, version) { /* assignments */ }\r\n\r\n  graph() { return this._graph; }\r\n  address() { return this._address; }\r\n\r\n  get() {\r\n    this._ensureUpToDate();\r\n    if (this._index == null) {\r\n      return undefined;\r\n    } else {\r\n      return this._graph._nodes[this._index].value;\r\n    }\r\n  }\r\n\r\n  neighbors(options?: NeighborhoodOptions) {\r\n    this._ensureUpToDate();\r\n    if (this._index == null) {\r\n      return [].values();\r\n    } else {\r\n      return this._graph._internalNeighbors(this._index, options);\r\n    }\r\n  }\r\n\r\n  _ensureUpToDate() {\r\n    if (this._graph._indexVersion !== this._indexVersion) {\r\n      this._indexVersion = this._graph._indexVersion;\r\n      this._index = this._graph._addressToIndex(this._address);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe salient point of this implementation is that it enables fast access\r\nof graph operations by remaining inside the integer-indexed layer,\r\nwithout leaking to clients the details of how this works. Notable in\r\nthis implementation is the `_indexVersion` field, which enables a graph\r\nto garbage-collect, compress, permute, or otherwise change its node\r\nindex without breaking extant references and without needing to keep\r\ntrack of them: any such operation simply increments the graph’s\r\n`_indexVersion` attribute, and any `IndexedNodeReference` will pick up\r\nthe change on any subsequent actions. Again, though, this is just a\r\nconvenient implementation detail.\r\n\r\nClients won’t directly use `IndexedNodeReference`, though; this will be\r\na non-exported class of the `core/graph.js` module. Instead, they will\r\nprovide a semantic extension of `NodeDelegateReference`:\r\n\r\n```javascript\r\nclass NodeDelegateReference implements NodeReference {\r\n  _base: NodeReference;\r\n  constructor(base: NodeReference) {\r\n    this._base = base;\r\n  }\r\n  graph() { return this._base.graph(); }\r\n  address() { return this._base.address(); }\r\n  get() { return this._base.get(); }\r\n  neighbors(options?: NeighborhoodOptions) {\r\n    return this._base.neighbors(options);\r\n  }\r\n}\r\n```\r\n\r\n(Note: `NodeDelegateReference` should actually have `_base` as a\r\n`Symbol`, but doing so requires Flow-appeasing hackery that I don’t want\r\nto include in this high-level overview.)\r\n\r\nBy extending this class, plugins gain great power:\r\n\r\n```javascript\r\nclass GithubNodeReference extends NodeDelegateReference {\r\n  constructor(base: NodeReference) {\r\n    super(base);\r\n    const address = base.address();\r\n    if (address.pluginName !== \"sourcecred/github-beta\") {\r\n      throw new Error(\"pluginName: \" + address.pluginName);\r\n    }\r\n  }\r\n}\r\n\r\nclass PullRequestReference extends GithubNodeReference {\r\n  constructor(base: NodeReference) {\r\n    super(base);\r\n  }\r\n  *comments(): Iterator<PullRequestCommentReference> {\r\n    for (const neighbor of this.neighbors({\r\n      direction: \"OUT\",\r\n      nodeType: \"PULL_REQUEST_COMMENT\",\r\n      edgeType: \"CONTAINS\",\r\n    })) {\r\n      if (!(neighbor instanceof PullRequestCommentReference)) {\r\n        throw new Error(neighbor.constructor.name);\r\n      }\r\n      yield neighbor;\r\n    }\r\n  }\r\n}\r\n\r\ndeclare class PullRequestCommentReference extends GithubNodeReference {\r\n  /* elided */\r\n}\r\n```\r\n\r\n## Plugin handlers\r\n\r\nBefore the methods on `Graph` can be updated to take advantage of these\r\nstructures, a graph needs to know about the different kinds of plugins.\r\nA plugin handler has the following interface:\r\n\r\n```javascript\r\ninterface PluginHandler<NR: NodeReference, NP: NodePayload> {\r\n  /**\r\n   * Enrich a base reference with plugin-/domain-specific properties.\r\n   */\r\n  createReference(baseReference: NodeReference, payload: NP): NR;\r\n\r\n  /**\r\n   * Deserialize a payload, which is guaranteed to be the serialization\r\n   * of a previous `NP`.\r\n   */\r\n  fromJSON(json: Json): NP;\r\n}\r\n```\r\n\r\nNote that a perfectly legal “low-effort” implementation of this is:\r\n\r\n```javascript\r\nconst noopHandler: PluginHandler<NodeReference, NodePayload> = {\r\n  createReference: (reference, _) => reference,\r\n  fromJSON: (json: any) => ({address() { return json.address; }}),\r\n};\r\n```\r\n\r\nA more common implementation might be something like:\r\n\r\n```javascript\r\nclass GithubPluginHandler\r\nimplements PluginHandler<GithubNodeReference, GithubNodePayload<any>> {\r\n  createReference(reference) {\r\n    const address = reference.address();\r\n    if (address.pluginName !== \"sourcecred/github-beta\") {\r\n      throw new Error(\"pluginName: \" + address.pluginName);\r\n    }\r\n    const type: GithubNodeType = ((address.type: string): any);\r\n    switch (type) {\r\n      case \"PULL_REQUEST\":\r\n        return new PullRequestReference(reference);\r\n      case \"PULL_REQUEST_COMMENT\":\r\n        return new PullRequestCommentReference(reference);\r\n      default:\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (type: empty);\r\n        throw new Error(\"type: \" + type);\r\n    }\r\n  }\r\n\r\n  fromJSON(json: any) {\r\n    const type: GithubNodeType = ((json.type: string): any);\r\n    switch (type) {\r\n      case \"PULL_REQUEST\":\r\n        return new PullRequestPayload(json);\r\n      case \"PULL_REQUEST_COMMENT\":\r\n        return new PullRequestCommentPayload(json);\r\n      default:\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (type: empty);\r\n        throw new Error(\"type: \" + type);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## The `Graph` class\r\n\r\nA graph is associated with a fixed set of plugins:\r\n\r\n```javascript\r\ntype Plugins = {[pluginName: string]: PluginHandler<any, any>};\r\n```\r\n\r\nThe graph learns about these at construction time, either via the\r\nconstructor or the `static fromJSON` method.\r\n\r\nGraphs, of course, also need to refer to edges. In this proposal, we\r\nleave edges structurally unchanged, but remove their type parameters:\r\n\r\n```javascript\r\ntype Edge = {|\r\n  +address: Address,\r\n  +src: Address,\r\n  +dst: Address,\r\n  +payload: any,\r\n|};\r\n```\r\n\r\nThe `Graph` class then looks something like this:\r\n\r\n```javascript\r\ndeclare class Graph /* no type parameters! */ {\r\n  constructor(plugins: Plugins): void;\r\n\r\n  copy(): Graph;\r\n  equals(that: Graph): boolean;\r\n\r\n  toJSON(): GraphJson;\r\n  static fromJSON(json: GraphJson, plugins: Plugins): Graph;\r\n\r\n  addNode(np: NodePayload): this;\r\n  addEdge(edge: Edge): this;\r\n\r\n  removeNode(address: Address): this;\r\n  removeEdge(address: Address): this;\r\n\r\n  node(address: Address): ?Node<any, any>;\r\n  edge(address: Address): ?Edge;\r\n  nodeReference(address: Address): NodeReference /* see commentary below */;\r\n\r\n  nodes(filter?: {|+type?: string|}): Iterator<Node<any, any>>;\r\n  edges(filter?: {|+type?: string|}): Iterator<Edge>;\r\n\r\n  static mergeConservative(Iterator<Graph>): Graph;\r\n\r\n  // Some implementation details (but not all of them)…\r\n  _nodes: {|+address: Address, +value: Node<any, any> | void|}[];\r\n  _indexVersion: number;\r\n  _internalNeighbors(\r\n    number: number,\r\n    options?: NeighborhoodOptions\r\n  ): Iterator<NodeReference>;\r\n  _addressToIndex(address: Address): ?number;\r\n}\r\ntype GraphJson = {/* elided */};\r\n```\r\n\r\nI’ll draw attention to a few things in this proposal, which I am open to\r\nchanging.\r\n\r\n  - APIs provide iterators by default. Conversion with `Array.from` is\r\n    easy. Retrofitting clients to stream data when possible only becomes\r\n    harder as we go on.\r\n  - I’ve removed `neighborhood`. Clients of `Graph` will certainly want\r\n    to compute neighborhoods, but they should always do so via a\r\n    `NodeReference`, probably one that eventually delegates to an\r\n    `IndexedNodeReference`. Failure to do so creates a needless\r\n    performance hit. If we like this pattern, we can specify future\r\n    structural methods (like `connectedComponent` or something) in this\r\n    way as well.\r\n  - I’ve removed the binary version of `mergeConservative`. As far as I\r\n    can tell, it is strictly inferior to the variadic version, and\r\n    encourages bad performance.\r\n  - I’ve removed the non-conservative `merge`. This method actually\r\n    provided some value in principle, but we never actually used it. If\r\n    we want to keep it around, that’d be fine with me.\r\n\r\nSome things that are implicit from the types, but are worth mentioning:\r\n\r\n  - Whenever possible, the graph will retain a canonical `NodeReference`\r\n    instance for any given node: that is, it will try to call\r\n    `createReference` only once. Plugins shouldn’t depend on this for\r\n    correctness, but it might be helpful for their caching patterns.\r\n  - The new serialized form will attach plugin names to nodes, either\r\n    individually or by bucketing (each has advantages). Nodes themselves\r\n    will be serialized `NodePayload`s. At `fromJSON` time, the graph\r\n    will re-enrich all nodes with their appropriate plugins to get\r\n    payloads and references.\r\n\r\nAdditionally, the proper semantics of `nodeReference` are not entirely\r\nclear. There are four cases, depending on the `address` argument passed\r\nto this method:\r\n\r\n  1. The address corresponds to a node in the graph.\r\n  2. The address corresponds to a node that does not appear in the\r\n     graph, but has incident edges in the graph.\r\n  3. The address corresponds to a phantom node—a node that does not\r\n     exist in the graph and does not have incident edges, but still\r\n     appears in `_nodes` due to a prior call to `removeNode`.\r\n  4. The address has never been seen before.\r\n\r\nCorrespondingly:\r\n\r\n  - The semantics for case (1) are clear.\r\n  - It seems highly probable that, for case (2), we should return a\r\n    non-null reference: otherwise, it is not clear how we can explore\r\n    the structure around nodes that we know exist but do not have\r\n    directly (e.g., to answer the question, “what other commits has the\r\n    author of this commit authored?” when the “commit” notion comes from\r\n    a different plugin than the “author” notion (say, a Git plugin and\r\n    an OAuth plugin), and only the commit graph is loaded).\r\n  - It also seems clear that cases (3) and (4) should have the same\r\n    semantics as each other, but it is less clear what these should be.\r\n  - In these cases, we could elect to either return `undefined` or to\r\n    return a “null object”: an object for which `get()` returns `null`\r\n    and `neighbors(_)` returns `[].values()`.\r\n  - We should also ask—is the address required to be associated with a\r\n    known plugin? If so, should we ask the plugin to give us a\r\n    `NodeReference` instance specific to that plugin?\r\n  - If we later learn about this node, can the formerly dangling\r\n    reference come “back online”? Should it?\r\n  - Does this mean that calling `nodeReference` can change the internal\r\n    state of the graph? How does this impact the graph’s ability to\r\n    compress its `_nodes`?\r\n\r\nSome of these latter questions apply in case (2), too.\r\n\r\nOne resolution to, I think, all of these questions is to change the\r\n`PluginHandler.createReference` method so that it does not accept a\r\n`NodePayload`, or at least to make the payload optional. This has the\r\nnice property that `PluginHandler<NR, NP>` has two simple functions: one\r\nto enrich a base reference into an `NR`, and one to enrich a JSON blob\r\ninto an `NP`. I suspect that this is likely a good solution, but I am\r\ninterested to hear other opinions.\r\n\r\n## Conclusion and next steps\r\n\r\nThis API encompasses an improvement to how nodes are handled. Clients\r\nwill usually work with either a `Node<NR, NP>` or a `NodeReference`\r\nalone. There is still a bit of friction in that some methods are\r\ninherently on the reference while others are on the porcelain, but this\r\nis not actually a problem when the `Node<NR, NP>` is treated as a\r\npackage (not destructured): consider\r\n\r\n```javascript\r\nfunction someActions(\r\n  someRef: PullRequestReference,\r\n  someNode: Node<PullRequestReference, PullRequestPayload>\r\n) {\r\n  someRef.comments();        // easy\r\n  someNode.ref.comments();   // no problem\r\n  someNode.payload.title();  // piece of cake\r\n}\r\n```\r\n\r\nYou have to pay a few extra characters for `.ref` or `.payload`, but the\r\ntypechecker will help you out.\r\n\r\nWe may want to do something similar for edges in the future, but also\r\nperhaps not. Edges are definitely different from nodes: we never really\r\nreference them by address (`Graph.edge` is currently never called\r\noutside of test code and `graph.js` itself), so something more like\r\ncontent-addressing might make more sense. But that is not an entirely\r\nstraightforward change from our current model.\r\n\r\nI still think that we should plan to eventually remove `type` from being\r\nprivileged on the address. The `type` and `id` properties together\r\nactually represent a plugin-specific set of values that are used to\r\nuniquely determine the identity of a node, and which we therefore\r\nrequire to always be available—even when the full contents of a node are\r\nnot loaded. This grants us more flexibility: perhaps it makes more sense\r\nto have\r\n\r\n```javascript\r\ntype UserId = {|+type: \"USER\", +login: string|};\r\ntype PullRequestId = {|\r\n  +type: \"PULL_REQUEST\",\r\n  +repositoryOwner: string,\r\n  +repositoryName: string,\r\n  +number: number,\r\n|};\r\n```\r\n\r\nThen, functions like `neighbors` and `nodes` greatly increase in power,\r\nas we filter not just on `type` but on an arbitrary subset of these\r\nidentifying characteristics:\r\n\r\n```javascript\r\nconst myTreeEntries = neighborsV2({\r\n  direction: \"OUT\",\r\n  nodeFilter: {\r\n    pluginName: \"sourcecred/git-beta\", \r\n    id: {\r\n      type: \"TREE_ENTRY\",\r\n      name: \"pygravitydefier\",\r\n    },\r\n  },\r\n});\r\nconst allFirstPrs = nodesV2({\r\n  pluginName: \"sourcecred/github-beta\",\r\n  id: {\r\n    type: \"PULL_REQUEST\",\r\n    number: 1,\r\n  },\r\n});\r\n\r\ntype FilterV2 = {|+pluginName?: string, +id?: Object|};\r\ntype NeighborhoodOptionsV2 = {|\r\n  +nodeFilter?: FilterV2,\r\n  +edgeFilter?: FilterV2,\r\n  +direction?: \"IN\" | \"OUT\" | \"ANY\",\r\n|};\r\n\r\ndeclare function neighborsV2(\r\n  options?: NeighborhoodOptionsV2\r\n): Iterator<NodeReference>;\r\ndeclare function nodesV2(filter?: FilterV2): Iterator<Node<any, any>>;\r\n```\r\n\r\nBut that’s all for another day. For now, I’ll take comments and\r\nsuggestions on the above proposal, and—if all goes well—begin\r\nimplementing it.\r\n\r\n---\r\n\r\nSome external shims, just to make the post typecheck…\r\n\r\n```javascript\r\ntype Json =\r\n  | string \r\n  | number \r\n  | {[string]: Json}\r\n  | $ReadOnlyArray<Json> \r\n  | true \r\n  | false \r\n  | null\r\n  ;\r\ntype CompatInfo = {|\r\n  +type: string,\r\n  +version: string,\r\n|};\r\ndeclare function toCompat(compatInfo: CompatInfo, _: any): any;\r\ndeclare function fromCompat(compatInfo: CompatInfo, _: any, _?: any): any;\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391216116\u0000":{"address":{"type":"COMMENT","id":"391216116","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-391216116","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"@decentralion RFC, please."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391447851\u0000":{"address":{"type":"COMMENT","id":"391447851","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-391447851","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Per @decentralion 's suggestion, I've created PR #296 to discuss this design doc."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000401571601\u0000":{"address":{"type":"COMMENT","id":"401571601","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/190#issuecomment-401571601","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Duly considered."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000386163362\u0000":{"address":{"type":"COMMENT","id":"386163362","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/194#issuecomment-386163362","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"cc @decentralion "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000386361392\u0000":{"address":{"type":"COMMENT","id":"386361392","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/194#issuecomment-386361392","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"How about \"credbot\"? I was thinking we might want to have a bot that can help users learn SourceCred workflows or help data collection, e.g. by showing up on newly created issues and giving info on how to use GH reactions to attribute cred (assuming the repo owners asked for credbot's presence). \r\n\r\nalthough maybe our CI user should be isolated from our commenting-on-issues user\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000386371860\u0000":{"address":{"type":"COMMENT","id":"386371860","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/194#issuecomment-386371860","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed on all counts."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000387141605\u0000":{"address":{"type":"COMMENT","id":"387141605","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/194#issuecomment-387141605","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Created @sourcecred-ci and put their tokens into Travis"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000223\u0000388284849\u0000":{"address":{"type":"COMMENT","id":"388284849","parent":{"type":"ISSUE","number":"223","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/223#issuecomment-388284849","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Clarification: It does give a helpful warning if the token is something totally unreasonable (like `FOO`), but gives the bad failure if the token superficially looks valid."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000256\u0000407174322\u0000":{"address":{"type":"COMMENT","id":"407174322","parent":{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/256#issuecomment-407174322","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing as [wontfix], as we explored two different approaches (#282 and #283) but didn't reach consensus that implementing either was a win."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000388475262\u0000":{"address":{"type":"COMMENT","id":"388475262","parent":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/270#issuecomment-388475262","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep, this has been on my mind for a while. I'm happy to do it, but I would like to do it reliably. I will have to investigate how to not get in trouble with Node's event loop."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000401163233\u0000":{"address":{"type":"COMMENT","id":"401163233","parent":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/270#issuecomment-401163233","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing this as wontfix based on discussion in #279"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000394939349\u0000":{"address":{"type":"COMMENT","id":"394939349","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-394939349","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Useful debugging/investigation tool: https://gist.github.com/wchargin/a6336f5730d0d09a25562b83120d1a95"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395164325\u0000":{"address":{"type":"COMMENT","id":"395164325","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395164325","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think this is the actual error @mikeal was telling me about. It's confusing that GitHub apparently has two different ways to die on large GraphQL requests: either the \"unknown error (possibly timeout)\" that we were seeing prior to https://github.com/sourcecred/sourcecred/pull/349, or this failure.\r\n\r\nI think the situation here would be substantially improved if we cache the GitHub response (inc. continuation queries) to disk as it's generated. That would have two consequences:\r\n\r\n1. On the user's first request to a large repo, it may fail. However, since they will have cached a bunch of data received prior to triggering this mechanism, they will still have made progress. Running the program a few more times will eventually get them into a good state. This is much better than the status quo, where if it doesn't Just Work you're pretty much stuck.\r\n2. Once they're in a good state, subsequent runs will just pick up new activity via the continuation query, which will result in much better performance, less stress on GitHub, and will avoid this failure"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395186666\u0000":{"address":{"type":"COMMENT","id":"395186666","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395186666","authors":[{"type":"USERLIKE","login":"mikeal"}],"body":"Sometimes the status/headers will even call it a rate limit error, but it's at the gateway level and isn't documented or part of your \"rate limit\" that is exposed by the API."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395187798\u0000":{"address":{"type":"COMMENT","id":"395187798","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395187798","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"@decentralion: Here are my thoughts on your proposal.\r\n\r\nFirst of all: I like it. It seems like clearly a good thing to do.\r\n\r\nSecond: it seems that this kind of data (partial results and\r\ncontinuations) should be stored in a plugin-specific data directory, so\r\nwe’ll want some simple abstraction for that.\r\n\r\nThird: I note that the proposal assumes that the queries will fetch a\r\nconsistent state of the repository over multiple requests. This is of\r\ncourse not true in general. Now, this assumption is already present in\r\nthe current version of the code, basically by necessity: we can’t\r\ninstruct GitHub to commit a DB snapshot, for obvious reasons, so this is\r\njust another design constraint that we have to consider. But the model\r\ndescribed in your point (2) greatly increases the strength of the\r\nassumption: we’re assuming that results from a repository are\r\nconservative extensions of not just “very recent” results but also\r\nresults at arbitrary times in the past. This changes the game from “if\r\nyour queries are fast enough and your repository isn’t being touched\r\nevery second, you’re probably okay” to “sooner or later, someone _will_\r\ndelete a comment in the repository (or make some other incompatible\r\nchange), at which point you’re out of luck”. This may motivate us to\r\ndevise some intermediate format that is robust to such modifications.\r\nFor instance, currently the continuation queries have associated\r\nstructures like, “run this continuation, then merge it into element 17\r\nof `results.repository.issues.nodes`” or whatever. Replacing indexing\r\nwith some more stable content address (issue number, unique pull request\r\nreview ID, etc.) could improve robustness.\r\n\r\nFourth: there are two degrees to which we could implement the proposal,\r\nwhich vary in difficulty. Implementing point (1) of your list is\r\nreasonably tractable: once we have the plugin-specific data directory\r\nworking, this change should probably be about a day’s work. But your\r\npoint (2) is a bit harder. Currently, when a query returns with\r\n`hasNextPage: false`, we consume the relevant continuation, because we\r\nhave found all relevant data. The model that you propose requires\r\nkeeping around these continuations and querying them again when we want\r\nto check for updates to the graph. This is certainly possible, but will\r\ntake some doing—especially if we want to be robust to long-term\r\nbackward-incompatible changes, as described above.\r\n\r\nFinally, and related only indirectly to this conversation: as we make\r\nthe GraphQL logic more complex, we may want to keep in mind the option\r\nof autogenerating Flow types from the GraphQL schema.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395217826\u0000":{"address":{"type":"COMMENT","id":"395217826","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395217826","authors":[{"type":"USERLIKE","login":"mikeal"}],"body":"One thing you may also want to consider in the future if you're trying to pull in more data across GitHub: starting with a graph populated by continual updates from gharchive https://www.gharchive.org/\r\n\r\nIf you already know all the issues and base level information and just need to get comments or other leaf data out of GraphQL there's some tricks you can do with the search API to run those sub-queries across 100 specific issues or repos or people all at once by creating a large search string with each one."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395222471\u0000":{"address":{"type":"COMMENT","id":"395222471","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395222471","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":" ### Plugin Specific Directories\r\n\r\nI agree; the `Git` plugin would benefit even more from caching its\r\nresults than the GitHub plugin does. (I believe we would not have\r\nconsistency issues?)\r\n\r\n### Consistency issues\r\n\r\nIn the long term, if this system is to be decentralized, we can't avoid\r\nthinking about consistency issues. Within individual scopes it's\r\npossible to maintain consistency; across scopes (e.g. plugin boundaries)\r\nit's much harder. \r\n\r\nIt would be interesting to have a design discussion about how to handle\r\nconsistency problems in general. The space of possible\r\nsolutions is very large; for example, making a blockchain would be one\r\nway to do it. But that would introduce enormous complexity which is\r\nincidental to SourceCred's present goals, so: let's not :)\r\n\r\nThe core algorithms will need to be accommodating of cases where\r\nconsistency has been violated. I think we can do this in a generalizable\r\nway by handling all reconciliation when merging graphs, so that any\r\ngraph can be considered internally consistent. Then we can provide\r\nscoped resolvers that can use plugin-specific logic to accommodate their\r\nown inconsistencies.\r\n\r\nAs other plugins begin interacting more richly with the GitHub plugin,\r\nwe'll need to solve consistency for the GitHub plugin. But for now, we\r\n_could_ punt on it.\r\n\r\nI would really like if we can get to a solution that is robust, even if\r\nnot fully correct. That is, when underlying consistency is violated, it\r\nmay show locally corrupted / inconsistent data, but the data still\r\nloads, displays the same UI, approximately the same PageRank. \r\n\r\nThen we can implement the GitHub plugin caching with a ~24 hour TTL,\r\nwhich I think will minimize the rate of consistency problems, and also\r\nmake the software feel far more performant. \r\n\r\nAlternatively: we can implement the caching purely at the CLI layer;\r\nrather than getting true incremental querying, we could just cache the\r\nresult of `sourcecred graph foo bar` with a 24hr TTL. I guess this would\r\nmanifest similar performance benefits with a fraction of the\r\nimplementation complexity. Then we can focus instead on actually\r\ndeveloping credit attribution. :)\r\n\r\n### Autogenerating flow types for GraphQL\r\n\r\nI think this is pretty low priority. The manual process seems fine to\r\nme. We're unlikely to merge many bugs because Flow will complain at type\r\nusage even if it wasn't added properly at source. And at our current\r\nrate of GraphQL query modification, the labor savings from automating it\r\nwill not be significant. \r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395225556\u0000":{"address":{"type":"COMMENT","id":"395225556","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395225556","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@mikeal the important thing to us with the GitHub API is that it's possible to query just for an individual repository or organization's data in an efficient fashion. That makes it feasible to not have any central SourceCred servers, and instead have all the users get their own copy of the data from GitHub (in the future, from IPFS). It seems to me that the gh-archive won't be very useful in this model, because individual users won't want to download the whole history of GitHub in order to analyze the particular project they're participating in. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395227637\u0000":{"address":{"type":"COMMENT","id":"395227637","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395227637","authors":[{"type":"USERLIKE","login":"mikeal"}],"body":"@decentralion totally makes sense. Just FYI, at some point we'll have a processing pipeline that converts the information in gharchive into IPFS. This would allow individual nodes to subscribe to information about specific repos or orgs in the future and could seed your data needs without dealing with GitHub rate limits. Once this gets off the ground a bit more I'll ping you to make sure that we include all the information you need as we filter a lot of the noise out in the pipeline."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395640276\u0000":{"address":{"type":"COMMENT","id":"395640276","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-395640276","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@mikeal Sounds great :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000408502491\u0000":{"address":{"type":"COMMENT","id":"408502491","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/350#issuecomment-408502491","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Here's an example of another error that GitHub can throw:\r\n\r\n```\r\n{ data: 'null',\r\n  errors: \r\n   [ { message: 'Something went wrong while executing your query. This may be the result of a timeout, or it could be a GitHub bug. Please include `A55C:0922:1DC69E1:25727DE:5B5B6447` when reporting this issue.' },\r\n     [length]: 1 ] }\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000417\u0000400460048\u0000":{"address":{"type":"COMMENT","id":"400460048","parent":{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/417#issuecomment-400460048","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sounds good to me!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000421\u0000400450848\u0000":{"address":{"type":"COMMENT","id":"400450848","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/421#issuecomment-400450848","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"An initial technical assessment of “which type system is better for us”,\r\ndisregarding any costs of integration, performance, etc.…\r\n\r\nThe TypeScript playground is at: http://www.typescriptlang.org/play/\r\n\r\nSummary\r\n=======\r\n\r\nRoughly equivalent:\r\n  - discriminated unions\r\n  - exact and read-only objects\r\n  - object and array type destruction\r\n  - opaque types (via a workaround)\r\n  - upward propagation of constraints\r\n\r\nTypeScript better than Flow:\r\n  - checked downcasts\r\n\r\nTypeScript worse than Flow:\r\n  - nominal types\r\n  - read-only arrays?\r\n  - variance (unquestionably, fundamentally broken)\r\n\r\nNotes:\r\n  - functions are bivariant by default (!!!), but this can be turned off\r\n  - first-class `enum`s have nontrivial runtime elision\r\n\r\nRoughly equivalent\r\n==================\r\n\r\nDiscriminated unions\r\n--------------------\r\n\r\nThese work exactly as in Flow, as far as I can tell.\r\n\r\nExact and read-only objects\r\n---------------------------\r\n\r\nObject types are exact by default. Attributes can be marked `readonly`:\r\n\r\n```typescript\r\ntype O = { readonly x: number };\r\nconst tooMany: O = { x: 1, y: 2 };  // error\r\nconst okay: O = { x: 1 };\r\nokay.x++;  // error\r\n```\r\n\r\nObject and array type destruction\r\n---------------------------------\r\n\r\nWorks, with specialized (and cleaner) syntax. For objects:\r\n\r\n```typescript\r\ntype O = { x: number };\r\nfunction takesNumber(n: O[\"x\"]) {\r\n    console.log(n.toFixed(3));\r\n}\r\ntakesNumber(3.14159265358979);  // okay\r\ntakesNumber(\"three\");  // error\r\n```\r\n\r\nFor arrays:\r\n\r\n```typescript\r\ntype O = number[];\r\nfunction takesNumber(n: O[number]) {\r\n    console.log(n.toFixed(3));\r\n}\r\ntakesNumber(3.14159265358979);  // okay\r\ntakesNumber(\"three\");  // error\r\n```\r\n\r\nOpaque types\r\n------------\r\n\r\nNot supported directly. The following should be a workaround:\r\n\r\n```typescript\r\ndeclare const NodeAddressIdentity: unique symbol;\r\nexport type NodeAddress = typeof NodeAddressIdentity & string;\r\nfunction nodeAddress(value: string): NodeAddress {\r\n  return value as any;\r\n}\r\n```\r\n\r\nThis is because TypeScript knows about symbols and supports generative\r\n“unique types” for them.\r\n\r\n[opaque-1]: https://github.com/Microsoft/TypeScript/issues/202#issuecomment-381437628\r\n[opaque-2]: https://github.com/Microsoft/TypeScript/issues/202#issuecomment-381603738\r\n\r\nUpward propagation of constraints\r\n---------------------------------\r\n\r\nNot supported (as with Flow):\r\n\r\n```typescript\r\ntype Foo = { type: \"FOO\", address: { type: \"FOO\" }, foo: string };\r\ntype Bar = { type: \"BAR\", address: { type: \"BAR\" }, bar: string };\r\ntype FooBar = Foo | Bar;\r\nfunction onType(x: FooBar): string {\r\n    return x.type === \"FOO\" ? x.foo : x.bar;  // works\r\n}\r\nfunction onAddressType(x: FooBar): string {\r\n    return x.address.type === \"FOO\" ? x.foo : x.bar;  // error\r\n}\r\n```\r\n\r\nTypeScript better than Flow\r\n===========================\r\n\r\nChecked downcasts\r\n-----------------\r\n\r\nSupported via `as`:\r\n\r\n```typescript\r\nconst x: number = 3;\r\nconst a: 3 = x;  // fails, as expected\r\nconst b: 3 = x as 3;  // works!\r\nconst c: string = a as string;  // fails! 'number' not subtype of 'string'\r\n```\r\n\r\nTypeScript worse than Flow\r\n==========================\r\n\r\nNominal types\r\n-------------\r\n\r\nExplicitly opaque types are not supported, and furthermore classes are\r\ntreated as structural:\r\n\r\n```typescript\r\nclass FileSystem {\r\n    close(fd: number): boolean {\r\n        console.log(\"Closing file...\");\r\n        return true;  // success!\r\n    }\r\n}\r\n\r\nclass ApproximateNumber {\r\n    close(x: number): boolean {\r\n        const closeEnough = Math.abs(x) < 1e-6;\r\n        return closeEnough;\r\n    }\r\n}\r\n\r\nfunction closeStdout(fs: FileSystem) {\r\n    fs.close(1);\r\n}\r\n\r\ndeclare const z: ApproximateNumber;\r\ncloseStdout(z);  // no error! bad! :o\r\n```\r\n\r\nRead-only arrays\r\n----------------\r\n\r\nThere’s a generic `Readonly` type, but it doesn’t seem to be very\r\nuseful:\r\n\r\n```typescript\r\ndeclare let x: Readonly<number>;\r\nx++;  // no error!\r\n\r\ndeclare const xs: Readonly<number[]>;\r\nxs[0] = 3;  // error\r\nxs.push(3);  // no error!\r\nxs.reverse();  // no error!\r\n```\r\n\r\nVariance\r\n--------\r\n\r\nVariance annotations not supported. Apparently, all generic types are\r\ntreated as bivariant, which is completely broken:\r\n\r\n```typescript\r\ndeclare class Container<T> {\r\n    put(t: T): void;\r\n    getAll(): T[];\r\n};\r\n\r\nclass Animal {\r\n    speak() {\r\n        console.log(\"hello\");\r\n    }\r\n}\r\nclass Dog extends Animal {\r\n    speak() {\r\n        console.log(\"woof\");\r\n    }\r\n    shout() {\r\n        console.log(\"arf arf arf\");\r\n    }\r\n}\r\n\r\ndeclare function f(x: Container<Animal>): void;\r\n\r\ndeclare const animals: Container<Animal>;\r\ndeclare const dogs: Container<Dog>;\r\ndeclare const strings: Container<string>;\r\n\r\nf(animals);  // works (good)\r\nf(dogs);     // works!!! :o (very bad)\r\nf(strings);  // fails (good)\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000421\u0000400451185\u0000":{"address":{"type":"COMMENT","id":"400451185","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/421#issuecomment-400451185","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Honestly, the bivariant generics are pretty much enough to convince me\r\nthat the type system is strictly worse. The lack of read-only arrays\r\ncould be a problem, too.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000421\u0000400458874\u0000":{"address":{"type":"COMMENT","id":"400458874","parent":{"type":"ISSUE","number":"421","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/421#issuecomment-400458874","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Cool, my prior was that we should only invest the effort switching from Flow to TypeScript if we would see really big benefits in the quality of the typesystem. Your preliminary analysis is conclusive that that won't be the case, so let's close out this investigation. Thanks for digging into it!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000432\u0000401145640\u0000":{"address":{"type":"COMMENT","id":"401145640","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/432#issuecomment-401145640","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Regarding softbreaks: as far as I can tell, the GitHub markdown renderer\r\nis not actually a conformant implementation of GitHub Flavored Markdown.\r\nThe [GFM spec for soft line breaks][GFM-slb] has the same contents as\r\nthe [CommonMark spec for soft line breaks][CM-slb]; both say: \r\n\r\n> A regular line break (not in a code span or HTML tag) that is not\r\n> preceded by two or more spaces or a backslash is parsed as a\r\n> **softbreak**. (A softbreak may be rendered in HTML either as a line\r\n> ending or as a space. The result will be the same in browsers. In the\r\n> examples here, a line ending will be used.)\r\n\r\nwhere “line ending” is defined (identically) in both specs:\r\n\r\n> A line ending is a newline (`U+000A`), a carriage return (`U+000D`)\r\n> not followed by a newline, or a carriage return and a following\r\n> newline.\r\n\r\n[GFM-slb]: https://github.github.com/gfm/#soft-line-breaks\r\n[CM-slb]: https://spec.commonmark.org/0.28/#soft-line-breaks\r\n\r\nGitHub’s markdown renderer renders a softbreak as a `<br />` elemnent,\r\nwhich is neither a line ending nor a space (and, consequently, GitHub\r\nrenders all my Markdown incorrectly).\r\n\r\nIn the implementation of this commit, I will follow the behavior of the\r\nCommonMark spec.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000432\u0000402266990\u0000":{"address":{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/432#issuecomment-402266990","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As of #480, we have rudimentary Markdown parsing: notably, we now\r\nproperly ignore code blocks (fixing some false positives) and properly\r\ninterpret softbreaks as spaces (fixing some false negatives).\r\n\r\nThe next step is to properly handle links. In the current system (as of\r\n#480), link destinations are ignored entirely, and link text is treated\r\nas normal text. I chose this design because it is simple to understand\r\nand implement, and I preferred to get a simple version of Markdown\r\nworking rather than turn on a complicated system from scratch. Now that\r\nwe have a simple system, we can improve it to handle links better.\r\n\r\nBelow I describe how we might approach such a change. I note upfront\r\nthat improving the reference parsing to properly handle links is\r\nprobably not at the top of our current priorities, so I’m happy to defer\r\nthis discussion and/or implementation to another time.\r\n\r\n## Common URL templates\r\n\r\nTo understand the situation, we should take a look at some sample\r\ninputs, their GitHub-rendered output, and their CommonMark AST.\r\n\r\n### Template: raw URL\r\n\r\nExample:\r\n\r\n```markdown\r\nConsider visiting https://example.com/ for great good.\r\n```\r\n\r\nGitHub renders the inline URL as a link, per the [extension to autolinks\r\ndefined in the GitHub Flavored Markdown spec][gfm-autolink-ext].\r\n\r\n[gfm-autolink-ext]: https://github.github.com/gfm/#autolinks-extension-\r\n\r\nThe base CommonMark spec does not classify raw URLs as links.\r\nCorrespondingly, the [AST for a raw URL][ast-raw] has only a `text`\r\nnode.\r\n\r\n[ast-raw]: https://spec.commonmark.org/dingus/?text=Consider%20visiting%20https%3A%2F%2Fexample.com%2F%20for%20great%20good.%0A\r\n\r\n### Template: autolinked URL\r\n\r\nExample:\r\n\r\n```markdown\r\nConsider visiting <https://example.com/> for great good.\r\n```\r\n\r\nGitHub and [CommonMark][ast-autolink] both render this as a URL with\r\nanchor text the same as the destination. That is, the URL appears twice\r\nin the AST: once as the `destination` attribute of the link, and once as\r\nraw text in its body.\r\n\r\n[ast-autolink]: https://spec.commonmark.org/dingus/?text=Consider%20visiting%20%3Chttps%3A%2F%2Fexample.com%2F%3E%20for%20great%20good.%0A\r\n\r\n### Template: link reference\r\n\r\nExample:\r\n\r\n```markdown\r\nConsider visiting [this website][1] for great good.\r\n\r\n[1]: https://example.com/\r\n```\r\n\r\nGitHub and [CommonMark][ast-reference] both render this as a URL with\r\nthe expected semantics. In particular, the URL appears only once in the\r\nAST: in the `destination` attribute of the link.\r\n\r\n[ast-reference]: https://spec.commonmark.org/dingus/?text=Consider%20visiting%20%5Bthis%20website%5D%5B1%5D%20for%20great%20good.%0A%0A%5B1%5D%3A%20https%3A%2F%2Fexample.com%2F%0A\r\n\r\n### Template: repeated link reference\r\n\r\nExample:\r\n\r\n```markdown\r\nConsider [visiting][1] this [website][1] for great good.\r\n\r\n[1]: https://example.com/\r\n```\r\n\r\nGitHub and [CommonMark][ast-repeated] both render this as URLs with\r\nthe expected semantics. In particular, the URL appears twice in the AST:\r\nonce in the `destination` attribute of each link.\r\n\r\n[ast-repeated]: https://spec.commonmark.org/dingus/?text=Consider%20%5Bvisiting%5D%5B1%5D%20this%20%5Bwebsite%5D%5B1%5D%20for%20great%20good.%0A%0A%5B1%5D%3A%20https%3A%2F%2Fexample.com%2F%0A\r\n\r\n## Analysis\r\n\r\nThe current system, as of #480, detects both raw URLs and autolinked\r\nURLs exactly once each, because the URL appears exactly once in the\r\ntext. But it does not detect explicit links, because the URL does not\r\nappear in the text. This is a problem worth fixing.\r\n\r\n## Proposal\r\n\r\nConsider the following modifications to the current system:\r\n\r\n  - Modify the spec of `deformat` such that it does not collapse link\r\n    text into the surrounding context.\r\n\r\n  - Modify the spec of `textBlocks` such that it returns not `string[]`\r\n    but `TextBlock[]`, where `TextBlock` is a discriminated union:\r\n\r\n    ```js\r\n    type TextBlock =\r\n      | {|+type: \"TEXT\", +value: string|}\r\n      | {|+type: \"LINK_DESTINATION\", +value: string|};\r\n    ```\r\n\r\n    When processing a link, the new `textBlocks` would ignore the link\r\n    text entirely, emitting only a `LINK_DESTINATION` block.\r\n\r\n  - Modify `parseReferences` such that it processes the blocks as\r\n    follows:\r\n      - For `TEXT` blocks, all types of references (including URL\r\n        references) are parsed.\r\n      - For `LINK_DESTINATION` blocks, only URL references are parsed.\r\n\r\nHere are some effects of the resulting system:\r\n\r\n  - Raw URLs are still parsed, because the URL will appear in a text\r\n    block and be parsed accordingly.\r\n  - Autolinked URLs are still parsed (exactly once), due to the link\r\n    destination.\r\n  - Explicit links are now parsed once per occurrence. For instance, in\r\n    the “repeated link reference” example above, two references to\r\n    `https://example.com/` will be identified. I believe that this is\r\n    the correct behavior: the body does, in fact, have two references.\r\n    (Downstream clients can of course deduplicate this if they choose.)\r\n  - In a link like `[see #32 and #33](https://example.com/)`, the issue\r\n    references `#32` and `#33` are no longer parsed. I tentatively\r\n    believe that this is a good thing—it is strange that a link should\r\n    be said to refer to things other than its destination—but I am\r\n    willing to be convinced otherwise.\r\n  - In a link like `[@decentralion](https://github.com/decentralion)`,\r\n    we only detect one username reference (by URL, not by `@`-handle).\r\n    I tentatively believe that this is a good thing: semantically, there\r\n    is only one reference.\r\n  - In `[Paired with @decentralion](https://github.com/decentralion)`,\r\n    we detect a URL-based username reference, but not a paired-with\r\n    reference. Similarly, in `[Paired][1] with @decentralion`, we do not\r\n    detect a paired-with reference.\r\n\r\nAll consequences except for the last one seem positive to me. The last\r\none is probably a bad thing. However, I don’t see a semantics that\r\noffers strictly better behavior on all cases. For instance, we could\r\nproperly detect this paired-with reference by parsing all references\r\ninside `LINK_DESTINATION` blocks, but this causes many other cases to\r\nmisbehave: e.g., autolinks generate multiple references.\r\n\r\nI think that I’d like to accept the imperfection due to the last point\r\nand switch to this system: the benefit of parsing `[explicit links][1]`\r\noutweighs, in my mind, the false negatives in the cases where we\r\nactually want to have multiple overlapping references.\r\n\r\ncc @decentralion; thoughts appreciated.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000433\u0000401439238\u0000":{"address":{"type":"COMMENT","id":"401439238","parent":{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/433#issuecomment-401439238","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed by #445"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000465\u0000401709755\u0000":{"address":{"type":"COMMENT","id":"401709755","parent":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/465#issuecomment-401709755","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"What follows are some late-night thoughts, based on having taken a stab at writing a `PluginAdapterCollection` class. \r\n\r\nI notice there's some redundancy between `plugins` and `types`:\r\n- They both have names\r\n- They both have prefixes\r\n- While only the `plugin` has a `nodeDescription` method, internally that method effectively delegates to the types (switch over type).\r\n\r\nWhat if we unify them into a shared recursive abstraction: (note: I'm writing only for nodes, but assume there will be corresponding types for edges too)\r\n\r\n```js\r\ntype NodeType = {|\r\n  +name: string,\r\n  +prefix: NodeAddressT,\r\n  +description: (NodeAddressT) => string,\r\n  +render: (NodeAddressT) => React.Component,\r\n  +weight: (NodeAddressT) => NodeWeight,\r\n|}\r\n\r\ninterface PluginAdapter {|\r\n  +name: string,\r\n  +edgeTypes: EdgeType[],\r\n  +nodeTypes: NodeType[],\r\n  +graph: () => Graph,\r\n|}\r\n```\r\n\r\nThere can also be a `BaseNodeType`:\r\n```js\r\nconst baseNodeType = {\r\nname: \"[base type]\",\r\nprefix: NodeAddress.empty,\r\ndescription: (n) => NodeAddress.toString(n),\r\n...\r\n```\r\n\r\nThen, when finding the right method for a given node address, we choose the most specific Type available (and the presence of the BaseNodeType ensures that we always find a type). It is illegal to have multiple types with the exact same prefix. \r\n\r\nAs written, the types have all kinds of stuff attached (render, weight, etc), but clearly we should factor that out. The core type abstraction should probably just have a name and a prefix and description function (for error messages, etc). And we should find a way to have interfaces for extending the Type concept with additional requirements, e.g. adding the react-based render method.\r\n\r\nThe advantage over this compared to the current approach is it allows \"plugins\" and \"sub-plugins\" and \"sub-sub-plugins\" rather than forcing all extensibility to occur at the base level of the tree.\r\n\r\n@wchargin what do you think?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000465\u0000401955224\u0000":{"address":{"type":"COMMENT","id":"401955224","parent":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/465#issuecomment-401955224","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool; I like this. I was going to take a stab at implementing this, but\r\nit sounds like you have a lot of context/prior work on it, so I’ll hold\r\noff on doing so.\r\n\r\n> They both have names\r\n\r\nNote that names of plugins could _arguably_ be required to be unique\r\n(though I wouldn’t be thrilled about this), but names of types are\r\ndefinitely not unique. Concepts of “user”, “issue”, “comment” will be\r\nshared across lots of plugins. (No change required.)\r\n\r\n> What if we unify them into a shared recursive abstraction\r\n\r\nI don’t see how the abstraction that you propose is recursive. What do\r\nyou mean by that?\r\n\r\n> Then, when finding the right method for a given node address, we choose the most specific Type available (and the presence of the BaseNodeType ensures that we always find a type).\r\n\r\nI like the idea of having the base node type being a “fallback” on the\r\nsame level of everything else.\r\n\r\n> It is illegal to have multiple types with the exact same prefix.\r\n\r\nYes, agreed. Perhaps we should also require that if `t1` is a child type\r\nof `t0` (e.g., `t1` is a node type and `t0` is a plugin), then the\r\nprefix of `t0` is a prefix of the prefix of `t1`. (That is, the function\r\nfrom node types to node prefixes is a poset homomorphism.) Then, it is\r\npossible to ensure that all types have distinct prefixes by reasoning\r\nlocally: you only have to consider your siblings, not all other types at\r\nall levels, and in particular it will be valid to combine any set of\r\nplugins as long as their _top-level_ prefixes are pairwise disjoint.\r\n\r\n> `type NodeType`\r\n\r\nMultiple functions of the `NodeType` (`render`, `weight`, at least) will\r\nneed to take more context than just a single node address—the graph, at\r\nthe very least, plus maybe some additional context (e.g., the GitHub\r\nplugin’s relational view). But it sounds like you’re suggesting that the\r\nnode types be constants, as opposed to (e.g.) “creating” the GitHub node\r\ntypes for a particular repository owner and name, receiving a\r\n`Promise<NodeType[]>` in return. How is this resolved?\r\n\r\n> As written, the types have all kinds of stuff attached (render,\r\n> weight, etc), but clearly we should factor that out.\r\n\r\nAgreed, though I’m willing to do this as needed.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000402062153\u0000":{"address":{"type":"COMMENT","id":"402062153","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/476#issuecomment-402062153","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Here's a proposal on weight function semantics.\r\n\r\nLet a weight function map from a subset of nodes in the graph to real numbers,\r\nwhere for each node `n`, `W(n)` represents the logarithm of the relative\r\nsignificance of that node. For example, suppose we have a graph with the\r\nfollowing nodes:\r\n\r\n- `r`: SourceCred repository\r\n- `p1`, `p2`: pull requests\r\n- `i1`: an issue\r\n- `c1`, `c2`, `c3`, `c4`: commits\r\n\r\nOne example of a weight function is `w`, a prior over node types, defined as\r\nfollows. (I use base two logarithms due to personal preference.)\r\n\r\n```\r\nw(r) = 1\r\nw(p1, p2) = 0\r\nw(i1) = -1\r\nw(c1, c2, c3, c4) = -2\r\n```\r\n\r\nThis expreses that repositories are twice as important as pulls, which are\r\ntwice as important as issues, which are twice as important as commits.\r\nObviously, this is equivalent to another weight function, `w'`, defined as\r\nfollows:\r\n\r\n```\r\nw'(r) = 0\r\nw'(p1, p2) = -1\r\nw'(i1) = -2\r\nw'(c1, c2, c3, c4) = -3\r\n```\r\n\r\nWithin this equivalence class, let's consider \"canonical\" the weight function\r\nwhich sums to 0, which in this case is \r\n\r\n```\r\nw_c(r) = 2\r\nw_c(p1, p2) = 1\r\nw_c(i1) =  0\r\nw_c(c1, c2, c3, c4) = -1\r\n```\r\n\r\nNow let's consider another weight function, this time defined only over the pull requests.\r\nPerhaps it is counting the lines of code, so we can call it `loc`.\r\n\r\n```\r\nloc(p1) = 1\r\nloc(p2) = 0\r\n```\r\n\r\nThis expresses that p1 is twice as important as p2. However, it is not\r\nmeaningfully defined over all of the nodes in the graph. It might seem natural\r\nto pad the remaining entries with zero, but this makes equivalent relative\r\nweightings of pulls no longer equivalent in how they modify the whole graph.\r\nConsider the functions `loc'` and `loc''`\r\n\r\n```\r\n\r\nloc'(p1) = 1\r\nloc'(p2) = 0\r\nloc'(r, i1, c1, c2, c3, c4) = 0\r\n\r\n\r\nloc''(p1) = 0\r\nloc''(p2) = -1\r\nloc''(r1, i1, c1, c2, c3, c4) = 0\r\n```\r\n\r\nEven though `loc'` and `loc''` are expressing the same relative weightings\r\nbetween pull requests, `loc'` also shifts overall weight in the graph towards\r\npull requests in general, while `loc''` shifts overall weight in the graph away\r\nfrom pull requests. This is an unwanted side effect. Therefore, I think it\r\nmakes more sense for weighting functions only to be defined for the subset of\r\nnodes that they explicitly compare. We can then define a function\r\n`normalize` which turns the weighting into a canonical weight distribution via\r\nthe following procedure:\r\n\r\n```javascript\r\ntype LogWeight = number;\r\n// Not guaranteed to have every node in the graph. Not normalized\r\ntype Weighting = Map<NodeAddressT, LogWeight>;\r\n\r\n// Guaranteed to have every node in the graph, and is normalized.\r\ntype NormalizedWeighting = Map<NodeAddressT, LogWeight>;\r\n\r\nnormalize(graph: Graph, weighting: Weighting): NormalizedWeighting\r\n  let totalWeight = 0;\r\n  let numWeights = 0;\r\n  for (const weight of weighting.values()) {\r\n    totalWeight += weight;\r\n    numWeights++;\r\n  }\r\n  const normalizer = totalWeight / numWeights;\r\n  const normWeighting: NormalizedWeighting = new Map();\r\n  for (const node of graph.nodes()) {\r\n    const w = weighting.get(node);\r\n    normWeighting.set(node, w == null ? 0 : w - normalizer)\r\n  }\r\n  return normWeighting;\r\n```\r\n\r\nThis has the advantage that it makes it easy to specify relative comparisons between\r\ndifferent nodestypes in easy-to-grok units (a is 2x as important as b), without accidentally\r\nshifting the distribution over nodes that are out of scope for that weighting.\r\n\r\nTo round things out, here are psuedocode implementations of the three types of\r\nweight functions described above.\r\n\r\n\r\n```javascript\r\n\r\n### Prior over types\r\n\r\nconst typeToWeight = {\r\n  GitHub.Repo: 5,\r\n  GitHub.User: 3,\r\n  GitHub.Pull: 2,\r\n  GitHub.Issue: 1,\r\n  GitHub.Review: 0,\r\n  GitHub.Comment: -1,\r\n  Git.Commit: 0,\r\n  Git.Tree: -4,\r\n  Git.Blob: -5,\r\n  Git.TreeEntry: -5,\r\n}\r\n\r\nconst typeWeight = (n: NodeAddressT) => {\r\n  return typeToWeight[getType(n)]\r\n}\r\n\r\n### Domain specific comparison\r\n\r\nconst locWeight = (n: NodeAddressT) => {\r\n  if (getType(n) === GitHub.Pull) {\r\n    const pull = githubRelationalView.get(n);\r\n    const weight = Math.log(pull.additions() + pull.deletions);\r\n    return weight;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n### Subproject comparison\r\n\r\nconst canonicalBackendNodes = new Set([\r\n  // list of nodes, as voted on by users or created via TCR or \r\n  // some other mechanism\r\n])\r\n\r\nconst backendWeight = (n: NodeAddressT) => {\r\n  if (canonicalBackendNodes.has(n)) {\r\n  if (canonicalBackendNodes.has(n)) {\r\n    return 4; // tunable parameter\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n```\r\n\r\ncc @wchargin "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000402553689\u0000":{"address":{"type":"COMMENT","id":"402553689","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/476#issuecomment-402553689","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We like the idea of log-space priors, because it’s a natural space in\r\nwhich to think. But the semantics for composing them as described above\r\ndon’t have the properties that we want.\r\n\r\nFirst, let’s make the above semantics a bit more precise. Assume that we\r\nonly consider finite, inhabited types. Then:\r\n\r\n  - A `LogDist α` is a total map from `α` to `Real` whose image is\r\n    centered around `0`.\r\n\r\n  - A `Dist α` is a valid probability distribution on `α`, represented\r\n    as a function `f : α → NonnegativeReal` with the constraint that\r\n    `sum (values f) == 1`.\r\n\r\n  - We have `extend : ∀ α, β. (α <: β) ⇒ LogDist α → LogDist β`, defined by\r\n\r\n    ```\r\n    extend f (x : α) = f x\r\n    extend f _ = 0\r\n    ```\r\n\r\n  - We have `normalize : ∀ α. (α → NonnegativeReal) → Dist α` given by\r\n\r\n    ```\r\n    normalize f x = f x / total\r\n      where total = sum (values f)\r\n    ```\r\n\r\n  - We have `reify : ∀ α. LogDist α → Dist α` given by\r\n\r\n    ```\r\n    reify f = normalize (exp ∘ f)\r\n    ```\r\n\r\n  - We would like to define a notion of combination of log-distributions:\r\n\r\n    ```\r\n    (<>) : ∀ α. LogDist α → LogDist α → LogDist α\r\n    ```\r\n\r\n  - This operation should have at least the following property:\r\n\r\n    **Irrelevance.** If `f, g : LogDist α` and `x : α`, and `f x == 0`,\r\n    then `reify g x == reify (f <> g) x`.\r\n    \r\nFrom this formulation, there are a few things to note:\r\n\r\n  - The implementation of `(<>)` given simply by pointwise addition does\r\n    not satisfy the irrelevance property. It will be true that if\r\n    `f x == 0` then `g x == (f <> g) x`, but it need not be true that\r\n    `reify g x == reify (f <> g) x`, because the normalization factors\r\n    in `g` and `f <> g` are, in general, different.\r\n\r\n  - The `Dist` and `LogDist` functors are isomorphic, and in particular\r\n    the operator `(<>)` induces an operator `λ f. λ g. reify (f <> g)`\r\n    for combining non-log-space distributions. The problems are clearly\r\n    equivalent, and while it may be more convenient to work in one space\r\n    or the other, any fundamental problems must exist in both spaces.\r\n\r\n  - Although `(<>)` is a simple operation in log-space, it’s not clear\r\n    how to interpret this in distribution space. We can write down what\r\n    it does, but how, intuitively, is it actually transforming the\r\n    values? What is the interpretation?\r\n\r\n  - The `Dist` functor happens to be a very useful monad (in my opinion,\r\n    an underappreciated one), which already has a notion of combination\r\n    of distributions: `join : ∀ α. Dist (Dist α) → Dist α`. This\r\n    necessarily requires a prior over the distributions themselves. We\r\n    should keep this in mind while designing our semantics: if we\r\n    _don’t_ require a prior over these distributions (as in the API for\r\n    our `(<>)` above), then what are we doing? Are we assuming a uniform\r\n    prior? Is that a good thing?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000402576435\u0000":{"address":{"type":"COMMENT","id":"402576435","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/476#issuecomment-402576435","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Suppose that we have a row-stochastic weighted adjacency matrix `M`, and\r\na weighting vector `w`, and let `W = diag(w)` as above. The above post\r\nsuggests setting `M′ = W M W`. The result of this is that an edge from\r\n`u` to `v` with change weight from `t` to `t w(u) w(v)`. The resulting\r\n`M′` is not row-stochastic, so we have to re-normalize it, and at that\r\npoint the factor `w(u)` in its definition (i.e., the left-multiplication\r\nby `W`) cancels out.\r\n\r\nSo, instead, we may simply define `M′ = row-normalize(M · diag(w))`.\r\n\r\nIt is useful to reiterate that this is equivalent to multiplying each\r\nedge’s weight by `w(v)`, where `v` is the destination of the edge.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000481\u0000402268298\u0000":{"address":{"type":"COMMENT","id":"402268298","parent":{"type":"ISSUE","number":"481","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/481#issuecomment-402268298","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Agreed on all counts.\r\n\r\nHaving a \"contributions welcome\" label seems useful, so I'm going to create it and apply it here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000483\u0000402935463\u0000":{"address":{"type":"COMMENT","id":"402935463","parent":{"type":"ISSUE","number":"483","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/483#issuecomment-402935463","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"@decentralion notes that we need to pull not just the labels on an\r\nissue, but who applied these labels. Indeed, we probably want to pull\r\nthe whole labeling history. This `timeline` connection for issues and\r\npull requests exposes the appropriate data.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000403172147\u0000":{"address":{"type":"COMMENT","id":"403172147","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/498#issuecomment-403172147","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In the long run, I’d like to keep the power user in mind. Lists are\r\nsometimes much less convenient than text entry fields when you already\r\nknow what you want to enter. Something like a fuzzy-finder might get the\r\nbest of all worlds.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000403173148\u0000":{"address":{"type":"COMMENT","id":"403173148","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/498#issuecomment-403173148","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In the long run, we're ~~all dead[1]~~ gonna completely regenerate the UI\r\n\r\n[1]: https://en.wikiquote.org/wiki/John_Maynard_Keynes\r\n\r\nIn the medium term, I think it's likely that individual projects will host their own cred explorers on their own domain (possibly GitHub pages). This way the data can all be available and relatively fresh, all of the right plugins are already loaded, etc. I expect most end users will access SourceCred via those hosted explorers. Then, there won't be a case where power users are rapidly putting lots of different repos into the cred explorer UI, since it's already scoped to a particular project/organization."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000403173261\u0000":{"address":{"type":"COMMENT","id":"403173261","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/498#issuecomment-403173261","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed. A list is probably fine with me for now."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000408519328\u0000":{"address":{"type":"COMMENT","id":"408519328","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/498#issuecomment-408519328","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Closed by #529."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000403173464\u0000":{"address":{"type":"COMMENT","id":"403173464","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/499#issuecomment-403173464","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> it shouldn't require much modification of our code\r\n\r\nYes, but I would like to do some performance analysis before we set up\r\nanything hosted. I suspect that we can go a fair bit faster than we do\r\nnow, in terms of both raw speed and perceived speed.\r\n\r\n> We should build good infrastructure for setting up and updating the\r\n> demo instance, as it is likely that this pipeline will be a good fit\r\n> for other projects that want to easily setup their own SourceCred\r\n> instance using GitHub pages.\r\n\r\nGood point. Agreed.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000403175494\u0000":{"address":{"type":"COMMENT","id":"403175494","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/499#issuecomment-403175494","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Back when I was setting up TensorBoard, I really wanted a web demo, and\nthis was actually a feature at launch: navigating to\ntensorflow.org/tensorboard would display a fully functional TensorBoard\nfrontend with some MNIST data.\n\nHowever, the implementation was high maintenance and, worse yet, untested.\nIt kept breaking and eventually we just turned it off.\n\nThis time, we’ll do better!\n\nOn Fri, Jul 6, 2018 at 5:03 PM William Chargin <notifications@github.com>\nwrote:\n\n> it shouldn't require much modification of our code\n>\n> Yes, but I would like to do some performance analysis before we set up\n> anything hosted. I suspect that we can go a fair bit faster than we do\n> now, in terms of both raw speed and perceived speed.\n>\n> We should build good infrastructure for setting up and updating the\n> demo instance, as it is likely that this pipeline will be a good fit\n> for other projects that want to easily setup their own SourceCred\n> instance using GitHub pages.\n>\n> Good point. Agreed.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sourcecred/sourcecred/issues/499#issuecomment-403173464>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABVc1x7_IX7s8UFY2vJxnFZffSKCF1aXks5uD_q2gaJpZM4VGIRY>\n> .\n>\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000403188735\u0000":{"address":{"type":"COMMENT","id":"403188735","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/499#issuecomment-403188735","authors":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"body":"Summarizing an offline discussion:\r\n- We agree that setting this up should not be hard, and that we would like to do this soon.\r\n- We'll host it on GitHub pages, and can use [travis to deploy]. \r\n- We'll make it publicly available from sourcecred.io, maybe sourcecred.io/prototype\r\n- We'll automatically update it every day, both so that new contributors can quickly get visible cred, and so that we can spot breakages early. \r\n- we could use GitHub webhooks to try to update it more frequently, but think this is unnecessary right now\r\n\r\n[travis to deploy]: https://docs.travis-ci.com/user/deployment/pages/\r\n\r\npaired with @wchargin "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000408507999\u0000":{"address":{"type":"COMMENT","id":"408507999","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/499#issuecomment-408507999","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed, with thanks to @wchargin!\r\n\r\nhttps://sourcecred.github.io/explorer/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000534\u0000408313404\u0000":{"address":{"type":"COMMENT","id":"408313404","parent":{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/534#issuecomment-408313404","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It all started when I wanted to add a progress bar to the PageRank\r\ntable’s computation. Adding a progress bar is nice because it enables us\r\nto use a stricter convergence threshold: we can ask users to wait longer\r\nif we give them a reasonable estimate of how much time is remaining,\r\ninstead of just indeterminately hanging the page.\r\n\r\nI had noticed previously that the “delta” parameter reported by PageRank\r\nappeared to converge linearly in log-space. We also, by construction,\r\nknow the target value of delta. Therefore, using the log-delta would be\r\na great option for a linear progress bar. From here on, we’ll define the\r\ntime-varying parameter “progress” to be the value `r` such that\r\n`log(delta) = lerp(r, log(1), log(targetDelta))`.\r\n\r\nBut this had surprising results. Here is a graph of progress over time\r\nfor the first 3.5 seconds of a run that ended up taking just over two\r\nminutes:\r\n\r\n![plot-1]\r\n\r\n[plot-1]: https://user-images.githubusercontent.com/4317806/43302056-3ecdb6e0-911d-11e8-8ca7-374f130cfb64.png\r\n\r\nFirst of all, the PageRank computation takes constant time per\r\nstep—there are no data-dependent control flow paths—so this isn’t due to\r\nsteps taking longer over time. (The data confirms this: elapsed time vs.\r\ncurrent step is completely linear).\r\n\r\nTaking a closer look reveals that the graph really is piecewise-linear,\r\nbut the slope has a big discontinuity after about 1260 ms.\r\n\r\nThis graph was not generated with the default (uniform) edge weights.\r\nIndeed, the base-2-log-space edge weights used were: AUTHORS: +3.8;\r\nMERGED_AS: –6.8, REFERENCES: +5.8; all others: 0.0. The result is that\r\nthe GitHub subgraph has lots of edges with very high and very low\r\ntransition probabilities.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000534\u0000408313431\u0000":{"address":{"type":"COMMENT","id":"408313431","parent":{"type":"ISSUE","number":"534","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/534#issuecomment-408313431","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Recall that the “delta” underlying the progress is `max(π – π′)`. This\r\nmeans that if most of the graph has converged, but tiny a subgraph is\r\ntaking a long time to converge, then the overall reported delta will\r\nstill be large.\r\n\r\nAfter resetting the weights to the default (uniform) weights, PageRank\r\nconverged in 779 steps, instead of 37820 steps with the skewed weights.\r\nThis suggested that some part of the graph, probably the GitHub graph,\r\nwas holding up the rest.\r\n\r\n[I instrumented SourceCred’s PageRank to dump the full `π - π′` vector\r\nat each iteration,][gist] dumping the results in JSON to a 6.3 GB log\r\nfile (1.4 GB after gzip). Then, I analyzed this with `jq` to track the\r\nproportion of the deltas that were exactly zero over time:\r\n\r\n```shell\r\nbuf | stdbuf -o0 jq '.deltas | (map(select(. == 0)) | length) / length' | nl\r\n```\r\n\r\n[gist]: https://gist.github.com/wchargin/b9aef6fcc1262d6bac66231ab3da272a\r\n\r\n(Here, `buf` is a shell alias that prints the raw log file.)\r\n\r\nPiping that through `sed -n '25~25p'` gives:\r\n\r\n```\r\n    25\t0\r\n    50\t0\r\n    75\t0.004107142857142857\r\n   100\t0.05607142857142857\r\n   125\t0.7590625\r\n   150\t0.8122321428571428\r\n   175\t0.8262946428571428\r\n   200\t0.8288392857142857\r\n   225\t0.8288392857142857\r\n[snip]\r\n   775\t0.8288392857142857\r\n   800\t0.8288392857142857\r\n   825\t0.8689732142857143\r\n   850\t0.8709821428571428\r\n   875\t0.8709821428571428\r\n[snip]\r\n 65525\t0.8709821428571428\r\n```\r\n\r\nThis supports the above hypothesis. Most of the nodes converge very\r\nquickly, and the rest take approximately forever to converge. Between\r\nstep 1000 and the final step 65536, the overall delta does decrease from\r\n1.32e-05 to 7.21e-07, so real progress is being made, but on a\r\nrestricted segment of the graph.\r\n\r\nThis suggests a potential optimization. On every step, we’re performing\r\na large number of multiplications, but only 13% of these multiplications\r\nactually have any effect. We could elect to only update those nodes\r\nwhose last delta was greater than a certain value (say, the convergence\r\nthreshold). Of course, we would have to re-evaluate all nodes every once\r\nin a while—changes to the distribution may cause those nodes that had\r\n“already converged” to now be slightly off.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000553\u0000409300378\u0000":{"address":{"type":"COMMENT","id":"409300378","parent":{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/553#issuecomment-409300378","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As of pull requests #562 through #570, I consider this issue resolved.\r\nThe main goal—unifying the dev and prod builds—has been achieved.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000561\u0000408990863\u0000":{"address":{"type":"COMMENT","id":"408990863","parent":{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/561#issuecomment-408990863","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I spent some time investigating Blueprint ([site], [GitHub]) and experimentally integrating it ([commit]). Here are some thoughts and impressions:\r\n\r\n[site]: http://blueprintjs.com/\r\n[GitHub]: https://github.com/palantir/blueprint\r\n[commit]: https://github.com/sourcecred/sourcecred/commit/f169e2a5de5f95899fd4068e277da65565b98f76\r\n\r\n- Blueprint \"is optimized for building complex data-dense interfaces for desktop applications\", which sounds nice\r\n- It seems relatively low on configurability - e.g. it doesn't support custom color themes. It seems to be UI toolkit for Palantir and Palantir's aesthetic first and foremost, which also happens to be open source\r\n- It adds 200KB (tripling size of the build)  and 5s to build time (15 vs 20)\r\n- It doesn't boast much mobile support\r\n- It does some weird things like restyle all of our links by default\r\n- The UI seems to have some weird bugs / unpolished edge cases (e.g. sliders always expand from 0 outward, rather than left to right, which looks weird on our sliders that start at -10; except if they are at the default  value, in which case they expand from left to right,  even if the default value is 0).\r\n\r\nOverall, I do not think we should use this library. I'll note that [blueprintjs/select] is an interesting and powerful component that can be depended on separately and might be worth including in the future.\r\n\r\n[blueprintjs/select]: http://blueprintjs.com/docs/#select\r\n\r\n![image](https://user-images.githubusercontent.com/1400023/43420116-b9dfcf26-93f7-11e8-8f46-c94b4ed2a2fe.png)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000561\u0000409043102\u0000":{"address":{"type":"COMMENT","id":"409043102","parent":{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/561#issuecomment-409043102","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ok, I spent some time trying out [Material UI](https://material-ui.com/). First, the build impact:\r\n```\r\n  183.35 KB (+80.48 KB)  build/static/js/ssr.373ad492.js\r\n  177.9 KB (+51.02 KB)   build/static/js/main.d370d61b.js\r\n+5s build time\r\n```\r\n\r\nYou can find the code at https://github.com/sourcecred/sourcecred/tree/material-ui-experiment\r\n\r\nMy notes:\r\n- Material UI wants to make buttons huge, and it's a pain to get them smaller\r\n- The API is poorly documented, and making simple changes requires sleuthing\r\n- Components look pretty good out of the box, except they often take up too much space (e.g. look at the select in the image below)\r\n- The ripples and highlights are annoying\r\n- There seems to be good support for color theming \r\n\r\nOverall, I'm not super enthused about using material-ui, since it seems like a lot of the \"features\" like making things take a lot of space and adding ripples to everything are actually non-features for my taste.\r\n\r\n![image](https://user-images.githubusercontent.com/1400023/43428191-ee8ed43c-9411-11e8-9817-12bd6ab467b9.png)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000586\u0000410047670\u0000":{"address":{"type":"COMMENT","id":"410047670","parent":{"type":"ISSUE","number":"586","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/586#issuecomment-410047670","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"A bit of nuance to consider: if I push the explore button, and then switch repo before the loadGraph finishes, the loadGraph promise will fail to apply (due to state change) and runPagerank should not get triggered. This  might require changing the return signature of loadGraph so that it returns a boolean, which is whether the loadGraph was successfully applied.\r\n\r\nAlso, if implemented naively the `loading` state will briefly toggle between `LOADING` to `NOT_LOADING` when `loadGraph` is successful, and then swap back to `LOADING` as soon as `runPagerank` triggers. We may want to test that it doesn't do this, as it could cause some spurious UI flickering."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000589\u0000410049757\u0000":{"address":{"type":"COMMENT","id":"410049757","parent":{"type":"ISSUE","number":"589","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/589#issuecomment-410049757","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also, once we do this we should change the node descriptions for every node that specifies a type as part of the description - e.g. comments always are described as \"Comment on ....\". I think for comments, it might be more interesting to include the first ~50 characters of the comment rather than information about what it's connected to - that info is already discoverable via the graph anyway."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000594\u0000410068117\u0000":{"address":{"type":"COMMENT","id":"410068117","parent":{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/594#issuecomment-410068117","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The script relies on GNU `grep`, which provides `-z`. POSIX `grep` is a\r\nbit anemic in its supported options.\r\n\r\nI’d be fine with documenting that GNU `grep` is a requirement. macOS\r\nusers can use `brew install grep --with-default-names` or something to\r\nfix up their environments. From reading the BSD/macOS `grep` manual,\r\nit’s not clear how we can implement the desired functionality safely\r\nusing the provided options.\r\n\r\nIf people are really against this, then I can probably rework the script\r\nto use POSIX `awk` instead of GNU `grep`. :-) At a glance, it looks like\r\n\r\n```shell\r\nawk -v RS='\\0' -v ORS='\\0' '! /^flow-typed/'\r\n```\r\n\r\nshould do it.\r\n\r\nThe silent failure can be fixed by adding `set -o pipefail` to the\r\nscript.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000594\u0000410068494\u0000":{"address":{"type":"COMMENT","id":"410068494","parent":{"type":"ISSUE","number":"594","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/issues/594#issuecomment-410068494","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let me amend my position to: I am happy to rework the script to use\r\nPOSIX `awk`, but if scenarios like this come up in the future where\r\nthere isn’t such an easy change, then I would prefer requiring GNU grep\r\nover choosing something like `tr '\\0' '\\n'`, which sacrifices safety.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00001\u0000362935059\u0000":{"address":{"type":"COMMENT","id":"362935059","parent":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/1#issuecomment-362935059","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Cool, thanks for the suggestion."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u00001\u000093852769\u0000165852057\u0000":{"address":{"type":"COMMENT","id":"165852057","parent":{"type":"REVIEW","id":"93852769","pull":{"type":"PULL","number":"1","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/1#discussion_r165852057","authors":[{"type":"USERLIKE","login":"AChildAtPlay"}],"body":"Perhaps switch these two sentences? something like: \r\nWe want to reward open-source developers for their work, because the world benefits tremendously from open-source, and if its developers were fairly rewarded, it would benefit so much more. To that end, we want to build tools for fairly distributing Cred to contributors, as well as incentives that act as rewards for having Cred. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00003\u0000362999588\u0000":{"address":{"type":"COMMENT","id":"362999588","parent":{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/3#issuecomment-362999588","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Actually, when describing the concept of cred in general, I think it's better to use lowercase c rather than 'Cred' or 'Ͼred'. Closing this PR."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00004\u0000363009716\u0000":{"address":{"type":"COMMENT","id":"363009716","parent":{"type":"PULL","number":"4","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/4#issuecomment-363009716","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Actually, going to keep the README simple and move the overview into its own document."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000364720789\u0000":{"address":{"type":"COMMENT","id":"364720789","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/8#issuecomment-364720789","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The rendered notebook apparently doesn't appear in the diff, but does appear here:\r\n\r\nhttps://github.com/sourcecred/sourcecred/blob/5f3db643b172c963557e3cbf2c313dc95ae0f3d3/experiments/01_commit_graph_dump.ipynb"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000364852141\u0000":{"address":{"type":"COMMENT","id":"364852141","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/8#issuecomment-364852141","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"x-ref from https://github.com/sourcecred/sourcecred/pull/10, it looks like the script is incorrectly recording rename paths as file paths."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000366018915\u0000":{"address":{"type":"COMMENT","id":"366018915","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/8#issuecomment-366018915","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"That makes sense, given that we didn't put any logic to follow the chain of renames. I'll revise and resubmit."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000366105260\u0000":{"address":{"type":"COMMENT","id":"366105260","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/8#issuecomment-366105260","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Looks like the underlying GitPython library is doing something dumb with the renames - rather than having an explicit field in the FileStats object, it just makes the file name into \"(?prefix/){old => new}(?/suffix)\".\r\nSince this notebook is marked as an experimental tool, let's check it in for now, and compensate by skipping renames in the demo frontend. We'll worry about doing the right thing in v0 of the production code."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00009\u0000364823581\u0000":{"address":{"type":"COMMENT","id":"364823581","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/9#issuecomment-364823581","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool; ping me when you want me to take a look!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00009\u0000364848295\u0000":{"address":{"type":"COMMENT","id":"364848295","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/9#issuecomment-364848295","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Meh, I'm starting to feel discouraged re: using Typescript. \r\n\r\nCurrently I'm blocked on importing json, our `import data from './commits.json'` oneliner works with react-scripts but not react-scripts-ts. I'm not sure what's wrong (or even where the error is being thrown from?) - webpack >=2.0 has default support for json so maybe it's the Typescript compiler complaining. One thing I'm noticing is that react-scripts-ts just has a much lower level of polish than react-scripts (which makes sense as its 3rd party to fb). The default config is also really, really noisy and it has some bad usability e.g. blocks compilation on lint errors.\r\n\r\n\r\n## Pros/Cons of Typescript:\r\n\r\n### Pros: \r\nThe typing in commits.ts is pretty nice. Files like that are where I like static typing. On the other hand, ts didn't let me define a recursive data type :(\r\n\r\nWriting explicit types for every Props and State is pretty nice. \r\n\r\n### Cons:\r\nForces us to pay maintenance cost upfront, rather than once we know what code we're gonna keep.\r\n\r\nForces us to deal with typescript in areas where it doesn't actually provide much lift (its awful when you are just touching html stuff)\r\n\r\nSignificant build and dependency complexity, also \"off the beaten path\" of great tooling provided by fb\r\n\r\n### Alternatives:\r\nyou mentioned react proptypes in email, these actually look better for component boundary typing, as they do runtime checking and therefore can even do things like verify enum values\r\n\r\nwe could use Flow for files like commit.ts where static typing is a big help\r\n\r\n### conclusion\r\nLet's ditch Typescript like you suggested. If you wanna do the honors, feel free to take a lock via comment on this PR\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00009\u0000364848905\u0000":{"address":{"type":"COMMENT","id":"364848905","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/9#issuecomment-364848905","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Deprecated in favor of https://github.com/sourcecred/sourcecred/pull/10"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000364851776\u0000":{"address":{"type":"COMMENT","id":"364851776","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-364851776","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin If you try to load the app as present here, it errors out at runtime. It seems that the data.json file we've been using has garbage data in the commits. To illustrate, load `src/data.json` as `j` in Python and examine the following path:\r\n\r\n```\r\n j['commits']['2a7148008e5d5caf91dcddf67eb3a69a602c87ae']['stats'].keys()[:10]\r\n\r\n[\r\nu'{components => tensorboard/components}/tf_dashboard_common/reload-behavior.ts', \r\nu'{plugins => tensorboard/plugins}/base_plugin.py', \r\nu'{backend => tensorboard/backend}/http_util_test.py', \r\nu'{components => tensorboard/components}/tf_graph_info/tf-graph-icon.html', \r\nu'{components => tensorboard/components}/tf_storage/BUILD', \r\nu'{components => tensorboard/components}/tf_scalar_dashboard/tf-scalar-dashboard.html',\r\nu'{components => tensorboard/components}/tf_graph_dashboard/tf-graph-dashboard.html', \r\nu'{plugins => tensorboard/plugins}/projector/projector_plugin_test.py', \r\nu'{components => tensorboard/components}/tf_option_selector/BUILD', \r\nu'{scripts => tensorboard/scripts}/__init__.py\r\n']\r\n```\r\nIt looks like the script is mis-parsing the output from Git and recording rename paths as file paths. Up for fixing it and putting in a new data blob?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366142038\u0000":{"address":{"type":"COMMENT","id":"366142038","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-366142038","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin please take a look. And, apologies for the uber-PR, I can split it into smaller pieces if you like."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366142325\u0000":{"address":{"type":"COMMENT","id":"366142325","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-366142325","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"On second though... maybe hold off review, I'll split this into smaller & more manageable pieces tomorrow."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366153399\u0000":{"address":{"type":"COMMENT","id":"366153399","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-366153399","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> On second though... maybe hold off review, I'll split this into smaller & more manageable pieces tomorrow.\r\n\r\nCool; I'm happy to wait, though at a glance it looks like most of the uber-PR is due to the `create-react-app` output.\r\n\r\nPerhaps it would be useful to check in the initial `create-react-app` output completely unchanged (which can be merged with minimal review), and then a few separate commits on top of that? Or, if you had something else in mind, go for it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366156502\u0000":{"address":{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-366156502","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, that's basically what I did - see #13 and #14. (#13 includes some other stuff, like setting up flow with types for jest)\r\n\r\nI also directly merged #12, which was tweaking the data generator script and committing the TensorBoard data as a test case."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366361454\u0000":{"address":{"type":"COMMENT","id":"366361454","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/10#issuecomment-366361454","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing this PR in favor of the new ones."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097094905\u0000168686266\u0000":{"address":{"type":"COMMENT","id":"168686266","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#discussion_r168686266","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay for now. I really want to get ESLint set up, and preferably also as a blocking CI. But that can come later."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097094905\u0000168686906\u0000":{"address":{"type":"COMMENT","id":"168686906","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#discussion_r168686906","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Also okay for now. In the future, I'd like to at least consider using [aphrodite] for styling. It's worked very well for me in the past. TL;DR: It combines the benefits of inline styling (locality of definitions, single-file components) with the full power of CSS—things like `:hover`, `::after`, `@keyframes`, and `@media` that you can't get with just `style` attributes.\r\n\r\n(If you care about things like server rendering and minimizing bandwidth, it fares well there, too. But that's a discussion for another day.)\r\n\r\n[aphrodite]: https://github.com/Khan/aphrodite"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097094905\u0000168687028\u0000":{"address":{"type":"COMMENT","id":"168687028","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#discussion_r168687028","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Missing `App.js`?\r\n\r\nMissing tests?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097094905\u0000168687476\u0000":{"address":{"type":"COMMENT","id":"168687476","parent":{"type":"REVIEW","id":"97094905","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#discussion_r168687476","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I know that this is just the output of `create-react-app`, but I don't think that `.DS_Store` should be here. Instead, it should be in a global gitignore:\r\n```sh\r\n$ echo '.DS_Store' >> ~/.gitignore_global\r\n$ git config --global core.excludesFile ~.gitignore_global\r\n```\r\nThere are dual advantages:\r\n  * your global gitignore, with your platform/editor/IDE-specific bindings, persists across all projects;\r\n  * when ten different developers on ten different platforms/editor/IDEs start contributing to the project, the project's `.gitignore` doesn't get polluted.\r\n\r\nFor instance, here's mine: https://gist.github.com/wchargin/868e0147911c0486a751ad99a71133fb"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097336189\u0000168886484\u0000":{"address":{"type":"COMMENT","id":"168886484","parent":{"type":"REVIEW","id":"97336189","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/13#discussion_r168886484","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Per discussion—we'll keep this PR as is; #14 will make everything work."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000014\u0000366164710\u0000":{"address":{"type":"COMMENT","id":"366164710","parent":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#issuecomment-366164710","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(I've diffbased this against `frontend-setup`. Before this is merged, PR #13 should be merged into master, and this should be diffbased against master again. If you have a better workflow, please let me know!)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000014\u0000366171189\u0000":{"address":{"type":"COMMENT","id":"366171189","parent":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#issuecomment-366171189","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Forgot to mention:\r\n\r\n> ```sh\r\n> yarn flow;  # check that types check out, then ctrl+c\r\n> ```\r\nI don’t have to Ctrl+C; my `yarn flow` doesn’t watch automatically. Does yours, or is this a typo?\r\n\r\n> ```sh\r\n> yarn test;  # check that tests pass, then ctrl+c\r\n> ```\r\nAlternately: `CI=true yarn test` will run tests just once. (Kind of bad UI, in my opinion; facebook/create-react-app#784 has discussion.)\r\n\r\nAnd thanks for the test plan! We can add frontend component tests soon."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000168690422\u0000":{"address":{"type":"COMMENT","id":"168690422","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168690422","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I hadn't used CSS Grid before, but I just played around with https://cssgridgarden.com yesterday, and it's actually great. Thanks for making this change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000168690672\u0000":{"address":{"type":"COMMENT","id":"168690672","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168690672","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Hmm, interesting. I would probably have placed `buildTree` in a separate module. But should at least work for now! We'll see how it goes."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000168693389\u0000":{"address":{"type":"COMMENT","id":"168693389","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168693389","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Fine for now, but—per our discussions, I thought that *this* was going to be log, and it would be the voting-power-as-a-function-of-cred that was radical?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000168694297\u0000":{"address":{"type":"COMMENT","id":"168694297","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168694297","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I think this merits a docstring, to make it clear that weights are aggregated for a file, and that this does not compute the \"weight of a commit\". What do you think of something like\r\n\r\n> A weight function determines how much commit contributes to the importance of a particular file. For instance, a weight function might be defined as, “the number of lines changed in `filepath` in commit `commit`”, or “`1` if `filepath` was changed in `commit`, else `0`”.\r\n\r\n?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097099474\u0000168694527\u0000":{"address":{"type":"COMMENT","id":"168694527","parent":{"type":"REVIEW","id":"97099474","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168694527","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: could you reindent this object literal, please? (e.g., in vim: press `=ap`)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097283892\u0000168843614\u0000":{"address":{"type":"COMMENT","id":"168843614","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168843614","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Do you know why we get `no-use-before-define` lints here and in similar places (lines 12, 34)? Pasting these three paragraphs into https://flow.org/try yields no errors ([direct link here](https://flow.org/try/#0PQKgBAAgZgNg9gdzCYAoVAXAngBwKZgDCcAtiQJYYAiAhhjWALxgDeqYYwwYAKgPJU+YciRwAnOADcCkmmPI0ARjAIA7GiTwBndmCjkVPOMTKUtALlYBtfSvWbLWjPNUBzALqPn5N1fcBfAG5dAGNSCgwLazDTDAALGi04rxcPSxMIoN0aAFd4uDEop1S-YP90bHwicMomVmy8uIKUn1dgjic6KJYbAzx7PBa3TzAAMT6AZXpIrPLMXAJxlSmuurYOGB9tS1UckkU8MXawGgATU7xTnb2Do90LlQxL6-3DstQgA)).\r\n\r\nI'd love to not get into the habit of ignoring lint at this stage. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097283892\u0000168844183\u0000":{"address":{"type":"COMMENT","id":"168844183","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168844183","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This also merits a docstring, in my opinion; it's not clear from the interface there may be multiple tuples for a given user. (I.e., the result is not just an associative array.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097283892\u0000168845250\u0000":{"address":{"type":"COMMENT","id":"168845250","parent":{"type":"REVIEW","id":"97283892","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168845250","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why not just make this an `<a>` or `<button>` now?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097346717\u0000168895478\u0000":{"address":{"type":"COMMENT","id":"168895478","parent":{"type":"REVIEW","id":"97346717","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168895478","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yeah, log is probably a better choice. We'll play around with a few different weightFns (note that it's an argument, easy to swap)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000014\u000097347081\u0000168895829\u0000":{"address":{"type":"COMMENT","id":"168895829","parent":{"type":"REVIEW","id":"97347081","pull":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/14#discussion_r168895829","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366454409\u0000":{"address":{"type":"COMMENT","id":"366454409","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#issuecomment-366454409","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Heh, cool. I had done the same thing, but waited to PR it until we had CI.\r\n\r\nI'm quite wary of the pre-commit hook, because it does the wrong thing when only part of a file is staged—it will silently stage the whole file. Not good! The `precise-commits` package fixes this. Can we either\r\n\r\n  * use `precise-commits` instead, or\r\n  * use only a pre-commit hook that aborts the commit when any file does _not_ match Prettier's format (`prettier --list-different`), and then expect developers to either fix errors manually or install editor hooks?\r\n\r\nOne thing that I noticed is that Prettier doesn't normalize import order (probably because it can't). Should we?\r\n\r\nMy thoughts on the settings: the default settings are fine with me *except* that\r\n  * I would really like `trailingComma: es5`. I'm convinced that trailing commas are objectively superior (two main reasons: they prevent pollution of the git diff, and they allow easily `:sort`ing and otherwise rearranging blocks). I spent a while explicitly searching for arguments _against_ them and didn't find anything substantive.\r\n  * I have a very weak preference toward `bracketSpacing: false`, but I really don't mind either way.\r\n  * Everything else I don't care about, though I wondered whether you preferred `arrowParens: always` to get `(x) => x` instead of `x => x`.\r\n\r\nI think that setting changes should go into `.prettierrc`, not directly into the package.json script, so that different invocations of prettier (e.g., `prettier --list-different` in a CI) can use the same settings.\r\n\r\nSo, my concrete suggestion for this diff is `echo 'trailingComma: es5' >.prettierrc`.\r\n\r\n(I don't mind bikeshedding a bit here, because we shouldn't have to bikeshed on these ever again.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366474934\u0000":{"address":{"type":"COMMENT","id":"366474934","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#issuecomment-366474934","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ok, @wchargin PTAL. I changed it to just be a precommit error, and added `npm run pretty` as a command to prettify all the js.\r\n\r\nnotes:\r\n- I tried out precise-commit, but it interacts badly with prettier. For example, I found that if I change one line inside a long Flow type definition, it tries to reformat while only modifying one line, resulting in reflowing the entire multiline type definition into one mega-line that breaks the line width requirements\r\n- I force pushed and blew away the history because it was difficult to reconcile with ejecting\r\n- I tested doing an interactive add that stages only part of a file, and it seems not to change what is staged now\r\n- I tested that it does, indeed, error on commit when the lint is wrong\r\n- I would love to customize the error message so that it advises that \"npm run pretty\" is the right solution\r\n- For the moment, I'm only having it format .js. I figured we are planning to get rid of css, and having it format .json means it will keep trying to format data.json and I want to avoid polluting our git history with changes to a large file. (I think we should get rid of the tensorboard data anyway, and swap it to SourceCred git history once feasible)\r\n- To make the PR easy to review, I didn't run pretty in this PR. we can do that as a followup\r\n- I set up a .prettierrc file (.prettierrc.json, the file format is optional and I figured it adds clarity)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366478299\u0000":{"address":{"type":"COMMENT","id":"366478299","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#issuecomment-366478299","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In the future, I hope that we can:\r\n  - set up a CI (I think that only you can actually flip this switch?)\r\n  - add ESLint as a commit hook\r\n  - add both ESLint and `prettier --list-different` as blocking CI steps\r\n\r\n:-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366490768\u0000":{"address":{"type":"COMMENT","id":"366490768","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#issuecomment-366490768","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"addressed your comments - PTAL.\r\n\r\nit modifies flow_typed now, which is a little weird, but I think it's OK - and it will only happen (as often as we update flow_typed, which will be rarely)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366504544\u0000":{"address":{"type":"COMMENT","id":"366504544","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#issuecomment-366504544","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Added .prettierignore, will squash and merge."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387232\u0000168935082\u0000":{"address":{"type":"COMMENT","id":"168935082","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#discussion_r168935082","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It should be safe to write `*.js` here. We don't have to worry about `node_modules`, because `lint-staged` only runs its linters on things that are staged anyway."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387232\u0000168935138\u0000":{"address":{"type":"COMMENT","id":"168935138","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#discussion_r168935138","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It should be safe to write `'**/*.js'` here. By default, `prettier` excludes `node_modules`. You can verify this by running `yarn prettier --list-different '**/*.js'` at the command line."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387232\u0000168935158\u0000":{"address":{"type":"COMMENT","id":"168935158","parent":{"type":"REVIEW","id":"97387232","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#discussion_r168935158","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I'd slightly prefer that this be called `prettify`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000018\u000097387466\u0000168935336\u0000":{"address":{"type":"COMMENT","id":"168935336","parent":{"type":"REVIEW","id":"97387466","pull":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/18#discussion_r168935336","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(So that it's a verb. `yarn test`, `yarn start`, `yarn prettify`.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000020\u0000366551596\u0000":{"address":{"type":"COMMENT","id":"366551596","parent":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/20#issuecomment-366551596","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unfortunately, this didn't catch as much as I thought it would, because of issues with the underlying babel plugin. Basically, props of the form `{[key: string]: ValueType}` weren't being typechecked at all. I've PRed those against the babel plugin and the author pushed a new version; #27 pulls those changes in, and #28 appeases the babel plugin in other ways.\r\n\r\nIt's certainly better than nothing, but I think that we shouldn't put full trust in the plugin—if we suspect that something isn't being typechecked correctly, we should verify the output in the generated bundle (it's easy to read)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000027\u0000366552712\u0000":{"address":{"type":"COMMENT","id":"366552712","parent":{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/27#issuecomment-366552712","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"William, great job getting these fixes merged and released upstream! I am perpetually so impressed by the work that you do. :1st_place_medal: "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000028\u0000387948937\u0000":{"address":{"type":"COMMENT","id":"387948937","parent":{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/28#issuecomment-387948937","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interesting.\r\n\r\nThis PR was mistakenly merged into a non-master branch, and as such the commit appears nowhere in the repository history.\r\n\r\nNeither of us noticed until now. We now have a dangling `MERGED_AS` edge in the SourceCred graph. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000035\u000099526398\u0000170787029\u0000":{"address":{"type":"COMMENT","id":"170787029","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/35#discussion_r170787029","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As discussed: inclusion and co-inclusion will both fall under the `REFERENCE` type. That is, an issue REFERENCEs its comments, and the comments also REFERENCE their enclosing issues (resp. PR). We don’t see any reason why this should cause ambiguity, because an issue cannot otherwise reference a comment: it has no body in which to do so.\r\n\r\nWe’re punting on close/reopen actions for now."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000035\u000099526398\u0000170787102\u0000":{"address":{"type":"COMMENT","id":"170787102","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/35#discussion_r170787102","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unused imports."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000035\u000099526398\u0000170787156\u0000":{"address":{"type":"COMMENT","id":"170787156","parent":{"type":"REVIEW","id":"99526398","pull":{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/35#discussion_r170787156","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"s/nane/name"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000037\u0000368762073\u0000":{"address":{"type":"COMMENT","id":"368762073","parent":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/37#issuecomment-368762073","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Commit hooks are worth testing! LGTM otherwise."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000037\u0000368762234\u0000":{"address":{"type":"COMMENT","id":"368762234","parent":{"type":"PULL","number":"37","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/37#issuecomment-368762234","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Tested the commit hooks, they're fine."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000038\u0000368766345\u0000":{"address":{"type":"COMMENT","id":"368766345","parent":{"type":"PULL","number":"38","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/38#issuecomment-368766345","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It sure would! It sure is."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000043\u0000100294536\u0000171442756\u0000":{"address":{"type":"COMMENT","id":"171442756","parent":{"type":"REVIEW","id":"100294536","pull":{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/43#discussion_r171442756","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As discussed, we're reordering these because we think that the repository name is the broader concept. Let's also change the serialized form."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000044\u0000369471732\u0000":{"address":{"type":"COMMENT","id":"369471732","parent":{"type":"PULL","number":"44","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/44#issuecomment-369471732","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note: we use the non-pretty-printed (`python -m json.tool`) output here because we want to have the exact output of the script. We didn't see any downsides to this. (In particular, subsequent changes to this file will result in a messy diff, but won't take up any more space in git because git stores the entirety of each changed file in a commit object—not just deltas.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000046\u0000369514504\u0000":{"address":{"type":"COMMENT","id":"369514504","parent":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/46#issuecomment-369514504","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Great Address Migration (#43)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000047\u0000369541856\u0000":{"address":{"type":"COMMENT","id":"369541856","parent":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/47#issuecomment-369541856","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Here is an argument that removing the `weight` field entirely is the correct decision.\r\n\r\nSuppose that we have a “Mighty Fruit and Seafood Mix” that’s made by cooking a razorclaw crab and some mighty bananas. The dish heals 3 hearts, and provides a medium-level attack boost for 2:30. The bananas alone heal 1 heart and provide a low-level attack boost for 1:00, and the crab heals 2 hearts and provides a low-level attack boost for 1:30. The edge payloads, without weights, might look like this:\r\n\r\n```js\r\nconst crabIngredientEdge = {\r\n  address: ...,\r\n  src: crab.address,\r\n  dst: meal.address,\r\n  payload: {\r\n    hearts: 2,\r\n    effect: {\r\n      type: 'attack',\r\n      strength: 'low',\r\n      duration: 90,\r\n    },\r\n  },\r\n};\r\nconst bananasIngredientEdge = {\r\n  address: ...,\r\n  src: bananas.address,\r\n  dst: meal.address,\r\n  payload: {\r\n    hearts: 1,\r\n    effect: {\r\n      type: 'attack',\r\n      strength: 'low',\r\n      duration: 60,\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nIf we want to ascribe weights, then we need to effectively collapse the `strength` and `duration` and `hearts` fields into one scalar value. **Claim:** It is reasonable that these parameters should be configurable at the plugin level—generically, say, in the sense that “I value hearts more than effect across all dishes”—without modifying the graph. In this case, it would make sense for plugins to provide a valuation function, with signature something like `PluginConfig × Graph × Edge → Weight`. The whole graph might be necessary if, for instance, we cooked mighty bananas together with stamella shrooms—regardless of how much we value effects, the effects cancel out because they are of different classes.\r\n\r\n@dandelionmane: Thoughts? Is this configurability along the lines of your previous thinking?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000047\u0000369716401\u0000":{"address":{"type":"COMMENT","id":"369716401","parent":{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/47#issuecomment-369716401","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, this is exactly the sort of case I had in mind. \r\n\r\nAbstractly: the graph should only contain objective data, which incorporates \"facts\" about the world that are external to perception of the graph itself. Thus, including the number of hearts provided by a food, or a record of the reactions a user had on GitHub, or even the project significance as assigned on GitHub, are all external facts.*\r\n\r\nHowever, determining how to relatively weight different types of contributions should be subjective - you and I should be able to take the same graph and arrive at different weightings, because we value different things. For example, maybe I value pragmatism relatively more and you value purism more, and so we arrive at different valuations for contributions to Haskell vs Javascript. That's a fine disagreement to have.\r\n\r\nKeeping the objective and subjective facets separate makes our disagreement easier to explore and resolve - if we disagree, we can first check that we're both operating from the same objective fact graph, and then compare our value vectors to see where our disagreement originates. In contrast, if the weight is encoded directly in the graph, the subjectivity of our disagreement is smeared all over the graph, and it's harder to tell exactly why we have different results, or how to resolve them in a principled way. Merging the two into one data structure is a bad separation of concerns.\r\n\r\n---\r\n\r\n* The boundary between 'objectivity' and 'subjectivity' here is quite interesting, and the concept of 'intersubjectivity' (hat tip to Yuval Noah Harari via [Sapiens: A Brief History of Humankind](https://en.wikipedia.org/wiki/Sapiens:_A_Brief_History_of_Humankind)) is quite useful. Basically:\r\n\r\n- Objective -> You can measure it with dumb tools. In principle, we can reach agreement about these facts, even with aliens. \r\n\r\n- Subjective -> Perceptually, as much a property of the viewer as the object. In general, a personal experience and you can't expect anyone else to see it the same.\r\n\r\n- Inter-subjective -> Not a objectively real or measurable; however, it is embedded in the shared subjectivity across many minds, e.g. within a community. Therefore, attains a much greater degree of \"reality\" and \"significance\" than the subjective, while still being more flexible and mutable than the objective\r\n\r\nExamples of the intersubjective include the United States of America, and Google - neither entity \"exists\" in a material way that we can measure; however, because those ideas are embedded in the beliefs and behavior patterns of so many humans, they are durably a part of the world.\r\n\r\nThere is another interesting intersection between objectivity and subjectivity, when you have an objective  record of a subjective judgment. For example, if you gave a :heart: to this comment, your subjectivity becomes objectively verifiable. \r\n\r\nAnd if a project comes together and through some consensus mechanism, they decide to value a bunch of major pull requests as being particularly important, and the results are posted in their git repository, that becomes an objective measure of an intersubjective fact.\r\n\r\nI have a subjective hunch that continuing to keep the objective/subjective/intersubjective distinction in mind as we design the system will be quite helpful. We might imagine the process of producing cred allocations as starting with the \"objective\" and then moving through increasing degrees of inter-subjectivity towards final subjectivity. For example:\r\n\r\nTo start, we generate a maximally objective graph (what we're working on now). This is the shared basis for different ¤-valuations.\r\n\r\nSourceCred tries to take a point of most-objective-intersubjectivity, which is to say we use reported intersubjectivity from projects, and otherwise try to stay neutral and put in as few value judgments as possible. This creates SourceCred¤.\r\n\r\nHowever, other communities will want to make different intersubjective judgments. For example, suppose the ML community wants to have a cred flavor. They want to put a much higher weighting on ML research papers than the entire SourceCred¤ universe, and put a lower weighting on (say) the Node ecosystem. So they fork SourceCred¤ to ML¤. Fortunately, they can continue to use the same root fact graph, they just apply a different value function.\r\n\r\nThen there might be further forks - e.g. within the ML community, there may be a group of people who are focused on AI safety, and they may want a cred of their own that puts a much higher weight on safety-related projects. So they create an \"AISafety\" project that records their intersubjective judgments on which contributions are most valuable to AI Safety. They can include that project in the root objective graphs, so that SourceCred¤ and ML¤ will both be awarded to AI safety contributors; however, they then fork ML¤ to AISafety¤, so that it uses the overall judgments of the ML community, except that the AI Safety subproject has much higher weight.\r\n\r\ncc @achildatplay as this idea of forking as a mechanism for expressing different subjective values was based on conversations with him"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000048\u0000369518298\u0000":{"address":{"type":"COMMENT","id":"369518298","parent":{"type":"PULL","number":"48","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/48#issuecomment-369518298","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Note: these will soon be pulled out to fields on a class.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100916804\u0000171965363\u0000":{"address":{"type":"COMMENT","id":"171965363","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#discussion_r171965363","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`crabLoopEdge`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100916804\u0000171965632\u0000":{"address":{"type":"COMMENT","id":"171965632","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#discussion_r171965632","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I'd like to see a comment/name here indicating what value this provides: namely, it tests the case where we have non-singleton hom-sets (i.e., there are multiple arrows from `a` to `b`)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100916804\u0000171966083\u0000":{"address":{"type":"COMMENT","id":"171966083","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#discussion_r171966083","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's check `\"works on a graph with self-loops and multiple edges\"`, too."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000054\u0000100916804\u0000171967355\u0000":{"address":{"type":"COMMENT","id":"171967355","parent":{"type":"REVIEW","id":"100916804","pull":{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/54#discussion_r171967355","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"How about making the \"normal test cases\" default to working on the advanced graph, unless there's a reason not to?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000061\u0000100964577\u0000172006359\u0000":{"address":{"type":"COMMENT","id":"172006359","parent":{"type":"REVIEW","id":"100964577","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/61#discussion_r172006359","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"why is `deepEqual(this._nodes, that._nodes) && deepEqual(this._edges, that._edges)` not sufficient?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000061\u0000100964681\u0000172006460\u0000":{"address":{"type":"COMMENT","id":"172006460","parent":{"type":"REVIEW","id":"100964681","pull":{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/61#discussion_r172006460","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good call: it is. Deep-diffing the full `Graph` objects is not sufficient, because `_inEdges` and `_outEdges` have undefined order. But the `_nodes` and `_edges` objects should be fine."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000062\u0000100965285\u0000172006979\u0000":{"address":{"type":"COMMENT","id":"172006979","parent":{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/62#discussion_r172006979","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"forEach -> map"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000062\u0000100965285\u0000172006985\u0000":{"address":{"type":"COMMENT","id":"172006985","parent":{"type":"REVIEW","id":"100965285","pull":{"type":"PULL","number":"62","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/62#discussion_r172006985","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"forEach => map"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101371831\u0000172367101\u0000":{"address":{"type":"COMMENT","id":"172367101","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172367101","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I assume it's not possible to re-use the Addressable interface in this expression."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101371831\u0000172368045\u0000":{"address":{"type":"COMMENT","id":"172368045","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172368045","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"hehe"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101371831\u0000172368605\u0000":{"address":{"type":"COMMENT","id":"172368605","parent":{"type":"REVIEW","id":"101371831","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172368605","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Not entirely clear to me why this code is part of the module. Used for test code by other consumers? "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101374589\u0000172369456\u0000":{"address":{"type":"COMMENT","id":"172369456","parent":{"type":"REVIEW","id":"101374589","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172369456","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"ok, i see how its used in the followon pr. seems a little bit like leakage of test code into main scope but not a big deal"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101376475\u0000172371111\u0000":{"address":{"type":"COMMENT","id":"172371111","parent":{"type":"REVIEW","id":"101376475","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172371111","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Correct."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000067\u0000101378561\u0000172372981\u0000":{"address":{"type":"COMMENT","id":"172372981","parent":{"type":"REVIEW","id":"101378561","pull":{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/67#discussion_r172372981","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It is for tests, yes, but I also think that this is a reasonable place for it. It defines how to sort addresses, and lives in `address.js`. (Compare: in Java/etc. you'd have `implements Comparable<Address>` on the class; in Haskell you'd have `instance Ord` in the module.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000070\u0000101405091\u0000172396660\u0000":{"address":{"type":"COMMENT","id":"172396660","parent":{"type":"REVIEW","id":"101405091","pull":{"type":"PULL","number":"70","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/70#discussion_r172396660","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"By universal convention, this should be `<h1>Graph Explorer</h1>`: no spaces inside the angle brackets. (Prettier won't change this because it's technically different HTML output, though it's rendered the same way.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000071\u0000101404772\u0000172396375\u0000":{"address":{"type":"COMMENT","id":"172396375","parent":{"type":"REVIEW","id":"101404772","pull":{"type":"PULL","number":"71","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/71#discussion_r172396375","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Personally, I'd write `import * as demoData from \"./graphDemoData\";` instead of this giant list, and then use `demoData.makeAddress` (etc.) below. But it's up to you."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104290997\u0000174856304\u0000":{"address":{"type":"COMMENT","id":"174856304","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174856304","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please apply the following patch:\r\n```diff\r\ndiff --git a/src/backend/fetchGitHubRepo.js b/src/backend/fetchGitHubRepo.js\r\nindex b7402e9..22e303a 100644\r\n--- a/src/backend/fetchGitHubRepo.js\r\n+++ b/src/backend/fetchGitHubRepo.js\r\n@@ -37,8 +37,8 @@ module.exports = function fetchGitHubRepo(repoOwner, repoName, token) {\r\n     throw new Error(`Invalid token: ${token}`);\r\n   }\r\n \r\n-  const query = `query {\r\n-    repository(owner: \"${repoOwner}\", name: \"${repoName}\") {\r\n+  const query = `query FetchData($repoOwner: String!, $repoName: String!) {\r\n+    repository(owner: $repoOwner, name: $repoName) {\r\n       issues(first: 100) {\r\n         pageInfo {\r\n           hasNextPage\r\n@@ -135,15 +135,17 @@ module.exports = function fetchGitHubRepo(repoOwner, repoName, token) {\r\n     }\r\n   }\r\n   `;\r\n-  return postQuery(query, token);\r\n+  const variables = {repoOwner, repoName};\r\n+  const payload = {query, variables};\r\n+  return postQuery(payload, token);\r\n };\r\n \r\n const GITHUB_GRAPHQL_SERVER = \"https://api.github.com/graphql\";\r\n \r\n-function postQuery(query, token) {\r\n+function postQuery(payload, token) {\r\n   return fetch(GITHUB_GRAPHQL_SERVER, {\r\n     method: \"POST\",\r\n-    body: JSON.stringify({query}),\r\n+    body: JSON.stringify(payload),\r\n     headers: {\r\n       Authorization: `bearer ${token}`,\r\n     },\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104290997\u0000174860619\u0000":{"address":{"type":"COMMENT","id":"174860619","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174860619","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You might consider the following patch, which is functionally equivalent but avoids a useless use of cat at the cost of having extra newlines in the Python script (not a problem). I don't have a strong preference either way.\r\n```diff\r\ndiff --git a/src/backend/fetchGitHubRepoTest.sh b/src/backend/fetchGitHubRepoTest.sh\r\nindex 601e761..ce8a6ed 100755\r\n--- a/src/backend/fetchGitHubRepoTest.sh\r\n+++ b/src/backend/fetchGitHubRepoTest.sh\r\n@@ -3,13 +3,12 @@\r\n set -eu\r\n \r\n canonicalize() {\r\n-  script=\"$(cat <<EOF\r\n+  script=\"\r\n import json\r\n import sys\r\n blob = json.load(sys.stdin)\r\n json.dump(blob, sys.stdout, indent=4, sort_keys=True)\r\n-EOF\r\n-)\"\r\n+\"\r\n   python -c \"${script}\"\r\n }\r\n \r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104290997\u0000174861199\u0000":{"address":{"type":"COMMENT","id":"174861199","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174861199","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Alternately: We could change `bin/fetchAndPrintGitHubRepo.js` to print canonicalized output. This way, all clients will get canonicalization for free, and in particular whenever we regenerate the object file we'll have a minimal diff."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104290997\u0000174868746\u0000":{"address":{"type":"COMMENT","id":"174868746","parent":{"type":"REVIEW","id":"104290997","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174868746","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"After merging, I will write an API for constructing and operating on GraphQL queries in a structured way. I'm astonished that I can't find one. It shouldn't be hard."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352639\u0000174908240\u0000":{"address":{"type":"COMMENT","id":"174908240","parent":{"type":"REVIEW","id":"104352639","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174908240","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352712\u0000174908303\u0000":{"address":{"type":"COMMENT","id":"174908303","parent":{"type":"REVIEW","id":"104352712","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174908303","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I removed the canoncialize function per your suggestion below."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352770\u0000174908380\u0000":{"address":{"type":"COMMENT","id":"174908380","parent":{"type":"REVIEW","id":"104352770","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174908380","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done. Added a dep on json-stable-stringify."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104352799\u0000174908411\u0000":{"address":{"type":"COMMENT","id":"174908411","parent":{"type":"REVIEW","id":"104352799","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174908411","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Cool!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000075\u0000104393600\u0000174943685\u0000":{"address":{"type":"COMMENT","id":"174943685","parent":{"type":"REVIEW","id":"104393600","pull":{"type":"PULL","number":"75","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/75#discussion_r174943685","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Great; this was the package that I was looking at, too."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373536707\u0000":{"address":{"type":"COMMENT","id":"373536707","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373536707","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"edit: This comment is out of date. The test plan in f8cfb2ded59bc880b501031f9c9798dc17b9018b and the PR description is correct, and simpler, too.\r\n\r\n<details><summary>Previous comment</summary>\r\nNote: The above auxiliary test plan was written when the test script still canonicalized output, but this was removed in #75. Without canonicalization, it trivially fails. I vote to reinstate the canonicalization in the test script, even though it's redundant with `json-stable-stringify` for one particular data source. What do you think?\r\n\r\n*edit* to add: If you want to run the auxiliary test plan in the meantime, precede it by running `</tmp/patch git apply` after putting the following into `/tmp/patch`:\r\n\r\n```diff\r\ndiff --git a/src/backend/fetchGitHubRepoTest.sh b/src/backend/fetchGitHubRepoTest.sh\r\nindex 22f9b7f..601e761 100755\r\n--- a/src/backend/fetchGitHubRepoTest.sh\r\n+++ b/src/backend/fetchGitHubRepoTest.sh\r\n@@ -2,6 +2,17 @@\r\n \r\n set -eu\r\n \r\n+canonicalize() {\r\n+  script=\"$(cat <<EOF\r\n+import json\r\n+import sys\r\n+blob = json.load(sys.stdin)\r\n+json.dump(blob, sys.stdout, indent=4, sort_keys=True)\r\n+EOF\r\n+)\"\r\n+  python -c \"${script}\"\r\n+}\r\n+\r\n main() {\r\n   if [ -z \"${GITHUB_TOKEN:-}\" ]; then\r\n     printf >&2 'Please set the GITHUB_TOKEN environment variable\\n'\r\n@@ -14,8 +25,8 @@ main() {\r\n     >\"${output}\" \\\r\n     ;\r\n   diff -uw \\\r\n-    src/backend/githubDemoData/tiny-example-repository.json \\\r\n-    \"${output}\" \\\r\n+    <(canonicalize <src/backend/githubDemoData/tiny-example-repository.json) \\\r\n+    <(canonicalize <\"${output}\") \\\r\n     ;\r\n   rm \"${output}\"\r\n }\r\n```\r\n</details>"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373586318\u0000":{"address":{"type":"COMMENT","id":"373586318","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373586318","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Regarding the canonicalization issue - I don't understand why the test script will require canonicalization going forward. The responsibility of the test script is to test that one piece we won't put into standard CI, which is hitting Github's live API with an API key.\r\n\r\nOn reflection, that makes sense. My auxiliary test plan is auxiliary anyway. I can deal with it. :-)\r\n\r\n> There's inconsistent usage of \"stringify\" vs \"format\" across this file. Maybe just standardize on \"format\", where \"format\" means \"turn this thing into a string, using a provided LineFormatter\". Then this const can be called \"formats\".\r\n\r\nAs I intended to structure it, `stringify` and `format` have different meanings. A stringifier is specific to a type, and knows how to convert instances of that type to strings. So, a `Stringifier<T>` is a function `(T, LineFormatter) => string`—and I’m happy to reify this.\r\n\r\nA formatter, on the other hand, describes how to lay out arbitrary strings; it does not care whether those strings came from a structured form or anywhere else. It is essentially what’s described in the `LineFormatter` interface, but I agree that the names are not great, especially when the reader is forced to contrast them with the stringifier. To discover the right names, perhaps we should make the abstraction more precise. I took some liberties with the typing, but the underlying abstraction is a mechanism for combining _token groups_, with the following signature:\r\n\r\n  - an opaque type `TokenRepresentation`\r\n  - an injection `atom : self -> string -> TokenRepresentation`\r\n  - a reduction `join : self -> TokenRepresentation * TokenRepresentation -> TokenRepresentation`\r\n  - a projection `print : self -> TokenRepresentation -> string`\r\n  - (an endomorphism `next : self -> self`, but this is not relevant right now)\r\n\r\nIn this implementation I’ve let `TokenRepresentation` be literally the type `string`. Then, `atom` is `format`, and `print` is the identity function. However, this means that it is well-typed to `join` strings that are not the result of `format`, or to `format` something twice; neither of these should be possible. Given that this interface is internal, I opted to take the simpler version with fewer coercions, because I can verify that I myself use it correctly throughout this file.\r\n\r\nSo… all this to say that I agree that the names on `LineFormatter` are somewhat confusing, especially when `stringify` is also in the mix. Maybe it’s worth making the notion of token grouping more explicit, and using the names above. I think that that might be less confusing. I’ll give it a shot and see what I think.\r\n\r\nIf we’re bikeshedding on `stringify` vs. `format` for the `T -> string` thing, then I prefer `stringify` because it’s what `JSON.stringify` uses, but if you want to use `format` then I am happy to change it.\r\n\r\n> Alternatively, I think using \"stringify\" as the consistent verb and \"stringifiers\" as the object containing many stringify functions may be even clearer, as it removes ambiguity with the two LineFormatters.\r\n\r\nDropping the part of this that we’ve already addressed, and regarding only `s/const stringify/const stringifiers`: I like this suggestion because then `builders` and `stringifiers`, which are structurally the same (a dictionary of actions) are grammatically consistent. The other nice option is `export const build = { ... }` and `export const stringify = { ... }`; personally, I like this even more, because they read as verbs, and so `build.field(...)` and `stringify.field(...)` seem very clear to me.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373587825\u0000":{"address":{"type":"COMMENT","id":"373587825","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373587825","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"While I’m at it, things I want to change (future PRs):\r\n  - The time system should enforce that lists are homogeneously typed. (This is possible.)\r\n  - The type system should separate out the `Literal` value types into the individual value types, and in particular should separate `Int` and `Float`, even though JS doesn’t.\r\n  - There should be validation, possibly optional. Things to be validated include: names must match `/[A-Za-z_][A-Za-z0-9_]*/`, `int` literals must have zero fractional part; variables must be declared; fragments must be declared.\r\n  - The type system should be more consistent between `{[string]: T}` and `{name: string, value: T}`. Examples: `Arguments` and `ObjectValue.data` for the former; `Parameter[]` for the latter. I’m not sure which one I prefer; I’ll use the API a bit more first.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373612675\u0000":{"address":{"type":"COMMENT","id":"373612675","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373612675","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"A lot of the \"future PR work\" items make more sense if we factor the GraphQL structural query generator out of sourcecred/sourcecred and into its own project. The level of polish you describe is probably over-engineering if it's only scratching our own itch, but is worth it if we make it generally available.\r\n\r\nIt seems very node-ish of us to factor this out as a separate npm dependency relatively early, I'm fine with doing that if you're enthused."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373897717\u0000":{"address":{"type":"COMMENT","id":"373897717","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373897717","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Maybe it’s worth making the notion of token grouping more explicit, and using the names above. I think that that might be less confusing. I’ll give it a shot and see what I think.\r\n\r\nSo… I looked into this. At length. It’s possible, but typing it correctly requires that `inlineFormatter` and `multilineFormatter` and `LineFormatter` each be declared in separate files. (Why? I had foolishly assumed that Flow’s “existential type” represented an existential type, but it does not; instead, it just means “please automatically infer this type and expose it as if I had written it myself”, which is worlds different. Flow does offer opaque types, but only allows scoping the opacity at a module level. Way better than nothing, but a lot of unnecessary cruft.) You can see the result here: https://gist.github.com/wchargin/e890f0cbae10a2d1d32eefd54f5011a5\r\n\r\nThe types are stronger… but at what cost? I like the implementation code more (especially with the explicit projections in `queryDefinition` and `field`). But the user interface is less fluent (see test code). Really, `Stringifier<E>` should be an opaque type, and users should only see a function `stringify: <E, T>(stringifier: Stringifier<E>, element: E, fmt: LineFormatter<T>): string` whose implementation is `fmt.project(stringifier(element, fmt))`. Then users would call `stringify(stringifiers.body, myBody, multilineFormatter(\"  \"))`. Is this the right way to go? The precision of the types makes it easier for a user to understand what’s _actually_ going on, but on the other hand it would be nice if there were nothing _to_ understand, and the former API (as originally in this PR) does a better job of that.\r\n\r\nHonestly, I don’t really want to spend any more time on the fine details of the stringification API right now. As long as it’s internal to our repo, it’s okay if it’s imperfect. There are better things for me to be working on.\r\n\r\nI think that I will keep the API as originally in this PR, but make the following name changes:\r\n  - `builders` becomes `build`;\r\n  - `LineFormatter` becomes `LayoutStrategy`;\r\n  - `LineFormatter.format` becomes `LayoutStrategy.atom`;\r\n  - `multilineFormatter` becomes `multilineLayout`;\r\n  - `inlineFormatter` becomes `inlineLayout`.\r\nIn my opinion, these changes are sufficient to avoid API confusion. Then I can work on more valuable things. :-)\r\n\r\n> A lot of the \"future PR work\" items make more sense if we factor the GraphQL structural query generator out of sourcecred/sourcecred and into its own project. The level of polish you describe is probably over-engineering if it's only scratching our own itch, but is worth it if we make it generally available.\r\n\r\nHmm; I think I mostly disagree. I agree for the point about validation, because that requires structuring the API such that validation can be disabled for performance or enabled with good error messages, etc. But the first two changes should be trivial changes to the type system that give us a fair amount of safety for just a few minutes’ worth of effort, and the last change is a trivial change to the type system that avoids having two standards for a simple concept. Perhaps I can convince you by sending you tiny PRs!\r\n\r\n> It seems very node-ish of us to factor this out as a separate npm dependency relatively early, I'm fine with doing that if you're enthused.\r\n\r\nI am not enthused about releasing in any form an API with one client (a single test case) and a total lifespan of two days—even though doing so would be very node-ish! But we can certainly keep it separated in our codebase: say, in the `graphql` directory, and without any `import`s from the rest of our code. Then, actually publishing it at any point will be easy.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000373900433\u0000":{"address":{"type":"COMMENT","id":"373900433","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-373900433","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Updated PR; please take a look at your convenience."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000374072125\u0000":{"address":{"type":"COMMENT","id":"374072125","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-374072125","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":">> A lot of the \"future PR work\" items make more sense if we factor the GraphQL structural query generator out of sourcecred/sourcecred and into its own project. The level of polish you describe is probably over-engineering if it's only scratching our own itch, but is worth it if we make it generally available.\r\n\r\n> Hmm; I think I mostly disagree. I agree for the point about validation, because that requires structuring the API such that validation can be disabled for performance or enabled with good error messages, etc. But the first two changes should be trivial changes to the type system that give us a fair amount of safety for just a few minutes’ worth of effort, and the last change is a trivial change to the type system that avoids having two standards for a simple concept. Perhaps I can convince you by sending you tiny PRs!\r\n\r\nIf you send me tiny PRs, I will be convinced.\r\n\r\n>> It seems very node-ish of us to factor this out as a separate npm dependency relatively early, I'm fine with doing that if you're enthused.\r\n\r\n> I am not enthused about releasing in any form an API with one client (a single test case) and a total lifespan of two days—even though doing so would be very node-ish! But we can certainly keep it separated in our codebase: say, in the graphql directory, and without any imports from the rest of our code. Then, actually publishing it at any point will be easy.\r\n\r\nIn general, there's merit to releasing early, since the longer something goes unreleased, the more time it has for natural software entropy to entangle it with the rest of the system, so that releasing it becomes difficult. However, as you say, keeping it explicitly separated in our codebase provides a good defense. Maybe when we implement pagination in a general purpose way, that will be a good time to release it (we can also then link to it from the github issues we've found where other people complain about the lack of an easy solution for pagination).\r\n\r\nOverall: Code LGTM to me, thanks for this work! As usual, I'm impressed with how thorough and principled an approach you take. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000374106664\u0000":{"address":{"type":"COMMENT","id":"374106664","parent":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#issuecomment-374106664","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Regarding those auxiliary features: I’ve decided not to implement them for now, for the following reasons. Items (1) and (2) involve strengthening the type system to be more akin to GraphQL’s type system, but this is currently a non-goal for me: I’m trying to represent the query language only. Item (3), as discussed above, is overengineering at this point. Item (4) requires more thought/experience with the API and isn’t a big deal right now.\r\n\r\n> In general, there's merit to releasing early, since the longer something goes unreleased, the more time it has for natural software entropy to entangle it with the rest of the system, so that releasing it becomes difficult. However, as you say, keeping it explicitly separated in our codebase provides a good defense.\r\n\r\nAgreed with the first sentence, and I do think that keeping it separated will be sufficient to make it _easy_ to extricate. Even if it does become a little tangled, it shouldn’t be hard to untangle. And, if it is hard to untangle without compromising SourceCred functionality, then it will have been a good thing that it remained in SourceCred. :-)\r\n\r\n> Maybe when we implement pagination in a general purpose way, that will be a good time to release it (we can also then link to it from the github issues we've found where other people complain about the lack of an easy solution for pagination).\r\n\r\nThis sounds reasonable.\r\n\r\n> Overall: Code LGTM to me, thanks for this work! As usual, I'm impressed with how thorough and principled an approach you take.\r\n\r\nYou’re welcome, and thanks!\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000077\u0000104425699\u0000174971751\u0000":{"address":{"type":"COMMENT","id":"174971751","parent":{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#discussion_r174971751","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"There's inconsistent usage of \"stringify\" vs \"format\" across this file. Maybe just standardize on \"format\", where \"format\" means \"turn this thing into a string, using a provided LineFormatter\". Then this const can be called \"formats\".\r\n\r\nPossibly it would be relevant to define the type `Format<T>: function(T, LineFormatter) => string`.\r\nThen `formats` is literally a collection of `Format` implementations"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000077\u0000104425699\u0000174972985\u0000":{"address":{"type":"COMMENT","id":"174972985","parent":{"type":"REVIEW","id":"104425699","pull":{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/77#discussion_r174972985","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Alternatively, I think using \"stringify\" as the consistent verb and \"stringifiers\" as the object containing many stringify functions may be even clearer, as it removes ambiguity with the two LineFormatters."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000079\u0000373897853\u0000":{"address":{"type":"COMMENT","id":"373897853","parent":{"type":"PULL","number":"79","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/79#issuecomment-373897853","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I am fine with including this functionality, and I am also fine with making it the default behavior of `addNode` and `addEdge`, as you have done. However, I am surprised that you prefer to imperatively construct a megagraph instead of constructing and merging many small graphs. (I did the latter, and thought that it was very elegant.) I suppose that I will understand better when I see the relevant plugin code!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000080\u0000373903846\u0000":{"address":{"type":"COMMENT","id":"373903846","parent":{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/80#issuecomment-373903846","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note to self: if you accidentally restore a branch, wait until the newly created Travis build completes before subsequently deleting it again. Otherwise, you get a \"failed to clone from GitHub\" build failure."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373897944\u0000":{"address":{"type":"COMMENT","id":"373897944","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373897944","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It looks like the merge-base is wrong here? Three of the commits (at least) seem like they shouldn't be here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373897991\u0000":{"address":{"type":"COMMENT","id":"373897991","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373897991","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For now, I'll look at the contents of `githubPlugin.js` at your tip commit:  \r\nhttps://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373899511\u0000":{"address":{"type":"COMMENT","id":"373899511","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373899511","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"First thoughts.\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L85-L86\r\n\r\nI’m not so sure! Note that, for a fixed repository, there is an isomorphism between a node’s `Address` (which is a property of the node) and the `NodeID` (passed separately). I would suspect an abstraction leak if we _needed_ to pass the `NodeID` separately from the node, but we don’t: we could reconstruct it from `JSON.parse(authoredNode.address.id)`. Passing the `NodeID` separately is nothing more than a performance optimization. In the same vein, I would not balk at a function that accepted `commitSha: string` and `commitMessage: string` with the understanding that `git show --pretty=%B \"${commitSha}\"` should equal `commitMessage` exactly.\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L92-L94\r\n\r\nPerhaps not `Organization`s, but what about `Bot`s? They comment on PRs all the time.\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L81\r\n\r\nThis should probably be `json-stable-stringify`.\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L59-L66\r\n\r\nHow do you feel about exposing these individually as `IssueNodeID`, etc., adjacent to their respective payload types?\r\n\r\nRelated: I note that there is no pull request node ID type, though there is a pull request node type. Presumably you’ll add the former in a later revision to this PR.\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L65\r\n\r\nCan we rename `contributionID` to `childID`? Also, will every contribution have at most one out-containment edge, or should we include `parentID` as well (à la `REFERENCE`)?\r\n\r\n> https://github.com/sourcecred/sourcecred/blob/6ca5f6082918e73c1ee9ffd7d9f6be937de0f498/src/backend/githubPlugin.js#L9-L10\r\n\r\nIn my opinion, the node payloads should not include the `type`. We do not include any information in the payload that is also contained in the address, and the address includes the node type. This has the advantage of being DRYer, and forces a decision (always good): we should have `export type NodeType = $ElementType<NodeID, \"type\">`.\r\n\r\n> general\r\n\r\nWhen you add nodes and edges to the graph, nothing verifies that they are type-correct unless you add type annotations (on either the payload or the node/edge; it doesn’t matter). You do so for `userPayload` and `authorshipEdge`, but not the others, so a typo in one of the strings would go unnoticed. For now, please add type annotations—but we should also consider ways to make this more mandatory. For instance: do we want to parameterize `Graph<NodePayload, EdgePayload>`?\r\n\r\n> in your test case\r\n\r\nYou don’t need `parser.graph.toJSON()`; you can just use `parser.graph`. Reason: Jest calls `JSON.stringify` on the thing that you pass to it, and `JSON.stringify` knows about the special function name `toJSON`. We have tests for this.\r\n\r\n---\r\n\r\nAside: GitHub’s GraphQL API doesn’t let you query for `user(id: $someId)`. But you can still look up users by ID, as shown in the following sample query:\r\n```graphql\r\n{\r\n  u1: user(login: \"wchargin\") {\r\n    login\r\n    id\r\n  }\r\n  u2: node(id: \"MDQ6VXNlcjQzMTc4MDY=\") {\r\n    ... on User {\r\n      login\r\n      id\r\n    }\r\n  }\r\n  # `u1` and `u2` have identical data\r\n}\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373942955\u0000":{"address":{"type":"COMMENT","id":"373942955","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373942955","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> > general\r\n> \r\n> When you add nodes and edges to the graph, nothing verifies that they are type-correct unless you add type annotations (on either the payload or the node/edge; it doesn’t matter). You do so for `userPayload` and `authorshipEdge`, but not the others, so a typo in one of the strings would go unnoticed. For now, please add type annotations—but we should also consider ways to make this more mandatory. For instance: do we want to parameterize `Graph<NodePayload, EdgePayload>`?\r\n\r\nAs of #83, this comment can be replaced by: “Simply change `graph: Graph` to `graph: Graph<NodePayload, EdgePayload>` and you’ll get all your typechecking for free.”\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373978537\u0000":{"address":{"type":"COMMENT","id":"373978537","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-373978537","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"> Isomorphism between Address and ID\r\n\r\nI felt a little uncomfortable depending on the Address for data that changes the interpretation of the node, e.g. putting the node type there. It felt safer to have the address be opaque. On reflection, however, I think that since the GitHub plugin owns these nodes, for the GitHub plugin to view the addresses as transparent is reasonable.\r\n\r\nI don't think we need the performance optimization of passing around the nodeIds separately from the addresses, so I just parsed them from the address where necessary.\r\n\r\n> Include bots?\r\n\r\nSure, it's trivial so I added support for bots and organizations.\r\n\r\n> `json-stable-stringify`\r\n\r\nDone.\r\n\r\n> Pull request node ID\r\n\r\nAdded, although I haven't put in parsing for PRs yet. (But it will be straightforward.)\r\n\r\n> Exposing ID types individually as IssueNodeID, etc.\r\n\r\nI've done that, although I think it is of limited utility unless we can express to the type system that there's a relationship between (FooNodePayload, FooNodeID). Otherwise it will typecheck to bind a FooNodePayload with a BarNodeID. I guess there still is a value because sometimes we will explicitly know that we are dealing with e.g. a ReferenceEdgeID and can then depend on its properties.\r\n\r\n> Can we rename `contributionID` to `childID`? Also, will every contribution have at most one out-containment edge, or should we include `parentID` as well (à la `REFERENCE`)?\r\n\r\nDid the rename. We can add a `parentID` too, why not, it doesn't cost much and is defensive api design.\r\n\r\n> in my opinion, the node payloads should not include the `type`\r\n\r\nDone\r\n\r\n> type safety\r\n\r\nI'm having problems here - your insights would be appreciated (note the current commit doesn't typecheck). \r\n\r\nGiven that `parseAddress => NodeID | EdgeID`, how do I decisively assign the result of parseAddress to some particular subtype, e.g. `UserID`?\r\n\r\nThis is a place where it would be really great if we could represent mappings between the Payload and ID types - ie. if `parseID<T>(n: Node<T>): ID<t>`\r\n\r\n> No need for Graph.toJSON\r\n\r\nAck, changed.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374006916\u0000":{"address":{"type":"COMMENT","id":"374006916","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374006916","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I will answer first your most technical question.\r\n\r\n> Given that `parseAddress => NodeID | EdgeID`, how do I decisively assign the result of `parseAddress` to some particular subtype, e.g. `UserID`?\r\n\r\nThe answer to the question that you have asked is that you can’t, without using `any`. As written, the result of `parseAddress` is a union type, so you only know that it is _either_ a node ID or an edge ID. Therefore, you can only perform operations on the result that are valid on _both_ node and edge IDs. In particular, you cannot downcast it to anything.\r\n\r\nOf course, this is all a bit of a sham. You could implement\r\n```js\r\nparseNodeAddress(address: Address): NodeID {\r\n  return JSON.parse(address.id);\r\n}\r\nparseEdgeAddress(address: Address): EdgeID {\r\n  return JSON.parse(address.id);\r\n}\r\n```\r\nwhich is obviously alarming; the only reason that either of these works, let alone both of them, is that `JSON.stringify` returns `any`:\r\nhttps://github.com/facebook/flow/blob/469518a07adc8ae2662070f52a1e1ba7b01b5e33/lib/core.js#L481-L482\r\n\r\nSo you are already implicitly, unsafely downcasting from `any` to `NodeID | EdgeID` in the return type of your `parseAddress`.\r\n\r\nNow, I see three potential solutions to the underlying problem. The simplest, cleanest option is to pass around richly typed node IDs wherever you pass nodes. If a function accepts `authorNode: UserNode`, it should also accept `authorNodeID: UserNodeID`. You had well-typed node IDs and you want well-typed node IDs; the problem is the retraction through the untyped string layer, so don’t do that.\r\n\r\nThe next idea is to switch the whole system over to `Address<T: JSONSerializable>` (as previously considered), and parameterize `Graph<NodeID, NodePayload, EdgeID, EdgePayload>`. This would work for the cases in this file, where you only need `NodeID` and not its subtypes, but it is not sufficient in general, and it doesn’t answer your original question of how to get a specific subtype of `NodeID`. The problem is, as you say, that we need to somehow “link” the corresponding address and node types. In other words, nodes’ address-IDs and payloads are not independent; that is, the set of valid types for `(node.address.id, node.payload)` is not the product of the sets of valid types for `node.address.id` and `node.payload`. Our state space is, in a precise sense, _entangled_.\r\n\r\nWith this in mind, the last option is to explicitly express the entangled state space in the type system, by parameterizing over a single type that is a carefully chosen subtype of the ID/payload product:\r\n```js\r\ntype Address<+I> = {\r\n  +group: string,\r\n  +id: I,\r\n};\r\ntype Node<+Descriptor> = {\r\n  +address: Address<$ElementType<Descriptor, \"id\">>,\r\n  +payload: $ElementType<Descriptor, \"payload\">,\r\n};\r\n\r\ntype UserNodeDescriptor = {\r\n  id: {\r\n    type: \"USER\",\r\n    id: string,\r\n  },\r\n  payload: {\r\n    login: string,\r\n  },\r\n};\r\ntype IssueNodeDescriptor = {\r\n  id: {\r\n    type: \"ISSUE\",\r\n    id: string,\r\n  },\r\n  payload: {\r\n    title: string,\r\n    number: number,\r\n    body: string,\r\n  },\r\n};\r\ntype GitHubNodeDescriptor = UserNodeDescriptor | IssueNodeDescriptor;\r\ntype GitHubNode = Node<GitHubNodeDescriptor>;\r\n\r\nconst ex1: GitHubNodeDescriptor = {\r\n  id: {type: \"USER\", id: \"01010101\"},\r\n  payload: {login: \"wchargin\"},\r\n};\r\nconst ex2: GitHubNodeDescriptor = {\r\n  id: {type: \"ISSUE\", id: \"23232323\"},\r\n  payload: {title: \"hello\", body: \"world\", number: 1},\r\n};\r\n\r\nconst exBad = {\r\n  id: {type: \"USER\", id: \"01010101\"},\r\n  payload: {title: \"hello\", body: \"world\", number: 1},\r\n}\r\n// $ExpectError\r\n(exBad: GitHubNodeDescriptor);\r\n```\r\nThis should theoretically be strong enough to get us everything that we need. We can see that with the above definitions, a function like\r\n```js\r\nfunction processNode(node: GitHubNode) {\r\n  if (node.address.id.type === \"USER\") {\r\n    console.log(node.payload.login);\r\n  }\r\n  if (node.address.id.type === \"ISSUE\") {\r\n    console.log(node.payload.number);\r\n  }\r\n}\r\n```\r\n_must_ be well-typed: each `if`-statement refines the type of `node`’s descriptor to one of the two branches of `GitHubNodeDescriptor`, and this information is used within the branch. Sadly, Flow is not smart enough to realize that this code is well-typed. A bit of exploration indicates that the root cause is that Flow does not propagate constraints learned from inference across sibling boundaries in an object type ([here is a minimal example][mwe]). Note that making everything exact, read-only, and covariant does not help. (See also: appendix below.)\r\n\r\n[mwe]: https://flow.org/try/#0GYVwdgxgLglg9mABAcznAJgCgJSIN4BQiiUAngA4CmiAGogLz5HGIC2lrARpQE4BcTFizJUBAIgDKAFQBKASQByAcTEAaZkNakJUHjDDIBAZ137k6oQF8LiSwG5mI6gE0Ggluy68BhIcSfiCgCqALIAQgCiMmoaHqQKIF78iGCJ3Dw2xNbM9gTMoJCwCIjAmABeAnQAPojOuL4sMMCI5QB0numtTgz0jJKyiir1scRl7RydWjp6BnbEAPTzKGjoAISxlrFNLWMdvF0U1L19weFRYsN+iLsT+1oJSXOIi8sY61Y5BJsEBdDwSJwAIZYS4kQ60NwNYh7HgARh8IzBokQ-XkyhiVkybFuPAATAirlNTAZjMTzBsbLl-ODXIwodikvD3EIAijTpFoljspocfjmXEHukBKkklzKQ58uA-sVShUITU6vztm0YbCDlQen1pGihvzRuMkrj2toyU8XrweHAeIg+ABaTAbLbNFU4tXdY5s0Ici5664G9JG+5pXhmpYWq02+2OrJfAhAA\r\n\r\nIf the third “clever” solution had worked perfectly with Flow, I might have recommended it. After all, it does identify and attack the fundamental problem in a principled and extensible way, and the runtime elision is exactly the same as it was before (i.e., we didn’t have to change the object structure to capitulate to the type system). Its main downside is probably the performance discussed in #66, et al., and it could be argued that it makes the code harder for a newcomer to understand. But if Flow can’t handle these trivial examples, then the whole thing is moot.\r\n\r\nSo—my recommendation for now remains the same as my previous advice: pass around the IDs without ever dropping the types. It’s possible that this will not scale sufficiently, but it requires minimal effort right now, so let’s give it a shot.\r\n\r\n---\r\n\r\nAppendix: to justify my claim that the function `processNode` is provably correct, I’ve ported it to `typed/racket`, which uses a proper occurrence typing system and has no problem inferring the type:\r\n```racket\r\n#lang typed/racket\r\n\r\n(define-type UserId (Pair 'user String))\r\n(define-type UserPayload String)\r\n(define-type UserDesc (Pair UserId UserPayload))\r\n\r\n(define-type IssueId (Pair 'issue String))\r\n(define-type IssuePayload Integer)\r\n(define-type IssueDesc (Pair IssueId IssuePayload))\r\n\r\n(define-type GitHubDesc (U UserDesc IssueDesc))\r\n\r\n;; this type-checks just fine\r\n(: process-desc (-> GitHubDesc Void))\r\n(define (process-desc d)\r\n  (match d\r\n    [(cons (cons 'user id) payload)\r\n     (void (string-length payload))]\r\n    [(cons (cons 'issue id) payload)\r\n     (void (* 2 payload))]))\r\n```\r\nNote that the Racket code is a bit awkward, using cons cells instead of structs everywhere, because Racket naturally lends itself to code that doesn’t need these shenanigans; I had to place down some hoops so that I could jump through them. As a sanity check, note that swapping the two continuations of the `match` form yields the appropriate type errors: if I write `(string-length payload)` in the second clause, I get “expected `UserPayload`, given `IssuePayload`”.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374007024\u0000":{"address":{"type":"COMMENT","id":"374007024","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374007024","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> On reflection, however, I think that since the GitHub plugin owns these nodes, for the GitHub plugin to view the addresses as transparent is reasonable.\r\n\r\nThis makes sense to me.\r\n\r\n> I don't think we need the performance optimization of passing around the nodeIds separately from the addresses, so I just parsed them from the address where necessary.\r\n\r\nI am okay with this, but only because it is an implementation detail localized to this module.\r\n\r\nOther comments: acknowledged.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374149224\u0000":{"address":{"type":"COMMENT","id":"374149224","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374149224","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"There is a fourth option, which is to make explicit all of the type mappings in function signatures, e.g.:\r\n\r\n```\r\n_getNodeIDWithAssertion(n: Node<NodePayload>, t: NodeType): any {\r\n  const id: any = this.parseFromAddress(n.address);\r\n  if (id.type !== t) { throw new Error(\"Type assertion violated\") };\r\n  return id;\r\n}\r\n\r\ngetCommentID(n: Node<CommentNodePayload>): CommentNodeID {\r\n  return this._getNodeIDWithAssertion(n, \"COMMENT\");\r\n}\r\n\r\ngetIssueID(n: Node<IssueNodePayload>): IssueNodeID {\r\n  return this._getNodeIDWithAssertion(n, \"ISSUE\");\r\n}\r\n// and so forth for every Node and Edge type\r\n```\r\n\r\nI think this is not a bad pattern. It's not super DRY, but it is very easy to read and to consume as an API, and it propagates type information we care about. For the parser code (which is all implementation, not API) there's no need for it, and you'll see in this commit I have adopted your option 1. However, I think we can use this pattern in public APIs we develop to access the GitHub data in a type-aware fashion.\r\n\r\nSpeaking of APIs: this PR does not add any convenient APIs for the GitHub data. Once we start using this data, we'll want those to exist; if you take a look at the test code, you'll see that doing simple tasks like acquiring every comment is cumbersome (and type-ignorant). We're almost certainly going to want an api somewhere that exposes `getAllComments(): GitHubCommentAPIEntity[]`. And it would be really nice if that `GitHubCommentAPIEntity` can have `.author` and `.container` properties so that people who want to find the author don't need to do edge-twiddling like I do in the test code. I considered creating a `GitHubGraph` which extends `Graph<GitHubNode, GitHubEdge>` and adds sugar methods for working with GitHub info in a more convenient fashion, but decided there was a lot of extra API design work that should go into that (how do we make a cohesive experience for inter-graph connections?).\r\n\r\nAlso: the `src` and `dst` pointers on our edges feel like a force fit to me. In the case of the `\"COMMENT\"` relationship, trying to decide which node is the src and which is the dst feels arbitrary. Each edge \"type\" is potentially a different kind of relationship; some of those relationships lend themselves to directional thinking, and some don't. Let's consider replacing `src`, `dst` with names that acknowledge that we can't assume directedness in general. \r\n\r\nAlso: I took your suggestion of not putting `type` in the payload (because it is redundant with the address), but encoding the type in the ID doesn't seem right to me either. It's too opaque; it makes the type inaccessible in general to other plugins, but if I am another plugin connecting into or built on-top of the GH plugin, I want to find out the types of things. I think we should consider making `type` a first-class field on the `Address` object, which means that all `Node`s and `Edge`s get types by default, which should improve interpretability across the graph. The types should be namespaced by plugins, so this can actually replace the pluginName field: e.g. for comments here, the type is `GitHubPlugin-beta.Comment`. Going back to the issue of edge semantics, each Edge type can explicitly define its own semantics on how its `src` and `dst` relate.\r\n\r\n& the code changed, so PTAL. It supports PRs now (but doesn't handle review or commit comments)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374258715\u0000":{"address":{"type":"COMMENT","id":"374258715","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374258715","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I've only read the first paragraph of your comment (will read the rest later), but if you're willing to do runtime checks then you can improve the statics, too:\r\n```js\r\n_getNodeIDWithAssertion<T: NodeID>(\r\n    n: Node<NodePayload>,\r\n    t: $ElementType<T, \"type\">\r\n): T {\r\n  const id: NodeID = this.parseFromAddress(n.address);\r\n  if (id.type !== t) {\r\n      throw new Error(\"Type assertion violated\");\r\n  }\r\n  return id;\r\n}\r\n\r\ngetCommentID(n: Node<CommentNodePayload>): CommentNodeID {\r\n  return this._getNodeIDWithAssertion(n, \"COMMENT\");\r\n}\r\n\r\ngetIssueNodeID(n: Node<IssueNodePayload>): IssueNodeID {\r\n  return this._getNodeIDWithAssertion(n, \"ISSUE\");\r\n}\r\n```\r\n([here is a `flow.org/try` for the above example](https://flow.org/try/#0KYDwDg9gTgLgBDAnmYcCCATDVgGddwC8cA3gD4BQccA1DpLgJYzSIByAhgLbABccuGFEYA7AOYAaKrTAAbAK5jRnHv0HDxU6jUYY1Q0ZIpkAvgG4KFUJFhxRMYFABmHAMapM2PLg4AjWagk0jQcWDj4-J7huBYmltbQ8EgocGwQGMAAPDQAKgB8RKSU2qFeEehh3loyHIiyEKH8OVKmFlbgiQjIqACiGGJZuQXE5MGl0ZGV+NU0uFCuk2W4MxiCi9EzYLX1jXDNxubxHbbJqACS+PLAaRkACtsNGIVB1DDMAfoaRtQi8ly+jn4v3+jmqvnSiE+hikhwSJ26cAuuCuN2AZwAIs9pKd+AAiM4AZQJAFUerjqrooZoKId2jYkgjbvJZLIAErAACOV0EqPudUez2KCHefAEBmpPz+AKgQKloOk4IwkLFXxasOODJSTJZ7K5eBgqIxWNe3Txt2JABkLQB9Vk9ACKpIJOXJ0kpKuhNLacM1qAAwhAuDwRAb0sA+TsniMhfIoLIqd84IrlepPa06Z1TnAA0HgCHDZiRtjTXBcX6APIAWUrPTYLopeg91NpPq6KWJuEcvIeoUF0nqShECbVFlbWY7XbDRqLJpQeOJBJ6rNd1Hdqeb3o1bdQACEIKG7j2o6R+xBB8OvRn4Sk9we0YWT7PRbid+X627G+ujC2t1ny1AxA4ERGAALw4N4IBEbt+V7Gc4AHUQL3Veltzgf9AOAsCIKgqcHxebc8XLVkAHE0DYM4AC00ByM5yzYFc7E-cVv03FCszQeQYAAC2gaDIyIaQyDgCcoD4x5BLgW8xNCCT0KA0DwMYSDpIwUdfwRDjuN43DChEgs4CEqSdKEuTMMU5TcNYzMERUgTqCEpEUTDCNxPsuBtTZTluTvFyZLcnNgx8o8JM0njROco81LYmydMICTHOuXCJI83VvILCSArzO8MRCziwoLKLrJSVEcgRYgABIegCQLSpQTICwkUtTlxPIrOvDw8ugXAuMYMA+gGXzjxIZCio6rSoG63r+vvY0CNLNBiRyAAJIiCSWs5bgY1xIIMXxOKUkQMX4BrpA4TqoCO1JcJhQr2uzHaOFEQLpsG54RrugMQ0ekRnv6Ga4JxUsKzrNAzjYGs6y2nrZAwS6TuoLYcBDOHrsvMcEXZJxHDzdwXqPN7bt9OBMexkRcb+6dHzm3E7QAMSXWs-TJaocCxqAcBlK6MgxFngDZrLjtRn9opSPGYKjXLxsmvq-sGjKHqerKxcjCSSaR8mBsiq8iemynQq6nqZYGI0hM+mBvt+43MSEtWceAXX0UJ1Dptq1AKqq4Aau6TIHca3FmtaywMlcWQOBwOAnHkMnsLgRHO1pqBAyibwAApxm8dZvAASkF7nHcsSPo4OuBrQGbL0QAdWYLi0HwRxsMyHJc-vPIU+kH5m-qiLxbyapXn4Srqqy13G79gOKBzvYqe2kRBEY5vKbj4AE6TqZcBTkQADp0-wLOLFXJw4BT3RN6zABCQhiBgLOqeoV4uMTgB3OARGAZ+enZ6AU9xV24A4OvYDFwAG5KVDg4DAuI97SDiNQHAMBYwiEYrEAuUdXAxzLplZG6IN6d0wUFHuk88H6XwnAhBJcy4FirtxWunZAGQQ3n7Cs1ZawuigXECghc0HFzLglAsOCuZZF4d3SMeRJ5CLzlTUhUBEGl2AOXKhNcAHYQYaWQkJIyRsKAA))\r\n\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374277323\u0000":{"address":{"type":"COMMENT","id":"374277323","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374277323","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"[draft comment]\r\n\r\n> Speaking of APIs: this PR does not add any convenient APIs for the GitHub data. Once we start using this data, we'll want those to exist\r\n\r\nYes, agreed.\r\n\r\n> I considered creating a `GitHubGraph` which extends `Graph<GitHubNode, GitHubEdge>` and adds sugar methods for working with GitHub info in a more convenient fashion, but decided there was a lot of extra API design work that should go into that\r\n\r\nDefinitely the right call to not do that right now, IMO.\r\n\r\n> Let's consider replacing `src`, `dst` with names that acknowledge that we can't assume directedness in general.\r\n\r\nHappy to consider this in more detail, but my immediate reactions are (a) you can embed an “undirected edge” in a directed graph by creating two edges, but you cannot embed in the other direction, so we should favor a directed structure, and (b) we’ve talked about this before and always wound up coming back to directed graphs; we can still revisit, but maybe we should have a canonical place to put arguments in favor of directed/undirected structure to use as documentation/reference.\r\n\r\n> Also: I took your suggestion of not putting `type` in the payload (because it is redundant with the address), but encoding the type in the ID doesn't seem right to me either. It's too opaque; it makes the type inaccessible in general to other plugins, but if I am another plugin connecting into or built on-top of the GH plugin, I want to find out the types of things.\r\n\r\nThere’s nothing surprising here. The ID should definitely be opaque to the plugin, and the plugin can provide APIs for working with the IDs.\r\n\r\n> I think we should consider making `type` a first-class field on the Address object\r\n\r\nOf what type? `type: string`? Or are these types going to become rich enough that we want `type: JSONSerializable`, and then we want to expose subfields of `type` on the plugin?\r\n\r\n> & the code changed, so PTAL. It supports PRs now (but doesn't handle review or commit comments)\r\n\r\nwill do.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374320243\u0000":{"address":{"type":"COMMENT","id":"374320243","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374320243","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Discussed offline: Most of my comments above are actually design considerations for the Graph/Address systems in general, and are not specific to the GitHub plugin, so we are going to punt on them until we've designed and implemented at least one additional plugin :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374338527\u0000":{"address":{"type":"COMMENT","id":"374338527","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#issuecomment-374338527","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"BTW, this PR is a good start on https://github.com/sourcecred/sourcecred/issues/40"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000081\u0000105101229\u0000175553358\u0000":{"address":{"type":"COMMENT","id":"175553358","parent":{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#discussion_r175553358","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This assertion trivially holds."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000081\u0000105101229\u0000175556290\u0000":{"address":{"type":"COMMENT","id":"175556290","parent":{"type":"REVIEW","id":"105101229","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/81#discussion_r175556290","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's assert that there are not zero comments (and likewise for issues and PRs)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000083\u0000373907283\u0000":{"address":{"type":"COMMENT","id":"373907283","parent":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/83#issuecomment-373907283","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This also obsoletes #80 and removes all `any`s from our non-test codebase, which is surely a promising sign."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000084\u0000374087556\u0000":{"address":{"type":"COMMENT","id":"374087556","parent":{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/84#issuecomment-374087556","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay! I'll do that."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000085\u0000374338364\u0000":{"address":{"type":"COMMENT","id":"374338364","parent":{"type":"PULL","number":"85","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/85#issuecomment-374338364","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This isn't quite right: the dependency on `npm` expresses that `sourcecred`’s code depends on `npm` (like, we shell out to it or something). Instead, you just want to upgrade your global npm.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105191693\u0000175631387\u0000":{"address":{"type":"COMMENT","id":"175631387","parent":{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#discussion_r175631387","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Indentation (here & throughout)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105191693\u0000175631420\u0000":{"address":{"type":"COMMENT","id":"175631420","parent":{"type":"REVIEW","id":"105191693","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#discussion_r175631420","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Why sessionStorage vs localStorage?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105206517\u0000175644461\u0000":{"address":{"type":"COMMENT","id":"175644461","parent":{"type":"REVIEW","id":"105206517","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#discussion_r175644461","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don't remember from when I originally wrote the code. I'd prefer not to change it right now because it's for Safari compatibility, and I'm pretty sure that the code here works. :shrug:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000090\u0000105206543\u0000175644488\u0000":{"address":{"type":"COMMENT","id":"175644488","parent":{"type":"REVIEW","id":"105206543","pull":{"type":"PULL","number":"90","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/90#discussion_r175644488","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Discussed offline, and we agreed to keep it as is.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000091\u0000105254836\u0000175686809\u0000":{"address":{"type":"COMMENT","id":"175686809","parent":{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/91#discussion_r175686809","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: trailing sad-face `= {`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000091\u0000105254836\u0000175827393\u0000":{"address":{"type":"COMMENT","id":"175827393","parent":{"type":"REVIEW","id":"105254836","pull":{"type":"PULL","number":"91","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/91#discussion_r175827393","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Keeping these types specific seems like a good, conservative choice. If this gets too cumbersome in general, I would be fine with using `authoredNodeID: NodeID, authoredNode: Node<NodePayload>` as well. If ever needed, you can refine structurally, as in `authoredNodeID: NodeID & {someProperty: string}`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000092\u0000374463384\u0000":{"address":{"type":"COMMENT","id":"374463384","parent":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/92#issuecomment-374463384","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Thanks. Great idea.\r\n\r\nBetter implementation:\r\n```diff\r\ndiff --git a/.prettierignore b/.prettierignore\r\nindex 33791f1..fcd6eeb 100644\r\n--- a/.prettierignore\r\n+++ b/.prettierignore\r\n@@ -1,2 +1,3 @@\r\n bin\r\n+build\r\n flow-typed\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000092\u0000374679864\u0000":{"address":{"type":"COMMENT","id":"374679864","parent":{"type":"PULL","number":"92","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/92#issuecomment-374679864","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"PTAL"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000093\u0000374460141\u0000":{"address":{"type":"COMMENT","id":"374460141","parent":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/93#issuecomment-374460141","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"@dandelionmane posted some comments to 0d23b8bfd51bb574121ee9845c2808966f2a1818, which I will incorporate."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000093\u0000374516296\u0000":{"address":{"type":"COMMENT","id":"374516296","parent":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/93#issuecomment-374516296","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Updated per review comments in 0d23b8bfd51bb574121ee9845c2808966f2a1818. I still want to add tests. (Edit: now ready!)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000093\u0000105542088\u0000175927376\u0000":{"address":{"type":"COMMENT","id":"175927376","parent":{"type":"REVIEW","id":"105542088","pull":{"type":"PULL","number":"93","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/93#discussion_r175927376","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: titleExtractors"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105423063\u0000175828378\u0000":{"address":{"type":"COMMENT","id":"175828378","parent":{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#discussion_r175828378","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Please get the comment url too"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105423063\u0000175828499\u0000":{"address":{"type":"COMMENT","id":"175828499","parent":{"type":"REVIEW","id":"105423063","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#discussion_r175828499","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Maybe factor all the first (N) arguments into constants?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105540817\u0000175926250\u0000":{"address":{"type":"COMMENT","id":"175926250","parent":{"type":"REVIEW","id":"105540817","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#discussion_r175926250","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I'd like to keep the query identical in this commit. We can do this after, if you like."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000094\u0000105541051\u0000175926438\u0000":{"address":{"type":"COMMENT","id":"175926438","parent":{"type":"REVIEW","id":"105541051","pull":{"type":"PULL","number":"94","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/94#discussion_r175926438","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Will do. (The query was correct when written; more stuff has been merged onto master since then. The tests will catch this when I rebase, and then I'll fix it.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175955184\u0000":{"address":{"type":"COMMENT","id":"175955184","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175955184","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can you source this to the StackOverflow answer in a comment?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175955714\u0000":{"address":{"type":"COMMENT","id":"175955714","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175955714","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> `(x) => +[x[1]]`\r\n\r\nThis…works…because JavaScript is a hot mess. But `+x[1]` is what you meant. (Also, TIL.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175956110\u0000":{"address":{"type":"COMMENT","id":"175956110","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175956110","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Usually I'd implore you to construct this once to save on the compilation time. But it appears that JavaScript regexes are mutable, and that you're depending on this. So…I guess not."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175956241\u0000":{"address":{"type":"COMMENT","id":"175956241","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175956241","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I'd like to make these capture groups named, but am happy to do that later if you would just like to ship this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175963896\u0000":{"address":{"type":"COMMENT","id":"175963896","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175963896","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The reference form `repo-owner/repo-name#number` is valid on GitHub. If you want to document that we're not doing this, then that's fine with me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175964236\u0000":{"address":{"type":"COMMENT","id":"175964236","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175964236","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"How about a regular comment on a pull request, too?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105574298\u0000175965046\u0000":{"address":{"type":"COMMENT","id":"175965046","parent":{"type":"REVIEW","id":"105574298","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175965046","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This also refers to a pull request comment, right? or not right? Fine with me if you want to keep these strings \"opaque\"/\"straight-from-GitHub\" (at least for now), but probably should document this one either way."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586459\u0000175966006\u0000":{"address":{"type":"COMMENT","id":"175966006","parent":{"type":"REVIEW","id":"105586459","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966006","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yeah, when pull requests get comments they moonlight as issues. added comments."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586481\u0000175966041\u0000":{"address":{"type":"COMMENT","id":"175966041","parent":{"type":"REVIEW","id":"105586481","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966041","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586484\u0000175966043\u0000":{"address":{"type":"COMMENT","id":"175966043","parent":{"type":"REVIEW","id":"105586484","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966043","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Punt"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586488\u0000175966045\u0000":{"address":{"type":"COMMENT","id":"175966045","parent":{"type":"REVIEW","id":"105586488","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966045","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Documented"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586494\u0000175966051\u0000":{"address":{"type":"COMMENT","id":"175966051","parent":{"type":"REVIEW","id":"105586494","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966051","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105586880\u0000175966399\u0000":{"address":{"type":"COMMENT","id":"175966399","parent":{"type":"REVIEW","id":"105586880","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966399","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: redundant group: can replace `(?:-)?` with `-?`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000098\u0000105587260\u0000175966728\u0000":{"address":{"type":"COMMENT","id":"175966728","parent":{"type":"REVIEW","id":"105587260","pull":{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/98#discussion_r175966728","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000100\u0000105589418\u0000175968709\u0000":{"address":{"type":"COMMENT","id":"175968709","parent":{"type":"REVIEW","id":"105589418","pull":{"type":"PULL","number":"100","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/100#discussion_r175968709","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":klaxon:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000101\u0000374813757\u0000":{"address":{"type":"COMMENT","id":"374813757","parent":{"type":"PULL","number":"101","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/101#issuecomment-374813757","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed on both counts!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000375074797\u0000":{"address":{"type":"COMMENT","id":"375074797","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#issuecomment-375074797","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Can we yarn remove react-test-renderer?\r\n\r\nIt's still used in `githubPluginAdapter.test.js`. We could potentially replace that with Enzyme, too, though [Jest recommends using `react-test-renderer` for basic snapshot tests](https://facebook.github.io/jest/docs/en/tutorial-react.html#snapshot-testing) and [enzyme for interactions.](https://facebook.github.io/jest/docs/en/tutorial-react.html#dom-testing). I switched the static snapshot test in this file to `enzyme` because I thought it was clearer to have the two snapshots in this file be of the same format.\r\n\r\nAny preferences—in general, and for this PR specifically?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000375110193\u0000":{"address":{"type":"COMMENT","id":"375110193","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#issuecomment-375110193","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Overall, my bias is to have fewer tools, and having two tools that essentially do the same thing (but one is more general-purpose than the other) is unappetizing. Looking at the docs you linked, it sounds like there might be an issue around mocking if we use react-test-renderer.\r\n\r\nI think my vote would be: remove react-test-renderer, with a strong willingness to add it back if/when it turns out we really need it. But that leaves us with the bias towards simpler tooling, and adding complexity only at the point where it is clearly providing additional value. Fine with doing that in a separate PR."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000375112508\u0000":{"address":{"type":"COMMENT","id":"375112508","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#issuecomment-375112508","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also relevant (arguably fixes): https://github.com/sourcecred/sourcecred/issues/25"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000375140377\u0000":{"address":{"type":"COMMENT","id":"375140377","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#issuecomment-375140377","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> I think my vote would be: remove react-test-renderer, with a strong willingness to add it back if/when it turns out we really need it. But that leaves us with the bias towards simpler tooling, and adding complexity only at the point where it is clearly providing additional value. Fine with doing that in a separate PR.\r\n\r\nSounds good to me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105867854\u0000176205004\u0000":{"address":{"type":"COMMENT","id":"176205004","parent":{"type":"REVIEW","id":"105867854","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#discussion_r176205004","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"why 5? could this be rewritten as testNodes.length or such?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105881348\u0000176216415\u0000":{"address":{"type":"COMMENT","id":"176216415","parent":{"type":"REVIEW","id":"105881348","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#discussion_r176216415","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could be `createTestData().graph().getAllNodes().length`, although the other case of this assertion would have to be either still `(2)` or something weird that recreates the filter function (i.e., not useful).\r\n\r\nReally, though, I might as well just remove these assertions: they're redundant with the snapshot test."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000102\u0000105883980\u0000176218570\u0000":{"address":{"type":"COMMENT","id":"176218570","parent":{"type":"REVIEW","id":"105883980","pull":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/102#discussion_r176218570","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Really, though, I might as well just remove these assertions: they're redundant with the snapshot test.\r\n\r\nAlthough, after removing them, we should keep in mind that if the snapshots undergo a ton of churn, then we could easily replace them with more direct tests like this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000105\u0000376248912\u0000":{"address":{"type":"COMMENT","id":"376248912","parent":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#issuecomment-376248912","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"SGTM; feel free to squash and merge."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000106389635\u0000176648687\u0000":{"address":{"type":"COMMENT","id":"176648687","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r176648687","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What do you think about `export const ISSUE_NODE_TYPE = \"ISSUE\"` instead of this? This enables using it at the value layer, too; if we ever need the type as written here, it can be `typeof ISSUE_NODE_TYPE`. Are there places where you think this might be useful? (I'm fine with doing this now, later, or never.)\r\n\r\nFor instance, `NodeTypes` below could use `{[ISSUE_NODE_TYPE]: {…}, …}` instead of `{ISSUE: {…}, …}`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000106389635\u0000176649054\u0000":{"address":{"type":"COMMENT","id":"176649054","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r176649054","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Fine with deleting this for now. For polish, this should probably be reinstated as `formatType(type: string): string` to allow pretty-printing."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000106389635\u0000177135933\u0000":{"address":{"type":"COMMENT","id":"177135933","parent":{"type":"REVIEW","id":"106389635","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r177135933","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: on line 106, the comment can be changed from \"three\" to \"four\". Likewise, on line 27, maybe \"nested map\"."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107000295\u0000177172802\u0000":{"address":{"type":"COMMENT","id":"177172802","parent":{"type":"REVIEW","id":"107000295","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r177172802","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Adding formatType makes sense to me. We will probably want to enshrine type descriptor strings in the UI too (this was one thing I learned from TensorBoard; if you're creating a field where users will enter arbitrary \"title\"-like strings, you should give them a place to explain it too).\r\n\r\nNote: I would love it if this logic moved out of the artifact plugin and into the spec for every plugin (maybe as an optional piece, and the artifact plugin copes with a sensible default if it wasnt implemented)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107000720\u0000177173158\u0000":{"address":{"type":"COMMENT","id":"177173158","parent":{"type":"REVIEW","id":"107000720","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r177173158","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000105\u0000107002438\u0000177174604\u0000":{"address":{"type":"COMMENT","id":"177174604","parent":{"type":"REVIEW","id":"107002438","pull":{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/105#discussion_r177174604","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Per offline discussion: punting for now.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000106\u0000107021508\u0000177190682\u0000":{"address":{"type":"COMMENT","id":"177190682","parent":{"type":"REVIEW","id":"107021508","pull":{"type":"PULL","number":"106","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/106#discussion_r177190682","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's make this a function that generates the examples to avoid shared state across test cases:\r\n```js\r\nconst examples = () => [mansion(), fakeMansion(), mattressStore()];\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000112\u0000107133407\u0000177289999\u0000":{"address":{"type":"COMMENT","id":"177289999","parent":{"type":"REVIEW","id":"107133407","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/112#discussion_r177289999","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Verify that we are not mutating the original graph"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000112\u0000107136464\u0000177292846\u0000":{"address":{"type":"COMMENT","id":"177292846","parent":{"type":"REVIEW","id":"107136464","pull":{"type":"PULL","number":"112","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/112#discussion_r177292846","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000114\u0000107138003\u0000177294373\u0000":{"address":{"type":"COMMENT","id":"177294373","parent":{"type":"REVIEW","id":"107138003","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/114#discussion_r177294373","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: g1Ref is actually g1Copy \r\n(logically `const g1Ref = g1`)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000114\u0000107139169\u0000177295423\u0000":{"address":{"type":"COMMENT","id":"177295423","parent":{"type":"REVIEW","id":"107139169","pull":{"type":"PULL","number":"114","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/114#discussion_r177295423","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Miscommunication on my part. This meant \"ref\" as in \"reference solution\". I'll call it `g1Copy` instead."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109589512\u0000179361436\u0000":{"address":{"type":"COMMENT","id":"179361436","parent":{"type":"REVIEW","id":"109589512","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#discussion_r179361436","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"why do we want this createVariables function given that it's a pretty trivial one line expression?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109589883\u0000179361768\u0000":{"address":{"type":"COMMENT","id":"179361768","parent":{"type":"REVIEW","id":"109589883","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#discussion_r179361768","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The variable names are now encapsulated by this module. Code outside the module doesn't know the variable names, doesn't need to, and shouldn't.\r\n\r\n**edit:** By \"this module\" I refer to `github/graphql.js`, not `fetchGithubRepo.js`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000119\u0000109590292\u0000179362102\u0000":{"address":{"type":"COMMENT","id":"179362102","parent":{"type":"REVIEW","id":"109590292","pull":{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/119#discussion_r179362102","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Got it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179371552\u0000":{"address":{"type":"COMMENT","id":"179371552","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179371552","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It feels like there's some repetition of information between the EnclosingNodeType and other sequences, e.g. maybe the types of fragments? In principle, it would be nice if we could consolidate this all in one place / enforce the mapping at the type level. In practice, I think our attempts to do that within the GitHub plugin suggest it's not worth the effort right now. But wanted to mention it all-the-same."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179372842\u0000":{"address":{"type":"COMMENT","id":"179372842","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179372842","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I appreciate that once we hit a continuation, we use the full PAGE_LIMIT rather than the per-type page limit.\r\n\r\n(Although, is it hypothetically possible that we we would over-use our total pages limit? what's the maximum number of query fragments we could be putting into a single continuation? is it 100^(max enclosing depth) if we got more-than-full pages on every level of the nesting?)\r\n\r\nif we did hit this issue, would it fail clearly? i'm curious, but not too worried in practice."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179373377\u0000":{"address":{"type":"COMMENT","id":"179373377","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179373377","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"it's nice that we can use nested iterators this way."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179373941\u0000":{"address":{"type":"COMMENT","id":"179373941","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179373941","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":nods contemplatively:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179374038\u0000":{"address":{"type":"COMMENT","id":"179374038","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179374038","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"someday i hope we can get some traction on these questions"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109601075\u0000179375571\u0000":{"address":{"type":"COMMENT","id":"179375571","parent":{"type":"REVIEW","id":"109601075","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179375571","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"mindblown.gif"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109607696\u0000179377196\u0000":{"address":{"type":"COMMENT","id":"179377196","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179377196","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It’s not 100^(depth), because we only use the full `PAGE_LIMIT` on the outermost continuation. Within the continuation selections, we use the normal fragments, which have the shorter limits.\r\n\r\nI think it is not too likely that we will over-use the total entities-per-page limit of 500K. Note that we can statically determine whether this might happen. If we do hit this issue, it will fail clearly: the GitHub API will return a clear message, we’ll catch it in the `errors` of the result, and reject in the `postQuery` handler in `fetchGithubQuery.js`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109607696\u0000179377406\u0000":{"address":{"type":"COMMENT","id":"179377406","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179377406","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep! As far as I can tell, the iterator and generator APIs are pretty well designed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000121\u0000109607696\u0000179378736\u0000":{"address":{"type":"COMMENT","id":"179378736","parent":{"type":"REVIEW","id":"109607696","pull":{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/121#discussion_r179378736","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Without getting into too much detail (but happy to elaborate):\r\n  - I agree.\r\n  - These would be improved by a GitHub- or Relay-general API.\r\n  - I am in general open to coalescing the various points of repetition, but think that the marginal value is very low. There are a few places where I can imagine that the types are not necessarily forced to be equal, and in those cases the cost of introducing a bad abstraction would be significant.\r\n  - I think (agree) that doing any kind of type-level validation is not the right idea. Here, it might technically work, because everything is hard-coded—but in general, we want all the types to be dynamic, anyway, so we'd be hamstringing ourselves for much pain and no gain."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000378859005\u0000":{"address":{"type":"COMMENT","id":"378859005","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#issuecomment-378859005","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"So, I can offer the following refactoring, wherein we split out the path\r\ntraversal from the direct merging process. In my opinion, this is a\r\nvaluable distinction.\r\n\r\nNote that the majority of this code is error handling, including\r\npretty-printing for error handling. Once we’ve refined the type, the\r\npart that would be inlined is one line or a few lines, and I think that\r\nthe extracted versions are harder to read due to the indirection and\r\nlack of context.\r\n\r\nFinally, Prettier does not like any line breaks around `if`/`else if`\r\nblocks, so this is as much vertical whitespace as I can reasonably add.\r\n\r\nYour call: which do you prefer? (I lean toward this version.)\r\n\r\n```js\r\nexport function merge<T>(\r\n  destination: T,\r\n  source: any,\r\n  path: $ReadOnlyArray<string | number>\r\n): T {\r\n  if (path.length === 0) {\r\n    return mergeDirect(destination, source);\r\n  }\r\n\r\n  function isObject(x) {\r\n    return !Array.isArray(x) && typeof x === \"object\" && x != null;\r\n  }\r\n  function checkKey(key: string | number, destination: Object | Array<any>) {\r\n    if (!(key in destination)) {\r\n      const keyText = JSON.stringify(key);\r\n      const destinationText = JSON.stringify(destination);\r\n      throw new Error(\r\n        `Key ${keyText} not found in destination: ${destinationText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  const key = path[0];\r\n  if (typeof key === \"number\") {\r\n    if (!Array.isArray(destination)) {\r\n      throw new Error(\r\n        \"Found index key for non-array destination: \" +\r\n          JSON.stringify(destination)\r\n      );\r\n    }\r\n    checkKey(key, destination);\r\n    const newValue = merge(destination[key], source, path.slice(1));\r\n    const result = destination.slice();\r\n    result.splice(key, 1, newValue);\r\n    return result;\r\n  } else if (typeof key === \"string\") {\r\n    if (!isObject(destination)) {\r\n      throw new Error(\r\n        \"Found string key for non-object destination: \" +\r\n          JSON.stringify(destination)\r\n      );\r\n    }\r\n    const destinationObject: Object = (destination: any);\r\n    checkKey(key, destinationObject);\r\n    const newValue = merge(destinationObject[key], source, path.slice(1));\r\n    return {\r\n      ...destination,\r\n      [key]: newValue,\r\n    };\r\n  } else {\r\n    throw new Error(`Unexpected key: ${JSON.stringify(key)}`);\r\n  }\r\n}\r\n\r\n// Merge, without the path traversal.\r\nfunction mergeDirect<T>(destination: T, source: any): T {\r\n  function isObject(x) {\r\n    return !Array.isArray(x) && typeof x === \"object\" && x != null;\r\n  }\r\n  if (Array.isArray(source)) {\r\n    if (!Array.isArray(destination)) {\r\n      const destinationText = JSON.stringify(destination);\r\n      const sourceText = JSON.stringify(source);\r\n      throw new Error(\r\n        \"Tried to merge array into non-array: \" +\r\n          `(source: ${sourceText}; destination: ${destinationText})`\r\n      );\r\n    }\r\n    return destination.concat(source);\r\n  } else if (isObject(source)) {\r\n    if (!isObject(destination)) {\r\n      const destinationText = JSON.stringify(destination);\r\n      const sourceText = JSON.stringify(source);\r\n      throw new Error(\r\n        \"Tried to merge object into non-object: \" +\r\n          `(source: ${sourceText}; destination: ${destinationText})`\r\n      );\r\n    }\r\n    const result = {...destination};\r\n    Object.keys(source).forEach((k) => {\r\n      result[k] = mergeDirect(result[k], source[k]);\r\n    });\r\n    return result;\r\n  } else {\r\n    if (Array.isArray(destination) || isObject(destination)) {\r\n      const destinationText = JSON.stringify(destination);\r\n      const sourceText = JSON.stringify(source);\r\n      throw new Error(\r\n        \"Tried to merge primitive into non-primitive: \" +\r\n          `(source: ${sourceText}; destination: ${destinationText})`\r\n      );\r\n    }\r\n    return source;\r\n  }\r\n}\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000378864290\u0000":{"address":{"type":"COMMENT","id":"378864290","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#issuecomment-378864290","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I definitely like your split up version with merge and mergeDirect. Let's merge that."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000378875015\u0000":{"address":{"type":"COMMENT","id":"378875015","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#issuecomment-378875015","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let’s, indeed.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109610775\u0000179379760\u0000":{"address":{"type":"COMMENT","id":"179379760","parent":{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#discussion_r179379760","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"shouldn't this block be a part of checkKey?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109610775\u0000179380552\u0000":{"address":{"type":"COMMENT","id":"179380552","parent":{"type":"REVIEW","id":"109610775","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#discussion_r179380552","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"complaint: i find this function a little difficult to parse; it's almost 100 lines of code with inline functions but without any paragraph breaks. breaking it up visually (e.g. on the boundaries of inline functions) or breaking it up semantically (into mergeArray or mergeObject as appropriate) could be helpful."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109612592\u0000179381366\u0000":{"address":{"type":"COMMENT","id":"179381366","parent":{"type":"REVIEW","id":"109612592","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#discussion_r179381366","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ah, I see, that's because this is actually opening the \"handle number key block\" - I misread it as just being solely associated with another check. Another point for my \"can this be separated a bit more clearly for readability\" request, though."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109613370\u0000179382154\u0000":{"address":{"type":"COMMENT","id":"179382154","parent":{"type":"REVIEW","id":"109613370","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#discussion_r179382154","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Noted. I'll split them out locally and see what I think."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109618316\u0000179386422\u0000":{"address":{"type":"COMMENT","id":"179386422","parent":{"type":"REVIEW","id":"109618316","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/122#discussion_r179386422","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Addressed in https://github.com/sourcecred/sourcecred/pull/122#issuecomment-378859005."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000123\u0000378879516\u0000":{"address":{"type":"COMMENT","id":"378879516","parent":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#issuecomment-378879516","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"PTAL.\r\n\r\nI have rebased the original commit and added two more:\r\n\r\n  * 30d4958 - Implement exhaustive fetching for our GitHub query\r\n  * ca76756 - Restructure internals of `postQueryExhaustive`\r\n  * 5ae291a - Use `body` for the structured query format name\r\n\r\nNote to any mergers: please squash and merge, and use only the root\r\ncommit message (equivalently, the PR description).\r\n\r\n> I find the re-use of the name \"query\" for (i assume) the programmatic\r\n> query template and the laid-out string query slightly confusing, and\r\n> would appreciate disambiguation\r\n\r\nThis is largely mitigated by the fact that Flow enforces the\r\ndistinction. Nevertheless, I’m happy to rename the structured variant to\r\n`body`, primarily because it’s not worth bikeshedding over. :-)\r\n \r\n> It would be nice to have a docstring that explains how the pieces of\r\n> postQueryExhaustive fit together.\r\n\r\nDone. Let me know what you think.\r\n\r\n(**edit:** Reversed order in which commits are listed.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000123\u0000379270546\u0000":{"address":{"type":"COMMENT","id":"379270546","parent":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#issuecomment-379270546","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Excellent work with this sequence of PRs!\r\n\r\nThank you.\r\n\r\n> I think removing that snapshot assertion is fine. Making it convenient to read what the generated query looks like is nice, but not worth the cause of introducing spurious snapshot failures - to do so privileges an edge case (wanting to see the exact generated query) over the common case (modifying something and not wanting spurious snapshot failures).\r\n\r\nMakes sense to me. Merging."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109616076\u0000179384452\u0000":{"address":{"type":"COMMENT","id":"179384452","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179384452","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I find the re-use of the name \"query\" for (i assume) the programmatic query template and the laid-out string query slightly confusing, and would appreciate disambiguation"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109616076\u0000179384940\u0000":{"address":{"type":"COMMENT","id":"179384940","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179384940","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"if we were writing this from scratch today (i.e. after writing the query pagination solution), do you think we would have written an ensureNoMorePages function here? i'm happy to keep it either way (yay defensive coding), but it's maybe an interestingly path-dependent artifact"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109616076\u0000179385740\u0000":{"address":{"type":"COMMENT","id":"179385740","parent":{"type":"REVIEW","id":"109616076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179385740","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"What is this function for? would appreciate a docstring"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109619155\u0000179387155\u0000":{"address":{"type":"COMMENT","id":"179387155","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179387155","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I would certainly include it. The cost—computational cost, conceptual cost, cost of increased codebase size—is trivial, and the value is high. I would consider moving it somewhere else, though: perhaps folded in as an assertion at the end of the `postQueryExhaustive` routine.\r\n\r\n(**edited** to clarify wording)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109619155\u0000179387386\u0000":{"address":{"type":"COMMENT","id":"179387386","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179387386","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Fair. Note that the laid-out string query name is forced by the GitHub API. I considered calling the structured one `body` everywhere, and am still happy to do so. (If there is a reason that I decided not to do that, then I forget the reason.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109619155\u0000179387853\u0000":{"address":{"type":"COMMENT","id":"179387853","parent":{"type":"REVIEW","id":"109619155","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179387853","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; happy to add one. TL;DR: It is an error to include fragment definitions that are not used, so this function and `requiredFragments` perform a BFS of the query graph to find the required fragments. This one in particular gets the fragments used *non-transitively* in a given selection; `requiredFragments` does the search.\r\n\r\n(**edited** to fix spelling typo)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109624099\u0000179391469\u0000":{"address":{"type":"COMMENT","id":"179391469","parent":{"type":"REVIEW","id":"109624099","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179391469","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Got it. Yeah, that context should definitely be documented - nonobvious to figure out what problem they solve absent the documentation."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109945582\u0000179659267\u0000":{"address":{"type":"COMMENT","id":"179659267","parent":{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179659267","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"i appreciate the rhyme (cred/instead). i now wish the whole test case were in verse"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109945582\u0000179659721\u0000":{"address":{"type":"COMMENT","id":"179659721","parent":{"type":"REVIEW","id":"109945582","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179659721","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"so, this test case is very powerful, in that it tests the query construction, the fragment resolution, etc.\r\nhowever, it also inlines the entire real query in the snapshot, which means that any time we modify the real query, we will generate a snapshot failure here. since we don't actually use the query, this is just noise/false positives for our snapshot detection.\r\n\r\nis it feasible to re-write the test without causing spurious failures whenever we tweak the query? perhaps by constructing a small example query to use instead?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109947256\u0000179660741\u0000":{"address":{"type":"COMMENT","id":"179660741","parent":{"type":"REVIEW","id":"109947256","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179660741","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Note: if we change the query, there is a fairly high probability we also need to update other snapshots, so having spurious failures on that change is not as bad as in the general case"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109948076\u0000179661493\u0000":{"address":{"type":"COMMENT","id":"179661493","parent":{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179661493","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> however, it also inlines the entire real query in the snapshot, which means that any time we modify the real query, we will generate a snapshot failure here.\r\n\r\nCorrect.\r\n\r\n> is it feasible to re-write the test without causing spurious failures whenever we tweak the query? perhaps by constructing a small example query to use instead?\r\n\r\nI don’t think that constructing a small query is the right way to go. The pagination API is only intended to work on the standard query, so we would be violating the contract in the test—in an important way.\r\n\r\nHere are two alternative options:\r\n  - Remove the snapshot assertion entirely. This does not significantly affect the predictive power of the test: the `result` assertion is most important, and the `toHaveBeenCalledTimes(3)` makes sure that we aren’t making spurious requests.\r\n  - Remove the first element from the snapshot array, and instead separately assert that the first argument was `{body: createQuery(), variables}`. This retains the full predictive power of the test, and shrinks the snapshot (but makes the code less uniform).\r\n\r\nThe reason that I included the snapshots was primarily for readers’ benefit, to make it easy to see what the continuation queries looked like. But, in retrospect, perhaps that’s not necessary: a reader who cares about this probably has a working copy of the code and enough understanding of the API to easily add a `console.log` to the right spot in the test. So I am fine with either of these solutions or the status quo, leaning toward removing the snapshot entirely. Thoughts?\r\n\r\n(**edited** to fix Markdown formatting)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109948076\u0000179661600\u0000":{"address":{"type":"COMMENT","id":"179661600","parent":{"type":"REVIEW","id":"109948076","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179661600","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unfortunately, that would violate the “no fun allowed” rule. ;-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000123\u0000109986822\u0000179694267\u0000":{"address":{"type":"COMMENT","id":"179694267","parent":{"type":"REVIEW","id":"109986822","pull":{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/123#discussion_r179694267","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think removing that snapshot assertion is fine. Making it convenient to read what the generated query looks like is nice, but not worth the cause of introducing spurious snapshot failures - to do so privileges an edge case (wanting to see the exact generated query) over the common case (modifying something and not wanting spurious snapshot failures)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000124\u0000379430967\u0000":{"address":{"type":"COMMENT","id":"379430967","parent":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#issuecomment-379430967","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"To clarify my top-level review comment: (a) the reason is that it\r\ndramatically improves readability of the paragraph; (b) you can put the\r\nanchors anywhere, but typically I put them at the end of each paragraph\r\nor section so that they are easy to find but don’t disrupt the flow of\r\nreading.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000124\u0000379472343\u0000":{"address":{"type":"COMMENT","id":"379472343","parent":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#issuecomment-379472343","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"PTAL - in addition to addressing your comments, I have made several other changes."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907718\u0000":{"address":{"type":"COMMENT","id":"179907718","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907718","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I think that this is misleading. You’re referring to what GitHub calls the “contribution graph”\\*. But when I think “contribution graph” in the context of SourceCred, I think “graph-theoretic network of contributions” (i.e., `graph.js`), which is not at all what you’re saying that we should “go beyond”—just the opposite.\r\n\r\n\\* The term “contribution graph” for the calendar-like thing on your profile is new to me. GitHub Help docs do indeed call it that, but this isn’t featured anywhere in the UI. When you mentioned this earlier, I assumed that you were talking about the “Contributors” graph, which is located at e.g. [1] (note “graphs” in URL) and used to explicitly be under the now-removed “Graphs” tab. More evidence that clarification/renaming is in order.\r\n\r\n\\[1]: https://github.com/sourcecred/sourcecred/graphs/contributors\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907784\u0000":{"address":{"type":"COMMENT","id":"179907784","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907784","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Number mismatch (“open source software […] are amazing”). Consider: “Open source software is amazing, and so are the contributors who create and share it.” (Also—prefer _who_ over _that_ for people.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907796\u0000":{"address":{"type":"COMMENT","id":"179907796","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907796","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why is “open-economy” hyphenated?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907808\u0000":{"address":{"type":"COMMENT","id":"179907808","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907808","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please use unspaced em dashes—like this—instead of spaced hyphens everywhere. (The code point is U+2014, or in vim insert mode type `<C-K>-M`: that’s control-K hyphen capital-M)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907817\u0000":{"address":{"type":"COMMENT","id":"179907817","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907817","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"_Attribution_ or _allocation_?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907853\u0000":{"address":{"type":"COMMENT","id":"179907853","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907853","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"“Stored in Git” or “stored in the project [repository]”? (Any is fine with me.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110245933\u0000179907862\u0000":{"address":{"type":"COMMENT","id":"179907862","parent":{"type":"REVIEW","id":"110245933","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179907862","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Tense mismatch: the other two are present; this one is future."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255888\u0000179917121\u0000":{"address":{"type":"COMMENT","id":"179917121","parent":{"type":"REVIEW","id":"110255888","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917121","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"How about \"commit streaks\"?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255910\u0000179917146\u0000":{"address":{"type":"COMMENT","id":"179917146","parent":{"type":"REVIEW","id":"110255910","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917146","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110255924\u0000179917159\u0000":{"address":{"type":"COMMENT","id":"179917159","parent":{"type":"REVIEW","id":"110255924","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917159","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done, but why?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256030\u0000179917260\u0000":{"address":{"type":"COMMENT","id":"179917260","parent":{"type":"REVIEW","id":"110256030","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917260","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I prefer attribution. I know I've said \"cred allocation\" a lot in the past, but \"attribution\" is a better semantic fit - allocation suggests a scarce resource that needs to be divvied up, which cred is not. There's as much cred available as there is work that deserves recognition."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256062\u0000179917292\u0000":{"address":{"type":"COMMENT","id":"179917292","parent":{"type":"REVIEW","id":"110256062","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917292","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done, thanks. I was unnecessarily scoping from the general concept, to a specific implementation (and I suspect that there will be other implementations, e.g. ipfs, soon)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256202\u0000179917446\u0000":{"address":{"type":"COMMENT","id":"179917446","parent":{"type":"REVIEW","id":"110256202","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917446","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"fixed, and rewrote this section to anchor on pieces of the mvp (GH plugin, explorer, artifact plugin)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110256348\u0000179917584\u0000":{"address":{"type":"COMMENT","id":"179917584","parent":{"type":"REVIEW","id":"110256348","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179917584","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918694\u0000":{"address":{"type":"COMMENT","id":"179918694","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918694","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: How is this paragraph hard-wrapped? Some lines are at 87, some at 60. Good old `gqip` will rewrap at 80 (by default: `:set textwidth=72`/`:set tw=72` or other if you prefer)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918728\u0000":{"address":{"type":"COMMENT","id":"179918728","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918728","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"“Commit streaks” is perfect.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918759\u0000":{"address":{"type":"COMMENT","id":"179918759","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918759","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: Missed an em dash here. (This will require rewrapping so that `graph]—into` is on one physical line.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918804\u0000":{"address":{"type":"COMMENT","id":"179918804","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918804","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: After this heading, could you add a short paragraph to introduce the list, like “SourceCred aims to be:”?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918875\u0000":{"address":{"type":"COMMENT","id":"179918875","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918875","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Do you want to add a qualifier, like “…discover that perfectly on its own…”? The goal _is_ to discover that automatically as best as possible; we just accept that it will be imperfect and welcome manual adjustments."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918971\u0000":{"address":{"type":"COMMENT","id":"179918971","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918971","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Backticks aren’t appropriate here; they are for code formatting. Either italics, bold, or nothing are fine with me (no preference).\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110257536\u0000179918979\u0000":{"address":{"type":"COMMENT","id":"179918979","parent":{"type":"REVIEW","id":"110257536","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179918979","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Dangling stuff."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329776\u0000179988655\u0000":{"address":{"type":"COMMENT","id":"179988655","parent":{"type":"REVIEW","id":"110329776","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179988655","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329784\u0000179988664\u0000":{"address":{"type":"COMMENT","id":"179988664","parent":{"type":"REVIEW","id":"110329784","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179988664","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329842\u0000179988713\u0000":{"address":{"type":"COMMENT","id":"179988713","parent":{"type":"REVIEW","id":"110329842","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179988713","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110329904\u0000179988772\u0000":{"address":{"type":"COMMENT","id":"179988772","parent":{"type":"REVIEW","id":"110329904","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179988772","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110331281\u0000179990034\u0000":{"address":{"type":"COMMENT","id":"179990034","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179990034","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"sp.: unappreciated"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110331281\u0000179990069\u0000":{"address":{"type":"COMMENT","id":"179990069","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179990069","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: em dash should not be followed by space"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110331281\u0000179990242\u0000":{"address":{"type":"COMMENT","id":"179990242","parent":{"type":"REVIEW","id":"110331281","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179990242","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"s/but/by. Also, comma preceding *but* is unnecessary."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332471\u0000179991048\u0000":{"address":{"type":"COMMENT","id":"179991048","parent":{"type":"REVIEW","id":"110332471","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179991048","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332478\u0000179991053\u0000":{"address":{"type":"COMMENT","id":"179991053","parent":{"type":"REVIEW","id":"110332478","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179991053","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000124\u0000110332490\u0000179991059\u0000":{"address":{"type":"COMMENT","id":"179991059","parent":{"type":"REVIEW","id":"110332490","pull":{"type":"PULL","number":"124","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/124#discussion_r179991059","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000125\u0000382747499\u0000":{"address":{"type":"COMMENT","id":"382747499","parent":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#issuecomment-382747499","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Going to re-write with an enrichment pass, as suggested."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182578313\u0000":{"address":{"type":"COMMENT","id":"182578313","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182578313","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If you want numeric keys, could you make these `Map`s? Recall that all keys will be coerced to string, which means that the `[n: number]` indexer is quite misleading.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182578533\u0000":{"address":{"type":"COMMENT","id":"182578533","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182578533","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Any reason to use this type instead of the more specific `Node<IssueNodePayload> | Node<PullRequestNodePayload>`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182579056\u0000":{"address":{"type":"COMMENT","id":"182579056","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182579056","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don’t understand. This only returns numeric references, right? How does a URL come into play, and why would we prepend `#` to it? Are the docs more general than the actual implementation?\r\n\r\nI would like it to be the case that all references are returned _exactly_ as they actually appeared in the source, not just “like” how they may have appeared. Is this what you meant? (The verbiage suggests otherwise to me.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182579393\u0000":{"address":{"type":"COMMENT","id":"182579393","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182579393","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: this can be simplified to\r\n```js\r\nconst fake_pr1 = {\r\n  ...exampleRepoData.data.repository.pullRequests.nodes[0],\r\n  number: 1,\r\n};\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182579538\u0000":{"address":{"type":"COMMENT","id":"182579538","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182579538","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can this be thunked, too, please? `const fake_pr1 = () =>`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182579556\u0000":{"address":{"type":"COMMENT","id":"182579556","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182579556","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: camelCase for `fake_pr1`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000125\u0000113402856\u0000182582615\u0000":{"address":{"type":"COMMENT","id":"182582615","parent":{"type":"REVIEW","id":"113402856","pull":{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/125#discussion_r182582615","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please ensure that no state is shared across test cases."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000382520937\u0000":{"address":{"type":"COMMENT","id":"382520937","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/128#issuecomment-382520937","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also: this is a prereq for https://github.com/sourcecred/sourcecred/issues/127"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000382537550\u0000":{"address":{"type":"COMMENT","id":"382537550","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/128#issuecomment-382537550","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Note: In a future commit, I plan to explicitly differentiate between \"posts\", which have authors and bodies, and \"authors\", which do not, such that every GitHub node is either a \"post\" or an \"author\".\r\n\r\nIt's important that all posts have URLs, but not very important that every author have a url, since authors are almost always referenced by @-name. I'm defaulting to keeping the author urls because why not, but I'm very open to removing them and only collecting post urls."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000382966685\u0000":{"address":{"type":"COMMENT","id":"382966685","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/128#issuecomment-382966685","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Note: In a future commit, I plan to explicitly differentiate between \"posts\", which have authors and bodies, and \"authors\", which do not, such that every GitHub node is either a \"post\" or an \"author\".\r\n\r\nFine with me, but: is this something that we want to rely on in the future? Another way to ask that is—what inferences does this assumption allow you to make?\r\n\r\n> It's important that all posts have URLs, but not very important that every author have a url, since authors are almost always referenced by @-name. I'm defaulting to keeping the author urls because why not, but I'm very open to removing them and only collecting post urls.\r\n\r\nNo preference; consistency sounds like a good tiebreaker."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000383121064\u0000":{"address":{"type":"COMMENT","id":"383121064","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/128#issuecomment-383121064","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Re posts/non-posts: Will punt on discussing it until / if I produce said pull request. Merging! :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000129\u0000382970474\u0000":{"address":{"type":"COMMENT","id":"382970474","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#issuecomment-382970474","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Oh. Never mind. It's obvious.\r\n\r\nYou ran the query in Israel, didn't you? :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000129\u0000383124635\u0000":{"address":{"type":"COMMENT","id":"383124635","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#issuecomment-383124635","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"> Can we instead let `fetchGithubRepoTest.sh` take a `-u|--updateSnapshot`\r\nargument? This way, (a) we reduce code duplication, and (b) we present\r\nan interface consistent with Jest (which we shouldn’t necessarily strive\r\nfor in general, but is a nice benefit).\r\n\r\nSure, happy to do that. Could you recommend a pattern for how to parse those flags, or point me to a good example?\r\n\r\n>> manually run yarn backend rather than trusting the user to hvae done\r\n>> it; this ensures correctness, as the user may have changed the query\r\n>> since the last rebuild, which would result in outdated results. For\r\n>> consistency and correctness, I also updated fetchGithubRepoTest.sh.\r\n\r\n>This is fine with me. It’s not ideal: best would be a Makefile-like\r\n>resolution that avoids spurious invocations of `yarn backend`, which\r\n>takes an annoyingly long time. Second-best would be an “override”\r\n>argument, but fine to keep as is for now.\r\n\r\nBest would be to make the build fast, fixing anything here is second-best.\r\n\r\n> Two things. First: this is a sneaky way to say, “by the way, we now\r\n> silence all warnings”. I disagree with this change. I believe that the\r\n> benefit of seeing new actual warnings outweighs the loss of a few lines\r\n> of terminal space. Second (more minor): if we ever want to run this on\r\n> any kind of CI system, the benefit of having the exact errors available\r\n> without re-running `yarn backend` is increased.\r\n\r\nReverted.\r\n\r\nAnd yes, I was in Israel when I generated this change :) "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000129\u0000383131107\u0000":{"address":{"type":"COMMENT","id":"383131107","parent":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#issuecomment-383131107","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Best would be to make the build fast, fixing anything here is second-best.\r\n\r\nGood point.\r\n\r\n> Sure, happy to do that. Could you recommend a pattern for how to parse\r\n> those flags, or point me to a good example?\r\n\r\nMy rule of thumb is: when there are few enough flags to tractably just\r\nwrite the dispatch table, do that; otherwise, consider using a Python\r\nscript instead. In this case, something like:\r\n```bash\r\nmain() {\r\n  if [ $# -eq 0 ]; then\r\n    check\r\n  elif [ $# -eq 1 ]; then\r\n    if [ \"$1\" = \"-u\" ] || [ \"$1\" = \"--updateSnapshot\" ]; then\r\n      update\r\n    elif [ \"$1\" = \"--help\" ]; then\r\n      usage\r\n    else\r\n      usage >&2\r\n      return 1\r\n    fi\r\n  else\r\n    usage >&2\r\n    return 1\r\n  fi\r\n}\r\n```\r\nHere’s a sketch (untested) of the structure that I envision:\r\nhttps://gist.github.com/wchargin/f38c09caa58d8e31caac4c57fa44b926\r\n\r\n> And yes, I was in Israel when I generated this change :)\r\n\r\nCool. Can we regenerate it in Pacific time to remove the churn?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000182942012\u0000":{"address":{"type":"COMMENT","id":"182942012","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r182942012","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: s/change/changes"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000182942100\u0000":{"address":{"type":"COMMENT","id":"182942100","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r182942100","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The first semicolon must be removed for the command to be correct. (The trailing semicolon should be removed for good style.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000182942124\u0000":{"address":{"type":"COMMENT","id":"182942124","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r182942124","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we use code fences here (and below)?\r\n``````markdown\r\n```shell\r\n$ GITHUB_TOKEN=\"your_token_here\" src/plugins/github/demoData/regenerate.sh\r\n```\r\n``````\r\nThis has the correct semantic meaning (block of code, not inline code), and also renders appropriately."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000182942266\u0000":{"address":{"type":"COMMENT","id":"182942266","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r182942266","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Trailing semicolon is unnecessary."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000113844822\u0000182942377\u0000":{"address":{"type":"COMMENT","id":"182942377","parent":{"type":"REVIEW","id":"113844822","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r182942377","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(If only `chronic(1)` were part of `coreutils` and not [`moreutils`]… but this is superseded by general comment about this choice, anyway.)\r\n\r\n[`moreutils`]: https://joeyh.name/code/moreutils/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114009400\u0000183075947\u0000":{"address":{"type":"COMMENT","id":"183075947","parent":{"type":"REVIEW","id":"114009400","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r183075947","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011831\u0000183077903\u0000":{"address":{"type":"COMMENT","id":"183077903","parent":{"type":"REVIEW","id":"114011831","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r183077903","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011860\u0000183077926\u0000":{"address":{"type":"COMMENT","id":"183077926","parent":{"type":"REVIEW","id":"114011860","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r183077926","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114011936\u0000183077990\u0000":{"address":{"type":"COMMENT","id":"183077990","parent":{"type":"REVIEW","id":"114011936","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r183077990","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done (removed the >/dev/null pipe)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000129\u0000114493414\u0000183485904\u0000":{"address":{"type":"COMMENT","id":"183485904","parent":{"type":"REVIEW","id":"114493414","pull":{"type":"PULL","number":"129","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/129#discussion_r183485904","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Tab spotted! :o"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000113849998\u0000182946567\u0000":{"address":{"type":"COMMENT","id":"182946567","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r182946567","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unrelated to this change, but I think that you do not actually need the `m` (multiline) flag, because `/\\n|\\r/` is a subset of `/\\W/`. Tests pass without the flag. If you think that the flag should be there, then I would like to see a test to this effect (in a different PR)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000113849998\u0000182946894\u0000":{"address":{"type":"COMMENT","id":"182946894","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r182946894","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`concat` is variadic. Prefer either of the following:\r\n```js\r\nreturn [].concat(\r\n  findNumericReferences(body),\r\n  findUsernameReferences(body),\r\n  findGithubUrlReferences(body)\r\n);\r\nreturn [\r\n  ...findNumericReferences(body),\r\n  ...findUsernameReferences(body),\r\n  ...findGithubUrlReferences(body),\r\n];\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000113849998\u0000182948989\u0000":{"address":{"type":"COMMENT","id":"182948989","parent":{"type":"REVIEW","id":"113849998","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r182948989","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is totally fine with me. You could also use\r\n```js\r\nreturn body.match(urlRegex).map((x) => x.trim());\r\n```\r\nbecause you do not care about any particular capturing groups."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114565645\u0000183545917\u0000":{"address":{"type":"COMMENT","id":"183545917","parent":{"type":"REVIEW","id":"114565645","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r183545917","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114565670\u0000183545943\u0000":{"address":{"type":"COMMENT","id":"183545943","parent":{"type":"REVIEW","id":"114565670","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r183545943","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114566678\u0000183546785\u0000":{"address":{"type":"COMMENT","id":"183546785","parent":{"type":"REVIEW","id":"114566678","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r183546785","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I tried that, but body.match(urlRegex) returns null and so .map throws a type error. Leaving unchanged."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000130\u0000114567703\u0000183547714\u0000":{"address":{"type":"COMMENT","id":"183547714","parent":{"type":"REVIEW","id":"114567703","pull":{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/130#discussion_r183547714","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Apparently `match` returns an array of matches, or `null` if there are none—a cardinal sin. Your way is better. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114425071\u0000183428958\u0000":{"address":{"type":"COMMENT","id":"183428958","parent":{"type":"REVIEW","id":"114425071","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#discussion_r183428958","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"why the any-cast in `(node.address.type: any)`?\r\n\r\nwould it be cleaner to write `anyNode.address.type`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114439642\u0000183440916\u0000":{"address":{"type":"COMMENT","id":"183440916","parent":{"type":"REVIEW","id":"114439642","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#discussion_r183440916","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"An `Address` has `type: string`. In our case, we know that the type is\r\nmore specifically a `NodeType`. So we are downcasting `string` to\r\n`NodeType`, which is unsafe in general but safe in this case. That’s why\r\nwe need to go through `any`.\r\n\r\n(Side-note: Flow really should have a “safe downcast” that at least\r\nverifies that the target is a subtype of the source. But whatever.)\r\n\r\nWe can’t write `anyNode.address.type`, because `anyNode.address` is a\r\nnormal, monomorphic `Address`, and so `anyNode.address.type: string`. We\r\ncould of course write `(anyNode.address.type: any)`, but I fail to see\r\nwhy that would be cleaner.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000133\u0000114472173\u0000183468364\u0000":{"address":{"type":"COMMENT","id":"183468364","parent":{"type":"REVIEW","id":"114472173","pull":{"type":"PULL","number":"133","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/133#discussion_r183468364","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Got it, thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000138\u0000114600910\u0000183576679\u0000":{"address":{"type":"COMMENT","id":"183576679","parent":{"type":"REVIEW","id":"114600910","pull":{"type":"PULL","number":"138","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/138#discussion_r183576679","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Is this parser actually` parser.test.js` now?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000139\u0000384072091\u0000":{"address":{"type":"COMMENT","id":"384072091","parent":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#issuecomment-384072091","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Pushing a no-op change to get an up-to-date Travis merge check."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114867285\u0000183799776\u0000":{"address":{"type":"COMMENT","id":"183799776","parent":{"type":"REVIEW","id":"114867285","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183799776","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"(nit): why not `cleanups.forEach((f) => f())`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114867796\u0000183800178\u0000":{"address":{"type":"COMMENT","id":"183800178","parent":{"type":"REVIEW","id":"114867796","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183800178","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"looks like this would be a really nice case to use python context managers (if we were in python) :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868668\u0000183800923\u0000":{"address":{"type":"COMMENT","id":"183800923","parent":{"type":"REVIEW","id":"114868668","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183800923","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"That lambda is equivalent to `(f) => { return f(); }`, which is not what I mean. In this case, the effect is the same (because JavaScript), but I prefer to follow Google style and only use the expression form when you actually want an expression."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114869127\u0000183801287\u0000":{"address":{"type":"COMMENT","id":"183801287","parent":{"type":"REVIEW","id":"114869127","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183801287","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep: `with tempfile.TemporaryDirectory as tmpdir():` is great."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183800631\u0000":{"address":{"type":"COMMENT","id":"183800631","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183800631","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This comment looks like an apology for the function name. If we need to document that it's a deterministic commit of the index, maybe `deterministicIndexCommit`? (`git` is redundant with the function signature / context)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183801641\u0000":{"address":{"type":"COMMENT","id":"183801641","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183801641","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Why are there two functions named commit? \r\nMaybe this should be called `addChangesAndCommit`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183803023\u0000":{"address":{"type":"COMMENT","id":"183803023","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183803023","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think we should try [defying gravity]\r\n\r\n[defying gravity]: https://www.youtube.com/watch?v=3g4ekwTd6Ig"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183823430\u0000":{"address":{"type":"COMMENT","id":"183823430","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183823430","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Can we have a docstring giving examples of rootRefs"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183825447\u0000":{"address":{"type":"COMMENT","id":"183825447","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183825447","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Propose factoring the part where we touch git into a separate function, so we can evaluate the BFS independently of the git logic"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114868346\u0000183828489\u0000":{"address":{"type":"COMMENT","id":"183828489","parent":{"type":"REVIEW","id":"114868346","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183828489","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"as discussed offline: i think it's a bit weird that we're re-implementing breadth first search here, given that the logic of BFS could be cleanly decoupled from the logic of how to explore a node and produce a result and a set of adjacent nodes to visit. we think this might be the second BFS implementation in our codebase (the other potentially residing with graphql query pagination). once we have at least three BFS implementations, I'll consider factoring them out into a little module :) "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183834239\u0000":{"address":{"type":"COMMENT","id":"183834239","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183834239","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed. Done: `deterministicCommit` I think is clear enough."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183834704\u0000":{"address":{"type":"COMMENT","id":"183834704","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183834704","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed: using `makeChangesAndCommit` because sometimes we `git rm`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183834801\u0000":{"address":{"type":"COMMENT","id":"183834801","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183834801","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Will take under advisement if we need to add more commits. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183835302\u0000":{"address":{"type":"COMMENT","id":"183835302","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183835302","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Great idea. Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183838115\u0000":{"address":{"type":"COMMENT","id":"183838115","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183838115","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Noted. There are a number of potential reasonable formulations, which I’m happy to explore.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000139\u0000114909111\u0000183838696\u0000":{"address":{"type":"COMMENT","id":"183838696","parent":{"type":"REVIEW","id":"114909111","pull":{"type":"PULL","number":"139","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/139#discussion_r183838696","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure. Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000140\u0000114962547\u0000183877699\u0000":{"address":{"type":"COMMENT","id":"183877699","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/140#discussion_r183877699","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`ConnectionJSON`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000140\u0000114962547\u0000183877741\u0000":{"address":{"type":"COMMENT","id":"183877741","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/140#discussion_r183877741","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This should be covariant in `T`: namely, `ConnectionJSON<+T>`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000140\u0000114962547\u0000183878108\u0000":{"address":{"type":"COMMENT","id":"183878108","parent":{"type":"REVIEW","id":"114962547","pull":{"type":"PULL","number":"140","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/140#discussion_r183878108","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`@q` :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000145\u0000115399656\u0000184243903\u0000":{"address":{"type":"COMMENT","id":"184243903","parent":{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/145#discussion_r184243903","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Having this type annotation gives me a lot of confidence. :+1:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000145\u0000115399656\u0000184244092\u0000":{"address":{"type":"COMMENT","id":"184244092","parent":{"type":"REVIEW","id":"115399656","pull":{"type":"PULL","number":"145","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/145#discussion_r184244092","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Two comments:\r\n  - It's clear enough after reading the function implementation that this parses a specified _subset_ of the example repo, but this wasn't immediately obvious when just reading the signature.\r\n  - I think that the clients are more readable with named arguments: `parseExample({issues: [1], prs: []})`. What do you think?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000184573583\u0000":{"address":{"type":"COMMENT","id":"184573583","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184573583","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can make these read-only, too."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000184574736\u0000":{"address":{"type":"COMMENT","id":"184574736","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184574736","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can get around the string-based dispatch, and avoid the `: any` casts, with something like:\r\n```js\r\nconst branches = [{\r\n  choice: \"in-edges\",\r\n  edges: (egc) => egc.inEdges,\r\n  getEdges: (egc) => (node, options) => egc.graph.getInEdges(node, options);\r\n}, /* the other one */];\r\nbranches.forEach(() => { … });\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000184574774\u0000":{"address":{"type":"COMMENT","id":"184574774","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184574774","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: mind lowercasing these, as standard variable names?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000184574850\u0000":{"address":{"type":"COMMENT","id":"184574850","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184574850","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This name is confusing to me. Isn't it more like an `ExampleGraph`? I expected to see `new ExampleGraphConstructor().createGraph()` or something."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115798679\u0000184574937\u0000":{"address":{"type":"COMMENT","id":"184574937","parent":{"type":"REVIEW","id":"115798679","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184574937","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"These can all be\r\n```js\r\nconst {A1, A2, B1, B2} = (egc: any)[choice];\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115800925\u0000184575496\u0000":{"address":{"type":"COMMENT","id":"184575496","parent":{"type":"REVIEW","id":"115800925","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184575496","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115801024\u0000184575585\u0000":{"address":{"type":"COMMENT","id":"184575585","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184575585","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115801024\u0000184575670\u0000":{"address":{"type":"COMMENT","id":"184575670","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184575670","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ok"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000147\u0000115801024\u0000184575682\u0000":{"address":{"type":"COMMENT","id":"184575682","parent":{"type":"REVIEW","id":"115801024","pull":{"type":"PULL","number":"147","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/147#discussion_r184575682","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000150\u0000115804047\u0000184578139\u0000":{"address":{"type":"COMMENT","id":"184578139","parent":{"type":"REVIEW","id":"115804047","pull":{"type":"PULL","number":"150","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/150#discussion_r184578139","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"put a link to docs for the options"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000156\u0000115808416\u0000184581964\u0000":{"address":{"type":"COMMENT","id":"184581964","parent":{"type":"REVIEW","id":"115808416","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/156#discussion_r184581964","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"instead of manually managing the commits array (which allows desync, as seen here where we seem to be missing a commit?), lets have one function that commits and updates the array"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000156\u0000115808927\u0000184582422\u0000":{"address":{"type":"COMMENT","id":"184582422","parent":{"type":"REVIEW","id":"115808927","pull":{"type":"PULL","number":"156","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/156#discussion_r184582422","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good idea. Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810029\u0000184583327\u0000":{"address":{"type":"COMMENT","id":"184583327","parent":{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#discussion_r184583327","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I'd prefer if you used objects with named attributes here instead of tuples, but no super strong preference."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810029\u0000184583401\u0000":{"address":{"type":"COMMENT","id":"184583401","parent":{"type":"REVIEW","id":"115810029","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#discussion_r184583401","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. This works because `eg` has no loops, right?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810217\u0000184583478\u0000":{"address":{"type":"COMMENT","id":"184583478","parent":{"type":"REVIEW","id":"115810217","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#discussion_r184583478","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000157\u0000115810266\u0000184583523\u0000":{"address":{"type":"COMMENT","id":"184583523","parent":{"type":"REVIEW","id":"115810266","pull":{"type":"PULL","number":"157","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/157#discussion_r184583523","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I agree in principle, in practice this test is a modified copy+paste of two similarly structured tests, and I'd rather keep them consistent."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000160\u0000385093634\u0000":{"address":{"type":"COMMENT","id":"385093634","parent":{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/160#issuecomment-385093634","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Certainly. Will do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000162\u0000385106025\u0000":{"address":{"type":"COMMENT","id":"385106025","parent":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/162#issuecomment-385106025","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"okay"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000162\u0000116092182\u0000184813987\u0000":{"address":{"type":"COMMENT","id":"184813987","parent":{"type":"REVIEW","id":"116092182","pull":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/162#discussion_r184813987","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nice docs. Can the first line say, \"…of the node at a given address\"? (And, period at end of line.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000164\u0000116102626\u0000184823002\u0000":{"address":{"type":"COMMENT","id":"184823002","parent":{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/164#discussion_r184823002","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we just call this attribute `subtype`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000164\u0000116102626\u0000184823072\u0000":{"address":{"type":"COMMENT","id":"184823072","parent":{"type":"REVIEW","id":"116102626","pull":{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/164#discussion_r184823072","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This can be `const` now. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000166\u0000385131236\u0000":{"address":{"type":"COMMENT","id":"385131236","parent":{"type":"PULL","number":"166","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/166#issuecomment-385131236","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Reviewing the new test script is easier by looking at the second commit in isolation."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000167\u0000385135316\u0000":{"address":{"type":"COMMENT","id":"385135316","parent":{"type":"PULL","number":"167","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/167#issuecomment-385135316","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Decided that this PR is unnecessary."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000169\u0000385139537\u0000":{"address":{"type":"COMMENT","id":"385139537","parent":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#issuecomment-385139537","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Would it be feasible to have a test case that examines a particular known path thru the repo?\r\n\r\nI like this idea, and will implement it.\r\n\r\n> Here and elsewhere: use the variable rather than string constant\r\n\r\nSure; will do.\r\n\r\n> We don't have any testing for the fact that tree entries point to blobs, just that they point to something. Could we be a bit more specific?\r\n\r\nThis is a fair criticism. A solution is not immediately obvious to me. I will think about it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116120885\u0000184839256\u0000":{"address":{"type":"COMMENT","id":"184839256","parent":{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#discussion_r184839256","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Here and elsewhere: use the variable rather than string constant"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116120885\u0000184839473\u0000":{"address":{"type":"COMMENT","id":"184839473","parent":{"type":"REVIEW","id":"116120885","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#discussion_r184839473","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We don't have any testing for the fact that tree entries point to blobs, just that they point to something. Could we be a bit more specific? "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116386453\u0000185068122\u0000":{"address":{"type":"COMMENT","id":"185068122","parent":{"type":"REVIEW","id":"116386453","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#discussion_r185068122","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000169\u0000116386627\u0000185068269\u0000":{"address":{"type":"COMMENT","id":"185068269","parent":{"type":"REVIEW","id":"116386627","pull":{"type":"PULL","number":"169","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/169#discussion_r185068269","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Resolved with the test for `HEAD^{tree}:src/quantum_gravity.py`, I think."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000170\u0000385139839\u0000":{"address":{"type":"COMMENT","id":"385139839","parent":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#issuecomment-385139839","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Addressed your comments; also, per offline discussion, we now snapshot test the node and programatically verify that `Entity.address()` returns the node address.\r\n\r\nRe your suggestion for composing the classes via higher-order functions: It's interesting, I think you'll agree we don't need the complexity at this time, but I'll keep it in mind for later."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000184839138\u0000":{"address":{"type":"COMMENT","id":"184839138","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839138","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why is this not necessarily `\"ISSUE\"`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000184839161\u0000":{"address":{"type":"COMMENT","id":"184839161","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839161","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Stronger with `expect(issue.authors().map((x) => x.login())).toEqual([\"decentralion\"])`; up to you whether to change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000184839250\u0000":{"address":{"type":"COMMENT","id":"184839250","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839250","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Did you want to test the `issue.address()`, as with the other object types?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000184839308\u0000":{"address":{"type":"COMMENT","id":"184839308","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839308","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It is somewhat strange that a repository is not a `GithubEntity`. I suppose that this is because it is not actually a node in the graph… should it be? (No change requested.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121106\u0000184839574\u0000":{"address":{"type":"COMMENT","id":"184839574","parent":{"type":"REVIEW","id":"116121106","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839574","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Meant to test address - fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121171\u0000184839706\u0000":{"address":{"type":"COMMENT","id":"184839706","parent":{"type":"REVIEW","id":"116121171","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839706","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121174\u0000184839710\u0000":{"address":{"type":"COMMENT","id":"184839710","parent":{"type":"REVIEW","id":"116121174","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839710","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121256\u0000184839832\u0000":{"address":{"type":"COMMENT","id":"184839832","parent":{"type":"REVIEW","id":"116121256","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/170#discussion_r184839832","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Having a repository node makes a lot of sense; we're almost sure to need them. Made an issue to track this suggestion. https://github.com/sourcecred/sourcecred/issues/171"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116187354\u0000184903374\u0000":{"address":{"type":"COMMENT","id":"184903374","parent":{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#discussion_r184903374","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This name seems backward to me. Clients write `Author.asType(myEntity)`, when they mean \"`myEntity` as `Author` type\"."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116187354\u0000184903411\u0000":{"address":{"type":"COMMENT","id":"184903411","parent":{"type":"REVIEW","id":"116187354","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#discussion_r184903411","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Just a note: this implementation could be deduplicated with\r\n```js\r\nfunction withDowncast(type: string) {\r\n  return (C) => class Result extends C {\r\n    static asType(x: {+type: string}): Result {\r\n      if (x.type !== type) {\r\n        throw new Error(`${x.type} !== ${type}`);\r\n      }\r\n      return (x: any);\r\n    }\r\n  };\r\n}\r\nconst Author = withDowncast(AUTHOR_NODE_TYPE)(\r\n  class extends GithubEntity<AuthorNodePayload> { … }\r\n);\r\n```\r\nHowever, Flow seems to work especially poorly with code like this. For instance:\r\n```js\r\nconst X = class { a() { return 1; } };\r\nconst Y = class { b() { return 2; } };\r\n\r\n// $ExpectError\r\n(new X(): Y);  // error; good\r\n\r\nfunction justLike(C) { return class extends C { }; };\r\nconst XX = justLike(X);\r\nconst YY = justLike(Y);\r\n\r\n(new XX(): YY);  // no error! bad!\r\nnew XX().a();    // error! why?\r\n```\r\nSo perhaps it is best that we not do that, unfortunately.\r\n\r\n(As previously discussed—macros would do quite nicely.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116200245\u0000184914230\u0000":{"address":{"type":"COMMENT","id":"184914230","parent":{"type":"REVIEW","id":"116200245","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#discussion_r184914230","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Changed to from."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000173\u0000116360983\u0000185047192\u0000":{"address":{"type":"COMMENT","id":"185047192","parent":{"type":"REVIEW","id":"116360983","pull":{"type":"PULL","number":"173","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/173#discussion_r185047192","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, that matched my expectation that going off the beaten path would lead to odd flow behavior. \r\n\r\nThis is the macro library I mentioned: [sweet.js]\r\n\r\n[sweet.js]: https://www.sweetjs.org/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185096229\u0000":{"address":{"type":"COMMENT","id":"185096229","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185096229","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"…and such that the filter is satisfied."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185096951\u0000":{"address":{"type":"COMMENT","id":"185096951","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185096951","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"revenge of https://github.com/sourcecred/sourcecred/pull/162#discussion_r184813987"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185098227\u0000":{"address":{"type":"COMMENT","id":"185098227","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185098227","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It should be possible to factor this out to\r\n```js\r\nif (typeOptions != null && typeOptions.nodeType != null) {\r\n  const nodeType = typeOptions.nodeType;\r\n  result = result.filter(({neighbor}) => neighbor.type === nodeType);\r\n}\r\n```\r\nand include the logic just once, above the `edgeType` filter.\r\n\r\nNamely, when the following patch is applied, tests still pass:\r\n<details>\r\n<summary>Patch to deduplicate node type filtering logic</summary>\r\n\r\n```diff\r\ndiff --git a/src/core/graph.js b/src/core/graph.js\r\nindex a1f8b89..f90bc31 100644\r\n--- a/src/core/graph.js\r\n+++ b/src/core/graph.js\r\n@@ -197,13 +197,6 @@ export class Graph<NP, EP> {\r\n           return {edge, neighbor: edge.src};\r\n         }\r\n       );\r\n-\r\n-      if (typeOptions != null && typeOptions.nodeType != null) {\r\n-        const nodeType = typeOptions.nodeType;\r\n-        inNeighbors = inNeighbors.filter(\r\n-          ({edge}) => edge.src.type === nodeType\r\n-        );\r\n-      }\r\n       result = result.concat(inNeighbors);\r\n     }\r\n \r\n@@ -214,14 +207,6 @@ export class Graph<NP, EP> {\r\n           return {edge, neighbor: edge.dst};\r\n         }\r\n       );\r\n-\r\n-      if (typeOptions != null && typeOptions.nodeType != null) {\r\n-        const nodeType = typeOptions.nodeType;\r\n-        outNeighbors = outNeighbors.filter(\r\n-          ({edge}) => edge.dst.type === nodeType\r\n-        );\r\n-      }\r\n-\r\n       if (direction === \"ANY\") {\r\n         // If direction is ANY, we already counted self-referencing edges as\r\n         // an inNeighbor\r\n@@ -229,9 +214,13 @@ export class Graph<NP, EP> {\r\n           ({edge}) => !deepEqual(edge.src, edge.dst)\r\n         );\r\n       }\r\n-\r\n       result = result.concat(outNeighbors);\r\n     }\r\n+\r\n+    if (typeOptions != null && typeOptions.nodeType != null) {\r\n+      const nodeType = typeOptions.nodeType;\r\n+      result = result.filter(({neighbor}) => neighbor.type === nodeType);\r\n+    }\r\n     if (typeOptions != null && typeOptions.edgeType != null) {\r\n       const edgeType = typeOptions.edgeType;\r\n       result = result.filter(({edge}) => edge.address.type === edgeType);\r\n```\r\n</details>"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185099652\u0000":{"address":{"type":"COMMENT","id":"185099652","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185099652","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can replace `opts` with `{...(opts || {}), direction: \"OUT\"}` to save some lines, reduce mutation, and remove an `any`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185102001\u0000":{"address":{"type":"COMMENT","id":"185102001","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185102001","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A bunch of these objects can be collapsed onto the same line without Prettier complaining; it becomes more readable that way, IMO, but up to you."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116453001\u0000185123522\u0000":{"address":{"type":"COMMENT","id":"185123522","parent":{"type":"REVIEW","id":"116453001","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185123522","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Added a description of how the options work."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116453018\u0000185123538\u0000":{"address":{"type":"COMMENT","id":"185123538","parent":{"type":"REVIEW","id":"116453018","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185123538","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":) "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116458717\u0000185128493\u0000":{"address":{"type":"COMMENT","id":"185128493","parent":{"type":"REVIEW","id":"116458717","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/174#discussion_r185128493","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`s/and/an/`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000178\u0000116481723\u0000185148150\u0000":{"address":{"type":"COMMENT","id":"185148150","parent":{"type":"REVIEW","id":"116481723","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/178#discussion_r185148150","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Math.floor"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000178\u0000116483280\u0000185149552\u0000":{"address":{"type":"COMMENT","id":"185149552","parent":{"type":"REVIEW","id":"116483280","pull":{"type":"PULL","number":"178","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/178#discussion_r185149552","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; done, and added the necessary `isFinite` check."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000179\u0000116483992\u0000185150175\u0000":{"address":{"type":"COMMENT","id":"185150175","parent":{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/179#discussion_r185150175","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: s/which/that/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000179\u0000116483992\u0000185150240\u0000":{"address":{"type":"COMMENT","id":"185150240","parent":{"type":"REVIEW","id":"116483992","pull":{"type":"PULL","number":"179","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/179#discussion_r185150240","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Note: Added in this PR; okay with me.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000182\u0000116495168\u0000185160463\u0000":{"address":{"type":"COMMENT","id":"185160463","parent":{"type":"REVIEW","id":"116495168","pull":{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/182#discussion_r185160463","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note: the fact that we only initialize URL references from this map is sufficient to guarantee that we have URL canonicity. For instance, `https://github.com/decentralion` is a canonical URL, while the same URL with a trailing slash is not; the latter will simply be ignored by our system, instead of pointing to some kind of corrupt/invalid user node."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000183\u0000385736305\u0000":{"address":{"type":"COMMENT","id":"385736305","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/183#issuecomment-385736305","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is a very strange Travis failure:\r\nhttps://travis-ci.org/sourcecred/sourcecred/builds/373558100\r\n\r\nIt says that there is a syntax error on line 870 of `graphql.js`. But\r\n`graphql.js` was not changed in this commit (Travis is running against\r\nthe correct commit), and only has 803 lines. Also, any syntax error\r\nshould have failed the earlier Prettier/ESLint steps as well. Also, the\r\nTravis PR check passed. I’m going to just re-run the build, but I have\r\nno idea what’s happening. (Obviously, I cannot reproduce locally.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000183\u0000385772936\u0000":{"address":{"type":"COMMENT","id":"385772936","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/183#issuecomment-385772936","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"btw, the travis build you linked is a success ?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000183\u0000385801696\u0000":{"address":{"type":"COMMENT","id":"385801696","parent":{"type":"PULL","number":"183","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/183#issuecomment-385801696","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> btw, the travis build you linked is a success ?\r\n\r\nI restarted the build. Apparently Travis overwrote the log. (Bad!) Now I know never to restart failed builds, instead pushing a new commit on top. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000184\u0000386132418\u0000":{"address":{"type":"COMMENT","id":"386132418","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#issuecomment-386132418","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Outside of the plugin that generated the ID, parsing the id is\r\n> inappropriate.\r\n\r\nAbsolutely.\r\n\r\n> However, for the Git plugin to know how to parse Git plugin ids is\r\n> reasonable.\r\n\r\nFair. Let me clarify my claims, then:\r\n 1. A plugin should theoretically be allowed to parse its own IDs,\r\n    because it created them, controls the format, etc.\r\n 2. A plugin may choose to make it a design goal that strings should\r\n    never be parsed. In general, parsing information out of strings like\r\n    this is considered a Bad Idea (or at least a Last Resort).\r\n 3. The Git plugin indeed makes this design goal.\r\n\r\n> Avoids a 2x redundancy in memory usage\r\n\r\nI thought about this. I think that this will go away when we refactor\r\nout the address/payload distinction, so I am not too worried about it.\r\nIf it truly does prove to be a big problem, we can revisit this.\r\n\r\nDo you mind giving it a shot and keeping open the option to revert?\r\n(This seems to be our MO for contentious changes, and it’s worked well\r\nin the past. :-) )\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000184\u0000386158126\u0000":{"address":{"type":"COMMENT","id":"386158126","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#issuecomment-386158126","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I will remove the `treeHash: Hash` from the tree entry node, per your request. Given that the tree ID is not currently used, do you still want me to add it to the tree node? I am happy to include it or not, as you prefer. (If you have no preference, I'd bias toward not including it, consistent with our \"add things lazily\" policy.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000184\u0000386360796\u0000":{"address":{"type":"COMMENT","id":"386360796","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#issuecomment-386360796","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"\"add things lazily\" is ok with me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000184\u0000386374928\u0000":{"address":{"type":"COMMENT","id":"386374928","parent":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#issuecomment-386374928","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool; done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117071195\u0000185640129\u0000":{"address":{"type":"COMMENT","id":"185640129","parent":{"type":"REVIEW","id":"117071195","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#discussion_r185640129","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Why is the tree hash in the entryNode payload? It should be in the treeNode payload. Then if you need the tree hash for an entry, you get it via porcelain over:\r\n`graph.neighborhood(entryNode, {nodeType: \"TREE\", edgeType: \"INCLUDES_EDGE\", direction: \"IN\"})[0].hash`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117081822\u0000185648951\u0000":{"address":{"type":"COMMENT","id":"185648951","parent":{"type":"REVIEW","id":"117081822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#discussion_r185648951","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I included this mostly for consistency (putting both relevant fields in). You're right that it is easily available from the tree, and I didn't end up using it. I'd be happy to remove it if you like."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117088427\u0000185654699\u0000":{"address":{"type":"COMMENT","id":"185654699","parent":{"type":"REVIEW","id":"117088427","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#discussion_r185654699","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Actually, it isn't available in the tree ([see here]). Could you remove it from the entryNodePayload and add it to the treeNodePayload?\r\n\r\n[see here]: https://github.com/sourcecred/sourcecred/pull/184/files#diff-080791a1f5043a49563a9556411954e2L101"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117105822\u0000185669448\u0000":{"address":{"type":"COMMENT","id":"185669448","parent":{"type":"REVIEW","id":"117105822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/184#discussion_r185669448","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It is not available in the payload, but it is available as the (literal) address ID. You raise a fair criticism: \"if you're against parsing IDs in general, this shouldn't change just because the parsing function is the identity function in some cases.\" I agree. But, instead of putting in the work to expose everything on payloads, I think that I'd rather wait until we have some more direction on #190."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000185\u0000386134239\u0000":{"address":{"type":"COMMENT","id":"386134239","parent":{"type":"PULL","number":"185","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/185#issuecomment-386134239","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> The commit description mentions an explanatory comment that doesn't\r\n> seem to exist.\r\n\r\nOoh, you're right; the comment is in a later commit. Here it is (I'll\r\ncopy it into the commit description):\r\n\r\n```\r\n// In Git, a tree may point to a commit directly; in our graph, we have\r\n// an explicit notion of \"submodule commit\", because, a priori, we do\r\n// not know the repository to which the commit belongs. A submodule\r\n// commit node stores the hash of the referent commit, as well as the\r\n// URL to the subproject as listed in the .gitmodules file.\r\n```\r\n\r\n> I don't feel I have great context on this commit, and the testing is\r\n> pretty light\r\n\r\nCool; thanks for noting. I actually think that the snapshot tests are\r\ntotally sufficient, for exactly the reasons that you describe. Feeling\r\nthat you lack context makes sense—most of my day yesterday was spent\r\nplaying around with Git's semantics and source code, exploring edgy edge\r\ncases, discovering what kinds of approaches fundamentally cannot work,\r\nand the like. (Interestingly, with Git I continue to find that it is\r\noften the edgiest edge cases that inform the nicest general solutions.)\r\nThis commit is the product of that exploration, and so is necessarily\r\nbuild on the resulting context. I don’t think that it makes sense to\r\nwrite down everything that I learned/all conclusions that I came to in\r\ncode comments, but if you ever want to dive into this stuff together,\r\nI’d be happy to do so (or, of course, to answer any specific questions).\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099205\u0000185663909\u0000":{"address":{"type":"COMMENT","id":"185663909","parent":{"type":"REVIEW","id":"117099205","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#discussion_r185663909","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"What does this mean?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099508\u0000185664147\u0000":{"address":{"type":"COMMENT","id":"185664147","parent":{"type":"REVIEW","id":"117099508","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#discussion_r185664147","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yeah (\\*sigh\\*). This is to work around a long-standing bug in Flow: https://github.com/facebook/flow/issues/2977"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000186\u0000117099731\u0000185664335\u0000":{"address":{"type":"COMMENT","id":"185664335","parent":{"type":"REVIEW","id":"117099731","pull":{"type":"PULL","number":"186","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/186#discussion_r185664335","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(The change is necessary in this commit because I added an explicit type to `contentsEdge` on the preceding line 201.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000187\u0000386378566\u0000":{"address":{"type":"COMMENT","id":"386378566","parent":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#issuecomment-386378566","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(For now, just rebasing this PR onto master.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000187\u0000386431049\u0000":{"address":{"type":"COMMENT","id":"386431049","parent":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#issuecomment-386431049","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Closing in favor of #203."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117347169\u0000185870099\u0000":{"address":{"type":"COMMENT","id":"185870099","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185870099","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"When we are expecting a single nodeType back, i think it's a good defensive / documentative practice to specify it, even if unnecessary. Looks like we're only getting commits back, so can we specify `nodeType: COMMIT_NODE_TYPE`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117347169\u0000185870355\u0000":{"address":{"type":"COMMENT","id":"185870355","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185870355","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"(as above)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117347169\u0000185870979\u0000":{"address":{"type":"COMMENT","id":"185870979","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185870979","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"the contentses, we loves it, precious, we do\r\nGOLLUM!\r\nGOLLUM!\r\nGOLLUM!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117347169\u0000185872134\u0000":{"address":{"type":"COMMENT","id":"185872134","parent":{"type":"REVIEW","id":"117347169","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185872134","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"If we had written a downcasting function, then we could use that to downcast from (TypedEdge | null) to TypedEdge, right? "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117356441\u0000185877591\u0000":{"address":{"type":"COMMENT","id":"185877591","parent":{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185877591","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; can do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000187\u0000117356441\u0000185877866\u0000":{"address":{"type":"COMMENT","id":"185877866","parent":{"type":"REVIEW","id":"117356441","pull":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/187#discussion_r185877866","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Correct (though it would actually be `TypedEdge | void` to `TypedEdge`)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000188\u0000386137117\u0000":{"address":{"type":"COMMENT","id":"386137117","parent":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/188#issuecomment-386137117","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The idiom is that boolean flags are true whenever nonempty, so `0` is\r\ntrue. Why this instead of `0`/`1` or `true`/`false`? I don’t know,\r\nreally. I suppose that a benefit is that you don’t have to worry about\r\nwhether the falsy value is `0` or `false`? The two implementations are\r\n```\r\n[ -n \"${thing:-}\" ]  # -n = nonempty?\r\n```\r\nand\r\n```\r\n[ \"${thing:-0}\" != 0 ]\r\n```\r\nrespectively, neither of which seems particularly offensive. Perhaps it\r\njust comes down to “we had to pick one”. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000188\u0000386137251\u0000":{"address":{"type":"COMMENT","id":"386137251","parent":{"type":"PULL","number":"188","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/188#issuecomment-386137251","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Also, in this particular case it is an implementation detail only, so I really don't have a strong preference.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000189\u0000386131713\u0000":{"address":{"type":"COMMENT","id":"386131713","parent":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/189#issuecomment-386131713","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Here is the output of a successful build:\r\nhttps://travis-ci.org/sourcecred/sourcecred/builds/374155945"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000189\u0000386147856\u0000":{"address":{"type":"COMMENT","id":"386147856","parent":{"type":"PULL","number":"189","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/189#issuecomment-386147856","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Here is a screenshot of the build output on my terminal:\r\n![Screenshot](https://user-images.githubusercontent.com/4317806/39553374-40daf292-4e22-11e8-966d-a09d3e0d7e6e.png)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000192\u0000386161592\u0000":{"address":{"type":"COMMENT","id":"386161592","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/192#issuecomment-386161592","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Given the downside mentioned in the summary, I am happy to consider not merging this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000192\u0000386376352\u0000":{"address":{"type":"COMMENT","id":"386376352","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/192#issuecomment-386376352","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"My testing. Given that a flow server was already running, running `yarn travis` took:\r\n10s on master\r\n15s with this change\r\n\r\nThis is a pretty small difference, but this PR is also a pretty small improvement. Let's think about this in terms of expected time savings.\r\n\r\nSuppose that a contributor is in the habit of running `yarn travis` manually before submitting to travis, and they do this, on average, three times per push. Then they lose 15s per push.\r\n\r\nIf they do get in a case where their local build incorrectly passes due to stale flow data, then they lose, say, 600 seconds.\r\n\r\nIn which case, this bug would need to happen >2% of the time to have temporal breakeven. In practice, I think it's never happened, and based on having 160 PRs I think we can safely estimate that the failure prevented by this PR comes up <1% of the time.\r\n\r\nAlso, I think that the cost of increasing local test time by 50% is worse-than-linear - it makes it more likely that contributors will opt for some other ad hoc workflow, thus potentially introducing new (and more probable) spurious passes.\r\n\r\nSo, let's not merge this until we discover that the problem it would solve comes up often in practice."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000192\u0000386376665\u0000":{"address":{"type":"COMMENT","id":"386376665","parent":{"type":"PULL","number":"192","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/192#issuecomment-386376665","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Reasoning makes sense to me. Thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000195\u0000386387243\u0000":{"address":{"type":"COMMENT","id":"386387243","parent":{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/195#issuecomment-386387243","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nice that we have, in the artifact plugin, an example where it is important that the `repositoryName` be considered, and that it works out as planned."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000199\u0000117401541\u0000185913834\u0000":{"address":{"type":"COMMENT","id":"185913834","parent":{"type":"REVIEW","id":"117401541","pull":{"type":"PULL","number":"199","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/199#discussion_r185913834","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As discussed, this should be package-private: it enables clients who only call the public API to get invalid addresses (by supplying invalid IDs). But JavaScript doesn't have a package-private visibility option. Please either (a) underscore-name this, or (b) export all the individual `fooAddress` functions instead of this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000201\u0000117417373\u0000185926383\u0000":{"address":{"type":"COMMENT","id":"185926383","parent":{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/201#discussion_r185926383","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"the type signature implies it's possible that `from.name !== to.name`. My understanding is that with the current algorithm this is impossible, however in the future (rename detection) that would be a valuable relationship to express. is this correct?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000201\u0000117417373\u0000185926535\u0000":{"address":{"type":"COMMENT","id":"185926535","parent":{"type":"REVIEW","id":"117417373","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/201#discussion_r185926535","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"confirmed offline that this is the case :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000201\u0000117419435\u0000185927953\u0000":{"address":{"type":"COMMENT","id":"185927953","parent":{"type":"REVIEW","id":"117419435","pull":{"type":"PULL","number":"201","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/201#discussion_r185927953","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Can confirm confirmation.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000203\u0000386424668\u0000":{"address":{"type":"COMMENT","id":"386424668","parent":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#issuecomment-386424668","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Supersedes #187."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117421111\u0000185929333\u0000":{"address":{"type":"COMMENT","id":"185929333","parent":{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#discussion_r185929333","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's test that edge.src and edge.dst are valid addresses to nodes in the graph, and those nodes have expected properties."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117421111\u0000185929416\u0000":{"address":{"type":"COMMENT","id":"185929416","parent":{"type":"REVIEW","id":"117421111","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#discussion_r185929416","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"use _makeAddress"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117422949\u0000185930730\u0000":{"address":{"type":"COMMENT","id":"185930730","parent":{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#discussion_r185930730","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000203\u0000117422949\u0000185930753\u0000":{"address":{"type":"COMMENT","id":"185930753","parent":{"type":"REVIEW","id":"117422949","pull":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/203#discussion_r185930753","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep; done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117713461\u0000186176387\u0000":{"address":{"type":"COMMENT","id":"186176387","parent":{"type":"REVIEW","id":"117713461","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#discussion_r186176387","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This prints \"Cloning into '.'\", which is scary and misleading. Let's invoke with `[\"clone\", \"--quiet\"]`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117714188\u0000186177001\u0000":{"address":{"type":"COMMENT","id":"186177001","parent":{"type":"REVIEW","id":"117714188","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#discussion_r186177001","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Resolved)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000206\u0000117715007\u0000186177692\u0000":{"address":{"type":"COMMENT","id":"186177692","parent":{"type":"REVIEW","id":"117715007","pull":{"type":"PULL","number":"206","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/206#discussion_r186177692","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: `../cloneGitGraph`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000208\u0000386727249\u0000":{"address":{"type":"COMMENT","id":"386727249","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/208#issuecomment-386727249","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Recommend reviewing by locally checking out this commit and then running `git diff HEAD^:config/travis.js HEAD:src/tools/execDepgraph.js`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000208\u0000386728217\u0000":{"address":{"type":"COMMENT","id":"386728217","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/208#issuecomment-386728217","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Or `git difftool …` if you want vimdiff. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000208\u0000386750241\u0000":{"address":{"type":"COMMENT","id":"386750241","parent":{"type":"PULL","number":"208","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/208#issuecomment-386750241","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I propose `execDependencyGraph`, otherwise LGTM"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000210\u0000386773039\u0000":{"address":{"type":"COMMENT","id":"386773039","parent":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#issuecomment-386773039","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"o/ --E ?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000210\u0000386773128\u0000":{"address":{"type":"COMMENT","id":"386773128","parent":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#issuecomment-386773128","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Superseded by https://github.com/sourcecred/sourcecred/pull/214"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117783411\u0000186234609\u0000":{"address":{"type":"COMMENT","id":"186234609","parent":{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#discussion_r186234609","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`` `${Unnecessary template string}` ``"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117783411\u0000186235724\u0000":{"address":{"type":"COMMENT","id":"186235724","parent":{"type":"REVIEW","id":"117783411","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#discussion_r186235724","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: Can we always write \"API\" (capitalized), please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117786477\u0000186237140\u0000":{"address":{"type":"COMMENT","id":"186237140","parent":{"type":"REVIEW","id":"117786477","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#discussion_r186237140","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000210\u0000117786486\u0000186237143\u0000":{"address":{"type":"COMMENT","id":"186237143","parent":{"type":"REVIEW","id":"117786486","pull":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/210#discussion_r186237143","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000186269977\u0000":{"address":{"type":"COMMENT","id":"186269977","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186269977","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We could file an issue on oclif asking for a way to do this without disabling strict."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000186270071\u0000":{"address":{"type":"COMMENT","id":"186270071","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186270071","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In our previous example,we computed an appropriate temporary output dir and then set it as the default here, which would make the command usage more helpful. is there a reason not to do that here?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000186270111\u0000":{"address":{"type":"COMMENT","id":"186270111","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186270111","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's factor this out somewhere to mandate consistency between this and `PluginGraphCommand`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000186270155\u0000":{"address":{"type":"COMMENT","id":"186270155","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186270155","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"also factor to a constant somewhere"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117822774\u0000186270165\u0000":{"address":{"type":"COMMENT","id":"186270165","parent":{"type":"REVIEW","id":"117822774","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186270165","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"also, I'm sure you loved seeing that \"multiple\" [is an option that defaults to false](https://oclif.io/docs/flags.html)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000117823128\u0000186270350\u0000":{"address":{"type":"COMMENT","id":"186270350","parent":{"type":"REVIEW","id":"117823128","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186270350","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Also: `\"env\": SOURCECRED_OUTPUT_DIRECTORY`? :smiley: "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000186489810\u0000":{"address":{"type":"COMMENT","id":"186489810","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186489810","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed; I was thinking the same thing. This seems okay to me for now, though."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000186490142\u0000":{"address":{"type":"COMMENT","id":"186490142","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186490142","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> In our previous example,we computed an appropriate temporary output dir and then set it as the default here, which would make the command usage more helpful. is there a reason not to do that here?\r\n \r\nOn line 49 (`const outputDirectory = …`) below, we do do that. We do not set an explicit default value in the flags configuration because the default value depends on the repository name."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000186490224\u0000":{"address":{"type":"COMMENT","id":"186490224","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186490224","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Also: `\"env\": SOURCECRED_OUTPUT_DIRECTORY`? :smiley: \r\n\r\nSure, can do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000186490316\u0000":{"address":{"type":"COMMENT","id":"186490316","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186490316","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118077899\u0000186490693\u0000":{"address":{"type":"COMMENT","id":"186490693","parent":{"type":"REVIEW","id":"118077899","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186490693","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I did enjoy seeing that. I considered using that instead of `strict: false` for `combine`, but I believe that that would require writing `-f graph1 -f graph2 -f graph3 …`, instead of the more acceptable `-f graph1 graph2 graph3`, which is in turn inferior to just `graph1 graph2 graph3`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118083137\u0000186494294\u0000":{"address":{"type":"COMMENT","id":"186494294","parent":{"type":"REVIEW","id":"118083137","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186494294","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":+1: "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118083385\u0000186494473\u0000":{"address":{"type":"COMMENT","id":"186494473","parent":{"type":"REVIEW","id":"118083385","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186494473","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> > In our previous example,we computed an appropriate temporary output dir and then set it as the default here, which would make the command usage more helpful. is there a reason not to do that here?\r\n>\r\n> On line 49 (`const outputDirectory = …`) below, we do do that. We do not set an explicit default value in the flags configuration because the default value depends on the repository name.\r\n\r\nI'll change this to have the following semantics. The output directory defaults to `path.join(os.tmpdir(), \"sourcecred\")`, and graphs are always put in `path.join(outputDirectory, repoOwner, repoName)`, regardless of whether `outputDirectory` is manually set or the default value. This seems like better behavior."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000186512952\u0000":{"address":{"type":"COMMENT","id":"186512952","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186512952","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":+1: "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000186513994\u0000":{"address":{"type":"COMMENT","id":"186513994","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186513994","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"[optional] I'd like to see more documentation here. Specifically, it should document the output format, that the actual resultant graph is `outputdir/repoOwner/repoName/graph.json` and that the other json files are intermediary artifacts. Note that multiline descriptions are supported.\r\n\r\nI mark this [optional] since it's reasonably easy to infer by inspecting the output directory, and this is likely to be a power user feature (regular users will prefer the method that starts sourcecred and calls this method under-the-hood)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000186515056\u0000":{"address":{"type":"COMMENT","id":"186515056","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186515056","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"this is cool btw, I didn't realize destructuring assignment could be used this way. I'm really a fan of destructuring assignment now, it can make for some really clean code."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000186516010\u0000":{"address":{"type":"COMMENT","id":"186516010","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186516010","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I don't think this file is in the right spot.\r\n- the set of standard plugins isn't a CLI-specific concept, it is generic to the project as a whole\r\n- even if it were CLI specific, I think the \"commands\" subdir loses its meaning if we put files there that don't correspond to commands. (note: historically, the reason I created a commands/ dir was to satisfy oclif's requirement that there be a 1:1 mapping between commands in a command dir and actual commands; however, since we have arbitrary path redirection, that isn't a constraint on our source tree. but, I think it's still nice to maintain that organization.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000217\u0000118106332\u0000186516734\u0000":{"address":{"type":"COMMENT","id":"186516734","parent":{"type":"REVIEW","id":"118106332","pull":{"type":"PULL","number":"217","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/217#discussion_r186516734","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"[offline discussion]: until we have a need for this elsewhere, I'm happy to have it under `cli/` (just not `cli/commands`)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000219\u0000387217819\u0000":{"address":{"type":"COMMENT","id":"387217819","parent":{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/219#issuecomment-387217819","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Verified."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000224\u0000387230652\u0000":{"address":{"type":"COMMENT","id":"387230652","parent":{"type":"PULL","number":"224","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/224#issuecomment-387230652","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"An easier test plan is `SOURCECRED_GITHUB_TOKEN=notokenforyou node bin/sourcecred.js sourcecred example-github`, right?\r\n\r\nLooks good, though."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000227\u0000387234595\u0000":{"address":{"type":"COMMENT","id":"387234595","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/227#issuecomment-387234595","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's make it \"SOURCECRED_DIRECTORY\" instead. That future proofs us for putting other stuff there too."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000227\u0000387236626\u0000":{"address":{"type":"COMMENT","id":"387236626","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/227#issuecomment-387236626","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Let's make it \"SOURCECRED_DIRECTORY\" instead. That future proofs us for putting other stuff there too.\r\n\r\nSure. Will do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000227\u0000387242429\u0000":{"address":{"type":"COMMENT","id":"387242429","parent":{"type":"PULL","number":"227","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/227#issuecomment-387242429","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Substantially rewritten. Please take a look."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000228\u0000387242535\u0000":{"address":{"type":"COMMENT","id":"387242535","parent":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/228#issuecomment-387242535","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I believe that you checked all the places in the schema where an `Actor` is returned, and verified that each has the correct nullability. Is this correct? (If so—thanks!)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000228\u0000118192855\u0000186585532\u0000":{"address":{"type":"COMMENT","id":"186585532","parent":{"type":"REVIEW","id":"118192855","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/228#discussion_r186585532","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interesting that this is the only place where a check is required. I guess that that's a good thing!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000228\u0000130194148\u0000196608077\u0000":{"address":{"type":"COMMENT","id":"196608077","parent":{"type":"REVIEW","id":"130194148","pull":{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/228#discussion_r196608077","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"An alternate way to do this would be to export only `NullableAuthorJSON`\r\n(possibly even renamed to `AuthorJSON`), and ask clients to write\r\n`$NonMaybeType<NullableAuthorJSON>` when they want the non-null version.\r\nI suspect that this would incur fewer accidental uses of `AuthorJSON`,\r\nbut I don’t have a strong preference."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000229\u0000118194745\u0000186587140\u0000":{"address":{"type":"COMMENT","id":"186587140","parent":{"type":"REVIEW","id":"118194745","pull":{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/229#discussion_r186587140","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I hear that this should not be in this PR."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000230\u0000118198389\u0000186590424\u0000":{"address":{"type":"COMMENT","id":"186590424","parent":{"type":"REVIEW","id":"118198389","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/230#discussion_r186590424","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This might look inadequate as a test case, but remember that the actual properties on this object are tested under the Wrappers header"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000230\u0000118198933\u0000186590915\u0000":{"address":{"type":"COMMENT","id":"186590915","parent":{"type":"REVIEW","id":"118198933","pull":{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/230#discussion_r186590915","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I have no problem with the breadth of the test case. Note, however, that `expect(null).toBeDefined()` will pass; you might have meant `expect(…).toEqual(expect.anything())`, which passes for everything except `null` and `undefined`. (Not that it matters in this case, but in general this keeps better in line with our philosophy of \"try to treat `null` and `undefined` equivalently whenever possible.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000231\u0000118210273\u0000186600984\u0000":{"address":{"type":"COMMENT","id":"186600984","parent":{"type":"REVIEW","id":"118210273","pull":{"type":"PULL","number":"231","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/231#discussion_r186600984","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"please shout `API`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118210432\u0000186601130\u0000":{"address":{"type":"COMMENT","id":"186601130","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#discussion_r186601130","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nit: can you add these with `// @no-flow` (with a space), per our convention?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118210432\u0000186601318\u0000":{"address":{"type":"COMMENT","id":"186601318","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#discussion_r186601318","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I note that there are a number of places where we implicitly depend on all \"non-`node_modules`\"/\"relevant\" code being in `{src,config,scripts}`. No change requested, but (a) moving forward, we might want to prefer explicitly excluding `node_modules`, because (b) if we change this invariant then we will have to remember to fixup a bunch of places in the code."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118210432\u0000186601370\u0000":{"address":{"type":"COMMENT","id":"186601370","parent":{"type":"REVIEW","id":"118210432","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#discussion_r186601370","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We don't need the `-a` flag to `diff`, because of the `tr` on the previous line."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118211071\u0000186601684\u0000":{"address":{"type":"COMMENT","id":"186601684","parent":{"type":"REVIEW","id":"118211071","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#discussion_r186601684","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"A good point. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000232\u0000118211081\u0000186601693\u0000":{"address":{"type":"COMMENT","id":"186601693","parent":{"type":"REVIEW","id":"118211081","pull":{"type":"PULL","number":"232","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/232#discussion_r186601693","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000236\u0000118505750\u0000186844689\u0000":{"address":{"type":"COMMENT","id":"186844689","parent":{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/236#discussion_r186844689","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is fine with me for now. I suspect that eventually, instead of this import, we will want to DI `<App router={BrowserRouter} />` so that we can use a `MemoryRouter` (or similar) for testing."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000236\u0000118505750\u0000186844861\u0000":{"address":{"type":"COMMENT","id":"186844861","parent":{"type":"REVIEW","id":"118505750","pull":{"type":"PULL","number":"236","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/236#discussion_r186844861","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`<h1>`, please."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118560404\u0000186890013\u0000":{"address":{"type":"COMMENT","id":"186890013","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186890013","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Can we also close the api server"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118560404\u0000186890114\u0000":{"address":{"type":"COMMENT","id":"186890114","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186890114","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118560404\u0000186890327\u0000":{"address":{"type":"COMMENT","id":"186890327","parent":{"type":"REVIEW","id":"118560404","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186890327","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"can we either:\r\n- remove `node bin/sourcecred.js start`\r\n- or refactor it to depend on this code?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118561169\u0000186890636\u0000":{"address":{"type":"COMMENT","id":"186890636","parent":{"type":"REVIEW","id":"118561169","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186890636","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It prints an empty line, to give some space."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118561209\u0000186890668\u0000":{"address":{"type":"COMMENT","id":"186890668","parent":{"type":"REVIEW","id":"118561209","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186890668","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The new behavior of `node ./bin/sourcecred.js start` will be to start a prod server. I'll implement that presently."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000245\u0000118564203\u0000186893331\u0000":{"address":{"type":"COMMENT","id":"186893331","parent":{"type":"REVIEW","id":"118564203","pull":{"type":"PULL","number":"245","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/245#discussion_r186893331","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"sure"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000246\u0000118565108\u0000186894120\u0000":{"address":{"type":"COMMENT","id":"186894120","parent":{"type":"REVIEW","id":"118565108","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/246#discussion_r186894120","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you check whether `expect(x).toEqual(y)` works (in both the positive and negative cases)? If it does, that'd be better—we get a diff in case of failure, rather than just `false`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000246\u0000118566240\u0000186895142\u0000":{"address":{"type":"COMMENT","id":"186895142","parent":{"type":"REVIEW","id":"118566240","pull":{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/246#discussion_r186895142","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000387897842\u0000":{"address":{"type":"COMMENT","id":"387897842","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#issuecomment-387897842","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Note: as of this PR, `yarn test` now prints the following warning:\r\n\r\n```\r\n PASS  src/app/credExplorer/App.test.js\r\n  ● Console\r\n\r\n    console.warn node_modules/@tensorflow/tfjs-core/dist/environment.js:248\r\n      WebGL is not supported on this device\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000387909420\u0000":{"address":{"type":"COMMENT","id":"387909420","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#issuecomment-387909420","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Re the yarn test warning: Not too worried about it for now.\r\n\r\nRe the flow typing: see https://github.com/sourcecred/sourcecred/pull/252#discussion_r187207663"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000387949760\u0000":{"address":{"type":"COMMENT","id":"387949760","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#issuecomment-387949760","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"PTAL. One thing to note: I use `$Call<tf.tensor2d>` for the type of a Tensor2D, even though this actually resolves to `any`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000388220544\u0000":{"address":{"type":"COMMENT","id":"388220544","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#issuecomment-388220544","authors":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"body":"Note for posterity: an earlier version of this code was paired with @decentralion . We're not sure what the best way is to describe this kind of \"partial paired-with\" relationship in the graph."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000187189209\u0000":{"address":{"type":"COMMENT","id":"187189209","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187189209","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'm curious why you used dispose (only) here rather than using tidy again. Preferring tidy to dispose seems like good practice, prefer delegating bookkeeping to software even when the bookkeeping is simple, because it stays safe as people make the code more complex"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000187189257\u0000":{"address":{"type":"COMMENT","id":"187189257","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187189257","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think it would be a little cleaner to inline the console.log and return here, so it's consistent with the failed to converge case."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000187192948\u0000":{"address":{"type":"COMMENT","id":"187192948","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187192948","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Heh, I find it super weird that this works. But of course it does."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000187193037\u0000":{"address":{"type":"COMMENT","id":"187193037","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187193037","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"sidenote: I find us writing this snippet of code all the time, I wish we had a clean abstraction over it. Like \"accumulatorMap\" or something."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118920629\u0000187193359\u0000":{"address":{"type":"COMMENT","id":"187193359","parent":{"type":"REVIEW","id":"118920629","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187193359","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"type signatures (particularly on pi, but just in general too) would be helpful."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118926858\u0000187194747\u0000":{"address":{"type":"COMMENT","id":"187194747","parent":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187194747","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This function should return the stationary distribution (I'm fine for it to also print to console as a side effect)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118926858\u0000187194817\u0000":{"address":{"type":"COMMENT","id":"187194817","parent":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187194817","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"is there a reason not to have `const stationaryDistribution = findstationaryDistribution(markovChain).dataSync()`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118927214\u0000187195043\u0000":{"address":{"type":"COMMENT","id":"187195043","parent":{"type":"REVIEW","id":"118927214","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187195043","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This should set the stationary distribution in the page state."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187203137\u0000":{"address":{"type":"COMMENT","id":"187203137","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187203137","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I disagree. In general, a function that computes and returns a value should not have effectful output. (Some people call this \"command–query separation.\") If it did, then callers who just want the value would be forced to put up with the noise. Choosing not to return the value avoids this problem by making there not be any such callers.\r\n\r\nI intended for this module to be an exit point: you feed it data and get nothing out. I could later refactor it to export two functions—one query to find the stationary distribution from a graph, and one command to describe the output to the console. This might be helpful for your UI work—would you like me to do that in the next PR?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187203295\u0000":{"address":{"type":"COMMENT","id":"187203295","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187203295","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don't see any substantive reason one way or the other, but I find the way that I wrote it more readable (and (side-benefit) it takes fewer lines of code)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187203408\u0000":{"address":{"type":"COMMENT","id":"187203408","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187203408","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"That makes sense; I'm happy to use `tidy` here. (I had no particular reason for not doing so.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187203471\u0000":{"address":{"type":"COMMENT","id":"187203471","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187203471","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed; will do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187203800\u0000":{"address":{"type":"COMMENT","id":"187203800","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187203800","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. In this case, I can write `pi: $ReadOnlyArray<number>`. But note that neither `tfjs-core` nor `deeplearn.js` has flow-typed bindings, so I'm not sure how we would type the actual tensors."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187205074\u0000":{"address":{"type":"COMMENT","id":"187205074","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187205074","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What I find weird, and a bit sad, is that there is no support for alias patterns: I should be able to write `forEach((node as {address}) => …`. I hit this reasonably commonly. It should be forward-compatible, but it looks like there's no TC39 proposal to add it. :-("},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187205543\u0000":{"address":{"type":"COMMENT","id":"187205543","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187205543","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yeah. Any of a couple of things would be nice: a Python `defaultdict`, a Java `Map.computeIfAbsent`, or even just `asObject: <T>($ReadOnlyArray<[string, T]>) => {[string]: T}`. I'm sure that each of these exists (in particular, the last is `lodash.fromPairs`), but not being in the standard library is a real bummer."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187206497\u0000":{"address":{"type":"COMMENT","id":"187206497","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187206497","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"See my comment on https://github.com/sourcecred/sourcecred/pull/252#discussion_r187194747."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118941918\u0000187207478\u0000":{"address":{"type":"COMMENT","id":"187207478","parent":{"type":"REVIEW","id":"118941918","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187207478","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"You could write a proposal :)\r\nIf you want to go down this route, I can connect you to a friend who used to on TC39 standards, he might have some useful pointers."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118942135\u0000187207663\u0000":{"address":{"type":"COMMENT","id":"187207663","parent":{"type":"REVIEW","id":"118942135","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187207663","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I want the module surface area to be well typed, so even if we can't get flow typings for the tfjs stuff, we should implement a cleanly typed wrapper for the export points."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118942350\u0000187207856\u0000":{"address":{"type":"COMMENT","id":"187207856","parent":{"type":"REVIEW","id":"118942350","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187207856","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, I'd like the module to export the data for usage in the UI.\r\nI view the print-to-console as a short-term hack UI, so IMO that should not live in basicPageRank - it should be implemented in the cred explorer app, as it is stand in for a real UI that would be generated in that file. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118982922\u0000187243770\u0000":{"address":{"type":"COMMENT","id":"187243770","parent":{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187243770","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I was about to nit about `PageRank` vs `Pagerank`... but realized we already decided to group on semantic capitalization rather than brand capitalization w/ `Github`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118982922\u0000187244099\u0000":{"address":{"type":"COMMENT","id":"187244099","parent":{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187244099","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"update docstring"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000119169448\u0000187396325\u0000":{"address":{"type":"COMMENT","id":"187396325","parent":{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187396325","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I was wondering this as I wrote it. My guiding factor was that the identifier `pagerankResult` seems (much) more natural than `pageRankResult`, which suggests that the type name should be `PagerankResult`. Also, consistency, as you note."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000119169448\u0000187396351\u0000":{"address":{"type":"COMMENT","id":"187396351","parent":{"type":"REVIEW","id":"119169448","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/252#discussion_r187396351","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Of course; thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000253\u0000119185995\u0000187409979\u0000":{"address":{"type":"COMMENT","id":"187409979","parent":{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/253#discussion_r187409979","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"After a bunch of investigation, it looks like this typechecks for Flow versions strictly before v0.68. Fine with me for now."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000253\u0000119185995\u0000187413276\u0000":{"address":{"type":"COMMENT","id":"187413276","parent":{"type":"REVIEW","id":"119185995","pull":{"type":"PULL","number":"253","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/253#discussion_r187413276","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: can we call the loop variable `issue`? At a glance, this confused me because I read `i` as `index`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119218959\u0000187436916\u0000":{"address":{"type":"COMMENT","id":"187436916","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#discussion_r187436916","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can you verify here that `!(e.url() in urlToProperty)`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119218959\u0000187437039\u0000":{"address":{"type":"COMMENT","id":"187437039","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#discussion_r187437039","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can be `$ReadOnlyArray<T>`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119218959\u0000187437712\u0000":{"address":{"type":"COMMENT","id":"187437712","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#discussion_r187437712","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good to see that we haven't lost the magnificent foo plugin in the great reorganization."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000260\u0000119218959\u0000187437930\u0000":{"address":{"type":"COMMENT","id":"187437930","parent":{"type":"REVIEW","id":"119218959","pull":{"type":"PULL","number":"260","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/260#discussion_r187437930","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You want `(e) => e.title()` instead of `(e) => { e.title(); }`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000261\u0000119245080\u0000187458246\u0000":{"address":{"type":"COMMENT","id":"187458246","parent":{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/261#discussion_r187458246","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"sp.: *displaying*"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000261\u0000119245080\u0000187458399\u0000":{"address":{"type":"COMMENT","id":"187458399","parent":{"type":"REVIEW","id":"119245080","pull":{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/261#discussion_r187458399","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's fold this into `const`s where it belongs."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119255674\u0000187466627\u0000":{"address":{"type":"COMMENT","id":"187466627","parent":{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187466627","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"remove"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119255674\u0000187466684\u0000":{"address":{"type":"COMMENT","id":"187466684","parent":{"type":"REVIEW","id":"119255674","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187466684","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's remove this spurious `div` and its brethren below."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119258323\u0000187468751\u0000":{"address":{"type":"COMMENT","id":"187468751","parent":{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187468751","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For our small data set, it doesn't matter too much, but I think that it makes more sense to `filter` before you `sort`. You wouldn't want to sort billions of nodes if you're only going to display a handful of 'em."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119258323\u0000187468863\u0000":{"address":{"type":"COMMENT","id":"187468863","parent":{"type":"REVIEW","id":"119258323","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187468863","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Usually people will write `const {graph, pagerankResult} = this.props;` here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119259432\u0000187469662\u0000":{"address":{"type":"COMMENT","id":"187469662","parent":{"type":"REVIEW","id":"119259432","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187469662","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000264\u0000119259443\u0000187469669\u0000":{"address":{"type":"COMMENT","id":"187469669","parent":{"type":"REVIEW","id":"119259443","pull":{"type":"PULL","number":"264","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/264#discussion_r187469669","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000266\u0000388473218\u0000":{"address":{"type":"COMMENT","id":"388473218","parent":{"type":"PULL","number":"266","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/266#issuecomment-388473218","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed. Those PRs are in development. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000271\u0000388521437\u0000":{"address":{"type":"COMMENT","id":"388521437","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/271#issuecomment-388521437","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"btw: `src/core/algorithms` would be a fine place.\r\ni also want to keep (at least module level separation) between code that deals with \"pure\" markov chains and pagerank, and code that has any knowledge of graphs and how to map them into markov chains."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000271\u0000388521978\u0000":{"address":{"type":"COMMENT","id":"388521978","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/271#issuecomment-388521978","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"actually, I think you mentioned not liking the term `algorithms` as a directory name because it is over-broad. Perhaps `attribution` or `calculation`? Either way, I think this code should live in core, not app."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000271\u0000388524600\u0000":{"address":{"type":"COMMENT","id":"388524600","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/271#issuecomment-388524600","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I am happy to move this and downstream PRs. I also agree that `src/core/` is better than `src/app/`—though if attribution algorithms are to be pluggable, then perhaps later a `src/attribution/` would be a better home. (Or perhaps split `src/plugins/data/*` and `src/plugins/attribution/*`.)\r\n\r\nI am fine with putting it in `src/core/attribution/markovChain.js` for now, and will do so unless you voice a different preference.\r\n\r\nI agree with the principle of doing the move upfront, but I do want to note that (a) with verbatim moves, `git blame` follows the diff properly (see the `-f` option to `git-blame`), and (b) if you're talking about SourceCred handling moves, then this is certainly something that we want to handle well anyway. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000271\u0000388528534\u0000":{"address":{"type":"COMMENT","id":"388528534","parent":{"type":"PULL","number":"271","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/271#issuecomment-388528534","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I have modified all commits in this stack for the move, as follows:\r\n```shell\r\ngit checkout origin/wchargin-extract-findStationaryDistribution\r\ntree_filter='\r\nmkdir -p src/core/attribution/;\r\nfor filename in \\\r\n    src/app/credExplorer/markovChain.js \\\r\n    src/app/credExplorer/markovChain.test.js \\\r\n; do\r\n    if [ -f \"${filename}\" ]; then\r\n        mv \"${filename}\" src/core/attribution/\r\n    fi\r\ndone\r\nsed -i \"s:\\\\./markovChain:../../core/attribution/markovChain:g\" \\\r\n    src/app/credExplorer/basicPagerank.js\r\nnode /home/wchargin/git/sourcecred/node_modules/prettier/bin-prettier.js \\\r\n    --config /home/wchargin/git/sourcecred/.prettierrc.json \\\r\n    --write src/app/credExplorer/basicPagerank.js\r\n'\r\ngit filter-branch --tree-filter \"${filter}\" HEAD ^origin/master\r\ngit rebase origin/master --exec 'yarn travis'\r\ngit rebase origin/master --exec 'git push-to-target'\r\n```\r\nAll (actual) Travis builds pass, so I will now proceed to merge the PRs."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000272\u0000119612427\u0000187760284\u0000":{"address":{"type":"COMMENT","id":"187760284","parent":{"type":"REVIEW","id":"119612427","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/272#discussion_r187760284","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: non-negative real entries"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000272\u0000119614718\u0000187762228\u0000":{"address":{"type":"COMMENT","id":"187762228","parent":{"type":"REVIEW","id":"119614718","pull":{"type":"PULL","number":"272","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/272#discussion_r187762228","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Absolutely correct (and, I would say, not a nit). Thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000274\u0000119612998\u0000187760775\u0000":{"address":{"type":"COMMENT","id":"187760775","parent":{"type":"REVIEW","id":"119612998","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/274#discussion_r187760775","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"their Magnificence, the Magnificent Foo Plugin, sees your wisdom in not including them in this test case. for, to do so would be to shortly assign their Magnificence to a variable named `bad`, for which the consequences would be ... grave"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000274\u0000119614731\u0000187762242\u0000":{"address":{"type":"COMMENT","id":"187762242","parent":{"type":"REVIEW","id":"119614731","pull":{"type":"PULL","number":"274","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/274#discussion_r187762242","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I humbly agree."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000276\u0000119613286\u0000187761022\u0000":{"address":{"type":"COMMENT","id":"187761022","parent":{"type":"REVIEW","id":"119613286","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/276#discussion_r187761022","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Nice pattern. I keep being impressed with how much can be accomplished via spreads"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000276\u0000119614737\u0000187762247\u0000":{"address":{"type":"COMMENT","id":"187762247","parent":{"type":"REVIEW","id":"119614737","pull":{"type":"PULL","number":"276","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/276#discussion_r187762247","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":+1:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000277\u0000119613522\u0000187761225\u0000":{"address":{"type":"COMMENT","id":"187761225","parent":{"type":"REVIEW","id":"119613522","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/277#discussion_r187761225","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'm curious for more context on this. Don't we already have an assertion up on line 131?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000277\u0000119614439\u0000187762006\u0000":{"address":{"type":"COMMENT","id":"187762006","parent":{"type":"REVIEW","id":"119614439","pull":{"type":"PULL","number":"277","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/277#discussion_r187762006","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good point. This line is indeed not necessary. (Edit: Removed.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000278\u0000388515391\u0000":{"address":{"type":"COMMENT","id":"388515391","parent":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/278#issuecomment-388515391","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note that this change is compatible with the existing on-disk data\r\nformat. In principle, I am open to breaking that compatibility (only\r\nbecause, right now, we have zero users). For instance, I’m not sure why\r\nwe store the data as a map from stringified address to\r\ndatum-without-address, when we could just store it as an unordered list\r\nof all the data. This could plausibly yield further improvements for\r\n`fromJSON` and `toJSON`, though probably not very large ones, and these\r\nare not on the critical path. Therefore, I declined to make these\r\nchanges in this PR.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000278\u0000388524665\u0000":{"address":{"type":"COMMENT","id":"388524665","parent":{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/278#issuecomment-388524665","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool. This is independent of my other string of PRs, so I'll just merge it now."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000279\u0000388563948\u0000":{"address":{"type":"COMMENT","id":"388563948","parent":{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/279#issuecomment-388563948","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I think that I would prefer that this pull request not be merged. Let me\r\nknow what you think.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000279\u0000390025672\u0000":{"address":{"type":"COMMENT","id":"390025672","parent":{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/279#issuecomment-390025672","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Discussed offline: We don't think this should merge, as prominently displaying info that is quite unreliable will just be a recipe for confusion. We might want to add a sequential mode that prints accurate timing info (at the cost of being slower overall)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119967317\u0000188063202\u0000":{"address":{"type":"COMMENT","id":"188063202","parent":{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188063202","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This shouldn't be here—it will crash when a Git node has incident edges to/from other plugins' nodes (e.g., a pull-request-to-merged-commit edge)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119967317\u0000188065679\u0000":{"address":{"type":"COMMENT","id":"188065679","parent":{"type":"REVIEW","id":"119967317","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188065679","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why doesn't this function just call `getCommit()`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119974448\u0000188069050\u0000":{"address":{"type":"COMMENT","id":"188069050","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188069050","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"All these `any`s are disturbing. Let's parameterize `BaseNodePorcelain` over a node payload, as in the GitHub plugin."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119974448\u0000188069511\u0000":{"address":{"type":"COMMENT","id":"188069511","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188069511","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"IMO, this is easier to read as something like \"if the type is BLOB, TREE, or SUBMODULE_COMMIT, then return `asGitPorcelain(n)`, else error.\" Or, \"let `result` be `asGitPorcelain(n)`, and assert that the type of `result` is one of the three valid types.\""},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119974448\u0000188069799\u0000":{"address":{"type":"COMMENT","id":"188069799","parent":{"type":"REVIEW","id":"119974448","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188069799","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I believe that this invariant does not hold for submodule commit nodes. See:\r\nhttps://github.com/sourcecred/sourcecred/blob/115d7f3921c5145180b472f1678edaf804d0973f/src/plugins/git/createGraph.js#L153-L198\r\n\r\nWe might want to add such a case to our example-git repository. (Later.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000281\u0000119976582\u0000188070807\u0000":{"address":{"type":"COMMENT","id":"188070807","parent":{"type":"REVIEW","id":"119976582","pull":{"type":"PULL","number":"281","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/281#discussion_r188070807","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Not a problem now that `asGitPorcelain` has been removed (there's no confusing repetition)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000388696940\u0000":{"address":{"type":"COMMENT","id":"388696940","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/282#issuecomment-388696940","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Offline, you said you preferred to see `\"@/core\"` style imports. I've implemented that over at #283."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000388899270\u0000":{"address":{"type":"COMMENT","id":"388899270","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/282#issuecomment-388899270","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Superseded by #283"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000283\u0000394108307\u0000":{"address":{"type":"COMMENT","id":"394108307","parent":{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/283#issuecomment-394108307","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing as stale."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000286\u0000120459485\u0000188473797\u0000":{"address":{"type":"COMMENT","id":"188473797","parent":{"type":"REVIEW","id":"120459485","pull":{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/286#discussion_r188473797","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Per discussion, we plan to rename the graph class's `neighborhood` method to also be called `neighbors`. Unrelatedly, we have considered extracting `export type NeighborsOptions` from `graph.js`. (No action required.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000289\u0000389600770\u0000":{"address":{"type":"COMMENT","id":"389600770","parent":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/289#issuecomment-389600770","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m not sure whether I agree with this change, but I definitely disagree\r\nwith the assertion that “having the Graph polymorphism has never caught\r\na bug”. When we had `type: string` on the payload objects, having a\r\nparameterized `Graph<GithubNodePayload, GithubEdgePayload>` was valuable\r\nindeed: calling `addNode({/* some object literal */})` would throw an\r\nerror in the case that we forgot a field or specified the wrong node\r\ntype. This certainly did catch bugs for me.\r\n\r\nLet’s postpone this until after we address the address–payload\r\ndistinction, because that change might make fields like `type: string`\r\nmore tractable again, meaning that the polymorphism would provide more\r\nsafety benefits.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000289\u0000391817892\u0000":{"address":{"type":"COMMENT","id":"391817892","parent":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/289#issuecomment-391817892","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m now okay with merging this given that we’re working on implementing\r\nthe plan set out in #296, which will mean that we have type information\r\nat the plugin level (where it is useful), and not at the graph level\r\n(where it is less useful)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000289\u0000123129658\u0000190696773\u0000":{"address":{"type":"COMMENT","id":"190696773","parent":{"type":"REVIEW","id":"123129658","pull":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/289#discussion_r190696773","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If you were feeling particularly motivated, you could inline this one. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000390024639\u0000":{"address":{"type":"COMMENT","id":"390024639","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#issuecomment-390024639","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"See #293 for an example.\r\n\r\nI wrote this code with the expectation that `__compat__` info only exists on serialized data, e.g. the result of calling `toJSON()`. It's removed when the data is loaded with `fromCompat`, and attempting to attach compat info to something that already has it is an error.\r\n\r\nThis works well for classes like `Graph` and `Address` that define matching `toJSON` and `fromJSON` methods, as these methods make it easy to have canonical entry/exit points for compat info. For cases like the `repositoryJSON`, where we may directly serialize the data to disk without going through explicit `{to,from}JSON` methods, it's harder to use `compat`, as it's not clear where the entry/exit points should live. I think a reasonable resolution is to have `toJSON/fromJSON` methods for all the data that we are explicitly supporting compatibility on, and to treat any data dumped without compatibility as ephemeral. Thus, if we do make the `repositoryJSON` part of the officially supported data layer, we should define a class to hold it with to/from methods."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000390302931\u0000":{"address":{"type":"COMMENT","id":"390302931","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#issuecomment-390302931","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the suggestion. I find your argument and proposed solution persuasive, and have updated the PR accordingly. \r\n\r\nThis change has two additional consequences, both of which I think are good:\r\n- As previously implemented, the `__compat__` field might show up anywhere in the JSON blob, meaning you need to parse the whole object to find the compat. Now, for any compatible object looking at the first ~100 bytes of the json is sufficient.\r\n\r\n- As previously implemented, all compatibilized objects were compatible with compatibility-ignorant consumers, i.e. they could just ignore the `__compat__` field and proceed as usual. This is \"convenient\", in the type-coercion mold of \"conveniently allows you to do something potentially dangerous without realizing it\". Now, if you don't know that objects have been compatibilized, you probably won't know how to read them, which is a good inducement to use `fromCompat` when interpreting the object."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000390304127\u0000":{"address":{"type":"COMMENT","id":"390304127","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#issuecomment-390304127","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Something I think we should still discuss (perhaps offline) before merging: I'm not sure the `fromCompat` API is quite right. Specifically, it doesn't give any mechanism to parse version strings, just to exhaustively enumerate them. Suppose, for example, that we got in the habit of making backwards-compatible changes to serialization and recording this as proper [semver] by incrementing the minor or patch values in the version string. Then, we would need to repetitively enumerate every historical version, even when no new handler is required.\r\n\r\nHowever, the API as written is very convenient for our current use case, so we could punt on improving the API and refactor it when it becomes inconvenient. (Actually, for my current intentions we don't need any handlers at all; I just want to cleanly break on old data versions. But I wanted to demonstrate that we had a composable versioning strategy, so that necessitated putting some backcompat support in the API :slightly_smiling_face: )\r\n\r\n[semver]: https://semver.org/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121492373\u0000189328680\u0000":{"address":{"type":"COMMENT","id":"189328680","parent":{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189328680","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Would prefer `\"__compat__\" in obj` here: an explicitly set `null` or `undefined` anywhere on the proto should be sufficient to fail."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121492373\u0000189329450\u0000":{"address":{"type":"COMMENT","id":"189329450","parent":{"type":"REVIEW","id":"121492373","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189329450","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This seems like a perfect occasion for `export opaque type`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189657055\u0000":{"address":{"type":"COMMENT","id":"189657055","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189657055","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could we rename this to `CompatibilityInfo`/`CompatInfo`, so that we don't have `Compat` and `Compatible` meaning different things, with `toCompat` actually returning a `Compatible`, etc.?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189657399\u0000":{"address":{"type":"COMMENT","id":"189657399","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189657399","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A priori, I have a weak preference for taking the actual `compat: Compat` here instead of two unnamed arguments, but if you have a reason for doing it this way then I'm probably fine with it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189657549\u0000":{"address":{"type":"COMMENT","id":"189657549","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189657549","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Likewise here could take `expected: Compat`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189660876\u0000":{"address":{"type":"COMMENT","id":"189660876","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189660876","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This really is not a `Compatible<T>`; it is a `Compatible<mixed>`.\r\n\r\nIf we wanted to be more precise, we could write something using `$ObjMap` on `handlers` below, but using `any`/`mixed` here I think is acceptable, because appropriate types would just be unified away, anyway."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189661489\u0000":{"address":{"type":"COMMENT","id":"189661489","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189661489","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we call this `convertV1ToV2` or something similar?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189661954\u0000":{"address":{"type":"COMMENT","id":"189661954","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189661954","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Doesn't look like this test provides much value—the others are sufficient—and it deliberately breaks the encapsulation, so let's get rid of it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189662327\u0000":{"address":{"type":"COMMENT","id":"189662327","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189662327","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You probably meant `[v1]: fooHandler` and not `v1: fooHandler`. (The former depends on the fact that the value of `v1` is literally `\"v1\"`.) Likewise lots of places below."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189662758\u0000":{"address":{"type":"COMMENT","id":"189662758","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189662758","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: blank line inconsistency between `InnerV1` and `InnerV2`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121879121\u0000189663017\u0000":{"address":{"type":"COMMENT","id":"189663017","parent":{"type":"REVIEW","id":"121879121","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189663017","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: wherefore this blank line?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889191\u0000189665336\u0000":{"address":{"type":"COMMENT","id":"189665336","parent":{"type":"REVIEW","id":"121889191","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189665336","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889367\u0000189665495\u0000":{"address":{"type":"COMMENT","id":"189665495","parent":{"type":"REVIEW","id":"121889367","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189665495","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889403\u0000189665525\u0000":{"address":{"type":"COMMENT","id":"189665525","parent":{"type":"REVIEW","id":"121889403","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189665525","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889547\u0000189665645\u0000":{"address":{"type":"COMMENT","id":"189665645","parent":{"type":"REVIEW","id":"121889547","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189665645","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889724\u0000189665803\u0000":{"address":{"type":"COMMENT","id":"189665803","parent":{"type":"REVIEW","id":"121889724","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189665803","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Changed to any"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121889965\u0000189666023\u0000":{"address":{"type":"COMMENT","id":"189666023","parent":{"type":"REVIEW","id":"121889965","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189666023","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890061\u0000189666106\u0000":{"address":{"type":"COMMENT","id":"189666106","parent":{"type":"REVIEW","id":"121890061","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189666106","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890423\u0000189666463\u0000":{"address":{"type":"COMMENT","id":"189666463","parent":{"type":"REVIEW","id":"121890423","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189666463","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000292\u0000121890444\u0000189666478\u0000":{"address":{"type":"COMMENT","id":"189666478","parent":{"type":"REVIEW","id":"121890444","pull":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/292#discussion_r189666478","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000293\u0000121899057\u0000189673835\u0000":{"address":{"type":"COMMENT","id":"189673835","parent":{"type":"REVIEW","id":"121899057","pull":{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/293#discussion_r189673835","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we call `fromCompat` here instead of breaking the encapsulation?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000295\u0000390821990\u0000":{"address":{"type":"COMMENT","id":"390821990","parent":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#issuecomment-390821990","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I've verified that the snapshot changes \"look reasonable\", and I hand-verified one of the `srcIndex`/`dstIndex` pairs (the MERGED_AS edge for the head commit of the example repo)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000295\u0000391123642\u0000":{"address":{"type":"COMMENT","id":"391123642","parent":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#issuecomment-391123642","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’ve pushed one more commit, which adds a phantom node and a node with\r\n`null` payload into the canonical graph demo data, so that all our test\r\ncases benefit from them. I trust that this change will not be\r\ncontentious, so absent further feedback I’ll merge once it passes CI.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189745332\u0000":{"address":{"type":"COMMENT","id":"189745332","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189745332","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Might be nice to have a comment documenting that _{in,out}Edges is essentially a map from node index to a list of incident node indices"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189745384\u0000":{"address":{"type":"COMMENT","id":"189745384","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189745384","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"it would be nice to do the two fast checks (that the lengths are equal on nodes and edges) before either of the slow checks"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189745610\u0000":{"address":{"type":"COMMENT","id":"189745610","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189745610","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's add a unit test that verifies that this filtering occurs"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189745683\u0000":{"address":{"type":"COMMENT","id":"189745683","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189745683","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Do we have a unit test verifying that the JSON representation is independent of node insertion order?\r\nI know we test this for equality; we should check for JSON equality too."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189745800\u0000":{"address":{"type":"COMMENT","id":"189745800","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189745800","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: request comment explaining why"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000121983990\u0000189746617\u0000":{"address":{"type":"COMMENT","id":"189746617","parent":{"type":"REVIEW","id":"121983990","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r189746617","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: filter((x) => Boolean(x))"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190004221\u0000":{"address":{"type":"COMMENT","id":"190004221","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190004221","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Agreed. Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190004488\u0000":{"address":{"type":"COMMENT","id":"190004488","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190004488","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190007134\u0000":{"address":{"type":"COMMENT","id":"190007134","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190007134","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Done, as \"JSON functions should canonicalize away ~~dangling~~ phantom nodes\". (edit: changed test name)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190007197\u0000":{"address":{"type":"COMMENT","id":"190007197","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190007197","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We already have \"JSON functions should canonicalize away node insertion order\"."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190013023\u0000":{"address":{"type":"COMMENT","id":"190013023","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190013023","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"After further thought, this actually isn't necessary. I usually use this pattern for `Array(n).fill(null).map((_, i) => e(i))`, because `map` and `filter` and the like ignore empty slots in the array. But here we are assigning to the array directly via a `forEach` over a different array, so this is superfluous.\r\n\r\nThat said, I suppose that this might as well be a `Uint32Array` anyway—any objection? (I've made this change and added some specifications.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122293222\u0000190016082\u0000":{"address":{"type":"COMMENT","id":"190016082","parent":{"type":"REVIEW","id":"122293222","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190016082","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Thanks; done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000295\u0000122318172\u0000190024732\u0000":{"address":{"type":"COMMENT","id":"190024732","parent":{"type":"REVIEW","id":"122318172","pull":{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/295#discussion_r190024732","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for checking that equality and serialization both ignore phantom nodes!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000391540668\u0000":{"address":{"type":"COMMENT","id":"391540668","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#issuecomment-391540668","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Re types - yep, doesn't block this change; let's discuss more offline.\r\nRe concise naming: I think the value of having a concise name for the `payload` is slightly greater than you appreciate in this case; it's not just about saving keystrokes. From the perspective of a `Node<NR,NP>`, the `ref` and `payload` are symmetric/parallel concepts, and that symmetry is a little more apparent if the names are of similar length. Thus, I think the value of consistency is both cognitive and orthographic :)\r\n\r\nI would be exceedingly pleased if the names were precisely the same number of characters - as in `ref` and `dat` - but I understand if you prefer `data` :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000391558915\u0000":{"address":{"type":"COMMENT","id":"391558915","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#issuecomment-391558915","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":">> It sounds like a consequence of what you’re suggesting is that we need\r\n>> to bump the _indexVersion whenever a node is added to the graph.\r\n>> Consider the following scenario:\r\n>> \r\n>> ```\r\n>> const g = new Graph();\r\n>> const ref = g.nodeReference(anAddress);\r\n>> // now, `ref`'s internal `index` is `null`\r\n>> assert(g.get() == null);\r\n>> g.addNode({address: anAddress, payload: {}});\r\n>> assert(g.get() != null);\r\n>> ```\r\n>> \r\n>> For the second assertion to succeed, the cache must have been\r\n>> invalidated by the addNode. Or am I misunderstanding something?\r\n\r\nWhen the ref has a null internal index, we attempt to correct the index every time `_ensureUpToDate` is called on that reference, which is to say, every time a graph property is requested.\r\nThus, calling neighbors on a phantom reference is relatively expensive, as it always goes through stringification. However, if the reference ever stops being a phantom, on the first time it is successfully used, it will adopt the correct index, and future calls will be efficient.\r\nThus, all phantom-reference related work is handled not when the graph is updated, but when the phantom reference is actually used.\r\n\r\nI believe having slow lookups on phantom references is fine, since you will never encounter them \"organically\" - i.e. through graph traversal or calls to `nodes`. You only get them when you explicitly construct them.\r\n\r\nMake sense?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000391806114\u0000":{"address":{"type":"COMMENT","id":"391806114","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#issuecomment-391806114","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> When the ref has a null internal index, we attempt to correct the\r\n> index every time `_ensureUpToDate` is called on that reference, which\r\n> is to say, every time a graph property is requested.\r\n\r\nYes, it sounds like this makes sense. We can start off, anyway, by\r\nimplementing an uncached version.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000391816825\u0000":{"address":{"type":"COMMENT","id":"391816825","parent":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#issuecomment-391816825","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I went through `:%S/payload/data/gc`, and as I was approving each of the\r\nindividual changes I came to like “data” less and less… it just doesn’t\r\nseem like the right name. Per discussion, we’ll stick with “payload” for\r\nnow.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190351565\u0000":{"address":{"type":"COMMENT","id":"190351565","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190351565","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'm curious why the record is a public field, as opposed to having a public method that returns the record. Everything else is accessed functionally, is there a reason to be inconsistent on this point?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190354156\u0000":{"address":{"type":"COMMENT","id":"190354156","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190354156","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Hmm, when we serialize the Graph JSON this will be considerable bloat, and is wholly redundant with the `pluginName` and `type` fields. Can we think of a way to deduplicate this with the pluginName/type, or to use index references rather than including the full string every time?\r\n\r\nIf we internally store nodes in a `pluginName/type` hierarchy, then potentially we could apply the compat_info to an array of all the payloads rather than on each one; this would also make it easy to deduplicate the address info.\r\n\r\nAlso, I know you want to de-privilege the \"type\" field, but notice that this is an orthogonal case where we have a first-class `type` construct. More to say on this in the part of the doc where you propose de-privileging type."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190355139\u0000":{"address":{"type":"COMMENT","id":"190355139","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190355139","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"`s/Neighborhood/Neighbors/`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190355678\u0000":{"address":{"type":"COMMENT","id":"190355678","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190355678","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Is there any reason not to move this pattern down into the `neighbors` method? I don't look forward to re-implementing this for every `.*Reference` accessor"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190358159\u0000":{"address":{"type":"COMMENT","id":"190358159","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190358159","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Seems reasonable, I don't 100% love it because it adds some extra boilerplate, but I do like defaulting to giving us more expressive / flexible semantics."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190358225\u0000":{"address":{"type":"COMMENT","id":"190358225","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190358225","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":+1: "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190358839\u0000":{"address":{"type":"COMMENT","id":"190358839","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190358839","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I believe that requesting a reference to an address should always return a valid NodeReference (albeit one which might have no payload and no neighbors). Since we are able to provide valid implementations of all the NR functions even if it is not defined. Implementing inconsistent behavior where we don't return those perfectly valid NRs seems needlessly confusing to me. Your proposal on how to do this in a manner that is consistent with plugins makes sense to me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122709316\u0000190360486\u0000":{"address":{"type":"COMMENT","id":"190360486","parent":{"type":"REVIEW","id":"122709316","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190360486","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In the examples below, you make a decent case for allowing other properties to be always included in the address-layer for a node (ie. required to get a reference). However, none of these examples make a case for removing type from its privileged position. Without type, it would be difficult to use those extra properties - if you can't filter by type, how do you know which properties will be available to you? Duck typing?\r\n\r\nOur `compat` framework encodes the idea of type, and I think for very good reason. I think we should consistently enshrine type across the system, where type is not a string but a [pluginName: string, subtype: string] 2-tuple, or perhaps a [pluginName, subtypes....] k-tuple. It's actually the `id` that should be de-privileged. Git plugin types should have the option of using the `hash` as the id, or in the case of e.g. TreeEntrys using the union of `treeHash` and `entryName`. GitHub author-like nodes should be able to use `login` as id. And so forth."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190391842\u0000":{"address":{"type":"COMMENT","id":"190391842","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190391842","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What I really want is a protected or package-private field: `record`\r\nshould be available to subclasses, but should not be publicly\r\naccessible. External clients certainly shouldn’t access\r\n`anIssue.record`, and they probably shouldn’t access `anIssue.record()`,\r\neither; this is an internal data format and an implementation detail.\r\nPerhaps the best way to implement this to put a field `_record` on the\r\nbase type, and just reference this property in subclasses. I’m not\r\nstrongly opposed to the `_record()` getter alternative, but I don’t see\r\nany reason for it—it’s a superfluous function call, and we don’t gain\r\nany flexibility by having it be a method because all callers will be\r\nmodule-internal, anyway."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190394816\u0000":{"address":{"type":"COMMENT","id":"190394816","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190394816","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Hmm, when we serialize the Graph JSON this will be considerable bloat\r\n> […] Can we think of a way to deduplicate this with the\r\n> pluginName/type, or to use index references rather than including the\r\n> full string every time?\r\n\r\nIndeed: I was thinking about this and the general version of this\r\nproblem while writing the document. (I had some thoughts, but they are,\r\nI think, out of scope for this document.)\r\n\r\n> and is wholly redundant with the `pluginName` and `type` fields. \r\n\r\nHmm—should it? Suppose that the GitHub plugin originally had a single\r\nnode type for “Author” nodes, with `type: \"AUTHOR\"` and a `CompatInfo`\r\ntype of (something like) `sc/sc/github/Author`. Then, we discovered\r\nlater that we actually need to treat users, bots, and organizations\r\ndifferently. We remove the `AUTHOR` node type and introduce three more\r\n(`USER`, `BOT`, `ORGANIZATION`), but we want to maintain data\r\ncompatibility. Consequently, the `CompatInfo` for each of these node\r\ntypes will have type `sc/sc/github/Author` still, right?\r\n\r\n> If we internally store nodes in a `pluginName/type` hierarchy, then\r\n> potentially we could apply the compat_info to an array of all the\r\n> payloads rather than on each one; this would also make it easy to\r\n> deduplicate the address info.\r\n\r\nAgain, doing this properly would be a bit tricky. Let’s definitely think\r\nabout it, but at another time.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190395457\u0000":{"address":{"type":"COMMENT","id":"190395457","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190395457","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190395890\u0000":{"address":{"type":"COMMENT","id":"190395890","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190395890","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don’t understand. What signature are you proposing for\r\n`NodeReference.neighbors`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190396401\u0000":{"address":{"type":"COMMENT","id":"190396401","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190396401","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Noted. I think that a dozen characters is a fair price to pay for\r\nsignificantly improving memory limits, etc.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190396579\u0000":{"address":{"type":"COMMENT","id":"190396579","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190396579","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool. I’m not at all certain that this is a good idea, but it will be an\r\ninteresting experiment. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190397184\u0000":{"address":{"type":"COMMENT","id":"190397184","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190397184","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool. Just to make sure that we’re on the same page, some implications\r\nof this are:\r\n\r\n  - Plugins are required to construct a `NodeReference` without access\r\n    to the payload.\r\n  - The `Graph` class cannot (easily?) “collapse” its index by removing\r\n    phantom nodes.\r\n  - Calling `nodeReference` mutates the internal storage of the graph.\r\n\r\nYes?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122758544\u0000190400352\u0000":{"address":{"type":"COMMENT","id":"190400352","parent":{"type":"REVIEW","id":"122758544","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190400352","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> However, none of these examples make a case for removing type from its\r\n> privileged position. Without type, it would be difficult to use those\r\n> extra properties - if you can't filter by type, how do you know which\r\n> properties will be available to you? Duck typing?\r\n\r\nI don’t follow the logic here (and I’m certainly not advocating for duck\r\ntyping). Who says “you can’t filter by type”? You’d be allowed to filter\r\nby `type` just like any other property. If your filter includes a `type`\r\nconstraint and a node doesn’t have a `type` property, then the node is\r\nnot included in the results.\r\n\r\nTo put it another way: in a world where plugins can make their own\r\nchoices about what information is used to identify a node, there’s no\r\nlonger any _need_ to privilege `type`. I’m not trying to knock `type`\r\ndown a peg; I’m trying to raise everything else up. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803449\u0000190429694\u0000":{"address":{"type":"COMMENT","id":"190429694","parent":{"type":"REVIEW","id":"122803449","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190429694","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Makes sense. Weak preference for `_record` then."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122804113\u0000190430275\u0000":{"address":{"type":"COMMENT","id":"190430275","parent":{"type":"REVIEW","id":"122804113","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190430275","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Interesting point with the splitting-author case. I'm doubtful that we'd want a single `CompatInfo` for each of those node types; at the time when we split into three distinct types, they should have three `CompatInfos`, which reflects the fat that they can version independently.\r\n\r\nIt's not quite clear what to do with the legacy `Author` nodes; it seems to suggest that maybe the `CompatInfo` should be at the level of the plugin, not the individual node. Then the plugin can define compat handlers so that pre-split plugin data can be properly reconciled when it's loaded by post-split handlers. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122804495\u0000190430626\u0000":{"address":{"type":"COMMENT","id":"190430626","parent":{"type":"REVIEW","id":"122804495","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190430626","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We could add e.g. a `ReferenceConstructorName` option to `NeighborOptions`, which either filters out references that don't have the right constructor, or requires that every neighbor have that constructor and throw an error if not (ie: the same semantics here).\r\n\r\nMy point is, your including this in the generic example for using a reference suggests that we expect basically every caller to neighbors to apply this logic, in which case we not be expecting clients to all re-write this boilerplate over and over."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122806588\u0000190432374\u0000":{"address":{"type":"COMMENT","id":"190432374","parent":{"type":"REVIEW","id":"122806588","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190432374","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"1. seems totally reasonable to me.\r\n\r\nI don't think 2. and 3. are necessary implications. When the graph gets a request for a NodeReference that does not exist in the graph, it sets its index to null. Whenever `_ensureUpToDate()` is called on that `NodeReference`, it checks its address in the graph to see if it has an index. If it does, then it can delegate to the graph to find its neighbors. If not, then it knows it has no empty and it does not have a corresponding payload. I believe this behavior is correct, and also these \"phantom references\" can be GC'd like any other object, are not pointed to by the graph, and generating them does not require polluting the graph's internal state."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803263\u0000190429548\u0000":{"address":{"type":"COMMENT","id":"190429548","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190429548","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Changed to `this._record` for now."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803263\u0000190431787\u0000":{"address":{"type":"COMMENT","id":"190431787","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190431787","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> It's not quite clear what to do with the legacy `Author` nodes; it\r\n> seems to suggest that maybe the `CompatInfo` should be at the level of\r\n> the plugin, not the individual node. Then the plugin can define compat\r\n> handlers so that pre-split plugin data can be properly reconciled when\r\n> it's loaded by post-split handlers. \r\n\r\nThis is reasonable, but of course just punts the problem to “what\r\nhappens when we want to split the GitAndGithubPlugin into two separate\r\nplugins?”. Perhaps this case is rare enough that we don’t need to\r\nconsider it too carefully right now… but I suspect that there is a\r\ndeeper solution hiding here.\r\n\r\nFor instance: perhaps we simply want the type-and-version to be one\r\nidentifier, and to have handlers corresponding to types-and-versions,\r\nnot just versions. Then the “User” node can have handlers for all of\r\n\r\n  - `sourcecred/github-beta/User@0.2.0`\r\n  - `sourcecred/github-beta/User@0.1.0`\r\n  - `sourcecred/github-beta/Author@0.1.0`\r\n  - `sourcecred/git-and-github-beta/Author@0.1.0`\r\n\r\nas appropriate."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803263\u0000190432277\u0000":{"address":{"type":"COMMENT","id":"190432277","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190432277","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I presume that you mean `referenceConstructor: Class<NodeReference>`,\r\nnot `referenceConstructorName: string`, surely? Factoring out something\r\nlike this is fine with me. Details to be determined.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122803263\u0000190435270\u0000":{"address":{"type":"COMMENT","id":"190435270","parent":{"type":"REVIEW","id":"122803263","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190435270","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I've adopted this and written the implications in the doc."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000296\u0000122817391\u0000190441488\u0000":{"address":{"type":"COMMENT","id":"190441488","parent":{"type":"REVIEW","id":"122817391","pull":{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/296#discussion_r190441488","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Didn’t see your last two comments at time of last push.)\r\n\r\nIt sounds like what you’re suggesting requires abandoning the goal that\r\nwe only create a `NodeReference` once per address. This is totally\r\nreasonable, in my opinion.\r\n\r\nIt sounds like a consequence of what you’re suggesting is that we need\r\nto bump the `_indexVersion` whenever a node is added to the graph.\r\nConsider the following scenario:\r\n\r\n```javascript\r\nconst g = new Graph();\r\nconst ref = g.nodeReference(anAddress);\r\n// now, `ref`'s internal `index` is `null`\r\nassert(g.get() == null);\r\ng.addNode({address: anAddress, payload: {}});\r\nassert(g.get() != null);\r\n```\r\n\r\nFor the second assertion to succeed, the cache must have been\r\ninvalidated by the `addNode`. Or am I misunderstanding something?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123508914\u0000191006166\u0000":{"address":{"type":"COMMENT","id":"191006166","parent":{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#discussion_r191006166","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I believe using reduce here is inefficient / a bad pattern, and only exists because we didn't have the current mergeConservative api when written. should be `Graph.mergeConservative(neighborhoodDecomposition(`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123508914\u0000191006399\u0000":{"address":{"type":"COMMENT","id":"191006399","parent":{"type":"REVIEW","id":"123508914","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#discussion_r191006399","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"\"has the empty graph as a left identity\" - two tests of this name now?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123509554\u0000191006714\u0000":{"address":{"type":"COMMENT","id":"191006714","parent":{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#discussion_r191006714","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Absolutely. Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000297\u0000123509554\u0000191006727\u0000":{"address":{"type":"COMMENT","id":"191006727","parent":{"type":"REVIEW","id":"123509554","pull":{"type":"PULL","number":"297","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/297#discussion_r191006727","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000299\u0000392207383\u0000":{"address":{"type":"COMMENT","id":"392207383","parent":{"type":"PULL","number":"299","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/299#issuecomment-392207383","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yarn’s registry is down, so Travis will fail. I’ve verified that `yarn\r\ntravis` passes locally, but I am happy to wait until our normal CI is\r\nback up to merge.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000300\u0000392218331\u0000":{"address":{"type":"COMMENT","id":"392218331","parent":{"type":"PULL","number":"300","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/300#issuecomment-392218331","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Again, Travis will fail because the Yarn registry is down."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000305\u0000392578620\u0000":{"address":{"type":"COMMENT","id":"392578620","parent":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#issuecomment-392578620","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"That code is c/o a nice StackExchange user, by the way:  \r\nhttps://codereview.stackexchange.com/a/194995/29124"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000305\u0000123788937\u0000191252996\u0000":{"address":{"type":"COMMENT","id":"191252996","parent":{"type":"REVIEW","id":"123788937","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#discussion_r191252996","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Want to add `plugins(): Plugins`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000305\u0000123797511\u0000191260475\u0000":{"address":{"type":"COMMENT","id":"191260475","parent":{"type":"REVIEW","id":"123797511","pull":{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/305#discussion_r191260475","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000310\u0000123816931\u0000191277633\u0000":{"address":{"type":"COMMENT","id":"191277633","parent":{"type":"REVIEW","id":"123816931","pull":{"type":"PULL","number":"310","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/310#discussion_r191277633","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: `s/!==/ !==` (missing whitespace)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000123822063\u0000191282085\u0000":{"address":{"type":"COMMENT","id":"191282085","parent":{"type":"REVIEW","id":"123822063","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191282085","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We should document that this tests for structural equality, and does not check the `plugins`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124107823\u0000191520039\u0000":{"address":{"type":"COMMENT","id":"191520039","parent":{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191520039","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can use `(type: empty)` here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124107823\u0000191522942\u0000":{"address":{"type":"COMMENT","id":"191522942","parent":{"type":"REVIEW","id":"124107823","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191522942","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This method and the other `instanceof` check don't seem to provide much value: they just check that Flow properly refines `instanceof`s, which it does. Suggest removal."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124114614\u0000191525862\u0000":{"address":{"type":"COMMENT","id":"191525862","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191525862","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why not just `expect(fooNodes).toEqual([fooNode()])`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124114614\u0000191526099\u0000":{"address":{"type":"COMMENT","id":"191526099","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191526099","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We should have a similar test for phantom nodes, once we add edges. (No action required.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124114614\u0000191526481\u0000":{"address":{"type":"COMMENT","id":"191526481","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191526481","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"sp.: *existent*"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000312\u0000124114614\u0000191527230\u0000":{"address":{"type":"COMMENT","id":"191527230","parent":{"type":"REVIEW","id":"124114614","pull":{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/312#discussion_r191527230","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(and below)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000316\u0000124170843\u0000191572663\u0000":{"address":{"type":"COMMENT","id":"191572663","parent":{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/316#discussion_r191572663","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"How about letting this accept a `?PluginFilter`, returning `(x) => true` in the case where the input is `null`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000316\u0000124170843\u0000191572862\u0000":{"address":{"type":"COMMENT","id":"191572862","parent":{"type":"REVIEW","id":"124170843","pull":{"type":"PULL","number":"316","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/316#discussion_r191572862","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"could you put a space between this slash and this dollar sign :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000318\u0000124214582\u0000191611399\u0000":{"address":{"type":"COMMENT","id":"191611399","parent":{"type":"REVIEW","id":"124214582","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/318#discussion_r191611399","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Will change to be more specific: `src is ${String(edge.src)}`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000318\u0000124220054\u0000191616080\u0000":{"address":{"type":"COMMENT","id":"191616080","parent":{"type":"REVIEW","id":"124220054","pull":{"type":"PULL","number":"318","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/318#discussion_r191616080","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Will add tests for `equals` changes."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124236667\u0000191630914\u0000":{"address":{"type":"COMMENT","id":"191630914","parent":{"type":"REVIEW","id":"124236667","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191630914","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The terms that we've been using so far are:\r\n  - *present*: node is in the graph\r\n  - *phantom*: node has been added to and removed from the graph (and is not in the graph)\r\n  - *absent*: node was never in the graph\r\n  - *isolated* (not trichotomous): node has no incident edges\r\n\r\nSo, your `phantomNode` isn't actually a phantom node. Could you rename it or update the graph structure accordingly?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124236886\u0000191631093\u0000":{"address":{"type":"COMMENT","id":"191631093","parent":{"type":"REVIEW","id":"124236886","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191631093","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124525570\u0000191867201\u0000":{"address":{"type":"COMMENT","id":"191867201","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191867201","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The `edges` function should call this function instead of reimplementing it. If you want to pull this `_upgradeIndexedEdge` change into a separate commit that lands before this PR, that's fine with me; or, upgrading it inline is also fine."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124525570\u0000191868813\u0000":{"address":{"type":"COMMENT","id":"191868813","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191868813","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Usually, I like to use the following pattern:\r\n```js\r\n*neighbors(options?: NeighborsOptions) {\r\n  const fullOptions = {\r\n    node: {},\r\n    edge: {},\r\n    direction: \"ANY\",\r\n    ...options;\r\n  };\r\n  const edgeFilter = addressFilterer(fullOptions.edge);\r\n  const nodeFilter = addressFilterer(fullOptions.node);\r\n  // ...\r\n}\r\n```\r\n(If you prefer, rename `options` to `rawOptions` and `fullOptions` to\r\n`options`.)\r\n\r\nHowever, this would require the identity filter `{}` to be a valid\r\n`PluginFilter`. I present this as further evidence that this should, in\r\nfact, be the case. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124525570\u0000191884352\u0000":{"address":{"type":"COMMENT","id":"191884352","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191884352","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nodes in the graph: `foo`, `bar`, `isolated`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124525570\u0000191885320\u0000":{"address":{"type":"COMMENT","id":"191885320","parent":{"type":"REVIEW","id":"124525570","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191885320","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: the test case `neighbors it filters by direction` is ungrammatical; drop the _it_. Likewise below."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557117\u0000191893367\u0000":{"address":{"type":"COMMENT","id":"191893367","parent":{"type":"REVIEW","id":"124557117","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191893367","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557159\u0000191893422\u0000":{"address":{"type":"COMMENT","id":"191893422","parent":{"type":"REVIEW","id":"124557159","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191893422","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124557191\u0000191893451\u0000":{"address":{"type":"COMMENT","id":"191893451","parent":{"type":"REVIEW","id":"124557191","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191893451","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124562303\u0000191897757\u0000":{"address":{"type":"COMMENT","id":"191897757","parent":{"type":"REVIEW","id":"124562303","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191897757","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124563477\u0000191898793\u0000":{"address":{"type":"COMMENT","id":"191898793","parent":{"type":"REVIEW","id":"124563477","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191898793","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Update: Doing this gave me a typing headache, around properly expressing the set `{||} | {|+plugin|} | {|+plugin, +type|}`. Once I did that, it wasn't happy to assign the `{}` as a PluginFilter in the default neighbor options above.\r\nI'm going to merge it as is, since the code is fine as written. Feel free to PR an improvement!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000319\u0000124566934\u0000191901573\u0000":{"address":{"type":"COMMENT","id":"191901573","parent":{"type":"REVIEW","id":"124566934","pull":{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/319#discussion_r191901573","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep; that known issue is why I didn’t suggest it outright. I spent a bit\r\nof time poking around in Flow’s inference engine to see if there might\r\nbe an easy way to infer `{}` as having either type `{||}` or the\r\nunsealed object type, but didn’t find much useful. It wouldn’t be as\r\nsimple as inferring the intersection type `{} & {||}`; this would be\r\nunsound. One interesting thing that I learned is that `flow type-at-pos`\r\nin fact infers `{||}` as the type of `const emptyObject = {}`, which is\r\nsurprising given that `const emptyObject: {||} = {}` yields a type\r\nerror. But that’s not particularly actionable, as far as I can tell.\r\n\r\nSo, TL;DR: merging as-is is fine with me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000320\u0000393372141\u0000":{"address":{"type":"COMMENT","id":"393372141","parent":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#issuecomment-393372141","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> When we do add options like you described, I think we'd need to\r\n> serialize them into the graph, otherwise graph semantics are not\r\n> portable / reproducible.\r\n\r\nAgreed.\r\n\r\n> So we'd probably come up with some way of storing pluginOptions in the\r\n> graph, and graph equality (and thus merge conservative's\r\n> conservativism) would explicitly respect those pluginOptions (which\r\n> would, of course, also have compat handlers).\r\n\r\nAlso agreed in principle—I don’t exactly see how this should work, but\r\nI bet that we can figure something out.\r\n\r\nI suppose that I will merge this as-is, then."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124619808\u0000191945362\u0000":{"address":{"type":"COMMENT","id":"191945362","parent":{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191945362","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Hmm, I notice that we could instead have an API that doesn't require passing plugins, but instead takes the set union of plugins in the merged graphs. I posit that would basically always be \"the right thing\", the current api basically forces the user to separately track which plugins are in the merged graph, with the penalty that the call will fail if any necessary plugins were excluded. What do you think of making that change?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124619808\u0000191946091\u0000":{"address":{"type":"COMMENT","id":"191946091","parent":{"type":"REVIEW","id":"124619808","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191946091","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It doesn't test the plugin behavior except implicitly (via not throwing an error from the plugin handler not being registered). Regardless of what the precise plugin behavior is, it would be good to test."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124625209\u0000191949799\u0000":{"address":{"type":"COMMENT","id":"191949799","parent":{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191949799","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It’s not clear to me that there is a meaningful definition of set union\r\nfor plugin lists, because it’s not clear that there’s a meaningful\r\ndefinition for equality of plugin handlers. Suppose that `h1` and `h2`\r\nare two plugin handlers with the same `.pluginName()`. It is clear that\r\nin some cases we must throw a “duplicate plugin handler” error, and in\r\nothers we must recognize that `h1` and `h2` are “the same” and pick one\r\nof them arbitrarily. But how do we make this choice?\r\n\r\nWe can’t rely on reference equality: if we have\r\n```js\r\nconst g1 = new Graph([new GitPluginHandler()]);\r\nconst g2 = new Graph([new GitPluginHandler(), new GithubPluginHandler()]);\r\n```\r\nthen `g1.plugins()[0] !== g2.plugins()[0]`.\r\n\r\nWe can’t rely on class/`.constructor` equality, for two reasons. First,\r\nit would be totally reasonable to define\r\n```js\r\nclass FooPluginHandler {\r\n  constructor(someImportantOptions) {\r\n    // …\r\n  }\r\n  // …\r\n}\r\n```\r\nsuch that two instances of `FooPluginHandler` could really be\r\nmeaningfully different. Second, it is also totally reasonable to define\r\n```js\r\nexport function barPluginHandler() {\r\n  return {\r\n    createRef: /* … */,\r\n    createPayload: /* … */,\r\n  };\r\n}\r\n```\r\nsuch that a plugin handler is just an `Object`.\r\n\r\nOne attempt at a resolution would be to soft-mandate that plugins expose\r\nnot a class implementing `PluginHandler` but instead singleton instance\r\nof such a class, with the understanding that this exact instance should\r\nbe used to represent the plugin.\r\n\r\nWhat do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124625209\u0000191950062\u0000":{"address":{"type":"COMMENT","id":"191950062","parent":{"type":"REVIEW","id":"124625209","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191950062","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Are you suggesting that I add a test like\r\n```js\r\nit(\"installs appropriate plugin handlers\", () => {\r\n  const plugins = [new Handler()];\r\n  expect(Graph.mergeConservative(plugins, []).plugins()).toEqual(plugins);\r\n});\r\n```\r\n? If so, this seems reasonable to me, and I’m happy to add it. If not,\r\nI don’t understand the comment.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124626000\u0000191950448\u0000":{"address":{"type":"COMMENT","id":"191950448","parent":{"type":"REVIEW","id":"124626000","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191950448","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, that was what I had in mind."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124626332\u0000191950732\u0000":{"address":{"type":"COMMENT","id":"191950732","parent":{"type":"REVIEW","id":"124626332","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191950732","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I like the \"singleton instance\" proposal. We can then assume (and document) that all plugins with the same name are assumed equivalent, and if multiple distinct instances are in fact provided, we choose between them arbitrarily."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124637246\u0000191960051\u0000":{"address":{"type":"COMMENT","id":"191960051","parent":{"type":"REVIEW","id":"124637246","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191960051","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A major downside of the singleton instance is that it precludes any\r\nconfigurability. For a real-world example: the Git plugin will probably\r\nallow the user to configure diff settings, like “a change is a complete\r\nrewrite if more than 70% of the file is changed”, or “ignore end-of-line\r\nwhitespace”, or “try harder to detect copies” (these are all real\r\noptions to `git diff`).\r\n\r\nIt is reasonable to expect that these options can affect how the\r\nporcelain behaves. Suppose that the Git plugin stores “becomes” edges\r\nwith a payload of `{rewriteProportion: number}`. Then we might have code\r\nlike the following:\r\n\r\n```js\r\nclass TreeEntryReference extends /* … */ {\r\n  _options: GitPluginOptions;\r\n  constructor(base: NodeReference, options: GitPluginOptions) {\r\n    super(base);\r\n    this._options = options;\r\n  }\r\n  *becomes(): Iterator<TreeEntryReference> {\r\n    for (const neighbor of this.neighbors({…})) {\r\n      const {rewriteProportion} = neighbor.edge.payload;\r\n      const {rewriteThreshold} = this._options;\r\n      if (rewriteProportion >= rewriteThreshold) {\r\n        // This change counts as a rewrite: there’s no edge.\r\n        continue;\r\n      }\r\n      yield /* … */;\r\n    }\r\n  }\r\n}\r\nclass GitPluginHandler implements PluginHandler {\r\n  _options: GitPluginOptions;\r\n  constructor(options: GitPluginOptions) {\r\n    this._options = options;\r\n  }\r\n  pluginName() { return GIT_PLUGIN_NAME; }\r\n  createReference(base: NodeReference) {\r\n    switch (base.address.type) {\r\n      case TREE_ENTRY_NODE_TYPE:\r\n        return new TreeEntryReference(base, this._options);\r\n      // …\r\n    }\r\n  }\r\n  // …\r\n}\r\n```\r\n\r\nIn this case, attempting to merge graphs with Git plugin handlers with\r\ndifferent settings seems like it _must_ be an error, because any result\r\nwould fail to be a conservative extension of the original graphs.\r\n\r\nGiven that configurability of algorithms and plugins is an important\r\ndesign goal, I’d prefer to think about this more carefully rather than\r\nto just pick something that’s easy to implement and ship it. If you want\r\nto get something in quickly so that we can finish up this redesign and\r\nmove onto more critical-path things, then I’d be happy to put in\r\nsomething that is actually conservative: one option is the code in this\r\nPR, which shifts the responsibility to the caller; another option is\r\nusing reference equality as the congruence, which (while conservative)\r\nis bad for configurability and requires plugins to provide instance\r\ncontrol. As you might infer, I favor the former option.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000320\u0000124638262\u0000191960944\u0000":{"address":{"type":"COMMENT","id":"191960944","parent":{"type":"REVIEW","id":"124638262","pull":{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/320#discussion_r191960944","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for coming up with a thoughtful and interesting example of when we'd want to pass options from the plugin object. When we do add options like you described, I think we'd need to serialize them into the graph, otherwise graph semantics are not portable / reproducible. So we'd probably come up with some way of storing pluginOptions in the graph, and graph equality (and thus merge conservative's conservativism) would explicitly respect those pluginOptions (which would, of course, also have compat handlers). Thus, I think that even in light of your points, mergeConservative should eventually not require a plugins argument.\r\n\r\nHowever, you've persuaded me that this merits careful attention, and there's no need to figure this all out now. Given that we have been quite good about refactoring APIs, I'm fine approving this with its current API and we can take another pass on it as we develop the plugin serialization story."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000322\u0000393667387\u0000":{"address":{"type":"COMMENT","id":"393667387","parent":{"type":"PULL","number":"322","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/322#issuecomment-393667387","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep. This was caught while testing `fromJSON` on a graph with phantom\r\nnodes, which are removed through a serialization roundtrip… so at least\r\nsome test cases caught it! :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000192227079\u0000":{"address":{"type":"COMMENT","id":"192227079","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192227079","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Wondering what you think of just `sourcecred/Graph`? As in, the organization SourceCred will only ever publish one \"Graph\". Then it's actually portable if we refactor our repository structure."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000192229510\u0000":{"address":{"type":"COMMENT","id":"192229510","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192229510","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: why this blankline?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000192231521\u0000":{"address":{"type":"COMMENT","id":"192231521","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192231521","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: s/g.plugins()/plugins/g"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000192231729\u0000":{"address":{"type":"COMMENT","id":"192231729","parent":{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192231729","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Can we sandwich the phantom node in between two existing nodes? This forces a re-order."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124973950\u0000192235662\u0000":{"address":{"type":"COMMENT","id":"192235662","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192235662","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The principle of organizations owning compat types is fine with me. In\r\nthis particular case, it might be okay: “graph” is a pretty big class of\r\nthing to promise to only ever create one of, but (a) maybe that’s true\r\nfor SourceCred, and (b) we’re well before the point where we provide any\r\nactual compat guarantees. :-)\r\n\r\nI’m happy to make this change if you like.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124973950\u0000192235895\u0000":{"address":{"type":"COMMENT","id":"192235895","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192235895","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It does look a bit out of place, doesn’t it? I’ll remove it.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124973950\u0000192236031\u0000":{"address":{"type":"COMMENT","id":"192236031","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192236031","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sure; that makes sense."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124973950\u0000192236094\u0000":{"address":{"type":"COMMENT","id":"192236094","parent":{"type":"REVIEW","id":"124973950","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/323#discussion_r192236094","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good idea. Will do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000324\u0000394108270\u0000":{"address":{"type":"COMMENT","id":"394108270","parent":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#issuecomment-394108270","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Now that we're dropping v2 in favor of v3, I think it's safe to close this PR."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192466145\u0000":{"address":{"type":"COMMENT","id":"192466145","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192466145","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This can be simplified by removing `return this;` and changing the\r\nexplicitly annotated return type from `this` to `void`. See\r\nhttps://github.com/facebook/flow/issues/6400#issuecomment-393954114.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192468775\u0000":{"address":{"type":"COMMENT","id":"192468775","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192468775","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This invokes the `edgeConstructor` with `this` set to the global object\r\ninstead of the plugin handler.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192471185\u0000":{"address":{"type":"COMMENT","id":"192471185","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192471185","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For consistency, could you mark these with `TODO(perf)`? That way, when\r\nthings get really slow we can just grep for that string to find them.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192471718\u0000":{"address":{"type":"COMMENT","id":"192471718","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192471718","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We could write (untested)\r\n\r\n```js\r\n_addNodeReferenceAddress(ref): Integer {\r\n  if (ref instanceof InternalReference && ref.graph() === this) {\r\n    return ref._index;\r\n  } else {\r\n    return this._addNodeAddress(ref.address());\r\n  }\r\n}\r\n```\r\n\r\nIs this what you’re referring to? (Fine if you don’t want to add it\r\nnow—it’d probably merit additional careful testing.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192471906\u0000":{"address":{"type":"COMMENT","id":"192471906","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192471906","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You have `address` in scope."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192472435\u0000":{"address":{"type":"COMMENT","id":"192472435","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192472435","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we call `edge_` something less confusing, like `candidate` or `x`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192474381\u0000":{"address":{"type":"COMMENT","id":"192474381","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192474381","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Aww, no longer cute."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192474747\u0000":{"address":{"type":"COMMENT","id":"192474747","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192474747","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If you call this an `actualIterator`, maybe make its type `Iterator<>`?\r\n\r\nBut why the name change at all?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192475061\u0000":{"address":{"type":"COMMENT","id":"192475061","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192475061","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why not use `SimpleEdge.TYPE` here (and create that accordingly), as we\r\nexpect actual clients to do?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192476291\u0000":{"address":{"type":"COMMENT","id":"192476291","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192476291","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Eek. How about instead:\r\n\r\n```js\r\nconst e = (address: null | void) =>\r\n  new class extends SimpleEdge {\r\n    address() {\r\n      return (address: any);\r\n    }\r\n  }(srcRef(), dstRef());\r\n```\r\n\r\nAs you use similar things a bunch below, maybe\r\n\r\n```js\r\nclass ShiftyEdge extends SimpleEdge {\r\n  _overrides: {|+src?: any, +dst?: any, +address?: any|};\r\n  constructor(overrides, ...args) {\r\n    super(...args);\r\n    this._overrides = overrides;\r\n  }\r\n  src() {\r\n    return \"src\" in this._overrides ? this._overrides.src : super.src();\r\n  }\r\n  dst() {\r\n    return \"dst\" in this._overrides ? this._overrides.dst : super.dst();\r\n  }\r\n  address() {\r\n    return \"address\" in this._overrides\r\n      ? this._overrides.address\r\n      : super.address();\r\n  }\r\n}\r\n```\r\n\r\n?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192477502\u0000":{"address":{"type":"COMMENT","id":"192477502","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192477502","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This should be `toBe` instead of `toEqual`; we don’t want a deep\r\nequality check.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125256091\u0000192478244\u0000":{"address":{"type":"COMMENT","id":"192478244","parent":{"type":"REVIEW","id":"125256091","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192478244","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why do we need both a strangeness and a name?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000324\u0000125327015\u0000192523891\u0000":{"address":{"type":"COMMENT","id":"192523891","parent":{"type":"REVIEW","id":"125327015","pull":{"type":"PULL","number":"324","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/324#discussion_r192523891","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"After discussion—I was misunderstanding the problem here. The above code\r\nis sound, but wouldn’t do what we want, because almost always the\r\nreference that we get is a delegate reference, so it won’t actually be\r\nan instance of `IndexedReference`.\r\n\r\nFurthermore, it is not unreasonable for a delegate reference to be\r\nwrapping another delegate reference, so it’s not quite sufficient to\r\njust say “if it’s a `DelegateReference`, unpack the internal base\r\nreference, which should probably be an `IndexedReference`”—we’d have to\r\ndo this recursively, and even then this would only work with the\r\n`DelegateReference` implementation that we know about, as opposed to any\r\nother kind of implementation that users are totally free to use.\r\n\r\nThis is kind of a big problem, in my opinion: it changes the perf TODOs\r\nfrom “not going to bother doing this right now” to “it’s not clear that\r\nthere’s actually a good way to do this, and we are incurring away what\r\nmight reasonably be a significant performance hit”.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000325\u0000393771196\u0000":{"address":{"type":"COMMENT","id":"393771196","parent":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/325#issuecomment-393771196","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As a process fix for the future, cron job failures are now sent to my\r\nprimary inbox. (Previously, they were autofiled under Gmail’s “Updates”,\r\nwhich I don’t check daily.) We should at least catch failures more\r\nquickly now. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000325\u0000125025177\u0000192279409\u0000":{"address":{"type":"COMMENT","id":"192279409","parent":{"type":"REVIEW","id":"125025177","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/325#discussion_r192279409","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Maybe also link to #317 for context?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000325\u0000125025483\u0000192279700\u0000":{"address":{"type":"COMMENT","id":"192279700","parent":{"type":"REVIEW","id":"125025483","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/325#discussion_r192279700","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Miscommunication: the comment means that the dependency of\r\n`backend-in-place` on `check-pretty` is to work around a race condition.\r\nI can clarify that.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125358066\u0000192552055\u0000":{"address":{"type":"COMMENT","id":"192552055","parent":{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192552055","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I suspect that you’ll oppose this change, but I just want to throw out\r\nthere a slightly different API:\r\n\r\n```js\r\nexport opaque type DirectionT = Symbol;\r\nexport const IN: DirectionT = Symbol(\"IN\");\r\nexport const OUT: DirectionT = Symbol(\"OUT\");\r\nexport const Direction = Object.freeze({IN, OUT});\r\nexport type NeighborsOptions = {|\r\n  +direction: ?DirectionT,\r\n  +nodePrefix: ?NodeAddress,\r\n  +edgePrefix: ?EdgeAddress,\r\n|};\r\n```\r\n\r\nThis way, clients don’t have to import `IN` and `OUT` into module-global\r\nscope: instead, they import `Direction` and write `Direction.IN` or\r\n`Direction.OUT` appropriately.\r\n\r\nFeel free to say that ten characters really are a lot to type and\r\ndecline this suggestion. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125358066\u0000192552074\u0000":{"address":{"type":"COMMENT","id":"192552074","parent":{"type":"REVIEW","id":"125358066","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192552074","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. This type might change to be `Compatible` later, or maybe that’s\r\npart of the `GraphJSON`? No change necessarily requested.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373543\u0000192567077\u0000":{"address":{"type":"COMMENT","id":"192567077","parent":{"type":"REVIEW","id":"125373543","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192567077","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, I oppose this change. We call `neighbors` a lot."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373553\u0000192567092\u0000":{"address":{"type":"COMMENT","id":"192567092","parent":{"type":"REVIEW","id":"125373553","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192567092","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'll change it to `Compatible<GraphJSON>`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125373612\u0000192567156\u0000":{"address":{"type":"COMMENT","id":"192567156","parent":{"type":"REVIEW","id":"125373612","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192567156","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Actually, that would require forking the compat module into v3. Let's save that for a separate commit and leave it as-is. We might also want to fold the Compatible declaration into GraphJSON, as you suggested."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125379578\u0000192573170\u0000":{"address":{"type":"COMMENT","id":"192573170","parent":{"type":"REVIEW","id":"125379578","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192573170","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I still don’t really understand this argument, which seems to suggest\r\nthat typing speed is ever the limiting factor for anything at all. But,\r\nlike I said, I’m okay with the code as is.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000328\u0000125380497\u0000192574057\u0000":{"address":{"type":"COMMENT","id":"192574057","parent":{"type":"REVIEW","id":"125380497","pull":{"type":"PULL","number":"328","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/328#discussion_r192574057","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yeah, I agree that typing speed isn't the limiting factor. It's more that typing `direction: Direction.IN` bothers me a little. The concision thing is more of a personal taste thing than a utilitarian argument. I appreciate that you're willing to go along with me on this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000394066892\u0000":{"address":{"type":"COMMENT","id":"394066892","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#issuecomment-394066892","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"BTW, when we paired this commit, we forgot to consider the case where `toNodeAddress` is passed an empty array. This resulted in a node address without any null separators, which `fromNodeAddress` interpreted as a  malformed node address. I've changed the behavior so `toNodeAddress` errors on an empty array input, and tested this."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000394099675\u0000":{"address":{"type":"COMMENT","id":"394099675","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#issuecomment-394099675","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Oh, I see your comment now:\r\n\r\n> we forgot to consider the case where toNodeAddress is passed an empty\r\n> array. This resulted in a node address without any null separators,\r\n> which fromNodeAddress interpreted as a malformed node address.\r\n\r\nThat’s just an implementation error, then. We should fix the\r\nimplementation, not disallow the empty array.\r\n\r\nI see two reasonable options:\r\n\r\n  - We could change the representation from “NUL between components” to\r\n    “NUL after each component”, so that `[\"foo\"]` becomes `\"N\\0foo\\0\"`\r\n    and `[]` becomes `\"N\\0\"`.\r\n\r\n  - We could keep the current representation and fix the `assert`\r\n    functions, to check that the string’s first NUL-separated component\r\n    is `N`: i.e., that the string either is literally `\"N\"` or starts\r\n    with `\"N\\0\"`. This should be equivalent to checking that\r\n    `theString.split(\"\\0\")[0] === \"N\"`, which is the intended semantics\r\n    anyway—the fact that this had the wrong behavior on the empty\r\n    array is an error.\r\n\r\nEither of these is fine with me.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000394124379\u0000":{"address":{"type":"COMMENT","id":"394124379","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#issuecomment-394124379","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Makes sense. I changed the implementation to always include a NUL separator after every path component; this involved re-writing the methods. I also refactored the test code. PTAL."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000394127555\u0000":{"address":{"type":"COMMENT","id":"394127555","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#issuecomment-394127555","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the review comments. I made the following changes, based on your suggestions:\r\n- Switched back to having `X_PREFIX` rather than `BASE_X_ADDRESS`, and now using the cleaner `toXAddress` implementation you suggested\r\n- We now check that valid addresses end with a separator\r\n- Factored out non-exported function `isNodeAddress`, which was convenient once checking involved multiple properties, and will be helpful for the extra assertions in https://github.com/sourcecred/sourcecred/pull/332"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000192551223\u0000":{"address":{"type":"COMMENT","id":"192551223","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192551223","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Is this change intentional?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000192551708\u0000":{"address":{"type":"COMMENT","id":"192551708","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192551708","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Wait, why? This restriction seems totally arbitrary. I thought that we\r\nsaid that we were of course going to permit the empty array. I’d\r\ncertainly like to hear a good reason why not to do so.\r\n\r\nOff the top of my head, here is a case where having an empty address\r\narray is totally natural: we can define the _greatest common prefix_ of\r\naddress arrays `x` and `y` to be the longest address array `a` such that\r\n`a` is an array-wise prefix of both `x` and `y`. In the case where `x`\r\nis `[\"foo\"]` and `y` is `[\"bar\"]`, the result must be the empty array.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000192551719\u0000":{"address":{"type":"COMMENT","id":"192551719","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192551719","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`s/.toThrow.*;/.not.toThrow();`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000192551861\u0000":{"address":{"type":"COMMENT","id":"192551861","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192551861","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Do you think that we should make `\\0` a constant?\r\n\r\nI have no strong opinion either way."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125357185\u0000192551896\u0000":{"address":{"type":"COMMENT","id":"192551896","parent":{"type":"REVIEW","id":"125357185","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192551896","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let’s please add an empty component to the end, too. It would not be\r\nvery surprising at all for an implementation to accidentally strip off\r\ntrailing empty strings.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125379593\u0000192573181\u0000":{"address":{"type":"COMMENT","id":"192573181","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192573181","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"+1"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125379593\u0000192573310\u0000":{"address":{"type":"COMMENT","id":"192573310","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192573310","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. This implementation isn’t quite as neat as I’d like (something\r\nlike `[\"N\", ...arr, \"\"].join(SEPARATOR)` would be better, in my\r\nopinion), but not a big deal.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125379593\u0000192573322\u0000":{"address":{"type":"COMMENT","id":"192573322","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192573322","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should we check that the input ends with a `SEPARATOR`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125379593\u0000192573333\u0000":{"address":{"type":"COMMENT","id":"192573333","parent":{"type":"REVIEW","id":"125379593","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192573333","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nice, thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125380679\u0000192574244\u0000":{"address":{"type":"COMMENT","id":"192574244","parent":{"type":"REVIEW","id":"125380679","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192574244","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the suggestion! I didn't like the implementation much either; your way is a lot cleverer. Reimplemented."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125380680\u0000192574245\u0000":{"address":{"type":"COMMENT","id":"192574245","parent":{"type":"REVIEW","id":"125380680","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192574245","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000329\u0000125381028\u0000192574611\u0000":{"address":{"type":"COMMENT","id":"192574611","parent":{"type":"REVIEW","id":"125381028","pull":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/329#discussion_r192574611","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It would be nice to first check that `s != null`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125753076\u0000192889126\u0000":{"address":{"type":"COMMENT","id":"192889126","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#discussion_r192889126","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can the expected message be `expected NodeAddress` or `got EdgeAddress`?\r\nAs it stands, if we had copy-pasted the error message from a node method\r\nto an edge method, the test wouldn’t catch this.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125753076\u0000192889182\u0000":{"address":{"type":"COMMENT","id":"192889182","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#discussion_r192889182","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`s/on /on/`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125753076\u0000192889299\u0000":{"address":{"type":"COMMENT","id":"192889299","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#discussion_r192889299","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let us check idempotency, please."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125753076\u0000192889465\u0000":{"address":{"type":"COMMENT","id":"192889465","parent":{"type":"REVIEW","id":"125753076","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#discussion_r192889465","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Rest in pieces, `sortedByAddress`. :100: :taco:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000331\u0000125754748\u0000192890520\u0000":{"address":{"type":"COMMENT","id":"192890520","parent":{"type":"REVIEW","id":"125754748","pull":{"type":"PULL","number":"331","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/331#discussion_r192890520","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125758963\u0000192894119\u0000":{"address":{"type":"COMMENT","id":"192894119","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#discussion_r192894119","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should be `stringify(x)`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125758963\u0000192894161\u0000":{"address":{"type":"COMMENT","id":"192894161","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#discussion_r192894161","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should be removed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125758963\u0000192894511\u0000":{"address":{"type":"COMMENT","id":"192894511","parent":{"type":"REVIEW","id":"125758963","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#discussion_r192894511","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should add tests for when `components.length` is not `1`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000332\u0000125762006\u0000192896731\u0000":{"address":{"type":"COMMENT","id":"192896731","parent":{"type":"REVIEW","id":"125762006","pull":{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/332#discussion_r192896731","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In fact, these tests caught an implementation bug!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000334\u0000394251787\u0000":{"address":{"type":"COMMENT","id":"394251787","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/334#issuecomment-394251787","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"> Why is `address.js` this kind of pseudo-private module that shouldn’t be\r\n> directly imported by clients? It could just expose:\r\n> \r\n> ```js\r\n> declare module \"address\" {\r\n>   declare opaque type NodeAddress;\r\n>   declare opaque type EdgeAddress;\r\n>   declare function nodeAddress(parts: $ReadOnlyArray<string>): NodeAddress;\r\n>   declare function edgeAddress(parts: $ReadOnlyArray<string>): EdgeAddress;\r\n>   declare function toParts(address: NodeAddress | EdgeAddress): string[];\r\n> }\r\n> ```\r\n\r\nIn offline discussions, you've noted that it's annoying importing the Graph from one file and the Address type from another. The psuedo-private module means it can be canonically imported `import {Address} from \"../../core/graph\"`, and come with all address methods attached, similar to how if we had used a class to back address, we wouldn't need to import every method individually. \r\n\r\nI'm fine having `Address` be an actual, regular module though.\r\n\r\n> Why export an object `_Address` containing functions? \r\n\r\nConvenience for the caller, to have them all packaged together. (I guess this could be replicated via `import * as Address from \"../../core/address\"`)\r\n\r\n> This is unsafe (callers may freely and typesafely modify the attributes on the object)\r\n\r\nDidn't consider this.\r\n\r\n> and annoying (callers can no longer import individual values). If you\r\nexport values individually, callers can either import them individually\r\nor `import * as Address from \"./address\"` (which _is_ safe).\r\n\r\nYep, maybe that's better.\r\n\r\n> It seems desirable that `NodeAddress` and `EdgeAddress` should be\r\n[declared as opaque subtypes][1] of `string`:\r\n\r\n> ```js\r\n> export opaque type NodeAddress: string = string;\r\n> export opaque type EdgeAddress: string = string;\r\n> ```\r\n\r\nSounds good, happy to do that.\r\n\r\n> I’m not dead-set against using union types in public APIs for things\r\nlike `toParts` and `concat`. However, I thoroughly disagree that this is\r\n“simpler”—one function that has a bounded wildcard with an upper bound\r\nof a union type is clearly more complicated than two monomorphic\r\nfunctions with simple domain and codomain. Is there an advantage here\r\nbesides implementation laziness (no offense)? \r\n\r\nI think we are thinking of \"simplicity\" in different contexts. I'm thinking about simplicity for the caller. The caller can have one set of functions for modifying addresses rather than needing to have functions specialized for node addresses and functions specialized for edge addresses.\r\n\r\nThe simplicity you're describing here - type implementation simplicity - is, imo, less important than API simplicity.\r\n\r\n> That is, under what circumstances is there a value whose type is known to be “either\r\n`NodeAddress` or `EdgeAddress`, but we’re not sure which one”? This\r\ncan’t be a very useful type for callers, because it is incompatible with\r\nevery method on `Graph` (you can’t `addNode` or `hasEdge` or anything,\r\nand with good reason). I’m feeling very “when in doubt, leave it out”.\r\n\r\nI'm not sure how you imagine getting that type. Given that the user started with a `NodeAddress`, the polymorphic function will always return a `NodeAddress`, and likewise for `EdgeAddress`. \r\n\r\nConsider the following two snippets of code:\r\n\r\nv1:\r\n```js\r\nconst base = Address.nodeAddress(); // type NodeAddress\r\nconst scoped = Address.append(base, \"github\"); // type NodeAddress\r\nconst thisAddress = Address.append(scoped, this.id); // type NodeAddress\r\nthis.graph.addNode(thisAddress); // no flow error\r\n```\r\n\r\nv2:\r\n```js\r\nconst base = NodeAddress.address(); // type NodeAddress\r\nconst scoped = NodeAddress.append(base, \"github\"); // type NodeAddress\r\nconst thisAddress = NodeAddress.append(scoped, this.id); // type NodeAddress\r\nthis.graph.addNode(thisAddress); // no flow error\r\n```\r\nIn neither case do we ever instantiate something with type `NodeAddress | EdgeAddress`. The difference is the first does it with fewer API elements (since we don't need a separate `EdgeAddress` module).\r\n\r\nGiven that it doesn't produce any type-unsafety, I don't understand opposition to making the Address APIs generic. If we were implementing Python, would the same reasoning suggest that it's better to have `lenOfList` and `lenOfSet` as separate methods?\r\n\r\n> Why allow `nodeAddress` and `edgeAddress` to be called with `undefined`?\r\nThis seems like a great way to mask bugs: if a client passes `undefined`\r\ninstead of an array, it seems at least as likely that the client has a\r\nbug causing their intended-array to be `undefined` than that they\r\nactually want the address given by `[]`. If a client does want this\r\nsemantics, they can just write `myArrayOrUndefined || []`.\r\n\r\nI wanted to write the factory method so that it can be called without arguments to generate a base address. Having looked into this matter a little more, I see that `arguments.length` is a better way to achieve this.\r\n\r\n> The following two tests would have passed in the previous API, but fail\r\n> under the code in this pull request:\r\n\r\nThat's a bug in the implementation, thanks for catching.\r\n\r\n> Note that `typeof NODE | typeof EDGE` is just `Symbol`; there is no\r\nadditional safety granted by using that definition.\r\n\r\nInteresting, I guess using strings is better for that purpose.\r\n\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000334\u0000394251862\u0000":{"address":{"type":"COMMENT","id":"394251862","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/334#issuecomment-394251862","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Will wait on in-person discussion to resolve the contentious bits. :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000334\u0000394463159\u0000":{"address":{"type":"COMMENT","id":"394463159","parent":{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/334#issuecomment-394463159","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Discussed offline and resolved:\r\n- To have a single `Address` module in favor of separate `NodeAddress` / `EdgeAddress`\r\n- To have the `nodeAddress` and `edgeAddress` functions always require an explicit parts argument\r\n- To rename `address.js` to `_address.js` but not under-name its methods\r\n- To export the `Address`module from `graph.js` as a frozen object.\r\n\r\nOtherwise, things were resolved per William's suggestions."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000335\u0000125721219\u0000192862766\u0000":{"address":{"type":"COMMENT","id":"192862766","parent":{"type":"REVIEW","id":"125721219","pull":{"type":"PULL","number":"335","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/335#discussion_r192862766","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Not asking for a change (rather, I like that this commit is reproducible\r\nby “run prettier” only), but this `\"\" + ` now seems redundant (yay).\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000339\u0000401516618\u0000":{"address":{"type":"COMMENT","id":"401516618","parent":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/339#issuecomment-401516618","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"TODO: Investigate why this did not work.  \r\nhttps://travis-ci.org/sourcecred/sourcecred/builds/398473500"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000339\u0000125749456\u0000192886063\u0000":{"address":{"type":"COMMENT","id":"192886063","parent":{"type":"REVIEW","id":"125749456","pull":{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/339#discussion_r192886063","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you actually use `wchargin+travis-sourcecred@gmail.com` here, please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000341\u0000125806397\u0000192934935\u0000":{"address":{"type":"COMMENT","id":"192934935","parent":{"type":"REVIEW","id":"125806397","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/341#discussion_r192934935","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"To check my understanding: the problem is that `authorRefs` is an empty\r\narray, right? not an array containing a null element? (If the latter\r\nwere the case, then that would mean that our `.authors()` function has\r\nan unsound type signature.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000341\u0000125815304\u0000192942458\u0000":{"address":{"type":"COMMENT","id":"192942458","parent":{"type":"REVIEW","id":"125815304","pull":{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/341#discussion_r192942458","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Correct."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000394579095\u0000":{"address":{"type":"COMMENT","id":"394579095","parent":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/342#issuecomment-394579095","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"\r\n\r\n> If I’m understanding the code correctly, this limitation only applies to\r\nthe top level. As soon as you expand the tree view, you’re back to the\r\nfull contents. In particular, if you expand the root repository node, or\r\nthe node for a user with lots of edges, you’re in just as much of a\r\npickle as before this commit. Is this correct?\r\n\r\nThat's correct, and an oversight on my part. I've fixed that.\r\n\r\n> This also, of course, doesn’t have pagination.\r\n\r\nYep!\r\n\r\n> I would prefer a solution that applied at each layer of the recursive\r\ntable a pair of “show more” and “show less” buttons, or something else.\r\nWhat do you think?\r\n\r\nThat's reasonable, and not a priority for me right now. I just want the demo to visibly \"work\" on larger examples; enabling much deeper dives doesn't add much value until we are getting the results themselves to a higher quality. (Punt!)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000394792123\u0000":{"address":{"type":"COMMENT","id":"394792123","parent":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/342#issuecomment-394792123","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Mind rebasing on #343?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000345\u0000394808212\u0000":{"address":{"type":"COMMENT","id":"394808212","parent":{"type":"PULL","number":"345","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/345#issuecomment-394808212","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Just to confirm: `util.inspect` nicely handles circular structures:\r\n```js\r\n$ node\r\n> const x = {};\r\nundefined\r\n> x.c = x;\r\n{ c: [Circular] }\r\n> require('util').inspect(x, {showHidden: true, depth: null});\r\n'{ c: [Circular] }'\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126186583\u0000193250161\u0000":{"address":{"type":"COMMENT","id":"193250161","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193250161","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note that this invariant is knowingly violated in this commit (we do not\r\nuse `_inEdges`/`_outEdges` because we do not yet have `neighbors`).\r\n\r\nWe could remove this invariant, add a note that it’s intentionally\r\nviolated in this commit, or leave it as is (my preferences in that\r\norder). Thoughts?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126186583\u0000193250239\u0000":{"address":{"type":"COMMENT","id":"193250239","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193250239","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Duplicate?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126186583\u0000193250617\u0000":{"address":{"type":"COMMENT","id":"193250617","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193250617","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should be `edgeToString(…)`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126186583\u0000193252881\u0000":{"address":{"type":"COMMENT","id":"193252881","parent":{"type":"REVIEW","id":"126186583","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193252881","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"One thing that we don’t test here is that if you add a node twice, then\r\nremove it once, the node is actually removed (not “buffered”). That’s\r\nprobably okay to omit. Thoughts?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191608\u0000193254645\u0000":{"address":{"type":"COMMENT","id":"193254645","parent":{"type":"REVIEW","id":"126191608","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193254645","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Removed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191635\u0000193254667\u0000":{"address":{"type":"COMMENT","id":"193254667","parent":{"type":"REVIEW","id":"126191635","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193254667","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191651\u0000193254701\u0000":{"address":{"type":"COMMENT","id":"193254701","parent":{"type":"REVIEW","id":"126191651","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193254701","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000348\u0000126191694\u0000193254746\u0000":{"address":{"type":"COMMENT","id":"193254746","parent":{"type":"REVIEW","id":"126191694","pull":{"type":"PULL","number":"348","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/348#discussion_r193254746","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yeah, I think it's fine."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000394896223\u0000":{"address":{"type":"COMMENT","id":"394896223","parent":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/349#issuecomment-394896223","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interesting that this reveals what appears to be a bug in continuation\r\nresolution when run on `ipfs/go-ipfs`:\r\n\r\n```\r\nTypeError: Cannot read property '_n0' of undefined\r\n    at embeddings.reduce (/home/wchargin/git/sourcecred/bin/commands/plugin-graph.js:442:153)\r\n    at Array.reduce (<anonymous>)\r\n    at resolveContinuations (/home/wchargin/git/sourcecred/bin/commands/plugin-graph.js:442:82)\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```\r\n\r\nApproving anyway. It’s clearly not _caused_ by this change; I can debug\r\nit separately.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000394917160\u0000":{"address":{"type":"COMMENT","id":"394917160","parent":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/349#issuecomment-394917160","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Interesting that this reveals what appears to be a bug in continuation\r\n> resolution when run on `ipfs/go-ipfs`:\r\n\r\nIndeed not. See #350."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000352\u0000395174404\u0000":{"address":{"type":"COMMENT","id":"395174404","parent":{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/352#issuecomment-395174404","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Thanks. Rebasing and will merge."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000354\u0000395200045\u0000":{"address":{"type":"COMMENT","id":"395200045","parent":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/354#issuecomment-395200045","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In the case of direction, this change is a clear win. Setting direction ANY is rarely the right thing to do, so defaulting to it invites bugs.\r\n\r\nIn the case of making Node and Edge prefix mandatory, this change could seem frustrating. Sometimes it forces redundant specification; as with specifying that the `parent` of a GitHub issue is always a repo. However, in the redundant specification is redundant thanks to an invariant about how node type and edge type interrelate, and this invariant cannot be enforced locally (in code or in time). Therefore, we should not encourage users of the API to depend on unreliable invariants, given that they only afford the ability to save some keystrokes.\r\n\r\n(I am sure we will want more sophisticated querying on addresses in the future; much more sophisticated than is possible using address prefixing. The key insight of the v3 API is that the data structure backing those queries does not need to be the graph itself. We expect it will be better to use a relational database which use the addresses as string ids. Then, we are able to use dedicated tools for managing database complexity rather than being forced to maintain our homegrown, ever more cumbersome system. And our graph can just be really good at being a graph. :slightly_smiling_face: )"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000354\u0000395236105\u0000":{"address":{"type":"COMMENT","id":"395236105","parent":{"type":"PULL","number":"354","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/354#issuecomment-395236105","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> However, in the redundant specification is redundant thanks to an\r\n> invariant about how node type and edge type interrelate, and this\r\n> invariant cannot be enforced locally (in code or in time).\r\n\r\nI’m not sure exactly how to parse this, but I’m going to assume that it\r\nmeans “the specification _seems_ redundant, and in fact that may\r\ncurrently be the case, but new node or edge types added later could\r\ninvalidate the relevant invariant, so we are encouraging users to create\r\nrobust code”.\r\n\r\nIf that is the case, then I agree.\r\n\r\n> I am sure we will want more sophisticated querying on addresses in the\r\n> future; much more sophisticated than is possible using address\r\n> prefixing. The key insight of the v3 API is that the data structure\r\n> backing those queries does not need to be the graph itself.\r\n\r\nAgreed on both counts.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000355\u0000395465552\u0000":{"address":{"type":"COMMENT","id":"395465552","parent":{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/355#issuecomment-395465552","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good idea; will do."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000356\u0000395466297\u0000":{"address":{"type":"COMMENT","id":"395466297","parent":{"type":"PULL","number":"356","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/356#issuecomment-395466297","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m not sure that I understand. I can inline `separator` if you want,\r\nbut as it stands it _is_ factored out to a constant. The only place in\r\nwhich the sequence `\\0` appears in `address.js`, through this whole\r\nsequence of PRs, is in `const separator = \"\\0\"`. The constant is roughly\r\nat the top of the module. Maybe you’re suggesting that it be called\r\n`SEPARATOR` instead and pulled to the top of the JavaScript module, but\r\nI don’t see a reason to do that.\r\n\r\nI’ll merge this as is; if I’m misunderstanding something, we can fix it.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000357\u0000395346081\u0000":{"address":{"type":"COMMENT","id":"395346081","parent":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#issuecomment-395346081","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Replaces https://github.com/sourcecred/sourcecred/pull/333"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126681988\u0000193666985\u0000":{"address":{"type":"COMMENT","id":"193666985","parent":{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#discussion_r193666985","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I note that a `fromParts` implementation that neglected to call `assertValidParts` would pass tests. please fix"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126681988\u0000193667683\u0000":{"address":{"type":"COMMENT","id":"193667683","parent":{"type":"REVIEW","id":"126681988","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#discussion_r193667683","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Is explicit mocking feasible?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126839652\u0000193794009\u0000":{"address":{"type":"COMMENT","id":"193794009","parent":{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#discussion_r193794009","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good point; will fix."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000357\u0000126839652\u0000193797377\u0000":{"address":{"type":"COMMENT","id":"193797377","parent":{"type":"REVIEW","id":"126839652","pull":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/357#discussion_r193797377","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Did you want to mock `assertValid` and `assertValidParts` to check that\r\nthey’re called? That’s reasonable, but definitely increases the\r\nfragility of the tests. For instance, suppose that the implementation\r\nwere changed to\r\n\r\n```js\r\nfunction _assertValid(…) { … }\r\nfunction assertValid(...args) {\r\n  if (NODE_ENV !== \"production\") {\r\n    return assertValid(...args);\r\n  }\r\n  // or, do some other preprocessing, like pre-compute a default value\r\n  // of `what`, or catch and rethrow errors adding some information to\r\n  // the message, or…\r\n}\r\nfunction toParts(address) {\r\n  _assertValid(address);\r\n  // …\r\n}\r\n```\r\n\r\nThen our mock that `assertValid` is called would fail, because only the\r\ninternal function `_assertValid` is called.\r\n\r\nI definitely prefer not to mock when we don’t have to, as it increases\r\ncomplexity and means that the code that actually runs in production is\r\nnot the code that you’re testing. Sometimes it’s obviously the right\r\nthing to do, but I don’t think that that’s the case here.\r\n\r\nI’ll merge as-is; if I misunderstood or you think that mocking here is a\r\nreally great idea, then I’m happy to change this.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000358\u0000395345973\u0000":{"address":{"type":"COMMENT","id":"395345973","parent":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/358#issuecomment-395345973","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Replaces https://github.com/sourcecred/sourcecred/pull/347"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000359\u0000395346178\u0000":{"address":{"type":"COMMENT","id":"395346178","parent":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/359#issuecomment-395346178","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Replaces https://github.com/sourcecred/sourcecred/pull/332"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000360\u0000395345802\u0000":{"address":{"type":"COMMENT","id":"395345802","parent":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/360#issuecomment-395345802","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Note: This replaces https://github.com/sourcecred/sourcecred/pull/352"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000361\u0000126688082\u0000193671919\u0000":{"address":{"type":"COMMENT","id":"193671919","parent":{"type":"REVIEW","id":"126688082","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/361#discussion_r193671919","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"(Also referenced on the first PR) - I like this test and think it should continue in some form."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000361\u0000126846851\u0000193800210\u0000":{"address":{"type":"COMMENT","id":"193800210","parent":{"type":"REVIEW","id":"126846851","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/361#discussion_r193800210","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Reinstated in `graph.test.js` in #355."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000363\u0000395836900\u0000":{"address":{"type":"COMMENT","id":"395836900","parent":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/363#issuecomment-395836900","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Want to keep the Spectrum link around? They serve different purposes, so we might want to keep them both open."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000363\u0000395863508\u0000":{"address":{"type":"COMMENT","id":"395863508","parent":{"type":"PULL","number":"363","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/363#issuecomment-395863508","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done. I also added a cute lil badge."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000368\u0000127300384\u0000194169450\u0000":{"address":{"type":"COMMENT","id":"194169450","parent":{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/368#discussion_r194169450","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Slight preference for this going right before the `return`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000368\u0000127300384\u0000194169641\u0000":{"address":{"type":"COMMENT","id":"194169641","parent":{"type":"REVIEW","id":"127300384","pull":{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/368#discussion_r194169641","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: can we write `edge(s)` and `e.g.,`, please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000369\u0000127313401\u0000194180186\u0000":{"address":{"type":"COMMENT","id":"194180186","parent":{"type":"REVIEW","id":"127313401","pull":{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/369#discussion_r194180186","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"sp.: `doesn't`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000372\u0000396324939\u0000":{"address":{"type":"COMMENT","id":"396324939","parent":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#issuecomment-396324939","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> It appears this code verifies the following properties: […] Should\r\n> this be documented in the list of invariants being checked by this\r\n> code?\r\n\r\nThanks for pointing this out. You’re right, and this is indicative of a\r\nmore general problem. These invariants are easy to read, but hard to\r\nunderstand. It’s difficult to see why the pieces fit together to\r\nencapsulate all (and only) the conditions that we want, or, conversely,\r\nto notice when they don’t.\r\n\r\nI’ve rewritten the invariants to make them clearer. I’ve reduce the use\r\nof TFAEs, which I think have introduced some subtleties. Now, we have\r\none invariant for each property of the class, describing what it is that\r\nan element of that property implies about other elements and properties.\r\nThis also lends itself to a nice implementation.\r\n\r\nHere are the new proposed invariants:\r\n\r\n```js\r\n  // Definition. A node `n` is in the graph if `_nodes.has(n)`.\r\n  //\r\n  // Definition. An edge `e` is in the graph if `_edges.has(e.address)`.\r\n  //\r\n  // Definition. A *logical value* is an equivalence class of ECMAScript\r\n  // values modulo deep equality (or, from context, an element of such a\r\n  // class).\r\n  //\r\n  // Invariant 1. For a node `n`, if `n` is in the graph, then\r\n  // `_inEdges.has(n)` and `_outEdges.has(n)`.\r\n  //\r\n  // Invariant 2. For an edge `e`, if `e` is in the graph, then:\r\n  //  1. `e.src` is in the graph;\r\n  //  2. `e.dst` is in the graph;\r\n  //  3. `edges.get(e.address)` is deep-equal to `e`;\r\n  //  4. `_inEdges.get(e.dst)` contains `e`; and\r\n  //  5. `_outEdges.get(e.src)` contains `e`.\r\n  //\r\n  // Invariant 3. Suppose that `_inEdges.has(n)` and, let `es` be\r\n  // `_inEdges.get(n)`. Then\r\n  //  1. `n` is in the graph;\r\n  //  2. `es` contains any logical value at most once;\r\n  //  3. if `es` contains `e`, then `e` is in the graph; and\r\n  //  4. if `es` contains `e`, then `e.dst === n`.\r\n  //\r\n  // Invariant 4. Suppose that `_outEdges.has(n)` and, let `es` be\r\n  // `_outEdges.get(n)`. Then\r\n  //  1. `n` is in the graph;\r\n  //  2. `es` contains any logical value at most once;\r\n  //  3. if `es` contains `e`, then `e` is in the graph; and\r\n  //  4. if `es` contains `e`, then `e.src === n`.\r\n```\r\n\r\nWhat do you think?\r\n\r\n(Note: There may be errors in the above; I’ve checked them only briefly.\r\nI’ll review your outstanding PRs now. :-) )\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000372\u0000396334029\u0000":{"address":{"type":"COMMENT","id":"396334029","parent":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#issuecomment-396334029","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Looks good overall. Two comments:\r\n\r\n1. I'd like to have the initial invariants about `inEdges` and `outEdges` also declare the type signature (contains an array of zero-or-more edges). Just so the invariants are a little more self contained. (It might be worth giving a bit more info about what an edge is in the definition.)\r\n\r\n2. I think we can improve the performance of this invariant checking: using a counting argument, if we verify for every valid node that it is present in `_inEdges`, and every valid edge's dst appears in `_inEdges` then:\r\n* we can count the total number of keys in `_inEdges`, to verify that there are no extra nodes appearing\r\n* we can count the total number of entries in `_inEdges`, to verify that there are no extra edges appearing\r\nAnd the same for `_outEdges`. computationally, this saves us all of the work in section 3 and 4.\r\nAs discussed offline, this should include a proof to be persuasive, and it's not yet a perf bottleneck, so we can punt on that optimization and just implement the invariants you've laid out here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000194216047\u0000":{"address":{"type":"COMMENT","id":"194216047","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194216047","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"What do you think of removing the mostly-duplication of the invariants above, and having this function be a single source of truth for what the invariants are?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000194216317\u0000":{"address":{"type":"COMMENT","id":"194216317","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194216317","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It appears this code verifies the following properties:\r\n\r\n- For every edge `e` in `_inEdges[a]`, `e.dst === a`\r\n- For every edge `e` in `_outEdges[a]`, `e.src === a`\r\n\r\nShould this be documented in the list of invariants being checked by this code?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000194216357\u0000":{"address":{"type":"COMMENT","id":"194216357","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194216357","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I believe that for all `x, y`, if `x contains y exactly once`, then `x contains y`. Therefore, `3 => 2` and `5 => 4`, so we shouldn't need to list them as separate properties."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000194216427\u0000":{"address":{"type":"COMMENT","id":"194216427","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194216427","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ah, I see now why you listed the implied property separately. Nifty. I might prefer to have a brief structure of the proof in the comment upfront. (It's already the case that 3=>2; we will show 2 =>3 and that 1=>2...)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127354341\u0000194216435\u0000":{"address":{"type":"COMMENT","id":"194216435","parent":{"type":"REVIEW","id":"127354341","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194216435","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":":)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127691366\u0000194505954\u0000":{"address":{"type":"COMMENT","id":"194505954","parent":{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194505954","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000372\u0000127691366\u0000194505992\u0000":{"address":{"type":"COMMENT","id":"194505992","parent":{"type":"REVIEW","id":"127691366","pull":{"type":"PULL","number":"372","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/372#discussion_r194505992","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000374\u0000396303003\u0000":{"address":{"type":"COMMENT","id":"396303003","parent":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/374#issuecomment-396303003","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’ve only glanced very briefly at the code, but: do we really want to\r\nencode addresses on disk with literal NUL characters? This has the\r\neffect, for instance, that snapshots (and graphs in general) are treated\r\nas binary files and are not very human-editable or human-readable.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000374\u0000396323057\u0000":{"address":{"type":"COMMENT","id":"396323057","parent":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/374#issuecomment-396323057","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Good point. I've changed the representation to  store the array-ified addresses. PTAL"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000374\u0000127672710\u0000194490339\u0000":{"address":{"type":"COMMENT","id":"194490339","parent":{"type":"REVIEW","id":"127672710","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/374#discussion_r194490339","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"\r\nHmm. I appreciate that we have a snapshot test, but it would be nice if\r\nthat snapshot test could demonstrate some edge cases: multiple edges\r\nwith the same hom, loops, multiple loops, isolated nodes? It looks like\r\nthese cases aren’t tested at all, in fact.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000375\u0000127673602\u0000194491113\u0000":{"address":{"type":"COMMENT","id":"194491113","parent":{"type":"REVIEW","id":"127673602","pull":{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/375#discussion_r194491113","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool. Why not. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000378\u0000396440604\u0000":{"address":{"type":"COMMENT","id":"396440604","parent":{"type":"PULL","number":"378","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/378#issuecomment-396440604","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Updated."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128060381\u0000194816899\u0000":{"address":{"type":"COMMENT","id":"194816899","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194816899","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Might as well just `import {structure, destructure} from \"./address\"`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128060381\u0000194821921\u0000":{"address":{"type":"COMMENT","id":"194821921","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194821921","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"There is no explicit length check here. The code still behaves correctly\r\n(if the length is too short, then `kind` will be `undefined`, which hits\r\nthe `default` case of the `switch`), but if you want to add the explicit\r\ncheck, I’d support that. I’m also fine with not including it.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128060381\u0000194824022\u0000":{"address":{"type":"COMMENT","id":"194824022","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194824022","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I would prefer that these errors be extracted:\r\n\r\n<details>\r\n<summary>Patch</summary>\r\n\r\n```diff\r\ndiff --git a/src/v3/plugins/github/address.js b/src/v3/plugins/github/address.js\r\nindex 5086038..10a8ada 100644\r\n--- a/src/v3/plugins/github/address.js\r\n+++ b/src/v3/plugins/github/address.js\r\n@@ -48,21 +48,24 @@ export type StructuredAddress =\r\n   | UserlikeAddress;\r\n \r\n export function structure(x: GithubAddressT): StructuredAddress {\r\n+  function fail() {\r\n+    return new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+  }\r\n   if (!NodeAddress.hasPrefix(x, GITHUB_PREFIX)) {\r\n-    throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+    throw fail();\r\n   }\r\n   const [_unused_sc, _unused_gh, kind, ...rest] = NodeAddress.toParts(x);\r\n   switch (kind) {\r\n     case \"repo\": {\r\n       if (rest.length !== 2) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [owner, name] = rest;\r\n       return {type: \"REPO\", owner, name};\r\n     }\r\n     case \"issue\": {\r\n       if (rest.length !== 3) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [owner, name, number] = rest;\r\n       const repo = {type: \"REPO\", owner, name};\r\n@@ -70,7 +73,7 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n     }\r\n     case \"pull\": {\r\n       if (rest.length !== 3) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [owner, name, number] = rest;\r\n       const repo = {type: \"REPO\", owner, name};\r\n@@ -78,7 +81,7 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n     }\r\n     case \"review\": {\r\n       if (rest.length !== 4) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [owner, name, pullNumber, fragment] = rest;\r\n       const repo = {type: \"REPO\", owner, name};\r\n@@ -87,13 +90,13 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n     }\r\n     case \"comment\": {\r\n       if (rest.length < 1) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [subkind, ...subrest] = rest;\r\n       switch (subkind) {\r\n         case \"issue\": {\r\n           if (subrest.length !== 4) {\r\n-            throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+            throw fail();\r\n           }\r\n           const [owner, name, issueNumber, fragment] = subrest;\r\n           const repo = {type: \"REPO\", owner, name};\r\n@@ -102,7 +105,7 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n         }\r\n         case \"pull\": {\r\n           if (subrest.length !== 4) {\r\n-            throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+            throw fail();\r\n           }\r\n           const [owner, name, pullNumber, fragment] = subrest;\r\n           const repo = {type: \"REPO\", owner, name};\r\n@@ -111,7 +114,7 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n         }\r\n         case \"review\": {\r\n           if (subrest.length !== 5) {\r\n-            throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+            throw fail();\r\n           }\r\n           const [owner, name, pullNumber, reviewFragment, fragment] = subrest;\r\n           const repo = {type: \"REPO\", owner, name};\r\n@@ -120,18 +123,18 @@ export function structure(x: GithubAddressT): StructuredAddress {\r\n           return {type: \"COMMENT\", parent: review, fragment};\r\n         }\r\n         default:\r\n-          throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+          throw fail();\r\n       }\r\n     }\r\n     case \"userlike\": {\r\n       if (rest.length !== 1) {\r\n-        throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+        throw fail();\r\n       }\r\n       const [login] = rest;\r\n       return {type: \"USERLIKE\", login};\r\n     }\r\n     default:\r\n-      throw new Error(`Bad address: ${NodeAddress.toString(x)}`);\r\n+      throw fail();\r\n   }\r\n }\r\n \r\n```\r\n\r\n</details>"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128060381\u0000194824569\u0000":{"address":{"type":"COMMENT","id":"194824569","parent":{"type":"REVIEW","id":"128060381","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194824569","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: Can we write `structure(...)` or `` `structure` `` instead of `structure()`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128076806\u0000194830584\u0000":{"address":{"type":"COMMENT","id":"194830584","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194830584","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Going to leave it as-is."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128076806\u0000194830602\u0000":{"address":{"type":"COMMENT","id":"194830602","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194830602","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128076806\u0000194830788\u0000":{"address":{"type":"COMMENT","id":"194830788","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194830788","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000380\u0000128076806\u0000194830913\u0000":{"address":{"type":"COMMENT","id":"194830913","parent":{"type":"REVIEW","id":"128076806","pull":{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/380#discussion_r194830913","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000381\u0000396734232\u0000":{"address":{"type":"COMMENT","id":"396734232","parent":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/381#issuecomment-396734232","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you please rebase on #382?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000381\u0000128146911\u0000194887412\u0000":{"address":{"type":"COMMENT","id":"194887412","parent":{"type":"REVIEW","id":"128146911","pull":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/381#discussion_r194887412","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Want to update \"PR\" to \"Pull\"?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000383\u0000396781841\u0000":{"address":{"type":"COMMENT","id":"396781841","parent":{"type":"PULL","number":"383","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/383#issuecomment-396781841","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Coverage of the resulting module remains at 100%."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000385\u0000397097807\u0000":{"address":{"type":"COMMENT","id":"397097807","parent":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#issuecomment-397097807","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Let's rebase this on 387, and I think it will be an easy approval :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000385\u0000397118161\u0000":{"address":{"type":"COMMENT","id":"397118161","parent":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#issuecomment-397118161","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Please fix the rawAddress and change to ParentAddress\r\n\r\nThanks for the reminder; I had just forgotten.\r\n\r\n> Thanks for writing this, I know it wasn't fun.\r\n\r\nIndeed. Hopefully, we can move on to doing interesting things, as\r\nopposed to hacking together awful data formats all because the only\r\ntwo value types in JavaScript are “IEEE 754 double-precision\r\nfloating-point number” and “array of UTF-16 code units”.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128502937\u0000195185911\u0000":{"address":{"type":"COMMENT","id":"195185911","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195185911","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This should be exported from nodes, not edges."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128502937\u0000195188088\u0000":{"address":{"type":"COMMENT","id":"195188088","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195188088","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Why does this take a RawAddress?\r\nLet's define a ParentAddress union alongside PostAddress, and it is a union of RepoAddress | IssueAddress | PullAddress | ReviewAddress.\r\n\r\nI believe this will be useful because I already defined that union in my createGraph branch because I also needed it (in addition to using the PostAddress union).\r\n\r\nIn any case, breaking consistency and requiring a RawAddress for this arg only seems clearly wrong."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128502937\u0000195188204\u0000":{"address":{"type":"COMMENT","id":"195188204","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195188204","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"le wrap :/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128502937\u0000195188635\u0000":{"address":{"type":"COMMENT","id":"195188635","parent":{"type":"REVIEW","id":"128502937","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195188635","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"i feel like the parts array should be factored out somewhere, and shared between the node and edge. it would be weird if one could change without the other. doesn't necessarily need to happen in this pr."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128554368\u0000195227483\u0000":{"address":{"type":"COMMENT","id":"195227483","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195227483","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Well… as noted in the comment, it’s really not clear what, if anything,\r\nthis union type represents. It’s quite plausible that it is a false\r\nabstraction born out of coincidence.\r\n\r\nWhat do you think about splitting this up into a larger set of unions,\r\neach of which actually does have reasonable semantics? It seems that we\r\nmight want `ChildAddress`, `ParentAddress`, `AuthorableAddress`,\r\n`ReferentAddress`, and `TextContentAddress`. Currently, four of those\r\ntypes happen to be a union of the same four members (comment, issue,\r\npull request, review). If there is evidence that some of these\r\nrelationships are fundamental—e.g., “everything that is authorable has\r\ntext content” (dubious)—then we can unify the appropriate unions, but if\r\nthere isn’t then we probably shouldn’t just say “eh, they’re all some\r\nkind of ‘post’ ” and leave it at that.\r\n\r\nWith these types, we would have:\r\n\r\n```js\r\nexport type AuthorsAddress = {|\r\n  +type: \"AUTHORS\",\r\n  +author: GithubNode.UserlikeAddress,\r\n  +content: GithubNode.AuthorableAddress,\r\n|};\r\nexport type MergedAsAddress = {|\r\n  +type: \"MERGED_AS\",\r\n  +pull: GithubNode.PullAddress,\r\n|};\r\nexport type HasParentAddress = {|\r\n  +type: \"HAS_PARENT\",\r\n  +child: GithubNode.ChildAddress,\r\n|};\r\nexport type ReferencesAddress = {|\r\n  +type: \"REFERENCES\",\r\n  +referrer: GithubNode.TextContentAddress,\r\n  +referent: GithubNode.ReferentAddress,\r\n|};\r\n```\r\n\r\nIf we effect this change, then it does make sense to me to export these\r\ntypes from `nodes.js` instead of `edges.js`. Otherwise, I’m not so sure.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128554368\u0000195228574\u0000":{"address":{"type":"COMMENT","id":"195228574","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195228574","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay; it’s fine with me for this to take a structured address. I’m\r\nwilling to define and export the `ParentAddress` union, while noting\r\nthat it seems pretty weak: while we effectively have `ParentAddress` and\r\n`ChildAddress` types, almost everything is a parent and almost\r\neverything is a child, and we are failing to express (at the type level)\r\nthe relationship that (e.g.) a repository cannot be the parent of a\r\ncomment. But that seems like a reasonable concession to me.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128554368\u0000195228628\u0000":{"address":{"type":"COMMENT","id":"195228628","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195228628","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Sad."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128554368\u0000195229009\u0000":{"address":{"type":"COMMENT","id":"195229009","parent":{"type":"REVIEW","id":"128554368","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195229009","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Eh; neutral. It would be weird, but it wouldn’t be wrong (in that it\r\nwouldn’t break anything). I’ll keep things as they are in this PR,\r\nthough I am open to factoring this out.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128568401\u0000195239022\u0000":{"address":{"type":"COMMENT","id":"195239022","parent":{"type":"REVIEW","id":"128568401","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195239022","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Discussed more: https://discordapp.com/channels/453243919774253079/454007907663740939?jump=456564101183832064\r\n\r\nI will wait for #387 to land."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128586231\u0000195254069\u0000":{"address":{"type":"COMMENT","id":"195254069","parent":{"type":"REVIEW","id":"128586231","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/385#discussion_r195254069","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Still sad that this is a RawAddress"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000387\u0000397089757\u0000":{"address":{"type":"COMMENT","id":"397089757","parent":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#issuecomment-397089757","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"See discussion: https://discordapp.com/channels/453243919774253079/454007907663740939?jump=456564101183832064"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000387\u0000397097148\u0000":{"address":{"type":"COMMENT","id":"397097148","parent":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#issuecomment-397097148","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Re-approved."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128569466\u0000195239922\u0000":{"address":{"type":"COMMENT","id":"195239922","parent":{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#discussion_r195239922","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"May be referred _to_."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128569466\u0000195240325\u0000":{"address":{"type":"COMMENT","id":"195240325","parent":{"type":"REVIEW","id":"128569466","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#discussion_r195240325","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Well, okay. I mean, this is true, but everything has zero or more\r\nchildren, right? Like, a comment has zero or more children. Maybe you\r\nmean to say, “each of these may have child nodes (see […])”?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128570447\u0000195240810\u0000":{"address":{"type":"COMMENT","id":"195240810","parent":{"type":"REVIEW","id":"128570447","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#discussion_r195240810","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Also—why may an authorable have zero `AUTHORS` edges?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000387\u0000128572602\u0000195242602\u0000":{"address":{"type":"COMMENT","id":"195242602","parent":{"type":"REVIEW","id":"128572602","pull":{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/387#discussion_r195242602","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"From Discord:\r\n\r\n> When a GitHub account is deleted, the post stays, but it has a null\r\n> author as far as the graphql api is concerned\r\n\r\nThis makes sense, and seems like exactly the kind of thing that should\r\ngo in this docstring. Otherwise, arrogant programmers like me will\r\nassume that of course an `AuthorableAddress` always has at least one\r\nauthor, and will write broken code. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000388\u0000397095904\u0000":{"address":{"type":"COMMENT","id":"397095904","parent":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#issuecomment-397095904","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Here's what the test structure now looks like:\r\n```\r\n  plugins/github/urlToId\r\n    works correctly\r\n      ✓ for issueComment (3ms)\r\n      ✓ for pullComment\r\n      ✓ for reviewComment (1ms)\r\n      ✓ for review\r\n    errors on\r\n      issueCommentUrlToId\r\n        ✓ recieving pull comment (1ms)\r\n        ✓ recieving review comment (1ms)\r\n        ✓ recieving review\r\n        ✓ recieving null\r\n        ✓ recieving undefined\r\n        ✓ recieving nonsense (1ms)\r\n      pullCommentUrlToId\r\n        ✓ recieving issue comment\r\n        ✓ recieving review comment\r\n        ✓ recieving review\r\n        ✓ recieving null (1ms)\r\n        ✓ recieving undefined\r\n        ✓ recieving nonsense\r\n      reviewCommentUrlToId\r\n        ✓ recieving pull comment\r\n        ✓ recieving issue comment (1ms)\r\n        ✓ recieving review\r\n        ✓ recieving null\r\n        ✓ recieving undefined\r\n        ✓ recieving nonsense (1ms)\r\n      reviewUrlToId\r\n        ✓ recieving pull comment\r\n        ✓ recieving issue comment\r\n        ✓ recieving review comment\r\n        ✓ recieving null\r\n        ✓ recieving undefined (1ms)\r\n        ✓ recieving nonsense\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128561069\u0000195233058\u0000":{"address":{"type":"COMMENT","id":"195233058","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195233058","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In our ontology, review comments are also comments, but this function\r\ndoes not match them. Consider `issueOrPull[Request]CommentUrlToId`, or,\r\nif that name is too long for your taste, consider factoring into an\r\nobject, like\r\n\r\n```js\r\nexport const commentUrlToId = Object.freeze({\r\n  issue: …,\r\n  pull: …,\r\n  review: …,\r\n}),\r\n```\r\n\r\nwhere `issue` and `pull` can refer to the same function if you like.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128561069\u0000195239386\u0000":{"address":{"type":"COMMENT","id":"195239386","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195239386","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nice."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128561069\u0000195239707\u0000":{"address":{"type":"COMMENT","id":"195239707","parent":{"type":"REVIEW","id":"128561069","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195239707","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It would be nice if this could indicate which example failed (e.g., by\r\nusing separate `it` blocks). If that’s not too hard to implement, I’d\r\nprefer it.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128574440\u0000195244042\u0000":{"address":{"type":"COMMENT","id":"195244042","parent":{"type":"REVIEW","id":"128574440","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195244042","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I decided to just explicitly create 3 separate functions for issues, pulls, and reviews.\r\nIt also simplifies the regex - issue comments and pull comments do actually have separate urls."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128574545\u0000195244124\u0000":{"address":{"type":"COMMENT","id":"195244124","parent":{"type":"REVIEW","id":"128574545","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195244124","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done. I also added checks on null, undefined, and a garbage string."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128577324\u0000195246448\u0000":{"address":{"type":"COMMENT","id":"195246448","parent":{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195246448","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The `\\w` character class does not include `-`, which is a valid\r\ncharacter in GitHub repositories (e.g., sourcecred/example-github).\r\nConsider instead `[a-zA-Z0-9_-]` throughout this module, and consider\r\nadding an `example-github` test.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128577324\u0000195247155\u0000":{"address":{"type":"COMMENT","id":"195247155","parent":{"type":"REVIEW","id":"128577324","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195247155","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m surprised that exceptions are the right semantics. Have you\r\nconsidered returning `null` in the case where there is no match? Having\r\na URL that does not refer to a comment is not really an exceptional\r\ncondition.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128580233\u0000195248856\u0000":{"address":{"type":"COMMENT","id":"195248856","parent":{"type":"REVIEW","id":"128580233","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195248856","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"My intention is to use this function when generating GitHub addresses from the GitHub graphql response. In this case, you have a JSON that you know definitely corresponds to (say) a review comment, so you call `reviewCommentUrlToId` on that json's url. This api is appropriate for that case - if anything goes wrong in getting the id out of the review comment's url, it's cause for an error. So the contract  for the function is that it should take in review comment urls and nothing else.\r\n\r\nIf we start to need the function for other things we can upgrade its scope, but if we start using it e.g. to sniff arbitrary urls and figure out what they are, at that point we need a fairly different return signature anyway."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128581297\u0000195249732\u0000":{"address":{"type":"COMMENT","id":"195249732","parent":{"type":"REVIEW","id":"128581297","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195249732","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Understood. I had the `findReferences` context in mind, but you’re right\r\nthat the signature (and implementation) would need to be different\r\nanyway.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128585942\u0000195253671\u0000":{"address":{"type":"COMMENT","id":"195253671","parent":{"type":"REVIEW","id":"128585942","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195253671","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Great catch, thanks. I re-wrote the regex generation to be cleaner, and to handle this case. I used #98 as inspiration. Also, I changed the test case to include underscores, numbers, and dashes in the owner and repo name."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128590828\u0000195258026\u0000":{"address":{"type":"COMMENT","id":"195258026","parent":{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195258026","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool; this seems like a useful function.\r\n\r\nThe implementation, however, is not correct. The problem is that the\r\n`RegExp` constructor is not homomorphic with respect to concatenation.\r\nThat is, there is a well-defined operation of regular expression\r\nconcatenation, which is what you’re trying to express, but this\r\noperation is not equivalent to “return the `RegExp` whose source is the\r\nstring concatenation of the sources of the two `RegExp`s”. That is: if\r\nwe let `∙` denote regular expression concatenation and `++` denote\r\nstring concatenation, then it is not the case that\r\n\r\n    RegExp (s1 ++ s2) == (RegExp s1) ∙ (RegExp s2),\r\n\r\nbut this is the assumption that your code is making.\r\n\r\nAs a concrete example, the result of\r\n\r\n```js\r\n// Find an issue or pull request!\r\nconst re = githubRegex(/issues|pull/, /(\\d+)/);\r\n```\r\n\r\nis the expression `/https:…\\/issues|pull\\/(\\d+)$/`, which is not\r\ncorrect, because it matches a URL ending in `\"/issues/foo/bar/baz\"`.\r\n\r\nBasically, the thing is vulnerable to “regular expression injection”.\r\n\r\nWe can fix this by surrounding the individual parts with non-capturing\r\ngroups, which I believe (but have not proven) to be sufficient. This\r\nalso suggests what I think is a significantly cleaner implementation:\r\n\r\n```js\r\nconst parts = [\r\n  /https:\\/\\/github.com/,\r\n  githubNamePart,\r\n  githubNamePart,\r\n  ...regexParts,\r\n];\r\nconst mainSource = parts.map((re) => `(?:${re.source})`).join(\"/\");\r\nreturn new RegExp(`^${mainSource}$`);\r\n```\r\n\r\nAccordingly, as you may expect, I would like to see this function\r\ntested. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128590828\u0000195258903\u0000":{"address":{"type":"COMMENT","id":"195258903","parent":{"type":"REVIEW","id":"128590828","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195258903","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A GitHub username may not actually include an underscore. It’s okay with\r\nme if the RegExp is overly lenient in allowing hyphens (I don’t remember\r\nwhy we decided to do this back in March), but the test data should\r\nprobably be actually valid.\r\n\r\nIf you want to make the RegExp more strict, that’s okay with me, too.\r\nI am not even opposed to pulling in the `github-username-regex` package\r\nfrom npm:\r\nhttps://www.npmjs.com/package/github-username-regex\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128598234\u0000195264661\u0000":{"address":{"type":"COMMENT","id":"195264661","parent":{"type":"REVIEW","id":"128598234","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/388#discussion_r195264661","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Good find. I removed this function as it's incorrect and I don't want to test it, given that I only needed it for 4 specific instances. PTAL."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000395\u0000128982869\u0000195582569\u0000":{"address":{"type":"COMMENT","id":"195582569","parent":{"type":"REVIEW","id":"128982869","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/395#discussion_r195582569","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Type assertions on others, but not here. Make consistent?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000395\u0000128984758\u0000195584075\u0000":{"address":{"type":"COMMENT","id":"195584075","parent":{"type":"REVIEW","id":"128984758","pull":{"type":"PULL","number":"395","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/395#discussion_r195584075","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000396\u0000128981301\u0000195581121\u0000":{"address":{"type":"COMMENT","id":"195581121","parent":{"type":"REVIEW","id":"128981301","pull":{"type":"PULL","number":"396","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/396#discussion_r195581121","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should we check statically that `CommentableAddress <: ParentAddress`?\r\n\r\n(I vote yes!)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000403\u0000130203720\u0000196616708\u0000":{"address":{"type":"COMMENT","id":"196616708","parent":{"type":"REVIEW","id":"130203720","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/403#discussion_r196616708","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Nit: `GIT_PREFIX` is not technically a RawAddress, and so `_Prefix` is not an object whose every value is a RawAddress. IMO, this is a bug; easily fixed by setting `base: _gitAddress()`.\r\n\r\nI'm fine not fixing in this commit, since the same bug exists on the GitHub side, we can fix both plugins at once after this is merged."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000403\u0000130204897\u0000196617746\u0000":{"address":{"type":"COMMENT","id":"196617746","parent":{"type":"REVIEW","id":"130204897","pull":{"type":"PULL","number":"403","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/403#discussion_r196617746","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Hmm, interesting. Agreed on all counts."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000405\u0000399342223\u0000":{"address":{"type":"COMMENT","id":"399342223","parent":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#issuecomment-399342223","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"FYI, I changed the base so as to cleanly use the new git node types (which required changes to pre-existing code).\r\n\r\nI put [change-base] in the title so I wouldn't accidentally merge it into non-master. Feel free to review and approve as usual."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000405\u0000399567943\u0000":{"address":{"type":"COMMENT","id":"399567943","parent":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#issuecomment-399567943","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196614588\u0000":{"address":{"type":"COMMENT","id":"196614588","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196614588","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Weak preference toward `import *` for these giant blocks. Up to you."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196614815\u0000":{"address":{"type":"COMMENT","id":"196614815","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196614815","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This can be `(parent.type: empty)`, right?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196615920\u0000":{"address":{"type":"COMMENT","id":"196615920","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196615920","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If you change `comment` to `c`, this fits on a line. :-)\r\n\r\n(Same with `reviewJSON.comments` below.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196616473\u0000":{"address":{"type":"COMMENT","id":"196616473","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196616473","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: just `GraphView` (and `GV` below)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196617246\u0000":{"address":{"type":"COMMENT","id":"196617246","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196617246","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I would like to see a test that this is properly reentrant, perhaps like:\r\n\r\n```js\r\nconst g = exampleGraph();\r\nconst view = new GraphView(g);\r\n// Deliberately corrupt the invariants: add an extra `hasParent` edge or\r\n// something.\r\ntry {\r\n  view.graph();\r\n} catch (_) {}\r\nexpect(() => {\r\n  view.graph();\r\n}).toThrow(\"Invariant violation\");\r\n```\r\n\r\n(such that the test fails without the `finally`)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196619827\u0000":{"address":{"type":"COMMENT","id":"196619827","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196619827","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I note that the actual contract of `HAS_PARENT` is stronger than what is\r\nchecked in this function. For instance, a review comment may not have a\r\nrepository as its parent.\r\n\r\nWhat do you think about changing `EdgeInvariant` to\r\n\r\n```js\r\ntype EdgeInvariant = {|\r\n  +prefix: GE.RawAddress,\r\n  +homs: $ReadOnlyArray<Hom>,\r\n|};\r\ntype Hom = {|+src: NodeAddressT, +dst: NodeAddressT|};\r\n```\r\n\r\nwith the semantics that any edge must match at least one of the\r\nspecified homs? Then, you could write\r\n\r\n```js\r\nconst edgeTypeToInvariants: {[type: string]: EdgeInvariant} = {\r\n  [GE.HAS_PARENT_TYPE]: {\r\n    prefix: GE._Prefix.hasParent,\r\n    homs: [\r\n      {src: GN._Prefix.issue, dst: GN._Prefix.repo},\r\n      {src: GN._Prefix.pull, dst: GN._Prefix.repo},\r\n      {src: GN._Prefix.review, dst: GN._Prefix.pull},\r\n      {src: GN._Prefix.issueComment, dst: GN._Prefix.issue},\r\n      {src: GN._Prefix.pullComment, dst: GN._Prefix.pull},\r\n      {src: GN._Prefix.reviewComment, dst: GN._Prefix.review},\r\n    ],\r\n  },\r\n  ...rest,\r\n};\r\n```\r\n\r\nfor a much more expressive test. In the case where you really do want\r\nthe Cartesian product (e.g., `REFERENCES` edges), you can define\r\n\r\n```js\r\ndeclare function homProduct(\r\n  srcs: $ReadOnlyArray<NodeAddressT>,\r\n  dsts: $ReadOnlyArray<NodeAddressT>\r\n): Hom[];\r\n```\r\n\r\nwith the obvious implementation, enabling\r\n\r\n```js\r\nconst edgeTypeToInvariants: {[type: string]: EdgeInvariant} = {\r\n  [GE.REFERENCES_TYPE]: {\r\n    prefix: GE._Prefix.references,\r\n    homs: homProduct(\r\n      [\r\n        GN._Prefix.issue,\r\n        GN._Prefix.pull,\r\n        GN._Prefix.review,\r\n        GN._Prefix.comment,\r\n      ],\r\n      [\r\n        GN._Prefix.repo,\r\n        GN._Prefix.issue,\r\n        GN._Prefix.pull,\r\n        GN._Prefix.review,\r\n        GN._Prefix.comment,\r\n        GN._Prefix.userlike,\r\n      ]\r\n    ),\r\n  },\r\n  ...rest,\r\n};\r\n```\r\n\r\nfor the same expressive power as the current code and just one more line\r\nof code.\r\n\r\nThis also presents, I posit, a much more useful and reusable\r\nabstraction.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196620110\u0000":{"address":{"type":"COMMENT","id":"196620110","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196620110","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If you’re inclined, you should be able to specify the type more\r\nprecisely using `$ElementType<StructuredAddress, \"type\">` instead of\r\n`string`. No strong preference.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196620490\u0000":{"address":{"type":"COMMENT","id":"196620490","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196620490","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If `Hom`s is implemented as suggested above, then this becomes a simple\r\nuniqueness check.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196620853\u0000":{"address":{"type":"COMMENT","id":"196620853","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196620853","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: `GitHub` (caps.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196621045\u0000":{"address":{"type":"COMMENT","id":"196621045","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196621045","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you `TODO(@someone)` here, please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196621126\u0000":{"address":{"type":"COMMENT","id":"196621126","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196621126","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What do you think about omitting this check? (This is a question, not a\r\nsuggestion.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130201329\u0000196621296\u0000":{"address":{"type":"COMMENT","id":"196621296","parent":{"type":"REVIEW","id":"130201329","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r196621296","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"With great predictive power comes great responsibility to ensure that\r\nyour tests are actually testing anything at all. That is: I would\r\nstrongly request that we verify that each invariant failure actually\r\ntriggers the appropriate error. The `_maybeCheckInvariants` method of\r\nthe `Graph` class, for comparison, has full test coverage on all\r\nfailure cases.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654958\u0000197000241\u0000":{"address":{"type":"COMMENT","id":"197000241","parent":{"type":"REVIEW","id":"130654958","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000241","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack, didn't feel like re-writing it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654968\u0000197000251\u0000":{"address":{"type":"COMMENT","id":"197000251","parent":{"type":"REVIEW","id":"130654968","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000251","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, added."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654975\u0000197000257\u0000":{"address":{"type":"COMMENT","id":"197000257","parent":{"type":"REVIEW","id":"130654975","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000257","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130654981\u0000197000262\u0000":{"address":{"type":"COMMENT","id":"197000262","parent":{"type":"REVIEW","id":"130654981","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000262","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655012\u0000197000289\u0000":{"address":{"type":"COMMENT","id":"197000289","parent":{"type":"REVIEW","id":"130655012","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000289","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done. It is a nicer abstraction indeed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655056\u0000197000326\u0000":{"address":{"type":"COMMENT","id":"197000326","parent":{"type":"REVIEW","id":"130655056","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000326","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack. No action taken."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655064\u0000197000333\u0000":{"address":{"type":"COMMENT","id":"197000333","parent":{"type":"REVIEW","id":"130655064","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000333","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655074\u0000197000340\u0000":{"address":{"type":"COMMENT","id":"197000340","parent":{"type":"REVIEW","id":"130655074","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000340","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Yep, rewritten."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655091\u0000197000352\u0000":{"address":{"type":"COMMENT","id":"197000352","parent":{"type":"REVIEW","id":"130655091","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000352","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"You get a TODO! :)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655134\u0000197000389\u0000":{"address":{"type":"COMMENT","id":"197000389","parent":{"type":"REVIEW","id":"130655134","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000389","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Well, it encodes a true invariant. I don't see any reason to omit it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130655149\u0000197000400\u0000":{"address":{"type":"COMMENT","id":"197000400","parent":{"type":"REVIEW","id":"130655149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197000400","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197238870\u0000":{"address":{"type":"COMMENT","id":"197238870","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197238870","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I wonder whether we should have node creation functions. We were\r\nconsidering providing a visitor for nodes, and creators are dual to\r\nvisitors (the fancy terms are anamorphisms and catamorphisms,\r\nrespectively). If you have both, then the module gains the power to\r\nchange the internal format without affecting any clients: i.e., the\r\nstructured types can be opaque. Obviously no change required in this PR.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197244849\u0000":{"address":{"type":"COMMENT","id":"197244849","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197244849","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Minor complaint (but not, I think, a nit): this is impossible in a way\r\nthat could be changed in the future such that this error is thrown at\r\nruntime\\*. I suggest either of the following alternatives:\r\n\r\n  - Make the message clearer about what has gone wrong: this is an error\r\n    in the invariant-checking code itself. For instance, something like\r\n    `bad invariant for ${type}: missing accessor` would make me happier.\r\n\r\n  - Better yet, you can encode this check statically. The problem is\r\n    that your invariants are encoded as\r\n\r\n    ```js\r\n    type Invariant = {|\r\n      +hasParent: boolean,\r\n      +parentAccessor: ?((*) => GN.ParentAddress),\r\n    |};\r\n    ```\r\n\r\n    where there is a (meta-)invariant between the value of the first\r\n    field and the nullity of the second that is not enforced by the\r\n    type. Instead, you could use either a union of more specific object\r\n    types:\r\n\r\n    ```js\r\n    type Invariant =\r\n      | {|+hasParent: true, +parentAccessor: (*) => GN.ParentAddress|}\r\n      | {|+hasParent: false, +parentAccessor: null|};\r\n    ```\r\n\r\n    or simply functions:\r\n\r\n    ```js\r\n    type Invariant = ?((*) => GN.ParentAddress);\r\n    ```\r\n\r\n    I’ve verified that each of these typechecks without the\r\n    `null`-check, and also that the first option statically errors if\r\n    the meta-invariant is violated (in the second option, it’s not\r\n    possible to write something that violates this meta-invariant).\r\n\r\n\\* What I mean is that the impossibility is [admissible but not\r\nderivable][1], which I think is an important didstinction.\r\n\r\n[1]: https://en.wikipedia.org/wiki/Rule_of_inference#Admissibility_and_derivability\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197245397\u0000":{"address":{"type":"COMMENT","id":"197245397","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197245397","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This API now exists; you can use it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197245648\u0000":{"address":{"type":"COMMENT","id":"197245648","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197245648","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interestingly, this API exists, but is not public. What should we do\r\nhere? Should we make `_Prefix` public?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197247070\u0000":{"address":{"type":"COMMENT","id":"197247070","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197247070","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A repository can’t have a parent at all. Can we instead provide a valid\r\nchild and a valid parent, like `hasParent(pullComment, issue)`? (In\r\nother words, this test currently checks “general” hom relationships, not\r\n“specific” ones.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197248312\u0000":{"address":{"type":"COMMENT","id":"197248312","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197248312","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is mostly okay with me, but note that really the behavior is\r\nundefined: the implementation is free to throw either “Parent invariant”\r\nor “Bad address”, because `foobar` is not a valid GitHub node.\r\n\r\nThe consequence of writing the test like this is that it may fail\r\nspuriously (and require patching) if and when the invariant-checking\r\nimplementation changes. But it’s plausible that the expected work of\r\nthat occurrence is lower than the actual work of robustifying this now,\r\nso no change requested.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197249683\u0000":{"address":{"type":"COMMENT","id":"197249683","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197249683","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In fact, now that I think about this a little more: it seems to me that\r\nuniqueness of parent edges is derivable from the invariants (a) every\r\nchild has at least one outgoing parent edge and (b) all parent edges\r\nmatch the parent and child specified in the edge address. Maybe this is\r\nwhat you were saying originally on Discord, and I didn’t understand. If\r\nthis is correct, then I’m fine removing the test case altogether if you\r\nlike.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000130945236\u0000197250341\u0000":{"address":{"type":"COMMENT","id":"197250341","parent":{"type":"REVIEW","id":"130945236","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197250341","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Cool; confirmed that this fails if the `finally` is squashed. Thanks for\r\nwriting this.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131076017\u0000197348862\u0000":{"address":{"type":"COMMENT","id":"197348862","parent":{"type":"REVIEW","id":"131076017","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197348862","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think that would certainly be a cleaner interface than the status quo (importing a TYPE and then structuring an object with it), so I'm in favor. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078088\u0000197350553\u0000":{"address":{"type":"COMMENT","id":"197350553","parent":{"type":"REVIEW","id":"131078088","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197350553","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed with your last suggestion. Thanks, it's also cleaner this way."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078112\u0000197350568\u0000":{"address":{"type":"COMMENT","id":"197350568","parent":{"type":"REVIEW","id":"131078112","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197350568","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131078149\u0000197350596\u0000":{"address":{"type":"COMMENT","id":"197350596","parent":{"type":"REVIEW","id":"131078149","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197350596","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think we should probably make _Prefix public. For now, I'm just using _Prefix."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131079392\u0000197351612\u0000":{"address":{"type":"COMMENT","id":"197351612","parent":{"type":"REVIEW","id":"131079392","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197351612","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"That is harder than it sounds, because such cases are already checked by the node-level parent invariant. Suppose that I try the following example:\r\n\r\n```js\r\n          const g = new Graph()\r\n            .addNode(GN.toRaw(repo))\r\n            .addNode(GN.toRaw(issue))\r\n            .addEdge(GE.createEdge.hasParent(issue, repo))\r\n            .addNode(GN.toRaw(pullComment))\r\n            .addEdge(GE.createEdge.hasParent(pullComment, issue));\r\n          expect(() => new GraphView(g)).toThrow(\"Invariant: Edge\");\r\n```\r\n\r\nThis triggers the node-wise invariant checker to throw, because `pullComment` _is_ a pull comment by virtue of having a pull as its address-encoded parent, and the `hasParent` edge is a mismatch on its address-encoded parent.\r\n\r\nI can get away with using `repo,repo` because the node-wise invariant checker doesn't expect repo to have a parent at all.\r\n\r\nIt's technically possible to surgically construct addresses that are valid except with mutilated prefixes, but the effort-to-power ratio is unfavorable. Making no change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131080070\u0000197352150\u0000":{"address":{"type":"COMMENT","id":"197352150","parent":{"type":"REVIEW","id":"131080070","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197352150","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It's impossible to create a valid GitHub has parent edge to test this condition, because the GitHub has parent edge is uniquely specified by the child address, and adding duplicate edges with conflicting contents would trigger a different violation. So this solution is as bad as any other that could feasibly test this codepath."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131080226\u0000197352288\u0000":{"address":{"type":"COMMENT","id":"197352288","parent":{"type":"REVIEW","id":"131080226","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197352288","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"+1, except (b) all parent edges match the child address specified in the edge address"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000405\u0000131328588\u0000197554015\u0000":{"address":{"type":"COMMENT","id":"197554015","parent":{"type":"REVIEW","id":"131328588","pull":{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/405#discussion_r197554015","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Noted, and reasonable. Thank you for the explanation."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000406\u0000399264282\u0000":{"address":{"type":"COMMENT","id":"399264282","parent":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/406#issuecomment-399264282","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"@decentralion: Curious what you think about this approach of committing\r\nthe graph creation before the porcelain has been written. If you object,\r\nI’m happy to wait until the porcelain is written and then resubmit this.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000406\u0000400453389\u0000":{"address":{"type":"COMMENT","id":"400453389","parent":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/406#issuecomment-400453389","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> I don't mind having the graph creator before the porcelain; your\r\n> checksumming approach (and the comparative simpleness of the git\r\n> plugin) leaves me reasonably confident it's correct.\r\n\r\nCool. After having written the checks, this code still looks correct.\r\n:-)\r\n\r\n> I sort of skimmed this PR for plausibility, but didn't reload all the\r\n> git data structure stuff into my mental state. It seems like a\r\n> straightforward port of existing logic so I'm happy to approve it, but\r\n> if you want a more thorough review I can provide that too.\r\n\r\nNope, that’s fine with me. It is a mostly straightforward port.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000407\u0000131288297\u0000197521736\u0000":{"address":{"type":"COMMENT","id":"197521736","parent":{"type":"REVIEW","id":"131288297","pull":{"type":"PULL","number":"407","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/407#discussion_r197521736","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is totally fine with me; you could also put it in `nodeExamples`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000409\u0000399593257\u0000":{"address":{"type":"COMMENT","id":"399593257","parent":{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/409#issuecomment-399593257","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"As it says in the message, I recommend that this not be merged, but I\r\nstill wanted to put the code out there to document the timing\r\ndifference.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000409\u0000399599000\u0000":{"address":{"type":"COMMENT","id":"399599000","parent":{"type":"PULL","number":"409","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/409#issuecomment-399599000","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000411\u0000399625927\u0000":{"address":{"type":"COMMENT","id":"399625927","parent":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#issuecomment-399625927","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"One extra thing that I like about this approach is that it makes it\r\nclearer how one might approach incremental data fetching: run a query\r\nagainst GitHub, and update a persistent one of these databases. No need\r\nto worry about merging into a previous GraphQL result or anything like\r\nthat.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000411\u0000399626941\u0000":{"address":{"type":"COMMENT","id":"399626941","parent":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#issuecomment-399626941","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Re-approved."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382351\u0000197600152\u0000":{"address":{"type":"COMMENT","id":"197600152","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#discussion_r197600152","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Just putting this out there: as I understand it, in a relational\r\ndatabase the typical structure for this is\r\n\r\n```sql\r\nCREATE TABLE repo (\r\n  address BLOB PRIMARY KEY,\r\n  url TEXT\r\n);\r\nCREATE TABLE issue (\r\n  address BLOB PRIMARY KEY,\r\n  title TEXT,\r\n  body TEXT,\r\n  url TEXT\r\n);\r\nCREATE TABLE has_issue (\r\n  repo BLOB,\r\n  issue BLOB\r\n);\r\n```\r\n\r\nwhere you `INSERT INTO has_issue (repo, issue) VALUES (r, i)` once for\r\neach fact that repository `r` has issue `i`.\r\n\r\nThat is, there is no “array” datatype, so you use an auxiliary table to\r\nexpress the relationship `has_issue : repo × issue`.\r\n\r\nNo change necessary in this PR, but maybe keep this in the back of your\r\nmind so that you don’t start doing crazy things that don’t fit into this\r\nmodel.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382351\u0000197600281\u0000":{"address":{"type":"COMMENT","id":"197600281","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#discussion_r197600281","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: I think that this is more readable inline:\r\n\r\n```js\r\n    const mergedAs: ?GitNode.CommitAddress =\r\n      json.mergeCommit != null\r\n        ? {type: GitNode.COMMIT_TYPE, hash: json.mergeCommit.oid}\r\n        : null;\r\n```\r\n\r\n(Non-accusatory aside: this is a great example of how one could\r\nplausibly-deniably inflate a commit-lines-of-code metric. :-) )\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382351\u0000197600335\u0000":{"address":{"type":"COMMENT","id":"197600335","parent":{"type":"REVIEW","id":"131382351","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#discussion_r197600335","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m not a big fan of the “combined query and command”, especially when\r\nused in a `map`, but I can’t really think of a better alternative, so no\r\nchange requested.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382994\u0000197600752\u0000":{"address":{"type":"COMMENT","id":"197600752","parent":{"type":"REVIEW","id":"131382994","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#discussion_r197600752","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Got it. If we map onto an actual relational db, we might not want to include data like this which is redundant with the Graph"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000411\u0000131382998\u0000197600758\u0000":{"address":{"type":"COMMENT","id":"197600758","parent":{"type":"REVIEW","id":"131382998","pull":{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/411#discussion_r197600758","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Changed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000400059242\u0000":{"address":{"type":"COMMENT","id":"400059242","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/412#issuecomment-400059242","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The second and third commits are fine with me, but I am skeptical of the\r\nchange to denormalize everything. This implies that the `RelationalView`\r\nis no longer a view of a relational database but rather a view of a\r\n[document-oriented database][dodb] (like MongoDB).\r\n\r\n[dodb]: https://en.wikipedia.org/wiki/Document-oriented_database\r\n\r\nHere is one practical problem presented by this example: in our example\r\nrepo, there are only two users, but the URL for `decentralion` appears\r\n12 times and the URL for `wchargin` appears 6 times. It is easy to see\r\nthat this will lead to a lot of data duplication. This is worse than\r\njust “wasted space”: we now have to ensure that these are all kept in\r\nsync (namely, that `login` should be a super key).\r\n\r\nThis approach is the approach taken by the GitHub v3 API, which—you’ll\r\nrecall—yields [results like this][ghv3], wherein requesting the comments\r\non an issue requires serving 40 copies of URLs to various aspects of\r\n@decentralion’s login page.\r\n\r\n[ghv3]: https://api.github.com/repos/sourcecred/sourcecred/issues/350/comments\r\n\r\nThis approach also has the consequence that objects explode in size: a\r\nreference to a repository now includes the full contents of all pull\r\nrequest review comments under the repository.\r\n\r\nAs I understand it, you’re denormalizing to avoid null checks in the\r\nclient code. In a relational model, this isn’t a problem. If you want\r\nall the pull request review comments on all the reviews of a given pull\r\nrequest, you can\r\n\r\n```sql\r\nSELECT *\r\nFROM pulls JOIN reviews JOIN review_comments\r\nON pulls.id = reviews.pull AND review_comments.review = reviews.id\r\nWHERE pulls.id = ?\r\n```\r\n\r\nwhich is all type-checked and everything by the server.\r\n([Example fiddle.][fiddle])\r\n\r\nI’d strongly request reconsidering this, and I’m happy to chat about it.\r\n\r\n[fiddle]: http://sqlfiddle.com/#!5/a05bf/2\r\n\r\n<!--\r\n\r\n```sql\r\nCREATE TABLE pulls (\r\n    id TEXT PRIMARY KEY,\r\n    number INTEGER\r\n);\r\nCREATE TABLE reviews (\r\n    id TEXT PRIMARY KEY,\r\n    pull TEXT,\r\n    FOREIGN KEY(pull) REFERENCES pulls(id)\r\n);\r\nCREATE TABLE review_comments (\r\n    id TEXT PRIMARY KEY,\r\n    review TEXT,\r\n    body TEXT\r\n);\r\n\r\nINSERT INTO pulls VALUES ('p2', 2);\r\nINSERT INTO pulls VALUES ('p5', 5);\r\nINSERT INTO reviews VALUES ('r1', 'p2');\r\nINSERT INTO reviews VALUES ('r2', 'p2');\r\nINSERT INTO reviews VALUES ('r3', 'p5');\r\nINSERT INTO review_comments VALUES ('rc1', 'r1', 'nit: speeling error');\r\nINSERT INTO review_comments VALUES ('rc2', 'r1', 'nice test cases');\r\nINSERT INTO review_comments VALUES ('rc3', 'r2', 'lgtm');\r\nINSERT INTO review_comments VALUES ('rc5', 'r3', 'this breaks everything');\r\n\r\n\r\nSELECT pulls.id, reviews.id, review_comments.id, review_comments.body\r\nFROM pulls JOIN reviews JOIN review_comments\r\nON pulls.id = reviews.pull AND review_comments.review = reviews.id\r\nWHERE pulls.id = 'p2'\r\n```\r\n\r\n-->\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000400158180\u0000":{"address":{"type":"COMMENT","id":"400158180","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/412#issuecomment-400158180","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing in favor of #418 "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000415\u0000131848450\u0000197998017\u0000":{"address":{"type":"COMMENT","id":"197998017","parent":{"type":"REVIEW","id":"131848450","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/415#discussion_r197998017","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: This gets checked again on line 195."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000415\u0000132187525\u0000198283283\u0000":{"address":{"type":"COMMENT","id":"198283283","parent":{"type":"REVIEW","id":"132187525","pull":{"type":"PULL","number":"415","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/415#discussion_r198283283","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It does indeed. I think I’ll remove this one: I kept it so that the node\r\nand edge checks were adjacent, but I don’t really see any reason to do\r\nso, and it needlessly wastes cycles.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197911079\u0000":{"address":{"type":"COMMENT","id":"197911079","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197911079","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should this be defined in the `relationalView.js` module?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197913309\u0000":{"address":{"type":"COMMENT","id":"197913309","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197913309","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: _example_ (sp.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197914198\u0000":{"address":{"type":"COMMENT","id":"197914198","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197914198","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don’t understand why this is called `refToAddress` and not\r\n`urlToAddress`. It doesn’t map from `GithubReference`s. What\r\nam I missing?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197914271\u0000":{"address":{"type":"COMMENT","id":"197914271","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197914271","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don’t understand why this is called `refToAddress` and not\r\n`urlToAddress`. It doesn’t map from `GithubReference`s. What\r\nam I missing?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197914470\u0000":{"address":{"type":"COMMENT","id":"197914470","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197914470","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Do you want a type assertion here, or do you find it superfluous?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197914963\u0000":{"address":{"type":"COMMENT","id":"197914963","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197914963","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I don’t understand why this is called `refToAddress` and not\r\n`urlToAddress`. It doesn’t map from `GithubReference`s. What\r\nam I missing?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131746698\u0000197915387\u0000":{"address":{"type":"COMMENT","id":"197915387","parent":{"type":"REVIEW","id":"131746698","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197915387","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Consider adding here explicit cases for each other possible value of\r\n`e.type`, and then using an `empty`-assertion in the `default`-case.\r\nThat way, when we add new GitHub node types, we’ll be forced to consider\r\nthis block, and either add a new reference type or explicitly decline to\r\ndo so.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131848072\u0000197997691\u0000":{"address":{"type":"COMMENT","id":"197997691","parent":{"type":"REVIEW","id":"131848072","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197997691","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Made a clearer docstring in the new version, but:\r\n\"# 34\", \"@ wchargin\" and \"https://github.com/ sourcecred/sourcecred/pull/416\" are all considered refs."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000416\u0000131848106\u0000197997720\u0000":{"address":{"type":"COMMENT","id":"197997720","parent":{"type":"REVIEW","id":"131848106","pull":{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/416#discussion_r197997720","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done, in the new version."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000400414198\u0000":{"address":{"type":"COMMENT","id":"400414198","parent":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#issuecomment-400414198","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’ve given a low-to-the-ground review; I don’t feel that I have enough\r\ncontext to give a design review.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000400847214\u0000":{"address":{"type":"COMMENT","id":"400847214","parent":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#issuecomment-400847214","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Replaced by #424."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000198241054\u0000":{"address":{"type":"COMMENT","id":"198241054","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#discussion_r198241054","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could we include a top-of-module comment like,\r\n\r\n```js\r\n/*\r\n * Provides \"addressed\" data types for GitHub data, which are like the\r\n * response types in `graphql.js` but with (a) GitHub graph addresses\r\n * added and (b) connections converted to ordinary arrays.\r\n */\r\n```\r\n\r\n?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000198241810\u0000":{"address":{"type":"COMMENT","id":"198241810","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#discussion_r198241810","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The array properties are read-only, but the arrays themselves are\r\nwritable. So, it’s not allowed to write `data.repos = []`, but it is\r\nallowed to write `data.repos.splice(0, data.repos.length)`. Is this\r\nintentional? If so, why?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000198245518\u0000":{"address":{"type":"COMMENT","id":"198245518","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#discussion_r198245518","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could we include a top-of-module comment like,\r\n\r\n```js\r\n/*\r\n * Provides \"entity\" data types for GitHub data, which are like the\r\n * addressed types in `addressify.js` but with addresses referencing\r\n * other entities removed (an entity still stores its own address).\r\n */\r\n```\r\n\r\n?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000198249304\u0000":{"address":{"type":"COMMENT","id":"198249304","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#discussion_r198249304","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can replace `a: any` with `a: $ElementType<T, \"address\">`."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000418\u0000132136356\u0000198249794\u0000":{"address":{"type":"COMMENT","id":"198249794","parent":{"type":"REVIEW","id":"132136356","pull":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/418#discussion_r198249794","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Nice test automation. Clearly a good abstraction."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000419\u0000400511127\u0000":{"address":{"type":"COMMENT","id":"400511127","parent":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/419#issuecomment-400511127","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Replaced by #428"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000419\u0000132164883\u0000198264936\u0000":{"address":{"type":"COMMENT","id":"198264936","parent":{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/419#discussion_r198264936","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Is `addressify` really the right name from that module, given that most\r\nof the time clients will be importing it for its addressed types, not\r\nthe addressing functions?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000419\u0000132164883\u0000198266277\u0000":{"address":{"type":"COMMENT","id":"198266277","parent":{"type":"REVIEW","id":"132164883","pull":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/419#discussion_r198266277","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I thought that it was more convenient for the graph to accept an\r\n`EntityStore` to do reference parsing. When we add reference edges to\r\nthe graph, is this signature going to change? If so, why not just use\r\nthe `EntityStore` from the beginning so that we don’t run into surprises\r\ndown the road? If not, what am I missing?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000420\u0000401122352\u0000":{"address":{"type":"COMMENT","id":"401122352","parent":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/420#issuecomment-401122352","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing as obsolete; superseded by #431"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000423\u0000400507156\u0000":{"address":{"type":"COMMENT","id":"400507156","parent":{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/423#issuecomment-400507156","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I should also indicate: `yarn travis --full` passes."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198337323\u0000":{"address":{"type":"COMMENT","id":"198337323","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198337323","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. My new mental model is that `class RelationalView` is an in-memory\r\nrepresentation of the entire backing database. In a future where it’s\r\nnot feasible to send this whole database down to clients, some APIs will\r\nclearly need to change: e.g., `RelationalView.issue` will probably\r\nreturn a `Promise<?Issue>`. We discussed offline and decided _not_ to\r\nmake these all async now. We’ll make that change, and update downstream\r\ncode, when we need to, with the reasoning that at that time we’ll have a\r\nbetter understanding of what exactly should be async and any other\r\nrequirements that pop up along the way.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198338071\u0000":{"address":{"type":"COMMENT","id":"198338071","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198338071","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Note that you convert `undefined` to `null` here. I suppose that this is\r\nintentional?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198339708\u0000":{"address":{"type":"COMMENT","id":"198339708","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198339708","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What do you think of `Entity` being an actual superclass? It could store\r\nthe view and record and implement `type`. It seems aesthetically nice\r\nthat these six clearly related classes should have a common\r\nsupertype—but no strong preference from me.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198342610\u0000":{"address":{"type":"COMMENT","id":"198342610","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198342610","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It would be nice to be able to write\r\n\r\n```js\r\nfunction assertExists<T>(\r\n  item: ?T,\r\n  address: N.StructuredAddress & {+type: $Call<$PropertyType<T, \"type\">>}\r\n): T {\r\n```\r\n\r\nbut, unfortunately, [a Flow bug][bug] prevents this from working in the\r\ncase of comment parents.\r\n\r\n[bug]: https://github.com/facebook/flow/issues/6530\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198342829\u0000":{"address":{"type":"COMMENT","id":"198342829","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198342829","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This could be `if (element instanceof Entity)`, which is cleaner and\r\nremoves the need for the cast through `any`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198343116\u0000":{"address":{"type":"COMMENT","id":"198343116","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198343116","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What do you think about having separate `has` and `hasEntity` functions?\r\nThat, I think, violates the principle of least astonishment less.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198344105\u0000":{"address":{"type":"COMMENT","id":"198344105","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198344105","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"If `Entity` is made a superclass, then you can replace this `any` with:\r\n\r\n```js\r\n      get: (x: $Call<$PropertyType<T, \"address\">>) => ?T\r\n```\r\n\r\n(You should be able to do it with a union, too, but Flow complains,\r\nwhich I think is due to that same bug.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132251573\u0000198344201\u0000":{"address":{"type":"COMMENT","id":"198344201","parent":{"type":"REVIEW","id":"132251573","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198344201","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: Mind calling this `actualParent`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132272637\u0000198355917\u0000":{"address":{"type":"COMMENT","id":"198355917","parent":{"type":"REVIEW","id":"132272637","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198355917","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"No, I just treat them as identical in my head. I can modify it so that it remains undefined."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617174\u0000198648096\u0000":{"address":{"type":"COMMENT","id":"198648096","parent":{"type":"REVIEW","id":"132617174","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198648096","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617216\u0000198648120\u0000":{"address":{"type":"COMMENT","id":"198648120","parent":{"type":"REVIEW","id":"132617216","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198648120","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617509\u0000198648367\u0000":{"address":{"type":"COMMENT","id":"198648367","parent":{"type":"REVIEW","id":"132617509","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198648367","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I like the convenience of `has`, and since it's a local, test-only method I'm not too worried about the API. I can change it if you feel strongly."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617720\u0000198648558\u0000":{"address":{"type":"COMMENT","id":"198648558","parent":{"type":"REVIEW","id":"132617720","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198648558","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132617864\u0000198648679\u0000":{"address":{"type":"COMMENT","id":"198648679","parent":{"type":"REVIEW","id":"132617864","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198648679","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132619756\u0000198650361\u0000":{"address":{"type":"COMMENT","id":"198650361","parent":{"type":"REVIEW","id":"132619756","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198650361","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay, no problem."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000424\u0000132626801\u0000198656162\u0000":{"address":{"type":"COMMENT","id":"198656162","parent":{"type":"REVIEW","id":"132626801","pull":{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/424#discussion_r198656162","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can add an `empty` assertion here."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000425\u0000400507239\u0000":{"address":{"type":"COMMENT","id":"400507239","parent":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/425#issuecomment-400507239","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Maybe we should have a link to the PR which originally created this code in the commit description?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000425\u0000400836819\u0000":{"address":{"type":"COMMENT","id":"400836819","parent":{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/425#issuecomment-400836819","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m not against this in principle, but I don’t think that it makes much\r\nsense here. The file that we’re copying wasn’t created in any single\r\ncommit. It was originally created in a sequence of commits by copying\r\nover functionality from a different file, with some modifications along\r\nthe way…\r\n\r\n```\r\n$ git log --follow --pretty='%h %s' src/v1/core/attribution/markovChain.js\r\nba721a6 Fork project to v1/ and v2/ in preparation for v3 (#327)\r\n64a8514 markovChain should scale to 1m nodes (#290)\r\n115d7f3 Extract `findStationaryDistribution` (#277)\r\n0a608ac Extract `sparseMarkovChainAction` (#275)\r\n69b9f66 Extract `uniformDistribution` (#274)\r\ne547275 Allow converting transition matrix to sparse chain (#272)\r\n3bd449d Create a `markovChain.js` module (#271)\r\n```\r\n\r\n…and that original file itself had a natural evolution:\r\n\r\n```\r\n$ git log --follow --pretty='%h %s' src/v1/app/credExplorer/basicPagerank.js \r\nba721a6 Fork project to v1/ and v2/ in preparation for v3 (#327)\r\n418d046 Remove Node/Edge polymorphism on Graph (#289)\r\n115d7f3 Extract `findStationaryDistribution` (#277)\r\n9d7f9f7 Make `findStationaryDistribution` configurable (#276)\r\n0a608ac Extract `sparseMarkovChainAction` (#275)\r\n69b9f66 Extract `uniformDistribution` (#274)\r\n017fbd7 Use `SparseMarkovChain` in `basicPagerank` (#273)\r\n3e70edb Use typed arrays for PageRank (#267)\r\n7e97ba6 Rewrite basic PageRank without TFJS (#266)\r\n61d3cb3 Implement basic PageRank analysis (#252)\r\n```\r\n\r\nWe can recover linewise history via `git blame`, which follows across\r\nrenames, and we can get the full file history with `git log --follow` as\r\nabove. So I don’t think that we’re losing anything by omitting an\r\nexplicit backreference in this commit.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000427\u0000400838084\u0000":{"address":{"type":"COMMENT","id":"400838084","parent":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#issuecomment-400838084","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Also, please consider linking to the pull requests that implemented\r\n> the v1 versions of this code.\r\n\r\nOkay: as in #425, it’s not exactly clear what the target is, even more\r\nso given the fact that this commit is not a copy but an adaptation, with\r\ndifferent implementation, types, and API. But I suppose that I could\r\nlink to the original TFJS implementation of PageRank. Would you like\r\nthat?\r\n\r\n(*edit:* merged without doing this.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132253333\u0000198338982\u0000":{"address":{"type":"COMMENT","id":"198338982","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198338982","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"We've already checked that neighbors !== null. Should this be `priorOutWeight`?\r\n(Why did flow not error?)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132253333\u0000198339348\u0000":{"address":{"type":"COMMENT","id":"198339348","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198339348","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I believe we could move this line up to line 34, and avoid an extra iteration over every node, without any change in behavior. (We'd need to move the moreWeight function def up too)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132253333\u0000198339535\u0000":{"address":{"type":"COMMENT","id":"198339535","parent":{"type":"REVIEW","id":"132253333","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198339535","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Why do we call `Math.abs`? If either value is < 0 that should be an error outright."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132269828\u0000198353351\u0000":{"address":{"type":"COMMENT","id":"198353351","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198353351","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good catch—that should be `priorOutWeight`. I, too, am surprised that\r\n`undefined + 3` is not a type error, but apparently it is not.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132269828\u0000198353454\u0000":{"address":{"type":"COMMENT","id":"198353454","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198353454","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay; I’m happy to do that, even though it complicates the contract of\r\n`moreWeight`. (Technically, we don’t need to move up the definition of\r\n`moreWeight`, but I agree that we should.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132269828\u0000198353475\u0000":{"address":{"type":"COMMENT","id":"198353475","parent":{"type":"REVIEW","id":"132269828","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198353475","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yeah, this code isn’t supposed to be there at all. I put it in for\r\ndebugging (it turned out that I was just constructing an input\r\nincorrectly in a test case). Sorry about that; will remove.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000427\u0000132622637\u0000198652844\u0000":{"address":{"type":"COMMENT","id":"198652844","parent":{"type":"REVIEW","id":"132622637","pull":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/427#discussion_r198652844","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: there is no snapshot"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000428\u0000400866003\u0000":{"address":{"type":"COMMENT","id":"400866003","parent":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#issuecomment-400866003","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Great catch; the hierarchical implementation was a legacy from pre-relational-view implementation startegy.\r\nI've refactored the code to be non-hierarchical, and it's now cleaner / even shorter. PTAL."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132634111\u0000198662464\u0000":{"address":{"type":"COMMENT","id":"198662464","parent":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198662464","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Is there a reason to do this in the constructor? All else equal,\r\nI prefer the previous pattern of an `addData` method that’s called by\r\nthe `createGraph` function. It’s nice when (a) constructors don’t do any\r\nwork, and (b) constructors don’t call instance methods. The former is\r\nmostly aesthetic (in JavaScript, at least), but the latter can be\r\nimportant: instance methods may assume that class invariants hold, but\r\nthese class invariants may not be established before the constructor has\r\nfinished.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132634111\u0000198664313\u0000":{"address":{"type":"COMMENT","id":"198664313","parent":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198664313","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We could make this robust by creating a JavaScript module that exports\r\n\r\n```js\r\n// @flow\r\n\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\nexport function exampleGithub(): GithubResponseJSON {\r\n  return cloneDeep(require(\"./example-github\"));\r\n}\r\n```\r\n\r\nso that clients don’t have to remember to (a) annotate the type and\r\n(b) clone the raw value (which is stored in the `require` cache and\r\nshared across all clients!).\r\n\r\nYou might also want to expose functions to construct the relational view\r\nand/or graph from this example data, just for convenience.\r\n\r\nWould you like to do that in a standalone commit prior to this one? (Or\r\nafter it, if you prefer.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132647448\u0000198673857\u0000":{"address":{"type":"COMMENT","id":"198673857","parent":{"type":"REVIEW","id":"132647448","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198673857","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I'd like to do it after this commit. Created an issue to track it: https://github.com/sourcecred/sourcecred/issues/430"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132647500\u0000198673910\u0000":{"address":{"type":"COMMENT","id":"198673910","parent":{"type":"REVIEW","id":"132647500","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198673910","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I changed it to suit your preference."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000198674580\u0000":{"address":{"type":"COMMENT","id":"198674580","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198674580","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Fine with me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000198674760\u0000":{"address":{"type":"COMMENT","id":"198674760","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198674760","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interesting that this is possible. You could also, of course, just add\r\nthe two endpoints when you create an edge, which would solve the problem\r\nin the general case. As long as this works, though, it’s fine with me.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000198676110\u0000":{"address":{"type":"COMMENT","id":"198676110","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198676110","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Hmm. I’m not a huge fan of this structure. You mix all the data types\r\ntogether into one heterogeneous stream, and then for each element case\r\non its type to perform some actions, possibly multiple depending on the\r\ntype. It seems pretty ad hoc and complicated compared to the following\r\nsimple approach:\r\n\r\n```js\r\nfor (const user of view.userlikes()) {\r\n  this.addNode(user.address());\r\n}\r\nfor (const repo of view.repos()) {\r\n  this.addNode(repo.address());\r\n}\r\nfor (const issue of view.issues()) {\r\n  this.addNode(issue.address());\r\n  this.addHasParent(issue);\r\n  this.addAuthors(issue);\r\n}\r\nfor (const pull of view.pulls()) {\r\n  this.addNode(pull.address());\r\n  this.addHasParent(pull);\r\n  this.addAuthors(pull);\r\n  const commit = entity.mergedAs();\r\n  if (commit != null) {\r\n    this.graph.addNode(GitNode.toRaw(commit));\r\n    this.graph.addEdge(createEdge.mergedAs(entity.address(), commit));\r\n  }\r\n}\r\nfor (const review of view.reviews()) {\r\n  this.addNode(review.address());\r\n  this.addHasParent(review);\r\n  this.addAuthors(review);\r\n}\r\nfor (const comment of view.comments()) {\r\n  this.addNode(comment.address());\r\n  this.addHasParent(comment);\r\n  this.addAuthors(comment);\r\n}\r\n```\r\n\r\nCompared to the approach above, the approach in this pull request has\r\nless duplicated code, but it’s not clear that the deduplication actually\r\nrepresents a useful abstraction.\r\n\r\nFor reference, the proposed approach is only two extra lines of code.\r\n\r\nWhat do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000198677192\u0000":{"address":{"type":"COMMENT","id":"198677192","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198677192","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I would alternately support a “trait-based” approach like:\r\n\r\n```js\r\n// Add nodes\r\nfor (const node of view.allEntities()) {\r\n  this.addNode(node.address());\r\n}\r\n\r\n// Add parents\r\nfor (const node of view.childEntities()) {\r\n  this.addHasParent(node);\r\n}\r\n\r\n// Add authors\r\nfor (const node of view.authorEntities()) {\r\n  this.addAuthors(node);\r\n}\r\n\r\n// Add \"merged-as\" edges\r\nfor (const pull of view.pulls()) {\r\n  const commit = entity.mergedAs();\r\n  if (commit != null) {\r\n    this.graph.addNode(GitNode.toRaw(commit));\r\n    this.graph.addEdge(createEdge.mergedAs(entity.address(), commit));\r\n  }\r\n}\r\n```\r\n\r\n…with the differences from the approach in this pull request being that\r\n(a) the entities come from named methods under the purview of the\r\nrelational view, (b) there’s clear separation among traits (e.g., the\r\ncoincidence of the set of child entities and the set of authorable\r\nentities is not relevant), and (c) there’s no need to lose information\r\nby injecting into a heterogeneous stream and then refine out of it\r\nagain.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132648273\u0000198677522\u0000":{"address":{"type":"COMMENT","id":"198677522","parent":{"type":"REVIEW","id":"132648273","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198677522","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A notable difference between the two methods that I’ve proposed is how\r\nthey deal with extension. With the first method, it is easy to see how\r\nto add a new entity type, whereas adding a new trait is a cross-cutting\r\nconcern. The opposite is true with the second proposal. In either case,\r\nof course, adding a new entity type or trait is not _difficult_.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000133012676\u0000198979295\u0000":{"address":{"type":"COMMENT","id":"198979295","parent":{"type":"REVIEW","id":"133012676","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198979295","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Changed to your trait based approach."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000133013249\u0000198979752\u0000":{"address":{"type":"COMMENT","id":"198979752","parent":{"type":"REVIEW","id":"133013249","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/428#discussion_r198979752","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Yep. If you want to make `Entity` an implementation detail and expose the union only, that's okay with me. (I see now why it makes sense in parallel with the other concepts.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198937283\u0000":{"address":{"type":"COMMENT","id":"198937283","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198937283","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Why `_mapReferences` instead of just `references`? It’s in the type, and\r\nalso they’re all maps.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198939136\u0000":{"address":{"type":"COMMENT","id":"198939136","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198939136","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"What do you think of the following idea—let `ReferentEntity` be an\r\ninterface\r\n\r\n```js\r\ninterface ReferentEntity {\r\n  referencingStrings(): string[];\r\n}\r\n```\r\n\r\nand then implement (e.g.)\r\n\r\n```js\r\nclass Pull extends Entity<PullEntry> implements ReferentEntity {\r\n  referencingStrings() {\r\n    return [this.url(), \"#\" + this.number()];\r\n  }\r\n  /* … */\r\n}\r\n```\r\n\r\nso that this loop becomes\r\n\r\n```js\r\n    for (const e: ReferentEntity of this.referentEntities()) {\r\n      const a = e.address();\r\n      for (const referencingString fo e.referencingStrings()) {\r\n        refToAddress.set(referencingString, a);\r\n      }\r\n    }\r\n```\r\n\r\nremoving the need to hard-code type refinements?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198942589\u0000":{"address":{"type":"COMMENT","id":"198942589","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198942589","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This case and the case of `USERLIKE` are known statically to be\r\nimpossible, so you can remove them (and I’d prefer that you do so,\r\nbecause it gives us stronger static robustness to change).\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198946898\u0000":{"address":{"type":"COMMENT","id":"198946898","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198946898","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"`referrer`, please."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198949475\u0000":{"address":{"type":"COMMENT","id":"198949475","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198949475","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Somewhat surprising to me that we don’t store any identifying\r\ninformation about the reference itself—the text content of the\r\nreference, and/or the index in the body at which it appears. Do we plan\r\nto do so?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198952610\u0000":{"address":{"type":"COMMENT","id":"198952610","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198952610","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"In the implementation, it appears possible that there could be multiple\r\nreferences with a given hom. But (a) this is not the case in our example\r\nrepo (unless I’m missing something), and (b) using a `Set` loses the\r\nability to fully test that. I’d propose adding some multireferences and\r\nupdating the test code if needed. What do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004063\u0000198972409\u0000":{"address":{"type":"COMMENT","id":"198972409","parent":{"type":"REVIEW","id":"133004063","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198972409","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"It shouldn't be `references` because it's a private helper property. It can't be `_references` because that is the name of the helper function for finding references for an entity."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004605\u0000198972840\u0000":{"address":{"type":"COMMENT","id":"198972840","parent":{"type":"REVIEW","id":"133004605","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198972840","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133004907\u0000198973090\u0000":{"address":{"type":"COMMENT","id":"198973090","parent":{"type":"REVIEW","id":"133004907","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198973090","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think we probably will in the future, but we don't have a need to yet."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133005054\u0000198973205\u0000":{"address":{"type":"COMMENT","id":"198973205","parent":{"type":"REVIEW","id":"133005054","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198973205","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133006098\u0000198974029\u0000":{"address":{"type":"COMMENT","id":"198974029","parent":{"type":"REVIEW","id":"133006098","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198974029","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sure, created an issue to do this: https://github.com/sourcecred/sourcecred/issues/433"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133006876\u0000198974702\u0000":{"address":{"type":"COMMENT","id":"198974702","parent":{"type":"REVIEW","id":"133006876","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198974702","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I like it the way it is."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133007332\u0000198975022\u0000":{"address":{"type":"COMMENT","id":"198975022","parent":{"type":"REVIEW","id":"133007332","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/431#discussion_r198975022","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Right, `_references` is what I meant. That makes sense. Thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000438\u0000133036464\u0000198999065\u0000":{"address":{"type":"COMMENT","id":"198999065","parent":{"type":"REVIEW","id":"133036464","pull":{"type":"PULL","number":"438","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/438#discussion_r198999065","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"cute."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000442\u0000133073798\u0000199032153\u0000":{"address":{"type":"COMMENT","id":"199032153","parent":{"type":"REVIEW","id":"133073798","pull":{"type":"PULL","number":"442","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/442#discussion_r199032153","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please add a notice:\r\n\r\n> *Caveat vocator:* calling `addData` may actually delete some of your\r\n> data. Use at your own risk.\r\n\r\nApproved otherwise."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000443\u0000133074860\u0000199033124\u0000":{"address":{"type":"COMMENT","id":"199033124","parent":{"type":"REVIEW","id":"133074860","pull":{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/443#discussion_r199033124","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"ಠ_ಠ but okay"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000444\u0000133331131\u0000199243490\u0000":{"address":{"type":"COMMENT","id":"199243490","parent":{"type":"REVIEW","id":"133331131","pull":{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/444#discussion_r199243490","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":bike: :house: : Could you move the `(${diff})` before the colon?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000445\u0000401438107\u0000":{"address":{"type":"COMMENT","id":"401438107","parent":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/445#issuecomment-401438107","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixes #433"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000445\u0000401516542\u0000":{"address":{"type":"COMMENT","id":"401516542","parent":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/445#issuecomment-401516542","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you please update the V1 data, too?  \r\nhttps://travis-ci.org/sourcecred/sourcecred/builds/398473500"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000447\u0000133335326\u0000199246830\u0000":{"address":{"type":"COMMENT","id":"199246830","parent":{"type":"REVIEW","id":"133335326","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/447#discussion_r199246830","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"plugin whose data to load"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000447\u0000133347074\u0000199256196\u0000":{"address":{"type":"COMMENT","id":"199256196","parent":{"type":"REVIEW","id":"133347074","pull":{"type":"PULL","number":"447","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/447#discussion_r199256196","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Done; thanks."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133353837\u0000199261497\u0000":{"address":{"type":"COMMENT","id":"199261497","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199261497","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Might as well be `\"BASIC\" | \"PAIRED_WITH\"` for consistency."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133353837\u0000199261781\u0000":{"address":{"type":"COMMENT","id":"199261781","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199261781","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Appreciate the leniency in the regexp. Could you also permit the space\r\nbetween “paired” and “with” to be a single hyphen, like `Paired-with`?\r\nThis makes the format compatible with `git-interpret-trailers`, which\r\nuses keys like `Signed-off-by`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133353837\u0000199262365\u0000":{"address":{"type":"COMMENT","id":"199262365","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199262365","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Funky implementation, but okay."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133353837\u0000199263172\u0000":{"address":{"type":"COMMENT","id":"199263172","parent":{"type":"REVIEW","id":"133353837","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199263172","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This should not be an error.\r\n\r\nWatch: Paired with @someonewhodoesnotexist."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357688\u0000199264461\u0000":{"address":{"type":"COMMENT","id":"199264461","parent":{"type":"REVIEW","id":"133357688","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199264461","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay: I see now how the code works. Thanks for improving the error message. :-)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357813\u0000199264545\u0000":{"address":{"type":"COMMENT","id":"199264545","parent":{"type":"REVIEW","id":"133357813","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199264545","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357822\u0000199264555\u0000":{"address":{"type":"COMMENT","id":"199264555","parent":{"type":"REVIEW","id":"133357822","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199264555","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000451\u0000133357858\u0000199264579\u0000":{"address":{"type":"COMMENT","id":"199264579","parent":{"type":"REVIEW","id":"133357858","pull":{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/451#discussion_r199264579","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000454\u0000401477378\u0000":{"address":{"type":"COMMENT","id":"401477378","parent":{"type":"PULL","number":"454","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/454#issuecomment-401477378","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the PR! I think \"themself\" actually makes sense in this context, though. The README is using the [singular they], and according to [this table on wikipedia] \"themself\" is the default reflexive form of the singular they (although \"themselves\" is also valid). \r\n\r\nI'm going to close this as I don't think it's a typo, but thanks for sending in the PR! Feel free to drop by [our discord] and say hi anytime. :slightly_smiling_face: \r\n\r\n[our discord]: https://discord.gg/tsBTgc9\r\n[singular they]: https://en.wikipedia.org/wiki/Singular_they\r\n[this table on wikipedia]: https://en.wikipedia.org/wiki/Singular_they#Inflected_forms_and_derivative_pronouns"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000466\u0000133436059\u0000199332064\u0000":{"address":{"type":"COMMENT","id":"199332064","parent":{"type":"REVIEW","id":"133436059","pull":{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/466#discussion_r199332064","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nooooo"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000468\u0000402269233\u0000":{"address":{"type":"COMMENT","id":"402269233","parent":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/468#issuecomment-402269233","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Close #269 "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000470\u0000133437541\u0000199333548\u0000":{"address":{"type":"COMMENT","id":"199333548","parent":{"type":"REVIEW","id":"133437541","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/470#discussion_r199333548","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This passes the literal string `undefined` to the child process."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000470\u0000133437597\u0000199333586\u0000":{"address":{"type":"COMMENT","id":"199333586","parent":{"type":"REVIEW","id":"133437597","pull":{"type":"PULL","number":"470","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/470#discussion_r199333586","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000473\u0000401571355\u0000":{"address":{"type":"COMMENT","id":"401571355","parent":{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/473#issuecomment-401571355","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":":boom:"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000477\u0000402222117\u0000":{"address":{"type":"COMMENT","id":"402222117","parent":{"type":"PULL","number":"477","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/477#issuecomment-402222117","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for catching this!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000482\u0000402845120\u0000":{"address":{"type":"COMMENT","id":"402845120","parent":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#issuecomment-402845120","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks @simscred for reviewing a draft of this PR"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134162878\u0000199944413\u0000":{"address":{"type":"COMMENT","id":"199944413","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199944413","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: The use of “pull” throughout is pretty hard for me to read. I’m\r\nokay with using `PULL` instead of `PULL_REQUEST` for concision in code,\r\nbut in human-readable text this makes the result harder to understand.\r\nWould you mind `s/pull(?! request)/pull request/g`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134162878\u0000199945153\u0000":{"address":{"type":"COMMENT","id":"199945153","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199945153","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is of course not true (it’s a transitive relation). It’d be more\r\nprecise to say something like,\r\n\r\n> A patron of a project is someone who has either contributed to a\r\n> project directly, or purchased grain from a patron of the project.\r\n\r\nI’m open to leaving the “white lie” in for ease of readability, but also\r\nI don’t think that the above is too bad. What do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134162878\u0000199945894\u0000":{"address":{"type":"COMMENT","id":"199945894","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199945894","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Suggest replacing `$REPO_OWNER` with `REPO_OWNER`, because:\r\n 1. it’s a standard form in documentation (e.g., `man cp`), and\r\n 2. in the event that someone blindly copies the literal text, the\r\n    placeholders won’t expand to the empty string and be omitted from\r\n    the command entirely.\r\n\r\n(edit: same for `REPO_NAME` and `GH_TOKEN`, of course.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134162878\u0000199947084\u0000":{"address":{"type":"COMMENT","id":"199947084","parent":{"type":"REVIEW","id":"134162878","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199947084","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Something about this paragraph rubs me the wrong way. I think that it’s\r\ncoming across as overly gamified and trivializing. What do you think of\r\nrephrasing it to something like,\r\n\r\n> Some contributions will be hard to spot on GitHub. For example,\r\n> someone might help organize a SourceCred meetup, or work on community\r\n> management. [To make sure those contributors get the cred they\r\n> deserve, people can recognize them with spotlights.] The _spotlight_\r\n> mechanism allows contributors to draw attention to contributions that\r\n> might otherwise be overlooked. Multiple people can endorse a\r\n> spotlight, increasing its value.\r\n\r\nwhere the bracketed sentence could be removed with no complaint from me?\r\n\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202514\u0000199978318\u0000":{"address":{"type":"COMMENT","id":"199978318","parent":{"type":"REVIEW","id":"134202514","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199978318","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202686\u0000199978466\u0000":{"address":{"type":"COMMENT","id":"199978466","parent":{"type":"REVIEW","id":"134202686","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199978466","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Good catch. I'd prefer to be precise, including sloppy white lies is a bad habit and will erode credibility in the eyes of people who are paying close attention."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202749\u0000199978518\u0000":{"address":{"type":"COMMENT","id":"199978518","parent":{"type":"REVIEW","id":"134202749","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199978518","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134202854\u0000199978625\u0000":{"address":{"type":"COMMENT","id":"199978625","parent":{"type":"REVIEW","id":"134202854","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199978625","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000482\u0000134204366\u0000199979882\u0000":{"address":{"type":"COMMENT","id":"199979882","parent":{"type":"REVIEW","id":"134204366","pull":{"type":"PULL","number":"482","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/482#discussion_r199979882","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Great. I agree, and think that this is the right call."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000486\u0000134484633\u0000200213799\u0000":{"address":{"type":"COMMENT","id":"200213799","parent":{"type":"REVIEW","id":"134484633","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/486#discussion_r200213799","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"byNodeType"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000486\u0000134486894\u0000200215535\u0000":{"address":{"type":"COMMENT","id":"200215535","parent":{"type":"REVIEW","id":"134486894","pull":{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/486#discussion_r200215535","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good call."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134484194\u0000200213427\u0000":{"address":{"type":"COMMENT","id":"200213427","parent":{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#discussion_r200213427","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"(no change requested) It might be cleaner to set a default edge evaluator from the default weights. so as to avoid some extra null handling."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134484194\u0000200213655\u0000":{"address":{"type":"COMMENT","id":"200213655","parent":{"type":"REVIEW","id":"134484194","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#discussion_r200213655","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"note: we'll want to refactor this when we want to experiment with [personalized pagerank via teleportation] because then we'll need to export node weights directly, not abstracted behind an edge evaluator. no change requested for now.\r\n\r\n[personalized pagerank via teleportation]: https://nlp.stanford.edu/projects/pagerank.shtml"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134487148\u0000200215754\u0000":{"address":{"type":"COMMENT","id":"200215754","parent":{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#discussion_r200215754","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Understood. Making no change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000487\u0000134487148\u0000200215765\u0000":{"address":{"type":"COMMENT","id":"200215765","parent":{"type":"REVIEW","id":"134487148","pull":{"type":"PULL","number":"487","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/487#discussion_r200215765","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Understood. Making no change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000489\u0000402839812\u0000":{"address":{"type":"COMMENT","id":"402839812","parent":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#issuecomment-402839812","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Paired with @wchargin\r\n\r\nFor reference, I only deserve about half of a paired-with edge;\r\n@decentralion wrote most of the code, and I helped test it. :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134803070\u0000200477307\u0000":{"address":{"type":"COMMENT","id":"200477307","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200477307","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’ll leave a TODO on my mental backlog to make this show two badges:\r\ne.g., “**REFERENCES** and **IS REFERENCED BY** something”.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134803070\u0000200479049\u0000":{"address":{"type":"COMMENT","id":"200479049","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200479049","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Remove padding?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134803070\u0000200481100\u0000":{"address":{"type":"COMMENT","id":"200481100","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200481100","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"There are a number of alternate factorizations that make sense here.\r\nFirst, this function could return `{forward: string, backward: string}`\r\ninstead of requiring two invocations (and two `try`-`catch`es, etc.).\r\nSecond, it would seem reasonable to me to move these onto an\r\n`edgeTypes()` method of the plugin adapter itself, for symmetry with the\r\nnode adapter. This seems like a low-difficulty refactor, so I’m okay\r\nwith merging the code as is.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134803070\u0000200482051\u0000":{"address":{"type":"COMMENT","id":"200482051","parent":{"type":"REVIEW","id":"134803070","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200482051","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Inlining this class would be fine with me. No strong preference."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134813923\u0000200486334\u0000":{"address":{"type":"COMMENT","id":"200486334","parent":{"type":"REVIEW","id":"134813923","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200486334","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we use `sortBy` here so that\r\n 1. it is simpler, and\r\n 2. we are deterministic in case of ties on weight? (i.e., fall back to name or something)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000489\u0000134815509\u0000200487655\u0000":{"address":{"type":"COMMENT","id":"200487655","parent":{"type":"REVIEW","id":"134815509","pull":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/489#discussion_r200487655","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000493\u0000403145427\u0000":{"address":{"type":"COMMENT","id":"403145427","parent":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#issuecomment-403145427","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Well, in this case I wrote this on the side while pairing with you on another (more important) pull. If I get paired with cred on that pull, it seems only fair that you get paired with on this one; we were pair programming when both these pulls were produced. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000493\u0000135140389\u0000200756701\u0000":{"address":{"type":"COMMENT","id":"200756701","parent":{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#discussion_r200756701","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unfortunate. I have filed a bug for this:\r\n<https://github.com/facebook/flow/issues/6569>\r\n\r\nI don’t have any good workarounds at this time.\r\n\r\nOnce these weights become non-hard-coded, I suspect that we will be able\r\nto properly type this map. The problem seems to only occur with literal\r\nkeys: if you have `o: {[T]: U}` then you can assign `o[t] = u`. For that\r\nreason, I’m okay with this temporary decrease in precision.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000493\u0000135140389\u0000200758436\u0000":{"address":{"type":"COMMENT","id":"200758436","parent":{"type":"REVIEW","id":"135140389","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#discussion_r200758436","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Objects have unchecked property access, so this can be elided to:\r\n\r\n```js\r\nconst value: number = e.target.valueAsNumber;\r\nconst edgeWeights = {\r\n  ...this.props.edgeWeights,\r\n  [key]: {...this.props.edgeWeights[key], logWeight: value},\r\n};\r\nthis.props.onChange(edgeWeights);\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000493\u0000135153703\u0000200767605\u0000":{"address":{"type":"COMMENT","id":"200767605","parent":{"type":"REVIEW","id":"135153703","pull":{"type":"PULL","number":"493","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/493#discussion_r200767605","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000494\u0000135184051\u0000200794013\u0000":{"address":{"type":"COMMENT","id":"200794013","parent":{"type":"REVIEW","id":"135184051","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/494#discussion_r200794013","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: downcase `directionality`, please."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000494\u0000135192414\u0000200801319\u0000":{"address":{"type":"COMMENT","id":"200801319","parent":{"type":"REVIEW","id":"135192414","pull":{"type":"PULL","number":"494","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/494#discussion_r200801319","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000495\u0000403171236\u0000":{"address":{"type":"COMMENT","id":"403171236","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#issuecomment-403171236","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. That’s fine with me. I’ll just note the following: the types are\r\nwritten to be maximally permissive while remaining sound. There are\r\nsimpler types that I could have written, but they would have forbidden\r\nlegitimate uses. It is not necessary to fully understand the types to\r\nuse them properly, just as invoking `Array.from` doesn’t require one to\r\nidentify [precisely which of the six complicated declarations of that\r\nfunction is being used][1]. In general, these functions should behave\r\njust “as one expects” from the names, and Flow will point out if a use\r\nis incorrect. But, all that said, I’m still happy to discuss and/or\r\ndocument the decisions.\r\n\r\n[1]: https://github.com/facebook/flow/blob/fc582b354645b4e6c447d02109583b5baa7fd716/lib/core.js#L279-L284\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000495\u0000403186685\u0000":{"address":{"type":"COMMENT","id":"403186685","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#issuecomment-403186685","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay—before this is merged, (a) do you want to chat in person, and\r\n(b) are there any changes that you want to see?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000495\u0000403186716\u0000":{"address":{"type":"COMMENT","id":"403186716","parent":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#issuecomment-403186716","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Nope, feel free to merge it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000495\u0000135180678\u0000200791023\u0000":{"address":{"type":"COMMENT","id":"200791023","parent":{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#discussion_r200791023","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I find the type signature to this function confusing. Could the docstring explain it, please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000495\u0000135180678\u0000200791073\u0000":{"address":{"type":"COMMENT","id":"200791073","parent":{"type":"REVIEW","id":"135180678","pull":{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/495#discussion_r200791073","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"As above, could the docstring explain the type signature?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000497\u0000403188492\u0000":{"address":{"type":"COMMENT","id":"403188492","parent":{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/497#issuecomment-403188492","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Will need rebase\r\n\r\nWhich is not a bad thing—instead of removing four `any`-casts, I get to\r\nremove five! :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000403171920\u0000":{"address":{"type":"COMMENT","id":"403171920","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/501#issuecomment-403171920","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"**EDIT:** Rebased; this comment is obsolete.\r\n\r\nDue to converging histories and the GitHub pull request workflow, this\r\npull request necessarily has irrelevant commits. Please review only the\r\nmost recent commit.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000403172215\u0000":{"address":{"type":"COMMENT","id":"403172215","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/501#issuecomment-403172215","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Relatedly: this pull request depends on #495."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000403190019\u0000":{"address":{"type":"COMMENT","id":"403190019","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/501#issuecomment-403190019","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Changed to `Designed with @decentralion` per request."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000506\u0000403627338\u0000":{"address":{"type":"COMMENT","id":"403627338","parent":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#issuecomment-403627338","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"By the way, `RelationalView` has a bunch of code like\r\n\r\n```js\r\n    return entry == null ? entry : new Review(this, entry);\r\n```\r\n\r\nbut I chose not to replace this with `NullUtil.orElse`, because it would\r\nhave requiring implementing `orElseGet: ?T => (() => T) => T` to defer\r\nthe work of creating the `new Review` in the common case where it\r\nalready exists.\r\n\r\nThoughts?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000506\u0000403627372\u0000":{"address":{"type":"COMMENT","id":"403627372","parent":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#issuecomment-403627372","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(It also would have been less concise and less efficient.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000506\u0000135601724\u0000201154778\u0000":{"address":{"type":"COMMENT","id":"201154778","parent":{"type":"REVIEW","id":"135601724","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#discussion_r201154778","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"In this case, I think it was actually cleaner before. I'm fine either way tho."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000506\u0000135641686\u0000201189448\u0000":{"address":{"type":"COMMENT","id":"201189448","parent":{"type":"REVIEW","id":"135641686","pull":{"type":"PULL","number":"506","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/506#discussion_r201189448","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"On second thought, I agree: the old version is clearer because it only\r\nperforms one test, and it’s staying in a statement context so we don’t\r\nbuy anything from using an expression form. I’ll revert this change.\r\nThanks!\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000508\u0000408281371\u0000":{"address":{"type":"COMMENT","id":"408281371","parent":{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/508#issuecomment-408281371","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Closing as this code is going stale, and I think we're likely to go in a different direction, e.g. \"WeightRank\"."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000510\u0000407183262\u0000":{"address":{"type":"COMMENT","id":"407183262","parent":{"type":"PULL","number":"510","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/510#issuecomment-407183262","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Plan to merge with rebase."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000511\u0000139651513\u0000204551711\u0000":{"address":{"type":"COMMENT","id":"204551711","parent":{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/511#discussion_r204551711","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: prefer `Hide weight configuration`, please?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000511\u0000139651513\u0000204551824\u0000":{"address":{"type":"COMMENT","id":"204551824","parent":{"type":"REVIEW","id":"139651513","pull":{"type":"PULL","number":"511","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/511#discussion_r204551824","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"No preference from me, but you can (I believe) collapse these three lines if you like."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000513\u0000139678853\u0000204574199\u0000":{"address":{"type":"COMMENT","id":"204574199","parent":{"type":"REVIEW","id":"139678853","pull":{"type":"PULL","number":"513","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/513#discussion_r204574199","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"A client who has specifically a Git plugin static adapter and calls\r\n`load` might hope to receive (a promise for) specifically a Git plugin\r\ndynamic adapter, perhaps to call extra methods on it, like, “who\r\nauthored this commit?”. With the current typing, the promise resolves\r\nonly to an unspecified plugin dynamic adapter. No change requested; we\r\ncan refine this if necessary/useful.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000516\u0000140042088\u0000204880897\u0000":{"address":{"type":"COMMENT","id":"204880897","parent":{"type":"REVIEW","id":"140042088","pull":{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/516#discussion_r204880897","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This will need to be used somewhere else, right? Where should it be\r\ndeclared?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000518\u0000140051030\u0000204888159\u0000":{"address":{"type":"COMMENT","id":"204888159","parent":{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/518#discussion_r204888159","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"s/We can work with you to troubleshoot/We can guide you through the architecture/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000518\u0000140051030\u0000204888302\u0000":{"address":{"type":"COMMENT","id":"204888302","parent":{"type":"REVIEW","id":"140051030","pull":{"type":"PULL","number":"518","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/518#discussion_r204888302","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"```\r\n`yarn prettify`, which runs [prettier] to format your code\r\n\r\n[prettier]: https://github.com/prettier/prettier\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000519\u0000140100904\u0000204929225\u0000":{"address":{"type":"COMMENT","id":"204929225","parent":{"type":"REVIEW","id":"140100904","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/519#discussion_r204929225","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Oh, I can make this `const`, I think."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000519\u0000140099222\u0000204927770\u0000":{"address":{"type":"COMMENT","id":"204927770","parent":{"type":"REVIEW","id":"140099222","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/519#discussion_r204927770","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"\"I should just remove that type annotation.\" -@wchargin"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000520\u0000140101798\u0000204930043\u0000":{"address":{"type":"COMMENT","id":"204930043","parent":{"type":"REVIEW","id":"140101798","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/520#discussion_r204930043","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"a little more readable: `[pi, scratch] = [scratch, pi]`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000520\u0000140129306\u0000204953914\u0000":{"address":{"type":"COMMENT","id":"204953914","parent":{"type":"REVIEW","id":"140129306","pull":{"type":"PULL","number":"520","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/520#discussion_r204953914","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Good call!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000521\u0000407603194\u0000":{"address":{"type":"COMMENT","id":"407603194","parent":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/521#issuecomment-407603194","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Type safety improved per your suggestion. Will merge when ready.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000521\u0000140131662\u0000204956059\u0000":{"address":{"type":"COMMENT","id":"204956059","parent":{"type":"REVIEW","id":"140131662","pull":{"type":"PULL","number":"521","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/521#discussion_r204956059","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Parameterize over T? doesn't need to be in this commit."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000526\u0000407607974\u0000":{"address":{"type":"COMMENT","id":"407607974","parent":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/526#issuecomment-407607974","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> TestLocalStore = Checked Memory Local Store\r\n\r\nDone in #527."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000527\u0000408283268\u0000":{"address":{"type":"COMMENT","id":"408283268","parent":{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/527#issuecomment-408283268","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Whoops, I am very dumb. Will fix."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140957827\u0000205644016\u0000":{"address":{"type":"COMMENT","id":"205644016","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205644016","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"$Exact/$ReadOnly?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140957827\u0000205644793\u0000":{"address":{"type":"COMMENT","id":"205644793","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205644793","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I believe that you can replace this with\r\n\r\n```js\r\n  const localStoreRepo = localStore.get(REPO_KEY, null);\r\n  return NullUtil.orElse(\r\n    availableRepos.find((x) => deepEqual(x, localStoreRepo)),\r\n    availableRepos[0]\r\n  );\r\n```\r\n\r\nat which point you can probably collapse the IIFE."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140957827\u0000205644957\u0000":{"address":{"type":"COMMENT","id":"205644957","parent":{"type":"REVIEW","id":"140957827","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205644957","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Mind removing the `!response` guard, if superfluous?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205646095\u0000":{"address":{"type":"COMMENT","id":"205646095","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205646095","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Feel free to rebase on #530."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205646682\u0000":{"address":{"type":"COMMENT","id":"205646682","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205646682","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"misleading test name?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205647328\u0000":{"address":{"type":"COMMENT","id":"205647328","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205647328","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"When we have a nice UI toolkit’s dropdown, we can render the dropdown\r\nwith placeholder text “loading” or something, so that it’s never the\r\ncase that the user is instructed to select an option from a dropdown\r\nthat does not exist.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205647632\u0000":{"address":{"type":"COMMENT","id":"205647632","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205647632","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"We could just set `const onChange = jest.fn()`, and then assert that the\r\nfunction was called once and with the right argument.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205648219\u0000":{"address":{"type":"COMMENT","id":"205648219","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205648219","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should this go in `setupJest`?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205649660\u0000":{"address":{"type":"COMMENT","id":"205649660","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205649660","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let's keep in mind that we might want to pull this out."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966399\u0000205651469\u0000":{"address":{"type":"COMMENT","id":"205651469","parent":{"type":"REVIEW","id":"140966399","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651469","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966409\u0000205651475\u0000":{"address":{"type":"COMMENT","id":"205651475","parent":{"type":"REVIEW","id":"140966409","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651475","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966415\u0000205651481\u0000":{"address":{"type":"COMMENT","id":"205651481","parent":{"type":"REVIEW","id":"140966415","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651481","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966440\u0000205651500\u0000":{"address":{"type":"COMMENT","id":"205651500","parent":{"type":"REVIEW","id":"140966440","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651500","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966466\u0000205651522\u0000":{"address":{"type":"COMMENT","id":"205651522","parent":{"type":"REVIEW","id":"140966466","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651522","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966475\u0000205651532\u0000":{"address":{"type":"COMMENT","id":"205651532","parent":{"type":"REVIEW","id":"140966475","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651532","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966521\u0000205651560\u0000":{"address":{"type":"COMMENT","id":"205651560","parent":{"type":"REVIEW","id":"140966521","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651560","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Ack"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140966680\u0000205651710\u0000":{"address":{"type":"COMMENT","id":"205651710","parent":{"type":"REVIEW","id":"140966680","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/529#discussion_r205651710","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I followed the pattern suggested by the library docs."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000530\u0000408283912\u0000":{"address":{"type":"COMMENT","id":"408283912","parent":{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/530#issuecomment-408283912","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Thanks!"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000531\u0000408311565\u0000":{"address":{"type":"COMMENT","id":"408311565","parent":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#issuecomment-408311565","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for the feedback. I've refactored the code per your suggestion; it's cleaner and better tested (we now test the logic that adds new entries to the repository registry)."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000140980003\u0000205663576\u0000":{"address":{"type":"COMMENT","id":"205663576","parent":{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205663576","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Two problems with this:\r\n 1. By requiring clients to call `fromCompat` themselves, but only\r\n    providing the most recent compat information, we prevent clients\r\n    from using the backward compatibility feature of `compat.js`.\r\n 2. With the current typings, a client can overwrite the attributes of\r\n    this object, polluting other clients.\r\n\r\nWhy not treat this module as a provider of an actual data type? You can\r\n`export type RepoRegistry`, and provide `toCompat` and `fromCompat`. You\r\ncould additionally export `emptyRegistry: RepoRegistry`, if you want.\r\nThen, the `REPO_REGISTRY_COMPAT` is an implementation detail.\r\n\r\nThe two `_FILE` and `_API` strings can continue to exist.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000140980003\u0000205663646\u0000":{"address":{"type":"COMMENT","id":"205663646","parent":{"type":"REVIEW","id":"140980003","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205663646","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Dupe?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141172798\u0000205822107\u0000":{"address":{"type":"COMMENT","id":"205822107","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205822107","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Slightly better to `import type {Repo} from \"./repoRegistry\"`, which\r\nwill have no runtime effect.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141172798\u0000205822469\u0000":{"address":{"type":"COMMENT","id":"205822469","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205822469","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"(Here is another place where it’s nice that we wrote `fromJSON`/`toJSON`\r\ninstead of forcing clients to work with strings.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141172798\u0000205824113\u0000":{"address":{"type":"COMMENT","id":"205824113","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205824113","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Should this be a `$ReadOnlyArray`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141172798\u0000205824426\u0000":{"address":{"type":"COMMENT","id":"205824426","parent":{"type":"REVIEW","id":"141172798","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205824426","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"The value of this const isn’t really clear to me. Really, it seems like\r\n`REPO_REGISTRY_API` should be `sourcecredDataUrl(REPO_REGISTRY_FILE)`,\r\nwhere ``sourcecredDataUrl = (x) => `/api/v1/data/${x}` `` is used more\r\ngenerally throughout the application, perhaps as part of some router.\r\n\r\nI’m not totally sure what the right way to factor this is right now. The\r\ncurrent code seems okay; it would also be fine with me to delete this\r\nexport. What do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141195970\u0000205840830\u0000":{"address":{"type":"COMMENT","id":"205840830","parent":{"type":"REVIEW","id":"141195970","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205840830","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141196060\u0000205840911\u0000":{"address":{"type":"COMMENT","id":"205840911","parent":{"type":"REVIEW","id":"141196060","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205840911","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000531\u0000141196333\u0000205841129\u0000":{"address":{"type":"COMMENT","id":"205841129","parent":{"type":"REVIEW","id":"141196333","pull":{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/531#discussion_r205841129","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I agree that in the future we should have a `sourcecredDataUrl` method or similar and use the factorization you suggest. In the absence of that API, keeping the API const next to the FILE const is slightly nice, in that if you change the FILE const it's easy to find the corresponding API const that needs to change."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000532\u0000408304630\u0000":{"address":{"type":"COMMENT","id":"408304630","parent":{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/532#issuecomment-408304630","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could you please add to the commit message:\r\n\r\n```\r\nWe’re moving this script into the main SourceCred repository so that it\r\ncan be versioned in the same tree as everything else, and in particular\r\nso that the hash-of-built-commit depends on the build script itself.\r\n```"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000533\u0000140980599\u0000205664083\u0000":{"address":{"type":"COMMENT","id":"205664083","parent":{"type":"REVIEW","id":"140980599","pull":{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/533#discussion_r205664083","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Okay. This may flake occasionally for now, but fine with me."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000536\u0000408512022\u0000":{"address":{"type":"COMMENT","id":"408512022","parent":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#issuecomment-408512022","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> we now properly recognize `x.data == null` as an error case.\r\n\r\nI feel compelled to grumble that _our_ code was perfectly correct. [The\r\nGraphQL spec clearly states][spec] that a GraphQL response must contain\r\na key `errors` if there were any errors, and also clearly states that\r\nthe top level response must not contain any entries other than those\r\nwith keys `data`, `errors`, and `extensions`. It is GitHub whose code is\r\n“improper”, not us. `</grumble>`\r\n\r\n[spec]: https://facebook.github.io/graphql/October2016/#sec-Response-Format\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000536\u0000141234490\u0000205872047\u0000":{"address":{"type":"COMMENT","id":"205872047","parent":{"type":"REVIEW","id":"141234490","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#discussion_r205872047","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Could we check `x.data === undefined` or `!(\"data\" in x)` instead? It is\r\ngenerally possible for the result of a valid query to be exactly `null`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000536\u0000141243296\u0000205878894\u0000":{"address":{"type":"COMMENT","id":"205878894","parent":{"type":"REVIEW","id":"141243296","pull":{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/536#discussion_r205878894","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000546\u0000408556702\u0000":{"address":{"type":"COMMENT","id":"408556702","parent":{"type":"PULL","number":"546","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/546#issuecomment-408556702","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Relevant Flow bugs:\r\n  - https://github.com/facebook/flow/issues/6648\r\n  - https://github.com/facebook/flow/issues/6649\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000549\u0000408568450\u0000":{"address":{"type":"COMMENT","id":"408568450","parent":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/549#issuecomment-408568450","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks for restyling the UI!!!\r\n\r\nTo summarize some offline discussion: Could you please split this up into smaller PRs? I think each of the following could be a good PR:\r\n- Update the nav bar with new styling and links to our GitHub, Twitter, etc.\r\n- Replace RepositorySelector with Semantic UI\r\n- Replace Load + PageRank buttons with the \"Explore\" button\r\n- Reorganize weight configuration into a drawer\r\n- (other changes?)\r\n\r\nIt might be easiest if you send in the semantic UI update as its own mini PR, since (all?) of the other PRs will depend on it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000549\u0000141303620\u0000205929170\u0000":{"address":{"type":"COMMENT","id":"205929170","parent":{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/549#discussion_r205929170","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This color `#3ebec7` against white has a contrast ratio of 2.24, but at\r\nthe size at which it appears the minimum contrast ratio is 4.5. Could\r\nyou please increase the contrast to meet the accessibility guidelines?\r\n(tota11y suggests using `#00848b`.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000549\u0000141303620\u0000205956056\u0000":{"address":{"type":"COMMENT","id":"205956056","parent":{"type":"REVIEW","id":"141303620","pull":{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/549#discussion_r205956056","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Hmm—this test seems like it’s relying on the internal implementation of\r\nSemantic UI. Instead, we could shallow-render the component, find the\r\n`Dropdown` that it renders, and invoke its `onChange` handler to\r\nsimulate the appropriate event. What do you think?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408571321\u0000":{"address":{"type":"COMMENT","id":"408571321","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408571321","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Some requests based on how we do things 'round here:\r\n- We always have pull descriptions that give context on this change. Since it's a UI change, adding before/after screenshots would be nice.\r\n- We always have test plans for our pulls. Since it's a UI change, \"Load the app and observe that the nav bar is pretty, and the links work\" is a perfectly valid test plan.\r\n- To fix the travis failure, add `// @flow` to the top of `src/app/style/styles.js`"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408571805\u0000":{"address":{"type":"COMMENT","id":"408571805","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408571805","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"On hover, the navbar links get a darker font color, and an underline.\r\nWhen I click the link, the style stays (even after I move the mouse away), only reverting once I've clicked somewhere else on the page.\r\n\r\nThis feels like a small bug to me (it feels like the hover is lagging or something). Can we fix that? (Repros in both Chrome and FF)\r\n\r\nEdit: I'm basically asking for the :focus on the navlinks to be removed. But it might be nice to have the nav entry corresponding to the currently selected page be rendered bold (which would also make the link feel reactive to being clicked on)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408575356\u0000":{"address":{"type":"COMMENT","id":"408575356","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408575356","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This renders differently for me [in prod] vs. [in dev]. In prod,\r\nheadings are rendered in Lato and body is rendered in Roboto. In dev,\r\neverything is rendered in my default sans-serif. Do you know why this\r\nis? Do you have the same issue?\r\n\r\nBy “in prod” I mean `node bin/sourcecred.js start` after `yarn build`.\r\nBy “in dev” I mean `yarn start`.\r\n\r\n[in prod]: https://user-images.githubusercontent.com/4317806/43351927-e616ca98-91ce-11e8-9d5f-40aac738586c.png\r\n[in dev]: https://user-images.githubusercontent.com/4317806/43351928-e87a4d28-91ce-11e8-906b-3094800c9a63.png\r\n\r\n(*edited* to fix Markdown link syntax)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408575540\u0000":{"address":{"type":"COMMENT","id":"408575540","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408575540","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Regarding @decentralion’s review:\r\n\r\n> I'm basically asking for the :focus on the navlinks to be removed.\r\n\r\nThis would be fine with me. We have the default outline style (which is\r\ngood!), so the links are still keyboard-accessible even without the\r\nadded underline. (I think—correct me if I’m wrong.)\r\n\r\n> But it might be nice to have the nav entry corresponding to the\r\n> currently selected page be rendered bold (which would also make the\r\n> link feel reactive to being clicked on)\r\n\r\n:+1:\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408638061\u0000":{"address":{"type":"COMMENT","id":"408638061","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-408638061","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let me take a step back to pose a high-level question.\r\n\r\nI agree that standardizing on a UI toolkit is a good idea and something\r\nthat we should do. We don’t want to roll our own custom UI widgets,\r\nbecause then we have to make sure that they’re accessible,\r\nhigh-performance, consistently designed, and so on.\r\n\r\nWhichever toolkit we select will quickly permeate our frontend, and the\r\ndecision may be hard to change later. Thus, we should choose carefully.\r\n\r\nI’m concerned by the bundle size and build time penalties incurred by\r\nSemantic UI:\r\n\r\n| build ref        | `main.js` size |    build time |\r\n|:-----------------|---------------:|--------------:|\r\n| origin/master    |      439 646 B |      19.112 s |\r\n| origin/ui-update |    1 408 500 B |      39.077 s |\r\n\r\nSemantic UI is adding 968.8 KB to the build, and more than doubling the\r\nbuild time. For comparison, [all of Material-UI is 95.4 KB][mui] (and\r\nMaterial-UI supports directly importing individual components), and\r\n[React itself (16.2.0 + DOM) is 97.5 KB][react].\r\n\r\n(I built against origin/ui-update, not origin/update-navbar, because\r\nthis branch doesn’t actually use `semantic-ui-react`.)\r\n\r\n[mui]: https://github.com/mui-org/material-ui/blob/0efc81dad607437fa448d6b19a2c985266790848/.size-limit.js#L27-L30\r\n[react]: https://gist.github.com/Restuta/cda69e50a853aa64912d\r\n\r\nSo, I’d like to consider other options. Material-UI seems well supported\r\nand maintained. React-Bootstrap is fine (I’ve used it in the past), if a\r\nBootstrap-like look is what you’re going for, and Elemental UI looks\r\npretty similar. What else should we be considering?\r\n\r\nI also want to explicitly mention that I value the time and effort that\r\nyou’ve put into this set of changes. In the long run, though, I think\r\nthat it would be a mistake to base an architectural decision like this\r\none around the fact that we already have a bit of code written. Plus,\r\neven if we end up scratching the technical implementation of this\r\nchangeset entirely, your work won’t have been wasted—in addition to the\r\nactual code, you’ve spent time exploring different designs, and become\r\nacquainted with the codebase, tools, and environment. All of that will\r\ncarry over.\r\n\r\n@decentralion: anything I forgot to mention?\r\n\r\n---\r\n\r\nAnother option that I want to float (though I suspect that it may be an\r\nunpopular suggestion) is to use the unique UI toolkit that adds zero\r\nbuild time and zero bundle size. You can go a long way by just styling\r\nthe standard DOM elements. I’ve used that approach in the past for [this\r\napplication][vt], which doesn’t look half bad, if you ask me. Choosing\r\nto use the standard library is different from rolling your own\r\ncomponents: you get accessibility, performance, etc. for free.\r\n\r\nI’m not saying that we should _definitely_ do this, but I do think that\r\nwe should consider alternatives in terms of their marginal benefits over\r\nusing the standard library.\r\n\r\n[vt]: https://wchargin.github.io/varese/#/tree\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000409703144\u0000":{"address":{"type":"COMMENT","id":"409703144","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#issuecomment-409703144","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"This looks good to me! \r\nI'm going to let @wchargin give the official approval as I think he's a better reviewer for this code"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205927783\u0000":{"address":{"type":"COMMENT","id":"205927783","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205927783","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Styles like `nav` don’t need to be used by any other modules—and indeed\r\nshould not be. Could you define them locally instead of in a public\r\nmodule? You can just inline them into the `StyleSheet.create` call.\r\n\r\nIf you have styles that you expect to be used by other modules, then I’m\r\ntentatively okay with those being exposed publicly, but I think that it\r\nmight be better practice to just have a dedicated component. For\r\ninstance, the `header` style is arguably reusable, but it might be\r\nbetter to just create a `<Header />` component that encapsulates the\r\nappropriate styles.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205927790\u0000":{"address":{"type":"COMMENT","id":"205927790","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205927790","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: I believe that this is equivalent to\r\n\r\n```js\r\ncss(style.navItem, style.navItemLeft)\r\n```\r\n\r\n(i.e., without the array). If they’re equivalent, I have a weak\r\npreference toward removing the array, because it makes the single-style\r\ncase more consistent with the multi-style case, which in turn minimizes\r\nchurn.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205927825\u0000":{"address":{"type":"COMMENT","id":"205927825","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205927825","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Storing the SVG data inline in this module is fine with me. However,\r\ncould you extract React components `GithubLogo` and `TwitterLogo`, so\r\nthat the main body of the code can just read\r\n\r\n```js\r\n              <li className={css([style.navItem, style.navItemRight])}>\r\n                <a\r\n                  className={css([style.navLink, style.navLinkHover])}\r\n                  href=\"https://github.com/sourcecred/sourcecred\"\r\n                >\r\n                  <GithubLogo />\r\n                </a>\r\n              </li>\r\n              <li className={css([style.navItem, style.navItemRight])}>\r\n                <a\r\n                  className={css([style.navLink, style.navLinkHover])}\r\n                  href=\"https://twitter.com/sourcecred\"\r\n                >\r\n                  <TwitterLogo />\r\n                </a>\r\n              </li>\r\n```\r\n\r\nI suspect that this will make the code much easier to read, in the same\r\nway that extracting styles to an Aphrodite sheet does.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205927967\u0000":{"address":{"type":"COMMENT","id":"205927967","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205927967","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This module exports a piece of global mutable state, which is something\r\nthat we try hard to avoid. If you decide to keep this module, could you\r\nconsider instead exporting a function to create this sheet definition?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205928015\u0000":{"address":{"type":"COMMENT","id":"205928015","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205928015","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Do you want this to fall back to `sans-serif`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205928073\u0000":{"address":{"type":"COMMENT","id":"205928073","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205928073","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You can use numeric literals instead of string literals in a bunch of\r\nplaces: `{flex: 3}`, `{height: 60}`, `{paddingLeft: 0}`, etc. My\r\nunderstanding is that this is the preferred style.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205928363\u0000":{"address":{"type":"COMMENT","id":"205928363","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205928363","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It appears that `semantic-ui-react` requires Babel at runtime (!!!). I’m\r\nstill trying to dig into exactly how they use it, but this is deeply\r\ndisturbing. Depending on what they’re doing, it could cripple the\r\nperformance of our application. I’ll get back to you on this.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205928379\u0000":{"address":{"type":"COMMENT","id":"205928379","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205928379","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m also concerned by the dependency on jQuery. My understanding was\r\nthat the Semantic UI React family didn’t use jQuery at all. Do you know\r\nwhat’s going on here?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205929337\u0000":{"address":{"type":"COMMENT","id":"205929337","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205929337","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"These links are missing `alt`-text.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205929342\u0000":{"address":{"type":"COMMENT","id":"205929342","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205929342","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This color `#3ebec7` against white has a contrast ratio of 2.24, but at\r\nthe size at which it appears the minimum contrast ratio is 4.5. Could\r\nyou please increase the contrast to meet the accessibility guidelines?\r\n(tota11y suggests using `#00848b`.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205929371\u0000":{"address":{"type":"COMMENT","id":"205929371","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205929371","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This has the side effect of including 624KB\\* of styles before the\r\ncontent of the page. This means that no content can be rendered until\r\nwe’ve successfully downloaded, parsed, and interpreted the CSS necessary\r\nto set up the sprite sheets for the flag of Christmas Island. This will\r\nincur significant latency on lower-end connections and hardware, so it’s\r\ndefinitely something that we want to avoid.\r\n\r\nThe long-term solution is to simply include the stylesheet by URL\r\ninstead of inlining it. (Inlining our previous version of `index.css`\r\nwas okay because that stylesheet was tiny by design, and was not\r\nintended to grow.) I’m tentatively okay with merging this as is if you\r\ncan add a TODO and make an issue for it. What do you think?\r\n\r\n\\* measured with:\r\n\r\n```\r\ncurl --silent http://localhost:4000/ | sed '0,/<style>/d; /^<body /q' | wc -c\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141302243\u0000205929501\u0000":{"address":{"type":"COMMENT","id":"205929501","parent":{"type":"REVIEW","id":"141302243","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205929501","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Interesting change!\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141304270\u0000205929662\u0000":{"address":{"type":"COMMENT","id":"205929662","parent":{"type":"REVIEW","id":"141304270","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205929662","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Sad, I liked that teal."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000141328212\u0000205954531\u0000":{"address":{"type":"COMMENT","id":"205954531","parent":{"type":"REVIEW","id":"141328212","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r205954531","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Upon further investigation, it looks like this is okay. It appears that\r\nwhat they’re doing is more analogous to dynamically linking against a\r\nrelatively small standard library of Babel helper functions instead of\r\nstatically inlining them. That has advantages and disadvantages, but\r\nit’s a valid design choice.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206732264\u0000":{"address":{"type":"COMMENT","id":"206732264","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206732264","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please make this exact and read-only:\r\n\r\n```js\r\ntype Props = {|\r\n  +className: string,\r\n  +altText: string,\r\n|};\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206732502\u0000":{"address":{"type":"COMMENT","id":"206732502","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206732502","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Moving the index styles from `index.css` into `style/index.css` is fine\r\nwith me, but please make that change in a separate commit prior to this\r\none.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206732690\u0000":{"address":{"type":"COMMENT","id":"206732690","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206732690","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This is on me, but: this file `app/public/index.html` _should_ now be\r\ncompletely unused. I’ll remove it entirely. (Everything now goes through\r\n`server.js`, which you’ve updated correctly.)\r\n\r\nNo action required. If you rebase and see that this file has been\r\ndeleted, don’t worry about it.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206733018\u0000":{"address":{"type":"COMMENT","id":"206733018","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206733018","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"s/SourCred/SourceCred/"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206734848\u0000":{"address":{"type":"COMMENT","id":"206734848","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206734848","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Question from an SVG-noob: is it possible/okay to instead write\r\n\r\n```jsx\r\n<svg aria-label={props.altText} …>\r\n  <title>{props.altText}</title>\r\n  {/* … */}\r\n</svg>\r\n```\r\n\r\n? I’m generally quite reluctant to use `id`s unless absolutely\r\nnecessary, because `id`s create global state on the page and thus break\r\nencapsulation.\r\n\r\nFor instance, as the component is currently written, I can render\r\n\r\n```jsx\r\n<div>\r\n  <GithubLogo className=\"\" altText=\"Title the first\" />\r\n  <GithubLogo className=\"\" altText=\"Title the second\" />\r\n</div>\r\n```\r\n\r\nand each SVG will have the correct _hover_ text, but both SVGs appear as\r\n“Title the first” to screenreaders (according to tota11y, at least).\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206735030\u0000":{"address":{"type":"COMMENT","id":"206735030","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206735030","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Ah, interesting. Exporting these as separate files is totally fine with\r\nme: they seem nice and self-contained. If you prefer to include them in\r\nthe `Page` module only, that’s also perfectly fine. (As you may have\r\nnoticed, we don’t maintain any “one component per file” rule.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142202313\u0000206735236\u0000":{"address":{"type":"COMMENT","id":"206735236","parent":{"type":"REVIEW","id":"142202313","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206735236","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Is there a reason that we would want to style a link with `navLink` but\r\nnot `navLinkHover`? If not, you can include the hover state as part of\r\nthe main link style:\r\n\r\n```js\r\n  navLink: {\r\n    color: \"#00848B\",\r\n    fontFamily: \"Roboto Condensed\",\r\n    fontSize: 18,\r\n    textDecoration: \"none\",\r\n    \":hover\": {\r\n      color: \"#08A27F\",\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n```\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222254\u0000206750273\u0000":{"address":{"type":"COMMENT","id":"206750273","parent":{"type":"REVIEW","id":"142222254","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206750273","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"I was basing it off of this guide: https://css-tricks.com/accessible-svgs/\r\nBut after further research, looks like `aria-label` should be fine. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222406\u0000206750380\u0000":{"address":{"type":"COMMENT","id":"206750380","parent":{"type":"REVIEW","id":"142222406","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206750380","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"I generally tend towards one-component-per-file, because I like being able to scan files for exactly what I'm looking for :) "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142222809\u0000206750772\u0000":{"address":{"type":"COMMENT","id":"206750772","parent":{"type":"REVIEW","id":"142222809","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206750772","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"👍 "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142479763\u0000206963837\u0000":{"address":{"type":"COMMENT","id":"206963837","parent":{"type":"REVIEW","id":"142479763","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r206963837","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"👍 makes sense to me"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142895639\u0000207308685\u0000":{"address":{"type":"COMMENT","id":"207308685","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207308685","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"This `navLinkHover` now evaluates to `undefined` and can be removed.\r\nSame below.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142895639\u0000207311960\u0000":{"address":{"type":"COMMENT","id":"207311960","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207311960","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"fyi: This color `#08a27f` against white has a contrast ratio of just\r\n3.24, which is technically too low for the font size at which it’s\r\nrendered (minimum is 4.5). However, I’m okay with it given that it\r\nappears only as a hover style, and that the main link style does have\r\nsufficient contrast. Up to you whether to take any action.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142895639\u0000207314461\u0000":{"address":{"type":"COMMENT","id":"207314461","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207314461","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Please consider omitting these color declarations and instead\r\nconstructing your SVGs with `<path fill=\"currentColor\" d={…} />`. One\r\nadvantage of this is that you only specify the colors in one location.\r\nMore importantly, this change would fix a bug in the current\r\nimplementation, wherein the `a` can be hovered even if the `svg` is not\r\n(the `a` descends 4px below the baseline due to line-height), which\r\nresults in inconsistent styling: the cursor is `pointer` but the logo\r\ndoes not appear hovered.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142895639\u0000207314844\u0000":{"address":{"type":"COMMENT","id":"207314844","parent":{"type":"REVIEW","id":"142895639","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207314844","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Unused styles: `header`, `body`, `logoImg`. Can remove.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935489\u0000207341025\u0000":{"address":{"type":"COMMENT","id":"207341025","parent":{"type":"REVIEW","id":"142935489","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207341025","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"I've changed where the fill is getting applied from to fix this- I wanted to keep fill out of the component itself to enable the hover color change. "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935607\u0000207341116\u0000":{"address":{"type":"COMMENT","id":"207341116","parent":{"type":"REVIEW","id":"142935607","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207341116","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"👍 I've swapped the colors again to ones with better contrast"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000552\u0000142935644\u0000207341147\u0000":{"address":{"type":"COMMENT","id":"207341147","parent":{"type":"REVIEW","id":"142935644","pull":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/552#discussion_r207341147","authors":[{"type":"USERLIKE","login":"claireandcode"}],"body":"👍 "},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000205931368\u0000":{"address":{"type":"COMMENT","id":"205931368","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205931368","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Even if the repo name weren’t validated, wouldn’t this fail because the\r\nowner is empty?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000205931379\u0000":{"address":{"type":"COMMENT","id":"205931379","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205931379","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Even if the underscore case weren’t validated, wouldn’t this fail\r\nbecause the owner is empty?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000205931382\u0000":{"address":{"type":"COMMENT","id":"205931382","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205931382","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"hyphens"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000205931430\u0000":{"address":{"type":"COMMENT","id":"205931430","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205931430","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"nit: you’re testing that the functions are inverses, not that they\r\ncommute (which doesn’t make sense in this case)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306095\u0000205931710\u0000":{"address":{"type":"COMMENT","id":"205931710","parent":{"type":"REVIEW","id":"141306095","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205931710","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I think that the type that you want here is actually `{+[string]: any}`\r\nor something like that. The fact that the variables are exactly equal to\r\nthe fields of `Repo` is a coincidence/implementation detail that may\r\nchange over time.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306958\u0000205932393\u0000":{"address":{"type":"COMMENT","id":"205932393","parent":{"type":"REVIEW","id":"141306958","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205932393","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306960\u0000205932394\u0000":{"address":{"type":"COMMENT","id":"205932394","parent":{"type":"REVIEW","id":"141306960","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205932394","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306967\u0000205932398\u0000":{"address":{"type":"COMMENT","id":"205932398","parent":{"type":"REVIEW","id":"141306967","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205932398","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306973\u0000205932407\u0000":{"address":{"type":"COMMENT","id":"205932407","parent":{"type":"REVIEW","id":"141306973","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205932407","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000555\u0000141306992\u0000205932428\u0000":{"address":{"type":"COMMENT","id":"205932428","parent":{"type":"REVIEW","id":"141306992","pull":{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/555#discussion_r205932428","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000557\u0000141306711\u0000205932030\u0000":{"address":{"type":"COMMENT","id":"205932030","parent":{"type":"REVIEW","id":"141306711","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/557#discussion_r205932030","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"**EDIT:** This code is wrong; it needs either a De Morgan or a subshell.\r\nRookie mistake…\r\n\r\nAlternately,\r\n\r\n```shell\r\n    line=\r\n    while ! [ \"${line}\" = yes ] || [ \"${line}\" = no ]; do\r\n        printf 'Do you want to deploy? yes/no> '\r\n        read -r line\r\n    done\r\n```\r\n\r\nwhich is more readable IMO.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000557\u0000141306929\u0000205932367\u0000":{"address":{"type":"COMMENT","id":"205932367","parent":{"type":"REVIEW","id":"141306929","pull":{"type":"PULL","number":"557","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/557#discussion_r205932367","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done (in modified form), PTAL"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000558\u0000408581531\u0000":{"address":{"type":"COMMENT","id":"408581531","parent":{"type":"PULL","number":"558","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/558#issuecomment-408581531","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"For context: it turns out that while GitHub pages has a “settings” page\r\nthat lets you set a custom domain for your site, clicking the “Save”\r\nbutton actually adds a commit in your name to the `master` branch of the\r\nrelevant repository (!!!). Subsequent deploys would correctly remove\r\nthis file, thereby breaking the custom domain setup.\r\n\r\nThe GitHub UI is deceptive in this regard. I’m sure that we’re not the\r\nfirst people to hit this problem.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000559\u0000141307173\u0000205932601\u0000":{"address":{"type":"COMMENT","id":"205932601","parent":{"type":"REVIEW","id":"141307173","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/559#discussion_r205932601","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Let’s write `OWNER/NAME` instead of `$OWNER/$NAME`; the former is\r\nstandard man-page syntax.\r\n\r\nLet’s also remove the trailing `\". \"` from this string, for consistency.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000559\u0000141307194\u0000205932623\u0000":{"address":{"type":"COMMENT","id":"205932623","parent":{"type":"REVIEW","id":"141307194","pull":{"type":"PULL","number":"559","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/559#discussion_r205932623","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000572\u0000409314209\u0000":{"address":{"type":"COMMENT","id":"409314209","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/572#issuecomment-409314209","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It appears that the actual behavior is to _append_ the template to the\r\nbody of the unique commit, be that body empty or nonempty.\r\n\r\nThat’s… kind of annoying? but probably still worth having this template.\r\nThoughts @decentralion?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000572\u0000409349314\u0000":{"address":{"type":"COMMENT","id":"409349314","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/572#issuecomment-409349314","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Well, that's kind of annoying... but not really a dealbreaker. If we're gonna be deleting something anyway, we should include a link to the document you add in https://github.com/sourcecred/sourcecred/pull/574 to make it more discoverable.\r\n\r\nI say let's keep the template in for now, and check back in a week and see how annoying we find it."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000574\u0000409099930\u0000":{"address":{"type":"COMMENT","id":"409099930","parent":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#issuecomment-409099930","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I considered adding a section, “During pull request review”, but I\r\nwasn’t sure that there was anything useful to add there. Standard advice\r\nof “we’re trying to merge the best code that we can, not judging you as\r\na person” and “you and the maintainers are on the same team” applies,\r\nbut seems… almost self-evident? I’m not sure. Happy to add content there\r\nif folks desire.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000141805575\u0000206399266\u0000":{"address":{"type":"COMMENT","id":"206399266","parent":{"type":"REVIEW","id":"141805575","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#discussion_r206399266","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Also happy to format this as a block-quote instead of code."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000574\u0000142075609\u0000206627089\u0000":{"address":{"type":"COMMENT","id":"206627089","parent":{"type":"REVIEW","id":"142075609","pull":{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/574#discussion_r206627089","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I looked into this a bit, and prefer it as is. Formatting as a block\r\nquote changes the wrapping, the list formatting, and the inline code\r\nformatting, making it harder for readers to understand what was actually\r\nwritten without looking at the source.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000577\u0000409386959\u0000":{"address":{"type":"COMMENT","id":"409386959","parent":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/577#issuecomment-409386959","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> Please add to the test plan handling the case where no output path was\r\n> (implicitly) specified\r\n\r\nGood idea; done.\r\n\r\n(Addressed your other comment as well, but GitHub won’t let me respond\r\nto it.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000577\u0000142132895\u0000206673515\u0000":{"address":{"type":"COMMENT","id":"206673515","parent":{"type":"REVIEW","id":"142132895","pull":{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/577#discussion_r206673515","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"nit: forward compatible"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142208149\u0000206737599\u0000":{"address":{"type":"COMMENT","id":"206737599","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206737599","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"It seems like we will want to display some kind of failure message to\r\nthe user, so eventually we may have:\r\n\r\n```js\r\nexport type LoadingState =\r\n  | {|+type: \"NOT_LOADING\"|}\r\n  | {|+type: \"LOADING\"|}\r\n  | {|+type: \"FAILED\", +message: string|};\r\n```\r\n\r\nPresuming that you agree, would you like to make this change now, or\r\nleave it for a subsequent commit as a test of how extensible this system\r\nis? :-)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142208149\u0000206739282\u0000":{"address":{"type":"COMMENT","id":"206739282","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206739282","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You can omit this `NullUtil.get`; Flow correctly infers that `newState`\r\ncannot be `null`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142208149\u0000206741618\u0000":{"address":{"type":"COMMENT","id":"206741618","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206741618","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Hmm—I wonder. Instead of DIing a function returning\r\n`Promise<GraphWithAdapters>`, do we want to DI a function returning\r\n`Promise<Graph[]>`? I think we might want to. Then, the `Graph.merge`\r\nlogic is tested, and this also affords us the ability to show a loading\r\nindicator that distinguishes between the “downloading graphs” and\r\n“merging graphs” states. Along these lines, we might also (eventually)\r\nwant to have this function return `Promise<Graph>[]`, so that we can\r\n`Promise.race` the results and display something like “graphs loading\r\n(2/3): Git [done], GitHub [done], Spotlight [loading]”. Interested in\r\nyour thoughts, and how much if any of this should be implemented in this\r\ncommit.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142208149\u0000206741774\u0000":{"address":{"type":"COMMENT","id":"206741774","parent":{"type":"REVIEW","id":"142208149","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206741774","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"You probably want to export the `initialState: () => AppState`.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142213425\u0000206742484\u0000":{"address":{"type":"COMMENT","id":"206742484","parent":{"type":"REVIEW","id":"142213425","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206742484","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think it's a reasonable idea, and we can implement it later once we actually want to populate the field. (For now, you can just check the console when something goes wrong.)"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142213484\u0000206742545\u0000":{"address":{"type":"COMMENT","id":"206742545","parent":{"type":"REVIEW","id":"142213484","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206742545","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"I think it's a reasonable idea, and I'd like to put it off onto another commit."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000142226222\u0000206753727\u0000":{"address":{"type":"COMMENT","id":"206753727","parent":{"type":"REVIEW","id":"142226222","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/579#discussion_r206753727","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Done."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000581\u0000142213225\u0000206742306\u0000":{"address":{"type":"COMMENT","id":"206742306","parent":{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/581#discussion_r206742306","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Eh… can we achieve the same result without the hacks by, making\r\n`RepositorySelect` return a `<p>{whateverItReturnsNow()}</p>`?\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000581\u0000142213225\u0000206742321\u0000":{"address":{"type":"COMMENT","id":"206742321","parent":{"type":"REVIEW","id":"142213225","pull":{"type":"PULL","number":"581","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/581#discussion_r206742321","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"+1, thanks"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000583\u0000409815987\u0000":{"address":{"type":"COMMENT","id":"409815987","parent":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#issuecomment-409815987","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> would you mind taking a look into why this is failing?\r\n\r\nChanging the offending assertion to\r\n\r\n```js\r\n    expect(el.instance().props.localStore).toBe(localStore);\r\n```\r\n\r\ncauses the test to pass. This is because `el.props()` returns the props\r\nfor the element rendered by the component, not the component itself. So,\r\nyou’re seeing the props for the outermost `div`. (Confirm with\r\n`expect(el.props()).toBe(Symbol())` and inspecting the error.\r\n\r\nThis is a strange decision, but it is documented:\r\n\r\n<https://github.com/airbnb/enzyme/blob/290253d346200c2997a98fa053f76a1c0895e899/docs/api/ShallowWrapper/props.md>\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000583\u0000409997166\u0000":{"address":{"type":"COMMENT","id":"409997166","parent":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#issuecomment-409997166","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"Thanks; fixed."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000583\u0000142539811\u0000207012684\u0000":{"address":{"type":"COMMENT","id":"207012684","parent":{"type":"REVIEW","id":"142539811","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#discussion_r207012684","authors":[{"type":"USERLIKE","login":"decentralion"}],"body":"@wchargin, would you mind taking a look into why this is failing? This test is not needed (as the actual requirement, which is that the RepositorySelect and WeightConfig are passed the right localStore, is tested elsewhere and passes), but I don't like that I don't understand why this test fails."},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000583\u0000143039164\u0000207428004\u0000":{"address":{"type":"COMMENT","id":"207428004","parent":{"type":"REVIEW","id":"143039164","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/583#discussion_r207428004","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Does `.toBe(false)` not work for some reason?"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000592\u0000410054666\u0000":{"address":{"type":"COMMENT","id":"410054666","parent":{"type":"PULL","number":"592","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/592#issuecomment-410054666","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I’m actually going to make some changes here; will ping when ready for\r\nreview.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000593\u0000143042263\u0000207430779\u0000":{"address":{"type":"COMMENT","id":"207430779","parent":{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/593#discussion_r207430779","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"I see why you made this 5px larger than the others—with the descender\r\nfrom the speech bubble, it looks too small otherwise. This makes sense,\r\nbut has the side effect that the vertical alignment is different from\r\nthe others. Amusingly, the fix that looks best to me is \r\n\r\n```diff\r\ndiff --git a/src/app/Page.js b/src/app/Page.js\r\nindex 81150ec..b5ebdac 100644\r\n--- a/src/app/Page.js\r\n+++ b/src/app/Page.js\r\n@@ -114,5 +114,6 @@ const style = StyleSheet.create({\r\n   navLogoMed: {\r\n     height: 25,\r\n     width: 25,\r\n+    transform: \"translateY(-1px)\",\r\n   },\r\n });\r\n```\r\n\r\nSo… while I feel silly for asking for a 1-pixel change, do you mind? :-)\r\n(If you have a better way to implement the shift than a CSS transform,\r\ngo for it.)\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000593\u0000143042263\u0000207430819\u0000":{"address":{"type":"COMMENT","id":"207430819","parent":{"type":"REVIEW","id":"143042263","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/593#discussion_r207430819","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"Can we `s/Sm/Small`, please? No need to abbreviate.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000597\u0000410090712\u0000":{"address":{"type":"COMMENT","id":"410090712","parent":{"type":"PULL","number":"597","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},"url":"https://github.com/sourcecred/sourcecred/pull/597#issuecomment-410090712","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"> I don't think we should complicate `yarn unit`. The vast majority of\r\n> development in this project is against js code, so let's make the\r\n> testing surface area cater to the usual case, and add `yarn sharness`\r\n> as a separate command. Of course, `yarn test` will run both.\r\n\r\nTotally reasonable. Will do.\r\n\r\n> Also, for posterity please document the \"clear advantages\" to adding\r\n> yarness as a submodule in the commit message.\r\n\r\nWill do.\r\n"},"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000599\u0000143039801\u0000207428594\u0000":{"address":{"type":"COMMENT","id":"207428594","parent":{"type":"REVIEW","id":"143039801","pull":{"type":"PULL","number":"599","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},"url":"https://github.com/sourcecred/sourcecred/pull/599#discussion_r207428594","authors":[{"type":"USERLIKE","login":"wchargin"}],"body":"shhh…"}},"userlikes":{"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000000drax\u0000":{"address":{"type":"USERLIKE","login":"000drax"},"url":"https://github.com/000drax"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000decentralion\u0000":{"address":{"type":"USERLIKE","login":"decentralion"},"url":"https://github.com/decentralion"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000wchargin\u0000":{"address":{"type":"USERLIKE","login":"wchargin"},"url":"https://github.com/wchargin"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000VictorBjelkholm\u0000":{"address":{"type":"USERLIKE","login":"VictorBjelkholm"},"url":"https://github.com/VictorBjelkholm"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000jart\u0000":{"address":{"type":"USERLIKE","login":"jart"},"url":"https://github.com/jart"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000Recmo\u0000":{"address":{"type":"USERLIKE","login":"Recmo"},"url":"https://github.com/Recmo"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000mikeal\u0000":{"address":{"type":"USERLIKE","login":"mikeal"},"url":"https://github.com/mikeal"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000claireandcode\u0000":{"address":{"type":"USERLIKE","login":"claireandcode"},"url":"https://github.com/claireandcode"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000AChildAtPlay\u0000":{"address":{"type":"USERLIKE","login":"AChildAtPlay"},"url":"https://github.com/AChildAtPlay"},"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000hamidzr\u0000":{"address":{"type":"USERLIKE","login":"hamidzr"},"url":"https://github.com/hamidzr"}},"references":{"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"jart"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000039\u0000":[{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000040\u0000":[{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000086\u0000":[{"type":"COMMENT","id":"374149224","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"PULL","number":"47","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000127\u0000":[{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000":[{"type":"PULL","number":"130","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"125","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000171\u0000":[{"type":"COMMENT","id":"184839308","parent":{"type":"REVIEW","id":"116120803","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000218\u0000":[{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000269\u0000":[{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000280\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000":[{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000417\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000430\u0000":[{"type":"COMMENT","id":"198664313","parent":{"type":"REVIEW","id":"132634111","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000433\u0000":[{"type":"COMMENT","id":"198952610","parent":{"type":"REVIEW","id":"132961126","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000":[{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000481\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000":[{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000502\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000509\u0000":[{"type":"USERLIKE","login":"claireandcode"},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000517\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000561\u0000":[{"type":"PULL","number":"549","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"claireandcode"},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000576\u0000":[{"type":"PULL","number":"575","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000595\u0000":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00003\u0000":[{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"000drax"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000020\u0000":[{"type":"ISSUE","number":"17","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000033\u0000":[{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000034\u0000":[{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000035\u0000":[{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000051\u0000":[{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000057\u0000":[{"type":"PULL","number":"54","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000058\u0000":[{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"4","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000067\u0000":[{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000069\u0000":[{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000077\u0000":[{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000083\u0000":[{"type":"ISSUE","number":"82","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000098\u0000":[{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000104\u0000":[{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000105\u0000":[{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000119\u0000":[{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000121\u0000":[{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000123\u0000":[{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000144\u0000":[{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000160\u0000":[{"type":"PULL","number":"158","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000164\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000195\u0000":[{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000209\u0000":[{"type":"PULL","number":"205","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000211\u0000":[{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000219\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000222\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000229\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000230\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000246\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000278\u0000":[{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000279\u0000":[{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000":[{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000283\u0000":[{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000287\u0000":[{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000288\u0000":[{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000289\u0000":[{"type":"PULL","number":"286","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000":[{"type":"ISSUE","number":"280","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000294\u0000":[{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000303\u0000":[{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000304\u0000":[{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000305\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000325\u0000":[{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000333\u0000":[{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000334\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000337\u0000":[{"type":"PULL","number":"327","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000339\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000340\u0000":[{"type":"ISSUE","number":"336","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000341\u0000":[{"type":"PULL","number":"228","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000":[{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000343\u0000":[{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000":[{"type":"USERLIKE","login":"mikeal"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000368\u0000":[{"type":"PULL","number":"319","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000369\u0000":[{"type":"PULL","number":"312","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"61","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000374\u0000":[{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000375\u0000":[{"type":"PULL","number":"320","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000376\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000381\u0000":[{"type":"PULL","number":"380","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000387\u0000":[{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000391\u0000":[{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"390","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000394\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000397\u0000":[{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000406\u0000":[{"type":"PULL","number":"405","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000411\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000413\u0000":[{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000":[{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000419\u0000":[{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000420\u0000":[{"type":"PULL","number":"416","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000422\u0000":[{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000423\u0000":[{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000424\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000428\u0000":[{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000434\u0000":[{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"429","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000436\u0000":[{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000439\u0000":[{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"261","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"389","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000440\u0000":[{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000441\u0000":[{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000443\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000444\u0000":[{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000449\u0000":[{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000450\u0000":[{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000451\u0000":[{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000459\u0000":[{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000466\u0000":[{"type":"PULL","number":"265","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000467\u0000":[{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000468\u0000":[{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000473\u0000":[{"type":"PULL","number":"448","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000480\u0000":[{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000486\u0000":[{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000497\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000":[{"type":"USERLIKE","login":"decentralion"},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000505\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000508\u0000":[{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000529\u0000":[{"type":"PULL","number":"516","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000531\u0000":[{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000532\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000533\u0000":[{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000535\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000536\u0000":[{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"},{"type":"ISSUE","number":"223","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000555\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000571\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000578\u0000":[{"type":"PULL","number":"577","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000579\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000583\u0000":[{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000591\u0000":[{"type":"ISSUE","number":"584","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000593\u0000":[{"type":"ISSUE","number":"587","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000598\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000081\u0000104758999\u0000":[{"type":"COMMENT","id":"373899511","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118982922\u0000":[{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000323\u0000124963637\u0000":[{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000374\u0000127672710\u0000":[{"type":"PULL","number":"295","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000412\u0000131740853\u0000":[{"type":"COMMENT","id":"400059242","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000579\u0000143035590\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000593\u0000143035329\u0000":[{"type":"ISSUE","number":"587","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000362953396\u0000":[{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000011\u0000366506813\u0000":[{"type":"USERLIKE","login":"000drax"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000366506065\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000366553223\u0000":[{"type":"USERLIKE","login":"VictorBjelkholm"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000024\u0000369094312\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000375140486\u0000":[{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000369093445\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"368397367","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"41","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"42","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368359785\u0000":[{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"},{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368397367\u0000":[{"type":"PULL","number":"22","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"21","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000040\u0000387147792\u0000":[{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"132","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"148","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000371004636\u0000":[{"type":"USERLIKE","login":"wchargin"},{"type":"ISSUE","number":"41","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000370616306\u0000":[{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"68","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000370186734\u0000":[{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000072\u0000371007266\u0000":[{"type":"ISSUE","number":"73","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000074\u0000374434248\u0000":[{"type":"PULL","number":"84","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000379634100\u0000":[{"type":"PULL","number":"118","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"120","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"76","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000127\u0000387147210\u0000":[{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000387148124\u0000":[{"type":"PULL","number":"182","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391216103\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391216116\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000391447851\u0000":[{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000194\u0000386163362\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000256\u0000407174322\u0000":[{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000401163233\u0000":[{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395164325\u0000":[{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"mikeal"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395187798\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395225556\u0000":[{"type":"USERLIKE","login":"mikeal"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395227637\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000395640276\u0000":[{"type":"USERLIKE","login":"mikeal"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000432\u0000402266990\u0000":[{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000433\u0000401439238\u0000":[{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000465\u0000401709755\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000402062153\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000483\u0000402935463\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000408519328\u0000":[{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000403175494\u0000":[{"type":"COMMENT","id":"403173464","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000408507999\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000553\u0000409300378\u0000":[{"type":"PULL","number":"562","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"570","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00008\u0000364852141\u0000":[{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u00009\u0000364848905\u0000":[{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000364851776\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366142038\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000366156502\u0000":[{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"12","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u000013\u000097336189\u0000168886484\u0000":[{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000014\u0000366164710\u0000":[{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000366474934\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000020\u0000366551596\u0000":[{"type":"PULL","number":"27","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"28","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000046\u0000369514504\u0000":[{"type":"PULL","number":"43","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373942955\u0000":[{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374006916\u0000":[{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374338527\u0000":[{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000083\u0000373907283\u0000":[{"type":"PULL","number":"80","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000375112508\u0000":[{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000122\u0000109618316\u0000179386422\u0000":[{"type":"COMMENT","id":"378859005","parent":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000128\u0000382520937\u0000":[{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116121256\u0000184839832\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000174\u0000116420380\u0000185096951\u0000":[{"type":"COMMENT","id":"184813987","parent":{"type":"REVIEW","id":"116092182","pull":{"type":"PULL","number":"162","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000184\u0000117105822\u0000185669448\u0000":[{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000187\u0000386431049\u0000":[{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000203\u0000386424668\u0000":[{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000210\u0000386773128\u0000":[{"type":"PULL","number":"214","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000387909420\u0000":[{"type":"COMMENT","id":"187207663","parent":{"type":"REVIEW","id":"118942135","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118936809\u0000187206497\u0000":[{"type":"COMMENT","id":"187194747","parent":{"type":"REVIEW","id":"118926858","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000388696940\u0000":[{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000388899270\u0000":[{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000289\u0000391817892\u0000":[{"type":"PULL","number":"296","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000390024639\u0000":[{"type":"PULL","number":"293","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000325\u0000125025177\u0000192279409\u0000":[{"type":"PULL","number":"317","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000394127555\u0000":[{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000394792123\u0000":[{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000394917160\u0000":[{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000357\u0000395346081\u0000":[{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000358\u0000395345973\u0000":[{"type":"PULL","number":"347","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000359\u0000395346178\u0000":[{"type":"PULL","number":"332","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000360\u0000395345802\u0000":[{"type":"PULL","number":"352","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000361\u0000126846851\u0000193800210\u0000":[{"type":"PULL","number":"355","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000381\u0000396734232\u0000":[{"type":"PULL","number":"382","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000385\u0000128568401\u0000195239022\u0000":[{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000388\u0000128585942\u0000195253671\u0000":[{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000406\u0000399264282\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000400059242\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000400158180\u0000":[{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000400847214\u0000":[{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000419\u0000400511127\u0000":[{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000420\u0000401122352\u0000":[{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000427\u0000400838084\u0000":[{"type":"PULL","number":"425","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132647448\u0000198673857\u0000":[{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000133006098\u0000198974029\u0000":[{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000445\u0000401438107\u0000":[{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000468\u0000402269233\u0000":[{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000489\u0000402839812\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000501\u0000403172215\u0000":[{"type":"PULL","number":"495","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000519\u0000140099222\u0000204927770\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000526\u0000407607974\u0000":[{"type":"PULL","number":"527","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000529\u0000140960295\u0000205646095\u0000":[{"type":"PULL","number":"530","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408575540\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000408638061\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000409703144\u0000":[{"type":"USERLIKE","login":"wchargin"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000572\u0000409314209\u0000":[{"type":"USERLIKE","login":"decentralion"}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000572\u0000409349314\u0000":[{"type":"PULL","number":"574","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000583\u0000142539811\u0000207012684\u0000":[{"type":"USERLIKE","login":"wchargin"}]},"referencedBy":{"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000wchargin\u0000":[{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"103","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"280","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"502","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"509","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"517","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"595","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"164","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"246","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"305","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"334","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"376","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"411","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"532","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"535","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"555","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"366506065","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369094312","parent":{"type":"ISSUE","number":"24","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371004636","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371004636","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"401709755","parent":{"type":"ISSUE","number":"465","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402062153","parent":{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408507999","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"364851776","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366142038","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366474934","parent":{"type":"PULL","number":"18","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"204927770","parent":{"type":"REVIEW","id":"140099222","pull":{"type":"PULL","number":"519","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"409703144","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"207012684","parent":{"type":"REVIEW","id":"142539811","pull":{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000jart\u0000":[{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000026\u0000":[{"type":"ISSUE","number":"39","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000035\u0000":[{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"218","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000374149224\u0000":[{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000047\u0000":[{"type":"ISSUE","number":"86","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000decentralion\u0000":[{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"417","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"481","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"595","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"339","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"394","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"443","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"497","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"505","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"571","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"598","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"REVIEW","id":"143035590","pull":{"type":"PULL","number":"579","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391216103","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391216116","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391447851","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"386163362","parent":{"type":"ISSUE","number":"194","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395187798","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395227637","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402935463","parent":{"type":"ISSUE","number":"483","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"399264282","parent":{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"400059242","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402839812","parent":{"type":"PULL","number":"489","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408575540","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"408638061","parent":{"type":"PULL","number":"552","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"409314209","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000073\u0000":[{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"371007266","parent":{"type":"ISSUE","number":"72","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000130\u0000":[{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000125\u0000":[{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000170\u0000116120803\u0000184839308\u0000":[{"type":"ISSUE","number":"171","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000265\u0000":[{"type":"ISSUE","number":"269","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000349\u0000":[{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"395164325","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000428\u0000132634111\u0000198664313\u0000":[{"type":"ISSUE","number":"430","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000431\u0000132961126\u0000198952610\u0000":[{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000292\u0000":[{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000252\u0000":[{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000468\u0000":[{"type":"ISSUE","number":"476","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000498\u0000":[{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000claireandcode\u0000":[{"type":"ISSUE","number":"509","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000549\u0000":[{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000552\u0000":[{"type":"ISSUE","number":"561","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000575\u0000":[{"type":"ISSUE","number":"576","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u00002\u0000":[{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000000drax\u0000":[{"type":"PULL","number":"3","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"366506813","parent":{"type":"ISSUE","number":"11","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000017\u0000":[{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000018\u0000":[{"type":"PULL","number":"33","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000":[{"type":"PULL","number":"34","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"35","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000050\u0000":[{"type":"PULL","number":"51","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000054\u0000":[{"type":"PULL","number":"57","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00003\u0000":[{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"362953396","parent":{"type":"ISSUE","number":"2","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u00004\u0000":[{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000023\u0000":[{"type":"PULL","number":"58","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000065\u0000":[{"type":"PULL","number":"67","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"69","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"370186734","parent":{"type":"ISSUE","number":"66","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000076\u0000":[{"type":"PULL","number":"77","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000082\u0000":[{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000040\u0000":[{"type":"PULL","number":"98","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"374338527","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000102\u0000":[{"type":"PULL","number":"104","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"375140486","parent":{"type":"ISSUE","number":"25","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000103\u0000":[{"type":"PULL","number":"105","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000117\u0000":[{"type":"PULL","number":"119","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"121","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"123","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000127\u0000":[{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"144","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"382520937","parent":{"type":"PULL","number":"128","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000158\u0000":[{"type":"PULL","number":"160","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000190\u0000":[{"type":"PULL","number":"195","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"303","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"304","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"185669448","parent":{"type":"REVIEW","id":"117105822","pull":{"type":"PULL","number":"184","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000205\u0000":[{"type":"PULL","number":"209","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000210\u0000":[{"type":"PULL","number":"211","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000171\u0000":[{"type":"PULL","number":"219","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"222","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"229","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"230","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"184839832","parent":{"type":"REVIEW","id":"116121256","pull":{"type":"PULL","number":"170","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000066\u0000":[{"type":"PULL","number":"278","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"374006916","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000270\u0000":[{"type":"PULL","number":"279","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000256\u0000":[{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000282\u0000":[{"type":"PULL","number":"283","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"407174322","parent":{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000286\u0000":[{"type":"PULL","number":"287","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"288","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000280\u0000":[{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000293\u0000":[{"type":"PULL","number":"294","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"390024639","parent":{"type":"PULL","number":"292","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000317\u0000":[{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"192279409","parent":{"type":"REVIEW","id":"125025177","pull":{"type":"PULL","number":"325","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000329\u0000":[{"type":"PULL","number":"333","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000327\u0000":[{"type":"PULL","number":"337","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000336\u0000":[{"type":"PULL","number":"340","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000228\u0000":[{"type":"PULL","number":"341","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000269\u0000":[{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"466","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"402269233","parent":{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000342\u0000":[{"type":"PULL","number":"343","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000mikeal\u0000":[{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"395164325","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395225556","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395640276","parent":{"type":"ISSUE","number":"350","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000319\u0000":[{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000162\u0000":[{"type":"PULL","number":"368","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000312\u0000":[{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000061\u0000":[{"type":"PULL","number":"369","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000295\u0000":[{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"REVIEW","id":"124963637","pull":{"type":"PULL","number":"323","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"REVIEW","id":"127672710","pull":{"type":"PULL","number":"374","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000320\u0000":[{"type":"PULL","number":"375","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000380\u0000":[{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000385\u0000":[{"type":"PULL","number":"387","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000390\u0000":[{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"391","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000394\u0000":[{"type":"PULL","number":"397","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000405\u0000":[{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000187\u0000":[{"type":"PULL","number":"406","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"386424668","parent":{"type":"PULL","number":"203","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000411\u0000":[{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000":[{"type":"PULL","number":"413","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000413\u0000":[{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000416\u0000":[{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000417\u0000":[{"type":"PULL","number":"422","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"423","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000170\u0000":[{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000418\u0000":[{"type":"PULL","number":"424","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"400158180","parent":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000424\u0000":[{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"400847214","parent":{"type":"PULL","number":"418","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000419\u0000":[{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000431\u0000":[{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"401122352","parent":{"type":"PULL","number":"420","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000429\u0000":[{"type":"PULL","number":"434","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000430\u0000":[{"type":"PULL","number":"436","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"198673857","parent":{"type":"REVIEW","id":"132647448","pull":{"type":"PULL","number":"428","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000261\u0000":[{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000389\u0000":[{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000218\u0000":[{"type":"PULL","number":"439","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"451","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000432\u0000":[{"type":"PULL","number":"440","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"441","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"480","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000340\u0000":[{"type":"PULL","number":"444","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000448\u0000":[{"type":"PULL","number":"449","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"450","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"473","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000459\u0000":[{"type":"PULL","number":"459","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000445\u0000":[{"type":"PULL","number":"467","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"401439238","parent":{"type":"ISSUE","number":"433","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000466\u0000":[{"type":"PULL","number":"468","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000476\u0000":[{"type":"PULL","number":"486","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"PULL","number":"508","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000516\u0000":[{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000529\u0000":[{"type":"PULL","number":"531","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"408519328","parent":{"type":"ISSUE","number":"498","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000531\u0000":[{"type":"PULL","number":"533","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000350\u0000":[{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"COMMENT","id":"394917160","parent":{"type":"PULL","number":"349","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000223\u0000":[{"type":"PULL","number":"536","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000577\u0000":[{"type":"PULL","number":"578","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000579\u0000":[{"type":"PULL","number":"583","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000584\u0000":[{"type":"PULL","number":"591","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000587\u0000":[{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}},{"type":"REVIEW","id":"143035329","pull":{"type":"PULL","number":"593","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u000081\u0000373899511\u0000":[{"type":"REVIEW","id":"104758999","pull":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000067\u0000":[{"type":"REVIEW","id":"118982922","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"370616306","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000412\u0000400059242\u0000":[{"type":"REVIEW","id":"131740853","pull":{"type":"PULL","number":"412","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000USERLIKE\u0000VictorBjelkholm\u0000":[{"type":"COMMENT","id":"366553223","parent":{"type":"ISSUE","number":"23","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000034\u0000":[{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000029\u0000368397367\u0000":[{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000039\u0000":[{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000041\u0000":[{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"371004636","parent":{"type":"ISSUE","number":"50","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000042\u0000":[{"type":"COMMENT","id":"369093445","parent":{"type":"ISSUE","number":"26","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000022\u0000":[{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368397367","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000027\u0000":[{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"368359785","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366551596","parent":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000021\u0000":[{"type":"COMMENT","id":"368397367","parent":{"type":"ISSUE","number":"29","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000131\u0000":[{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000132\u0000":[{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000148\u0000":[{"type":"COMMENT","id":"387147792","parent":{"type":"ISSUE","number":"40","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000068\u0000":[{"type":"COMMENT","id":"370616306","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000069\u0000":[{"type":"COMMENT","id":"370616306","parent":{"type":"ISSUE","number":"65","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000084\u0000":[{"type":"COMMENT","id":"374434248","parent":{"type":"ISSUE","number":"74","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000118\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000119\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000120\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000121\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000123\u0000":[{"type":"COMMENT","id":"379634100","parent":{"type":"ISSUE","number":"117","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000144\u0000":[{"type":"COMMENT","id":"387147210","parent":{"type":"ISSUE","number":"127","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000182\u0000":[{"type":"COMMENT","id":"387148124","parent":{"type":"ISSUE","number":"131","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000296\u0000":[{"type":"COMMENT","id":"391447851","parent":{"type":"ISSUE","number":"190","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"391817892","parent":{"type":"PULL","number":"289","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000283\u0000":[{"type":"COMMENT","id":"407174322","parent":{"type":"ISSUE","number":"256","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388696940","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"388899270","parent":{"type":"PULL","number":"282","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000279\u0000":[{"type":"COMMENT","id":"401163233","parent":{"type":"ISSUE","number":"270","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000480\u0000":[{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"402266990","parent":{"type":"ISSUE","number":"432","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000499\u0000403173464\u0000":[{"type":"COMMENT","id":"403175494","parent":{"type":"ISSUE","number":"499","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000562\u0000":[{"type":"COMMENT","id":"409300378","parent":{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000570\u0000":[{"type":"COMMENT","id":"409300378","parent":{"type":"ISSUE","number":"553","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000010\u0000":[{"type":"COMMENT","id":"364852141","parent":{"type":"PULL","number":"8","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"364848905","parent":{"type":"PULL","number":"9","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000013\u0000":[{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"366164710","parent":{"type":"PULL","number":"14","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000014\u0000":[{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"168886484","parent":{"type":"REVIEW","id":"97336189","pull":{"type":"PULL","number":"13","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000012\u0000":[{"type":"COMMENT","id":"366156502","parent":{"type":"PULL","number":"10","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000028\u0000":[{"type":"COMMENT","id":"366551596","parent":{"type":"PULL","number":"20","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000043\u0000":[{"type":"COMMENT","id":"369514504","parent":{"type":"PULL","number":"46","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000083\u0000":[{"type":"COMMENT","id":"373942955","parent":{"type":"PULL","number":"81","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000080\u0000":[{"type":"COMMENT","id":"373907283","parent":{"type":"PULL","number":"83","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u000025\u0000":[{"type":"COMMENT","id":"375112508","parent":{"type":"PULL","number":"102","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000PULL\u0000sourcecred\u0000sourcecred\u0000122\u0000378859005\u0000":[{"type":"COMMENT","id":"179386422","parent":{"type":"REVIEW","id":"109618316","pull":{"type":"PULL","number":"122","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000162\u0000116092182\u0000184813987\u0000":[{"type":"COMMENT","id":"185096951","parent":{"type":"REVIEW","id":"116420380","pull":{"type":"PULL","number":"174","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000203\u0000":[{"type":"COMMENT","id":"386431049","parent":{"type":"PULL","number":"187","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000214\u0000":[{"type":"COMMENT","id":"386773128","parent":{"type":"PULL","number":"210","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118942135\u0000187207663\u0000":[{"type":"COMMENT","id":"387909420","parent":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000COMMENT\u0000REVIEW\u0000sourcecred\u0000sourcecred\u0000252\u0000118926858\u0000187194747\u0000":[{"type":"COMMENT","id":"187206497","parent":{"type":"REVIEW","id":"118936809","pull":{"type":"PULL","number":"252","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000332\u0000":[{"type":"COMMENT","id":"394127555","parent":{"type":"PULL","number":"329","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}},{"type":"COMMENT","id":"395346178","parent":{"type":"PULL","number":"359","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000343\u0000":[{"type":"COMMENT","id":"394792123","parent":{"type":"PULL","number":"342","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000333\u0000":[{"type":"COMMENT","id":"395346081","parent":{"type":"PULL","number":"357","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000347\u0000":[{"type":"COMMENT","id":"395345973","parent":{"type":"PULL","number":"358","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000352\u0000":[{"type":"COMMENT","id":"395345802","parent":{"type":"PULL","number":"360","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000355\u0000":[{"type":"COMMENT","id":"193800210","parent":{"type":"REVIEW","id":"126846851","pull":{"type":"PULL","number":"361","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000382\u0000":[{"type":"COMMENT","id":"396734232","parent":{"type":"PULL","number":"381","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000387\u0000":[{"type":"COMMENT","id":"195239022","parent":{"type":"REVIEW","id":"128568401","pull":{"type":"PULL","number":"385","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u000098\u0000":[{"type":"COMMENT","id":"195253671","parent":{"type":"REVIEW","id":"128585942","pull":{"type":"PULL","number":"388","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000428\u0000":[{"type":"COMMENT","id":"400511127","parent":{"type":"PULL","number":"419","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000425\u0000":[{"type":"COMMENT","id":"400838084","parent":{"type":"PULL","number":"427","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000ISSUE\u0000sourcecred\u0000sourcecred\u0000433\u0000":[{"type":"COMMENT","id":"198974029","parent":{"type":"REVIEW","id":"133006098","pull":{"type":"PULL","number":"431","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}},{"type":"COMMENT","id":"401438107","parent":{"type":"PULL","number":"445","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000495\u0000":[{"type":"COMMENT","id":"403172215","parent":{"type":"PULL","number":"501","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000527\u0000":[{"type":"COMMENT","id":"407607974","parent":{"type":"PULL","number":"526","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000530\u0000":[{"type":"COMMENT","id":"205646095","parent":{"type":"REVIEW","id":"140960295","pull":{"type":"PULL","number":"529","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}}],"N\u0000sourcecred\u0000github\u0000PULL\u0000sourcecred\u0000sourcecred\u0000574\u0000":[{"type":"COMMENT","id":"409349314","parent":{"type":"PULL","number":"572","repo":{"type":"REPO","owner":"sourcecred","name":"sourcecred"}}}]}}]